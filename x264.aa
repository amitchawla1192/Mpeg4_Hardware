// Aa code produced by llvm2aa (version 1.0)
$record [structx_x_IO_FILE] < $uint<32> > < $pointer< $uint<8> > > < $pointer< $uint<8> > > < $pointer< $uint<8> > > < $pointer< $uint<8> > > < $pointer< $uint<8> > > < $pointer< $uint<8> > > < $pointer< $uint<8> > > < $pointer< $uint<8> > > < $pointer< $uint<8> > > < $pointer< $uint<8> > > < $pointer< $uint<8> > > < $pointer< structx_x_IO_marker > > < $pointer< structx_x_IO_FILE > > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<16> > < $uint<8> > < $array [1] $of $uint<8> > < $pointer< $uint<8> > > < $uint<64> > < $pointer< $uint<8> > > < $pointer< $uint<8> > > < $pointer< $uint<8> > > < $pointer< $uint<8> > > < $uint<32> > < $uint<32> > < $array [40] $of $uint<8> > 
$record [structx_x_IO_marker] < $pointer< structx_x_IO_marker > > < $pointer< structx_x_IO_FILE > > < $uint<32> > 
$record [structx_x_cl_image_format] < $uint<32> > < $uint<32> > 
$record [structx_xanon] < $float<11,52> > < $float<11,52> > < $float<11,52> > < $float<11,52> > 
$record [structx_xbs_s] < $pointer< $uint<8> > > < $pointer< $uint<8> > > < $pointer< $uint<8> > > < $uint<32> > < $uint<32> > < $uint<32> > 
$record [structx_xframe_map] < $pointer< $uint<8> > > < $pointer< $uint<8> > > < $uint<32> > < $uint<32> > 
$record [structx_xx264_frame] < $pointer< $uint<8> > > < $uint<32> > < $array [2] $of $uint<32> > < $uint<32> > < $uint<32> > < $uint<64> > < $uint<64> > < $uint<64> > < $uint<64> > < $float<8,23> > < $uint<64> > < $uint<64> > < $uint<64> > < $pointer< structx_xx264_param_t > > < $uint<32> > < $uint<32> > < $uint<64> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<8> > < $uint<8> > < $uint<8> > < $float<8,23> > < $float<8,23> > < $float<8,23> > < $uint<32> > < $uint<32> > < $uint<32> > < $array [3] $of $uint<32> > < $array [3] $of $uint<32> > < $array [3] $of $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $array [3] $of $pointer< $uint<8> > > < $array [3] $of $pointer< $uint<8> > > < $array [3] $of $array [4] $of $pointer< $uint<8> > > < $array [3] $of $array [4] $of $pointer< $uint<8> > > < $array [4] $of $pointer< $uint<8> > > < $pointer< $uint<16> > > < $array [4] $of $pointer< $uint<8> > > < $array [4] $of $pointer< $uint<8> > > < $array [4] $of $pointer< $uint<8> > > < $array [16] $of $array [3] $of structx_xx264_weight_t > < $array [16] $of $pointer< $uint<8> > > < $uint<32> > < $pointer< structx_xx264_frame > > < $pointer< $uint<8> > > < $pointer< $uint<8> > > < $array [2] $of $pointer< $array [2] $of $uint<16> > > < $pointer< $array [2] $of $uint<16> > > < $array [2] $of $array [17] $of $pointer< $array [2] $of $uint<16> > > < $pointer< $uint<8> > > < $pointer< $uint<8> > > < $array [18] $of $array [18] $of $pointer< $uint<16> > > < $array [2] $of $array [17] $of $pointer< $uint<32> > > < $array [2] $of $pointer< $uint<8> > > < $array [2] $of $uint<32> > < $array [2] $of $array [16] $of $uint<32> > < $array [2] $of $uint<16> > < $array [18] $of $array [18] $of $uint<32> > < $array [18] $of $array [18] $of $uint<32> > < $uint<32> > < $array [18] $of $uint<32> > < $array [18] $of $array [18] $of $pointer< $uint<32> > > < $pointer< $uint<32> > > < $pointer< $uint<32> > > < $pointer< $float<8,23> > > < $pointer< $float<8,23> > > < $pointer< $float<8,23> > > < $pointer< $float<8,23> > > < $uint<32> > < $pointer< $uint<16> > > < $pointer< $uint<16> > > < $pointer< $uint<16> > > < $uint<32> > < $array [18] $of $float<8,23> > < $array [3] $of $uint<32> > < $array [3] $of $uint<64> > < structx_xanon > < $array [251] $of $uint<8> > < $array [251] $of $uint<32> > < $array [251] $of $float<11,52> > < $uint<64> > < $uint<64> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $float<8,23> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $record < $uint<32> > < $pointer< $record < $uint<32> > < $uint<32> > < $pointer< $uint<8> > >  > > < $pointer< $pointer < $void >  > >  > < $pointer< $uint<8> > > < $pointer< $uint<8> > > < $pointer< $pointer < $void >  > > < $record < $pointer< $record < $pointer< $uint<8> > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > >  > > < $array [4] $of $pointer< structx_x_cl_mem > > < $pointer< structx_x_cl_mem > > < $pointer< structx_x_cl_mem > > < $pointer< structx_x_cl_mem > > < $pointer< structx_x_cl_mem > > < $pointer< structx_x_cl_mem > > < $pointer< structx_x_cl_mem > > < $pointer< structx_x_cl_mem > >  > 
$record [structx_xx264_left_table_t] < $array [4] $of $uint<8> > < $array [4] $of $uint<8> > < $array [4] $of $uint<8> > < $array [4] $of $uint<8> > < $array [4] $of $uint<8> > 
$record [structx_xx264_lookahead_t] < $uint<8> > < $uint<8> > < $uint<8> > < $uint<32> > < $uint<32> > < $pointer< structx_xx264_frame > > < $uint<32> > < $record < $pointer< $pointer< structx_xx264_frame > > > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> >  > < $record < $pointer< $pointer< structx_xx264_frame > > > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> >  > < $record < $pointer< $pointer< structx_xx264_frame > > > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> >  > 
$record [structx_xx264_param_t] < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $record < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> >  > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $pointer< $uint<8> > > < $array [16] $of $uint<8> > < $array [16] $of $uint<8> > < $array [16] $of $uint<8> > < $array [16] $of $uint<8> > < $array [64] $of $uint<8> > < $array [64] $of $uint<8> > < $array [64] $of $uint<8> > < $array [64] $of $uint<8> > < $pointer< $pointer < $void >  > > < $pointer< $uint<8> > > < $uint<32> > < $uint<32> > < $pointer< $uint<8> > > < $record < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $float<8,23> > < $float<8,23> > < $uint<32> > < $uint<32> > < $uint<32> > < $array [2] $of $uint<32> > < $uint<32> > < $uint<32> >  > < $record < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $float<8,23> > < $float<8,23> > < $float<8,23> > < $uint<32> > < $uint<32> > < $float<8,23> > < $float<8,23> > < $float<8,23> > < $uint<32> > < $uint<32> > < $float<8,23> > < $uint<32> > < $uint<32> > < $uint<32> > < $pointer< $uint<8> > > < $uint<32> > < $pointer< $uint<8> > > < $float<8,23> > < $float<8,23> > < $float<8,23> > < $pointer< $record < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $float<8,23> > < $pointer< structx_xx264_param_t > >  > > < $uint<32> > < $pointer< $uint<8> > >  > < $record < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> >  > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $pointer< $uint<8> > > < $pointer< $uint<8> > > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > 
$record [structx_xx264_ratecontrol_t] < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $float<11,52> > < $float<11,52> > < $float<11,52> > < $float<11,52> > < $uint<32> > < $array [3] $of $uint<32> > < $pointer< $record < $uint<32> > < $uint<32> > < $uint<32> > < $float<11,52> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<64> > < $float<11,52> > < $float<11,52> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $float<8,23> > < $uint<8> > < $array [3] $of $array [2] $of $uint<16> > < $array [2] $of $uint<16> > < $array [16] $of $uint<32> > < $uint<32> > < $uint<64> > < $uint<64> >  > > < $uint<32> > < $float<8,23> > < $float<8,23> > < $float<8,23> > < $uint<32> > < $uint<32> > < $float<8,23> > < $float<11,52> > < $uint<64> > < $float<11,52> > < $float<11,52> > < $float<11,52> > < $pointer< $record < $float<8,23> > < $float<8,23> > < $float<8,23> > < $float<8,23> > < $float<8,23> >  > > < $uint<32> > < $float<8,23> > < $uint<32> > < $float<11,52> > < $float<11,52> > < $float<11,52> > < $uint<64> > < $float<11,52> > < $float<11,52> > < $float<11,52> > < $float<11,52> > < $float<11,52> > < $float<11,52> > < $float<11,52> > < $pointer< structx_x_IO_FILE > > < $pointer< $uint<8> > > < $pointer< structx_x_IO_FILE > > < $pointer< $uint<8> > > < $pointer< $uint<8> > > < $pointer< structx_x_IO_FILE > > < $uint<32> > < $pointer< $record < $uint<32> > < $uint<32> > < $uint<32> > < $float<11,52> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<64> > < $float<11,52> > < $float<11,52> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $float<8,23> > < $uint<8> > < $array [3] $of $array [2] $of $uint<16> > < $array [2] $of $uint<16> > < $array [16] $of $uint<32> > < $uint<32> > < $uint<64> > < $uint<64> >  > > < $float<11,52> > < $array [3] $of $float<11,52> > < $uint<32> > < $float<11,52> > < $float<11,52> > < $float<11,52> > < $array [3] $of $float<11,52> > < $array [3] $of $float<11,52> > < $float<11,52> > < $record < $array [2] $of $pointer< $uint<16> > > < $uint<32> > < $uint<32> > < $uint<32> > < $array [2] $of $pointer< $float<8,23> > > < $array [2] $of $uint<32> > < $array [2] $of $pointer< $float<8,23> > > < $array [2] $of $pointer< $uint<32> > > < $array [2] $of $uint<32> >  > < $float<8,23> > < $float<11,52> > < $float<11,52> > < $float<11,52> > < $pointer< $array [2] $of $record < $float<8,23> > < $float<8,23> > < $float<8,23> > < $float<8,23> > < $float<8,23> >  > > < $array [3] $of $array [2] $of $record < $float<8,23> > < $float<8,23> > < $float<8,23> > < $float<8,23> > < $float<8,23> >  > < $pointer< $record < $float<8,23> > < $float<8,23> > < $float<8,23> > < $float<8,23> > < $float<8,23> >  > > < $uint<32> > < $uint<32> > < $uint<32> > < $pointer< $record < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $float<8,23> > < $pointer< structx_xx264_param_t > >  > > < $pointer< $record < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $float<8,23> > < $pointer< structx_xx264_param_t > >  > > < $uint<32> > < $uint<32> > < $float<11,52> > < $float<11,52> > < $uint<64> > 
$record [structx_xx264_t] < structx_xx264_param_t > < $array [129] $of $pointer< structx_xx264_t > > < $array [16] $of $pointer< structx_xx264_t > > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $pointer< structx_xx264_threadpool_t > > < $pointer< structx_xx264_threadpool_t > > < $uint<32> > < $uint<32> > < $record < $uint<32> > < $uint<32> > < $pointer< $record < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $pointer< $uint<8> > > < $uint<32> >  > > < $uint<32> > < $pointer< $uint<8> > > < structx_xbs_s >  > < $pointer< $uint<8> > > < $uint<32> > < $pointer< structx_xx264_t > > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<64> > < $uint<32> > < $uint<64> > < $uint<64> > < $uint<64> > < $uint<64> > < $uint<64> > < $uint<64> > < $uint<64> > < $uint<32> > < $uint<64> > < $uint<32> > < $array [4] $of $pointer< $array [16] $of $uint<32> > > < $array [4] $of $pointer< $array [64] $of $uint<32> > > < $array [4] $of $pointer< $array [16] $of $uint<32> > > < $array [4] $of $pointer< $array [64] $of $uint<32> > > < $array [4] $of $pointer< $array [16] $of $uint<16> > > < $array [4] $of $pointer< $array [64] $of $uint<16> > > < $array [4] $of $pointer< $array [16] $of $uint<16> > > < $array [4] $of $pointer< $array [64] $of $uint<16> > > < $array [4] $of $pointer< $array [16] $of $uint<16> > > < $array [4] $of $pointer< $array [64] $of $uint<16> > > < $pointer< $array [4] $of $array [64] $of $uint<16> > > < $array [70] $of $pointer< $uint<16> > > < $array [70] $of $array [4] $of $pointer< $uint<16> > > < $pointer< $uint<8> > > < $array [4] $of $uint<8> > < $record < $pointer< $record < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $record < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> >  > < $uint<32> > < $record < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $record < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> >  > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> >  > < $uint<32> > < $uint<32> >  > > < $pointer< $record < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $array [8] $of $pointer< $uint<8> > >  > > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $array [2] $of $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $array [2] $of $uint<32> > < $array [2] $of $array [16] $of structx_x_cl_image_format > < $uint<32> > < $array [4] $of $uint<8> > < $array [32] $of $array [3] $of structx_xx264_weight_t > < $uint<32> > < $uint<32> > < $array [16] $of structx_x_cl_image_format > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $array [8] $of $uint<8> >  > < $array [1] $of $record < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $record < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> >  > < $uint<32> > < $record < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $record < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> >  > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> >  > < $uint<32> > < $uint<32> >  > < $array [1] $of $record < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $array [8] $of $pointer< $uint<8> > >  > < $uint<32> > < $array [12] $of $uint<8> > < $record < $pointer< $record < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $record < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> >  > < $uint<32> > < $record < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $record < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> >  > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> >  > < $uint<32> > < $uint<32> >  > > < $pointer< $record < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $array [8] $of $pointer< $uint<8> > >  > > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $array [2] $of $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $array [2] $of $uint<32> > < $array [2] $of $array [16] $of structx_x_cl_image_format > < $uint<32> > < $array [4] $of $uint<8> > < $array [32] $of $array [3] $of structx_xx264_weight_t > < $uint<32> > < $uint<32> > < $array [16] $of structx_x_cl_image_format > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $array [8] $of $uint<8> >  > < $record < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $pointer< $uint<8> > > < $pointer< $uint<8> > > < $pointer< $uint<8> > > < $array [4] $of $uint<8> > < $uint<32> > < $array [1024] $of $uint<8> > < $array [12] $of $uint<8> >  > < $record < $pointer< $pointer< structx_xx264_frame > > > < $array [2] $of $pointer< $pointer< structx_xx264_frame > > > < $pointer< $pointer< structx_xx264_frame > > > < $array [18] $of $pointer< structx_xx264_frame > > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<64> > < $uint<64> > < $array [2] $of $uint<64> > < $uint<64> > < $uint<64> > < $uint<32> > < $uint<32> >  > < $pointer< structx_xx264_frame > > < $pointer< structx_xx264_frame > > < $array [2] $of $uint<32> > < $array [2] $of $array [19] $of $pointer< structx_xx264_frame > > < $array [2] $of $pointer< structx_xx264_frame > > < $array [2] $of $uint<32> > < $uint<32> > < $uint<32> > < $uint<64> > < $array [4] $of $uint<8> > < $record < $array [3] $of $array [16] $of $uint<16> > < $array [2] $of $array [8] $of $uint<16> > < $array [12] $of $array [64] $of $uint<16> > < $array [48] $of $array [16] $of $uint<16> >  > < $record < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $array [2] $of $uint<32> > < $array [2] $of $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $array [2] $of $uint<32> > < $array [2] $of $uint<32> > < $array [3] $of $uint<32> > < $array [3] $of $uint<32> > < $array [2] $of $uint<32> > < $array [2] $of $uint<32> > < $array [3] $of $uint<32> > < $array [3] $of $uint<32> > < $array [4] $of $uint<8> > < $array [2] $of $array [2] $of $uint<16> > < $array [3] $of $uint<32> > < $array [3] $of $uint<32> > < $uint<32> > < $array [4] $of $uint<32> > < $array [16] $of $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $array [2] $of $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $array [2] $of $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $pointer< structx_xx264_left_table_t > > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $pointer< $uint<8> > > < $pointer< $uint<8> > > < $pointer< $uint<8> > > < $pointer< $uint<8> > > < $pointer< $uint<16> > > < $pointer< $array [8] $of $uint<8> > > < $pointer< $array [48] $of $uint<8> > > < $pointer< $uint<8> > > < $array [2] $of $pointer< $array [2] $of $uint<16> > > < $array [2] $of $pointer< $array [8] $of $array [2] $of $uint<8> > > < $array [2] $of $pointer< $uint<8> > > < $array [2] $of $array [32] $of $pointer< $array [2] $of $uint<16> > > < $pointer< $uint<8> > > < $pointer< $uint<8> > > < $pointer< $uint<16> > > < $pointer< $uint<8> > > < $array [16] $of $pointer< $uint<8> > > < $uint<32> > < $uint<32> > < $array [4] $of $uint<8> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $array [24] $of $uint<8> > < $record < $array [768] $of $uint<8> > < $array [1664] $of $uint<8> > < $array [256] $of $uint<8> > < $array [256] $of $uint<8> > < $array [3] $of $array [64] $of $uint<16> > < $array [15] $of $array [16] $of $uint<16> > < $array [4] $of $uint<32> > < $array [4] $of $uint<32> > < $uint<32> > < $uint<32> > < $array [8] $of $uint<8> > < $array [4] $of $array [64] $of $uint<16> > < $array [16] $of $array [16] $of $uint<16> > < $array [16] $of $uint<8> > < $array [9] $of $uint<64> > < $array [24] $of $uint<8> > < $array [32] $of $uint<32> > < $array [3] $of $pointer< $uint<8> > > < $array [3] $of $pointer< $uint<8> > > < $array [3] $of $pointer< $uint<8> > > < $array [2] $of $uint<32> > < $array [2] $of $array [32] $of $array [12] $of $pointer< $uint<8> > > < $array [32] $of $pointer< $uint<8> > > < $array [2] $of $array [16] $of $pointer< $uint<16> > > < $array [3] $of $uint<32> > < $array [8] $of $uint<8> >  > < $record < $array [40] $of $uint<8> > < $array [8] $of $uint<8> > < $array [120] $of $uint<8> > < $array [2] $of $array [40] $of $uint<8> > < $array [8] $of $uint<8> > < $array [2] $of $array [40] $of $array [2] $of $uint<16> > < $array [2] $of $array [40] $of $array [2] $of $uint<8> > < $array [40] $of $uint<8> > < $array [2] $of $array [4] $of $array [2] $of $uint<16> > < $array [2] $of $array [4] $of $uint<8> > < $uint<32> > < $array [2] $of $uint<16> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $array [2] $of $array [3] $of $array [2] $of $uint<16> > < $array [2] $of $array [3] $of $uint<8> > < $pointer< $array [8] $of $array [4] $of $uint<8> > > < $array [4] $of $uint<8> >  > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $array [2] $of $array [2] $of $uint<32> > < $uint<32> > < $uint<32> > < $array [2] $of $array [2] $of $array [32] $of $array [4] $of $uint<16> > < $pointer< $array [4] $of $uint<16> > > < $array [2] $of $array [2] $of $array [32] $of $array [4] $of $uint<8> > < $pointer< $array [4] $of $uint<8> > > < $array [18] $of $uint<8> > < $uint<32> > < $array [34] $of $uint<8> > < $array [22] $of $uint<8> >  > < $pointer< structx_xx264_ratecontrol_t > > < $record < $record < $uint<32> > < $uint<32> > < $uint<32> > < $array [19] $of $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $array [2] $of $uint<32> > < $array [2] $of $array [32] $of $uint<32> > < $array [17] $of $uint<32> > < $array [6] $of $uint<32> > < $array [4] $of $array [13] $of $uint<32> > < $array [3] $of $uint<32> > < $array [2] $of $uint<32> > < $array [3] $of $uint<64> > < $float<11,52> > < $uint<32> >  > < $array [3] $of $uint<32> > < $array [3] $of $uint<64> > < $array [3] $of $float<11,52> > < $array [17] $of $uint<32> > < $array [3] $of $float<11,52> > < $array [3] $of $float<11,52> > < $array [3] $of $float<11,52> > < $array [3] $of $float<11,52> > < $array [3] $of $float<11,52> > < $array [3] $of $float<11,52> > < $array [3] $of $float<11,52> > < $array [3] $of $array [19] $of $uint<64> > < $array [2] $of $array [17] $of $uint<64> > < $array [2] $of $uint<64> > < $array [2] $of $array [2] $of $array [32] $of $uint<64> > < $array [6] $of $uint<64> > < $array [4] $of $array [13] $of $uint<64> > < $array [3] $of $uint<64> > < $array [2] $of $uint<32> > < $array [2] $of $uint<32> > < $array [2] $of $uint<32> >  > < $pointer< $array [64] $of $uint<16> > > < $pointer< $array [64] $of $uint<32> > > < $pointer< $uint<32> > > < $array [16] $of $uint<8> > < $array [4] $of $array [64] $of $uint<16> > < $array [2] $of $array [4] $of $array [64] $of $uint<32> > < $array [2] $of $array [4] $of $uint<32> > < $array [7] $of $uint<8> > < $pointer< $uint<8> > > < $pointer< $uint<8> > > < $array [5] $of $array [3] $of $pointer< $uint<8> > > < $array [2] $of $pointer< $array [2] $of $array [8] $of $array [4] $of $uint<8> > > < $array [7] $of $pointer< $pointer < $void >  > > < $array [12] $of $pointer< $pointer < $void >  > > < $array [12] $of $pointer< $pointer < $void >  > > < $array [7] $of $pointer< $pointer < $void >  > > < $array [7] $of $pointer< $pointer < $void >  > > < $array [7] $of $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $record < $array [8] $of $pointer< $pointer < $void >  > > < $array [8] $of $pointer< $pointer < $void >  > > < $array [8] $of $pointer< $pointer < $void >  > > < $array [7] $of $pointer< $pointer < $void >  > > < $array [4] $of $pointer< $pointer < $void >  > > < $array [8] $of $pointer< $pointer < $void >  > > < $array [8] $of $pointer< $pointer < $void >  > > < $array [8] $of $pointer< $pointer < $void >  > > < $array [7] $of $pointer< $pointer < $void >  > > < $array [7] $of $pointer< $pointer < $void >  > > < $array [8] $of $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $array [1] $of $pointer< $pointer < $void >  > > < $array [4] $of $pointer< $pointer < $void >  > > < $array [4] $of $pointer< $pointer < $void >  > > < $array [4] $of $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $array [7] $of $pointer< $pointer < $void >  > > < $array [7] $of $pointer< $pointer < $void >  > > < $array [7] $of $pointer< $pointer < $void >  > > < $array [7] $of $pointer< $pointer < $void >  > > < $array [7] $of $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > >  > < $record < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $array [12] $of $pointer< $pointer < $void >  > > < $array [7] $of $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer< $pointer < $void >  > > > < $pointer< $pointer< $pointer < $void >  > > > < $pointer< $pointer< $pointer < $void >  > > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > >  > < $record < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > >  > < $record < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > >  > < $record < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > >  > < $record < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > >  > < $record < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $array [14] $of $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $array [13] $of $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > >  > < $record < $array [2] $of $pointer< $pointer < $void >  > > < $array [2] $of $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $array [2] $of $pointer< $pointer < $void >  > > < $array [2] $of $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > >  > < $record < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > >  > < $pointer< structx_xx264_lookahead_t > > < $record < $pointer< $record < $pointer< $uint<8> > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > > < $pointer< $pointer < $void >  > >  > > < $pointer< structx_x_cl_context > > < $pointer< structx_x_cl_device_id > > < $pointer< structx_x_cl_command_queue > > < $pointer< structx_x_cl_program > > < $uint<32> > < $pointer< structx_x_cl_mem > > < $pointer< $uint<8> > > < $uint<32> > < $array [1024] $of $record < $pointer< $uint<8> > > < $pointer< $uint<8> > > < $uint<32> >  > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $pointer< structx_x_cl_kernel > > < $pointer< structx_x_cl_kernel > > < $pointer< structx_x_cl_kernel > > < $array [2] $of $pointer< structx_x_cl_mem > > < $pointer< structx_x_cl_kernel > > < $pointer< structx_x_cl_kernel > > < $array [4] $of $pointer< structx_x_cl_mem > > < $pointer< structx_x_cl_mem > > < $pointer< structx_x_cl_kernel > > < $pointer< structx_x_cl_kernel > > < $pointer< structx_x_cl_kernel > > < $array [2] $of $pointer< structx_x_cl_mem > > < $pointer< structx_x_cl_kernel > > < $pointer< structx_x_cl_kernel > > < $array [2] $of $pointer< structx_x_cl_mem > > < $pointer< structx_x_cl_mem > > < $pointer< structx_x_cl_mem > > < $pointer< structx_x_cl_kernel > > < $pointer< structx_x_cl_kernel > > < $array [2] $of $pointer< structx_x_cl_mem > > < $array [2] $of $pointer< structx_x_cl_mem > >  > < $array [8] $of $uint<8> > 
$record [structx_xx264_weight_t] < $array [8] $of $uint<16> > < $array [8] $of $uint<16> > < $uint<32> > < $uint<32> > < $uint<32> > < $pointer< $pointer< $pointer < $void >  > > > 
$record [unionx_xanon] < $uint<32> > 
$pipe in_data : $uint<32> $depth 1
$pipe out_data : $uint<32> $depth 1
$storage stderr:$pointer< structx_x_IO_FILE >
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr:$array [18] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr[0] := _b01110111
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr[1] := _b01100101
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr[2] := _b00100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr[3] := _b01101000
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr[4] := _b01100001
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr[5] := _b01110110
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr[6] := _b01100101
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr[7] := _b00100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr[8] := _b01100001
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr[9] := _b01101000
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr[10] := _b01101001
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr[11] := _b01110010
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr[12] := _b00100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr[13] := _b01111001
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr[14] := _b01100101
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr[15] := _b01110000
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr[16] := _b01110000
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x264_weight_none:$array [3] $of structx_xx264_weight_t
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_hpel_ref0:$array [16] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_hpel_ref0_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_hpel_ref0[1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_hpel_ref0[2] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_hpel_ref0[3] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_hpel_ref0[5] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_hpel_ref0[6] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_hpel_ref0[7] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_hpel_ref0[8] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_hpel_ref0[9] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_hpel_ref0[10] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_hpel_ref0[11] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_hpel_ref0[13] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_hpel_ref0[14] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_hpel_ref0[15] := _b00000001
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_hpel_ref1:$array [16] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_hpel_ref1_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_hpel_ref1[4] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_hpel_ref1[5] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_hpel_ref1[6] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_hpel_ref1[7] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_hpel_ref1[8] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_hpel_ref1[9] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_hpel_ref1[10] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_hpel_ref1[11] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_hpel_ref1[12] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_hpel_ref1[13] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_hpel_ref1[14] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_hpel_ref1[15] := _b00000010
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x264_scan8:$array [51] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_x264_scan8_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_scan8[0] := _b00001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_scan8[1] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_scan8[2] := _b00010100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_scan8[3] := _b00010101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_scan8[4] := _b00001110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_scan8[5] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_scan8[6] := _b00010110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_scan8[7] := _b00010111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_scan8[8] := _b00011100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_scan8[9] := _b00011101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_scan8[10] := _b00100100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_scan8[11] := _b00100101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_scan8[12] := _b00011110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_scan8[13] := _b00011111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_scan8[14] := _b00100110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_scan8[15] := _b00100111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_scan8[16] := _b00110100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_scan8[17] := _b00110101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_scan8[18] := _b00111100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_scan8[19] := _b00111101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_scan8[20] := _b00110110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_scan8[21] := _b00110111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_scan8[22] := _b00111110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_scan8[23] := _b00111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_scan8[24] := _b01000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_scan8[25] := _b01000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_scan8[26] := _b01001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_scan8[27] := _b01001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_scan8[28] := _b01000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_scan8[29] := _b01000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_scan8[30] := _b01001110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_scan8[31] := _b01001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_scan8[32] := _b01011100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_scan8[33] := _b01011101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_scan8[34] := _b01100100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_scan8[35] := _b01100101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_scan8[36] := _b01011110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_scan8[37] := _b01011111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_scan8[38] := _b01100110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_scan8[39] := _b01100111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_scan8[40] := _b01101100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_scan8[41] := _b01101101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_scan8[42] := _b01110100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_scan8[43] := _b01110101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_scan8[44] := _b01101110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_scan8[45] := _b01101111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_scan8[46] := _b01110110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_scan8[47] := _b01110111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_scan8[49] := _b00101000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_scan8[50] := _b01010000
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_left_indices:$array [4] $of structx_xx264_left_table_t
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_left_indices_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_left_indices[0][0][0] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_left_indices[0][0][1] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_left_indices[0][0][2] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_left_indices[0][0][3] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_left_indices[0][1][0] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_left_indices[0][1][1] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_left_indices[0][1][2] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_left_indices[0][1][3] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_left_indices[0][2][0] := _b00010001
  x264x_xlinkedx_xoptx_xo_iNtErNal_left_indices[0][2][1] := _b00010001
  x264x_xlinkedx_xoptx_xo_iNtErNal_left_indices[0][2][2] := _b00100001
  x264x_xlinkedx_xoptx_xo_iNtErNal_left_indices[0][2][3] := _b00100001
  x264x_xlinkedx_xoptx_xo_iNtErNal_left_indices[0][3][2] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_left_indices[0][3][3] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_left_indices[1][0][0] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_left_indices[1][0][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_left_indices[1][0][2] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_left_indices[1][0][3] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_left_indices[1][1][0] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_left_indices[1][1][1] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_left_indices[1][1][2] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_left_indices[1][1][3] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_left_indices[1][2][0] := _b00010101
  x264x_xlinkedx_xoptx_xo_iNtErNal_left_indices[1][2][1] := _b00010101
  x264x_xlinkedx_xoptx_xo_iNtErNal_left_indices[1][2][2] := _b00100101
  x264x_xlinkedx_xoptx_xo_iNtErNal_left_indices[1][2][3] := _b00100101
  x264x_xlinkedx_xoptx_xo_iNtErNal_left_indices[1][3][0] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_left_indices[1][3][1] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_left_indices[1][3][2] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_left_indices[1][3][3] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_left_indices[1][4][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_left_indices[1][4][1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_left_indices[1][4][2] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_left_indices[1][4][3] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_left_indices[2][0][0] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_left_indices[2][0][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_left_indices[2][0][2] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_left_indices[2][0][3] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_left_indices[2][1][0] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_left_indices[2][1][1] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_left_indices[2][1][2] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_left_indices[2][1][3] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_left_indices[2][2][0] := _b00010001
  x264x_xlinkedx_xoptx_xo_iNtErNal_left_indices[2][2][1] := _b00010001
  x264x_xlinkedx_xoptx_xo_iNtErNal_left_indices[2][2][2] := _b00100001
  x264x_xlinkedx_xoptx_xo_iNtErNal_left_indices[2][2][3] := _b00100001
  x264x_xlinkedx_xoptx_xo_iNtErNal_left_indices[2][3][1] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_left_indices[2][3][3] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_left_indices[2][4][1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_left_indices[2][4][3] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_left_indices[3][0][0] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_left_indices[3][0][1] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_left_indices[3][0][2] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_left_indices[3][0][3] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_left_indices[3][1][0] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_left_indices[3][1][1] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_left_indices[3][1][2] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_left_indices[3][1][3] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_left_indices[3][2][0] := _b00010001
  x264x_xlinkedx_xoptx_xo_iNtErNal_left_indices[3][2][1] := _b00010101
  x264x_xlinkedx_xoptx_xo_iNtErNal_left_indices[3][2][2] := _b00100001
  x264x_xlinkedx_xoptx_xo_iNtErNal_left_indices[3][2][3] := _b00100101
  x264x_xlinkedx_xoptx_xo_iNtErNal_left_indices[3][3][1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_left_indices[3][3][2] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_left_indices[3][3][3] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_left_indices[3][4][2] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_left_indices[3][4][3] := _b00000001
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_type_fix:$array [19] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_type_fix_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_type_fix[2] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_type_fix[3] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_type_fix[4] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_type_fix[5] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_type_fix[6] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_type_fix[7] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_type_fix[8] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_type_fix[9] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_type_fix[10] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_type_fix[11] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_type_fix[12] := _b00001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_type_fix[13] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_type_fix[14] := _b00001110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_type_fix[15] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_type_fix[16] := _b00010000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_type_fix[17] := _b00010001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_type_fix[18] := _b00010010
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_chroma_pred_mode_fix:$array [7] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_chroma_pred_mode_fix_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_chroma_pred_mode_fix[1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_chroma_pred_mode_fix[2] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_chroma_pred_mode_fix[3] := _b00000011
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr1:$array [53] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr1_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr1[0] := _b01100100
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr1[1] := _b01101001
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr1[2] := _b01110011
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr1[3] := _b01110100
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr1[4] := _b01011111
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr1[5] := _b01110011
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr1[6] := _b01100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr1[7] := _b01100001
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr1[8] := _b01101100
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr1[9] := _b01100101
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr1[10] := _b01011111
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr1[11] := _b01100110
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr1[12] := _b01100001
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr1[13] := _b01100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr1[14] := _b01110100
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr1[15] := _b01101111
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr1[16] := _b01110010
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr1[17] := _b00100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr1[18] := _b00111110
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr1[19] := _b00111101
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr1[20] := _b00100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr1[21] := _b00101101
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr1[22] := _b00110110
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr1[23] := _b00110011
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr1[24] := _b00100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr1[25] := _b00100110
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr1[26] := _b00100110
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr1[27] := _b00100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr1[28] := _b01100100
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr1[29] := _b01101001
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr1[30] := _b01110011
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr1[31] := _b01110100
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr1[32] := _b01011111
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr1[33] := _b01110011
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr1[34] := _b01100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr1[35] := _b01100001
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr1[36] := _b01101100
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr1[37] := _b01100101
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr1[38] := _b01011111
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr1[39] := _b01100110
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr1[40] := _b01100001
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr1[41] := _b01100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr1[42] := _b01110100
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr1[43] := _b01101111
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr1[44] := _b01110010
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr1[45] := _b00100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr1[46] := _b00111100
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr1[47] := _b00111101
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr1[48] := _b00100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr1[49] := _b00110001
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr1[50] := _b00110010
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr1[51] := _b00110111
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr12:$array [22] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr12_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr12[0] := _b00101110
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr12[1] := _b00101111
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr12[2] := _b01100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr12[3] := _b01101111
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr12[4] := _b01101101
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr12[5] := _b01101101
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr12[6] := _b01101111
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr12[7] := _b01101110
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr12[8] := _b00101111
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr12[9] := _b01101101
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr12[10] := _b01100001
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr12[11] := _b01100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr12[12] := _b01110010
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr12[13] := _b01101111
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr12[14] := _b01100010
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr12[15] := _b01101100
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr12[16] := _b01101111
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr12[17] := _b01100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr12[18] := _b01101011
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr12[19] := _b00101110
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr12[20] := _b01100011
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_bipred_init:$array [43] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_bipred_init_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_bipred_init[0] := _b01110110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_bipred_init[1] := _b01101111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_bipred_init[2] := _b01101001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_bipred_init[3] := _b01100100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_bipred_init[4] := _b00100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_bipred_init[5] := _b01111000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_bipred_init[6] := _b00110010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_bipred_init[7] := _b00110110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_bipred_init[8] := _b00110100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_bipred_init[9] := _b01011111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_bipred_init[10] := _b01101101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_bipred_init[11] := _b01100001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_bipred_init[12] := _b01100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_bipred_init[13] := _b01110010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_bipred_init[14] := _b01101111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_bipred_init[15] := _b01100010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_bipred_init[16] := _b01101100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_bipred_init[17] := _b01101111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_bipred_init[18] := _b01100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_bipred_init[19] := _b01101011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_bipred_init[20] := _b01011111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_bipred_init[21] := _b01100010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_bipred_init[22] := _b01101001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_bipred_init[23] := _b01110000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_bipred_init[24] := _b01110010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_bipred_init[25] := _b01100101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_bipred_init[26] := _b01100100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_bipred_init[27] := _b01011111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_bipred_init[28] := _b01101001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_bipred_init[29] := _b01101110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_bipred_init[30] := _b01101001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_bipred_init[31] := _b01110100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_bipred_init[32] := _b00101000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_bipred_init[33] := _b01111000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_bipred_init[34] := _b00110010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_bipred_init[35] := _b00110110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_bipred_init[36] := _b00110100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_bipred_init[37] := _b01011111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_bipred_init[38] := _b01110100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_bipred_init[39] := _b00100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_bipred_init[40] := _b00101010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_bipred_init[41] := _b00101001
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x264_macroblock_deblock_strength_mbaffx_xoffset:$array [2] $of $array [2] $of $array [8] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_x264_macroblock_deblock_strength_mbaffx_xoffset_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_macroblock_deblock_strength_mbaffx_xoffset[0][0][4] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_macroblock_deblock_strength_mbaffx_xoffset[0][0][5] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_macroblock_deblock_strength_mbaffx_xoffset[0][0][6] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_macroblock_deblock_strength_mbaffx_xoffset[0][0][7] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_macroblock_deblock_strength_mbaffx_xoffset[0][1][0] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_macroblock_deblock_strength_mbaffx_xoffset[0][1][1] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_macroblock_deblock_strength_mbaffx_xoffset[0][1][2] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_macroblock_deblock_strength_mbaffx_xoffset[0][1][3] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_macroblock_deblock_strength_mbaffx_xoffset[0][1][4] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_macroblock_deblock_strength_mbaffx_xoffset[0][1][5] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_macroblock_deblock_strength_mbaffx_xoffset[0][1][6] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_macroblock_deblock_strength_mbaffx_xoffset[0][1][7] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_macroblock_deblock_strength_mbaffx_xoffset[1][0][1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_macroblock_deblock_strength_mbaffx_xoffset[1][0][2] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_macroblock_deblock_strength_mbaffx_xoffset[1][0][3] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_macroblock_deblock_strength_mbaffx_xoffset[1][0][5] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_macroblock_deblock_strength_mbaffx_xoffset[1][0][6] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_macroblock_deblock_strength_mbaffx_xoffset[1][0][7] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_macroblock_deblock_strength_mbaffx_xoffset[1][1][1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_macroblock_deblock_strength_mbaffx_xoffset[1][1][2] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_macroblock_deblock_strength_mbaffx_xoffset[1][1][3] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_macroblock_deblock_strength_mbaffx_xoffset[1][1][5] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_macroblock_deblock_strength_mbaffx_xoffset[1][1][6] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_macroblock_deblock_strength_mbaffx_xoffset[1][1][7] := _b00000011
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x264_size2pixel:$array [5] $of $array [5] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_x264_size2pixel_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_size2pixel[1][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_size2pixel[1][2] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_size2pixel[2][1] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_size2pixel[2][2] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_size2pixel[2][4] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_size2pixel[4][2] := _b00000010
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight_tab:$array [64] $of $uint<32>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight_tab_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight_tab[0] := _b00000000000000000000000100000000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight_tab[1] := _b00000000000000000000000011110001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight_tab[2] := _b00000000000000000000000101000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight_tab[3] := _b00000000000000000000000011110001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight_tab[4] := _b00000000000000000000000100000000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight_tab[5] := _b00000000000000000000000011110001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight_tab[6] := _b00000000000000000000000101000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight_tab[7] := _b00000000000000000000000011110001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight_tab[8] := _b00000000000000000000000011110001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight_tab[9] := _b00000000000000000000000011100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight_tab[10] := _b00000000000000000000000100110001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight_tab[11] := _b00000000000000000000000011100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight_tab[12] := _b00000000000000000000000011110001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight_tab[13] := _b00000000000000000000000011100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight_tab[14] := _b00000000000000000000000100110001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight_tab[15] := _b00000000000000000000000011100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight_tab[16] := _b00000000000000000000000101000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight_tab[17] := _b00000000000000000000000100110001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight_tab[18] := _b00000000000000000000000110011010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight_tab[19] := _b00000000000000000000000100110001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight_tab[20] := _b00000000000000000000000101000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight_tab[21] := _b00000000000000000000000100110001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight_tab[22] := _b00000000000000000000000110011010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight_tab[23] := _b00000000000000000000000100110001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight_tab[24] := _b00000000000000000000000011110001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight_tab[25] := _b00000000000000000000000011100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight_tab[26] := _b00000000000000000000000100110001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight_tab[27] := _b00000000000000000000000011100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight_tab[28] := _b00000000000000000000000011110001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight_tab[29] := _b00000000000000000000000011100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight_tab[30] := _b00000000000000000000000100110001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight_tab[31] := _b00000000000000000000000011100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight_tab[32] := _b00000000000000000000000100000000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight_tab[33] := _b00000000000000000000000011110001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight_tab[34] := _b00000000000000000000000101000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight_tab[35] := _b00000000000000000000000011110001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight_tab[36] := _b00000000000000000000000100000000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight_tab[37] := _b00000000000000000000000011110001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight_tab[38] := _b00000000000000000000000101000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight_tab[39] := _b00000000000000000000000011110001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight_tab[40] := _b00000000000000000000000011110001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight_tab[41] := _b00000000000000000000000011100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight_tab[42] := _b00000000000000000000000100110001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight_tab[43] := _b00000000000000000000000011100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight_tab[44] := _b00000000000000000000000011110001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight_tab[45] := _b00000000000000000000000011100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight_tab[46] := _b00000000000000000000000100110001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight_tab[47] := _b00000000000000000000000011100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight_tab[48] := _b00000000000000000000000101000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight_tab[49] := _b00000000000000000000000100110001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight_tab[50] := _b00000000000000000000000110011010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight_tab[51] := _b00000000000000000000000100110001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight_tab[52] := _b00000000000000000000000101000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight_tab[53] := _b00000000000000000000000100110001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight_tab[54] := _b00000000000000000000000110011010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight_tab[55] := _b00000000000000000000000100110001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight_tab[56] := _b00000000000000000000000011110001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight_tab[57] := _b00000000000000000000000011100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight_tab[58] := _b00000000000000000000000100110001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight_tab[59] := _b00000000000000000000000011100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight_tab[60] := _b00000000000000000000000011110001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight_tab[61] := _b00000000000000000000000011100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight_tab[62] := _b00000000000000000000000100110001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight_tab[63] := _b00000000000000000000000011100011
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct4_weight_tab:$array [16] $of $uint<32>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct4_weight_tab_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct4_weight_tab[0] := _b00000000000000000000000111000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct4_weight_tab[1] := _b00000000000000000000000100011110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct4_weight_tab[2] := _b00000000000000000000000111000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct4_weight_tab[3] := _b00000000000000000000000100011110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct4_weight_tab[4] := _b00000000000000000000000100011110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct4_weight_tab[5] := _b00000000000000000000000010110101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct4_weight_tab[6] := _b00000000000000000000000100011110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct4_weight_tab[7] := _b00000000000000000000000010110101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct4_weight_tab[8] := _b00000000000000000000000111000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct4_weight_tab[9] := _b00000000000000000000000100011110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct4_weight_tab[10] := _b00000000000000000000000111000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct4_weight_tab[11] := _b00000000000000000000000100011110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct4_weight_tab[12] := _b00000000000000000000000100011110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct4_weight_tab[13] := _b00000000000000000000000010110101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct4_weight_tab[14] := _b00000000000000000000000100011110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct4_weight_tab[15] := _b00000000000000000000000010110101
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct4_weight2_tab:$array [16] $of $uint<32>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct4_weight2_tab_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct4_weight2_tab[0] := _b00000000000000000000001100100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct4_weight2_tab[1] := _b00000000000000000000000101000000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct4_weight2_tab[2] := _b00000000000000000000001100100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct4_weight2_tab[3] := _b00000000000000000000000101000000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct4_weight2_tab[4] := _b00000000000000000000000101000000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct4_weight2_tab[5] := _b00000000000000000000000010000000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct4_weight2_tab[6] := _b00000000000000000000000101000000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct4_weight2_tab[7] := _b00000000000000000000000010000000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct4_weight2_tab[8] := _b00000000000000000000001100100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct4_weight2_tab[9] := _b00000000000000000000000101000000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct4_weight2_tab[10] := _b00000000000000000000001100100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct4_weight2_tab[11] := _b00000000000000000000000101000000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct4_weight2_tab[12] := _b00000000000000000000000101000000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct4_weight2_tab[13] := _b00000000000000000000000010000000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct4_weight2_tab[14] := _b00000000000000000000000101000000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct4_weight2_tab[15] := _b00000000000000000000000010000000
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight2_tab:$array [64] $of $uint<32>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight2_tab_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight2_tab[0] := _b00000000000000000000000100000000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight2_tab[1] := _b00000000000000000000000011100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight2_tab[2] := _b00000000000000000000000110011010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight2_tab[3] := _b00000000000000000000000011100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight2_tab[4] := _b00000000000000000000000100000000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight2_tab[5] := _b00000000000000000000000011100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight2_tab[6] := _b00000000000000000000000110011010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight2_tab[7] := _b00000000000000000000000011100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight2_tab[8] := _b00000000000000000000000011100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight2_tab[9] := _b00000000000000000000000011001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight2_tab[10] := _b00000000000000000000000101101011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight2_tab[11] := _b00000000000000000000000011001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight2_tab[12] := _b00000000000000000000000011100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight2_tab[13] := _b00000000000000000000000011001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight2_tab[14] := _b00000000000000000000000101101011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight2_tab[15] := _b00000000000000000000000011001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight2_tab[16] := _b00000000000000000000000110011010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight2_tab[17] := _b00000000000000000000000101101011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight2_tab[18] := _b00000000000000000000001010010000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight2_tab[19] := _b00000000000000000000000101101011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight2_tab[20] := _b00000000000000000000000110011010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight2_tab[21] := _b00000000000000000000000101101011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight2_tab[22] := _b00000000000000000000001010010000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight2_tab[23] := _b00000000000000000000000101101011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight2_tab[24] := _b00000000000000000000000011100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight2_tab[25] := _b00000000000000000000000011001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight2_tab[26] := _b00000000000000000000000101101011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight2_tab[27] := _b00000000000000000000000011001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight2_tab[28] := _b00000000000000000000000011100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight2_tab[29] := _b00000000000000000000000011001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight2_tab[30] := _b00000000000000000000000101101011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight2_tab[31] := _b00000000000000000000000011001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight2_tab[32] := _b00000000000000000000000100000000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight2_tab[33] := _b00000000000000000000000011100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight2_tab[34] := _b00000000000000000000000110011010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight2_tab[35] := _b00000000000000000000000011100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight2_tab[36] := _b00000000000000000000000100000000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight2_tab[37] := _b00000000000000000000000011100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight2_tab[38] := _b00000000000000000000000110011010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight2_tab[39] := _b00000000000000000000000011100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight2_tab[40] := _b00000000000000000000000011100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight2_tab[41] := _b00000000000000000000000011001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight2_tab[42] := _b00000000000000000000000101101011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight2_tab[43] := _b00000000000000000000000011001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight2_tab[44] := _b00000000000000000000000011100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight2_tab[45] := _b00000000000000000000000011001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight2_tab[46] := _b00000000000000000000000101101011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight2_tab[47] := _b00000000000000000000000011001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight2_tab[48] := _b00000000000000000000000110011010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight2_tab[49] := _b00000000000000000000000101101011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight2_tab[50] := _b00000000000000000000001010010000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight2_tab[51] := _b00000000000000000000000101101011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight2_tab[52] := _b00000000000000000000000110011010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight2_tab[53] := _b00000000000000000000000101101011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight2_tab[54] := _b00000000000000000000001010010000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight2_tab[55] := _b00000000000000000000000101101011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight2_tab[56] := _b00000000000000000000000011100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight2_tab[57] := _b00000000000000000000000011001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight2_tab[58] := _b00000000000000000000000101101011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight2_tab[59] := _b00000000000000000000000011001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight2_tab[60] := _b00000000000000000000000011100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight2_tab[61] := _b00000000000000000000000011001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight2_tab[62] := _b00000000000000000000000101101011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight2_tab[63] := _b00000000000000000000000011001001
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps:$array [64] $of $array [4] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[0][0] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[0][1] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[0][2] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[0][3] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[1][0] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[1][1] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[1][2] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[1][3] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[2][0] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[2][1] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[2][2] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[2][3] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[3][0] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[3][1] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[3][2] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[3][3] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[4][0] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[4][1] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[4][2] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[4][3] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[5][0] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[5][1] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[5][2] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[5][3] := _b00001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[6][0] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[6][1] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[6][2] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[6][3] := _b00001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[7][0] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[7][1] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[7][2] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[7][3] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[8][0] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[8][1] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[8][2] := _b00001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[8][3] := _b00001110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[9][0] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[9][1] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[9][2] := _b00001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[9][3] := _b00001110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[10][0] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[10][1] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[10][2] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[10][3] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[11][0] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[11][1] := _b00001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[11][2] := _b00001110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[11][3] := _b00010000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[12][0] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[12][1] := _b00001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[12][2] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[12][3] := _b00010001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[13][0] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[13][1] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[13][2] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[13][3] := _b00010010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[14][0] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[14][1] := _b00001110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[14][2] := _b00010000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[14][3] := _b00010011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[15][0] := _b00001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[15][1] := _b00001110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[15][2] := _b00010001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[15][3] := _b00010100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[16][0] := _b00001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[16][1] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[16][2] := _b00010010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[16][3] := _b00010101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[17][0] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[17][1] := _b00010000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[17][2] := _b00010011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[17][3] := _b00010110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[18][0] := _b00001110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[18][1] := _b00010001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[18][2] := _b00010100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[18][3] := _b00010111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[19][0] := _b00001110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[19][1] := _b00010010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[19][2] := _b00010101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[19][3] := _b00011000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[20][0] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[20][1] := _b00010011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[20][2] := _b00010110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[20][3] := _b00011001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[21][0] := _b00010000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[21][1] := _b00010100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[21][2] := _b00010111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[21][3] := _b00011011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[22][0] := _b00010001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[22][1] := _b00010101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[22][2] := _b00011001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[22][3] := _b00011100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[23][0] := _b00010010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[23][1] := _b00010110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[23][2] := _b00011010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[23][3] := _b00011110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[24][0] := _b00010011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[24][1] := _b00010111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[24][2] := _b00011011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[24][3] := _b00011111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[25][0] := _b00010100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[25][1] := _b00011000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[25][2] := _b00011101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[25][3] := _b00100001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[26][0] := _b00010101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[26][1] := _b00011010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[26][2] := _b00011110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[26][3] := _b00100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[27][0] := _b00010110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[27][1] := _b00011011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[27][2] := _b00100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[27][3] := _b00100101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[28][0] := _b00010111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[28][1] := _b00011100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[28][2] := _b00100001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[28][3] := _b00100111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[29][0] := _b00011000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[29][1] := _b00011110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[29][2] := _b00100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[29][3] := _b00101001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[30][0] := _b00011010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[30][1] := _b00011111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[30][2] := _b00100101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[30][3] := _b00101011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[31][0] := _b00011011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[31][1] := _b00100001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[31][2] := _b00100111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[31][3] := _b00101101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[32][0] := _b00011101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[32][1] := _b00100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[32][2] := _b00101001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[32][3] := _b00110000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[33][0] := _b00011110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[33][1] := _b00100101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[33][2] := _b00101011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[33][3] := _b00110010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[34][0] := _b00100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[34][1] := _b00100111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[34][2] := _b00101110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[34][3] := _b00110101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[35][0] := _b00100001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[35][1] := _b00101001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[35][2] := _b00110000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[35][3] := _b00111000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[36][0] := _b00100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[36][1] := _b00101011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[36][2] := _b00110011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[36][3] := _b00111011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[37][0] := _b00100101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[37][1] := _b00101101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[37][2] := _b00110110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[37][3] := _b00111110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[38][0] := _b00100111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[38][1] := _b00110000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[38][2] := _b00111000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[38][3] := _b01000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[39][0] := _b00101001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[39][1] := _b00110010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[39][2] := _b00111011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[39][3] := _b01000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[40][0] := _b00101011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[40][1] := _b00110101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[40][2] := _b00111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[40][3] := _b01001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[41][0] := _b00101110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[41][1] := _b00111000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[41][2] := _b01000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[41][3] := _b01001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[42][0] := _b00110000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[42][1] := _b00111011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[42][2] := _b01000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[42][3] := _b01010000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[43][0] := _b00110011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[43][1] := _b00111110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[43][2] := _b01001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[43][3] := _b01010101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[44][0] := _b00110101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[44][1] := _b01000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[44][2] := _b01001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[44][3] := _b01011001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[45][0] := _b00111000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[45][1] := _b01000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[45][2] := _b01010001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[45][3] := _b01011110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[46][0] := _b00111011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[46][1] := _b01001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[46][2] := _b01010110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[46][3] := _b01100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[47][0] := _b00111110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[47][1] := _b01001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[47][2] := _b01011010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[47][3] := _b01101000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[48][0] := _b01000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[48][1] := _b01010000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[48][2] := _b01011111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[48][3] := _b01101110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[49][0] := _b01000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[49][1] := _b01010101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[49][2] := _b01100100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[49][3] := _b01110100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[50][0] := _b01001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[50][1] := _b01011001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[50][2] := _b01101001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[50][3] := _b01111010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[51][0] := _b01001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[51][1] := _b01011110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[51][2] := _b01101111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[51][3] := _b10000000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[52][0] := _b01010001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[52][1] := _b01100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[52][2] := _b01110101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[52][3] := _b10000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[53][0] := _b01010101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[53][1] := _b01101000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[53][2] := _b01111011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[53][3] := _b10001110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[54][0] := _b01011010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[54][1] := _b01101110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[54][2] := _b10000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[54][3] := _b10010110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[55][0] := _b01011111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[55][1] := _b01110100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[55][2] := _b10001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[55][3] := _b10011110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[56][0] := _b01100100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[56][1] := _b01111010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[56][2] := _b10010000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[56][3] := _b10100110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[57][0] := _b01101001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[57][1] := _b10000000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[57][2] := _b10011000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[57][3] := _b10101111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[58][0] := _b01101111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[58][1] := _b10000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[58][2] := _b10100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[58][3] := _b10111001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[59][0] := _b01110100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[59][1] := _b10001110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[59][2] := _b10101001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[59][3] := _b11000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[60][0] := _b01111011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[60][1] := _b10010110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[60][2] := _b10110010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[60][3] := _b11001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[61][0] := _b10000000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[61][1] := _b10011110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[61][2] := _b10111011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[61][3] := _b11011000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[62][0] := _b10000000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[62][1] := _b10100111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[62][2] := _b11000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[62][3] := _b11100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[63][0] := _b10000000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[63][1] := _b10110000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[63][2] := _b11010000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[63][3] := _b11110000
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition:$array [128] $of $array [2] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[1][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[1][1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[2][0] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[2][1] := _b00110010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[3][0] := _b00110011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[3][1] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[4][0] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[4][1] := _b00110010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[5][0] := _b00110011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[5][1] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[6][0] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[6][1] := _b00110100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[7][0] := _b00110101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[7][1] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[8][0] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[8][1] := _b00110100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[9][0] := _b00110101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[9][1] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[10][0] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[10][1] := _b00110100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[11][0] := _b00110101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[11][1] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[12][0] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[12][1] := _b00110110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[13][0] := _b00110111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[13][1] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[14][0] := _b00001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[14][1] := _b00110110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[15][0] := _b00110111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[15][1] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[16][0] := _b00001110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[16][1] := _b00110110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[17][0] := _b00110111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[17][1] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[18][0] := _b00010000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[18][1] := _b00111000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[19][0] := _b00111001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[19][1] := _b00010001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[20][0] := _b00010010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[20][1] := _b00111000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[21][0] := _b00111001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[21][1] := _b00010011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[22][0] := _b00010100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[22][1] := _b00111000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[23][0] := _b00111001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[23][1] := _b00010101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[24][0] := _b00010110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[24][1] := _b00111010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[25][0] := _b00111011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[25][1] := _b00010111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[26][0] := _b00011000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[26][1] := _b00111010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[27][0] := _b00111011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[27][1] := _b00011001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[28][0] := _b00011010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[28][1] := _b00111100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[29][0] := _b00111101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[29][1] := _b00011011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[30][0] := _b00011100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[30][1] := _b00111100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[31][0] := _b00111101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[31][1] := _b00011101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[32][0] := _b00011110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[32][1] := _b00111100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[33][0] := _b00111101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[33][1] := _b00011111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[34][0] := _b00100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[34][1] := _b00111110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[35][0] := _b00111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[35][1] := _b00100001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[36][0] := _b00100010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[36][1] := _b00111110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[37][0] := _b00111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[37][1] := _b00100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[38][0] := _b00100100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[38][1] := _b01000000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[39][0] := _b01000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[39][1] := _b00100101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[40][0] := _b00100110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[40][1] := _b01000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[41][0] := _b01000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[41][1] := _b00100111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[42][0] := _b00101000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[42][1] := _b01000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[43][0] := _b01000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[43][1] := _b00101001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[44][0] := _b00101010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[44][1] := _b01000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[45][0] := _b01000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[45][1] := _b00101011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[46][0] := _b00101100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[46][1] := _b01000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[47][0] := _b01000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[47][1] := _b00101101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[48][0] := _b00101110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[48][1] := _b01000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[49][0] := _b01000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[49][1] := _b00101111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[50][0] := _b00110000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[50][1] := _b01000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[51][0] := _b01000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[51][1] := _b00110001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[52][0] := _b00110010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[52][1] := _b01001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[53][0] := _b01001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[53][1] := _b00110011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[54][0] := _b00110100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[54][1] := _b01001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[55][0] := _b01001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[55][1] := _b00110101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[56][0] := _b00110110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[56][1] := _b01001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[57][0] := _b01001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[57][1] := _b00110111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[58][0] := _b00111000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[58][1] := _b01001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[59][0] := _b01001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[59][1] := _b00111001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[60][0] := _b00111010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[60][1] := _b01001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[61][0] := _b01001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[61][1] := _b00111011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[62][0] := _b00111100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[62][1] := _b01001110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[63][0] := _b01001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[63][1] := _b00111101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[64][0] := _b00111110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[64][1] := _b01001110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[65][0] := _b01001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[65][1] := _b00111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[66][0] := _b01000000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[66][1] := _b01010000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[67][0] := _b01010001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[67][1] := _b01000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[68][0] := _b01000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[68][1] := _b01010010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[69][0] := _b01010011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[69][1] := _b01000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[70][0] := _b01000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[70][1] := _b01010010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[71][0] := _b01010011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[71][1] := _b01000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[72][0] := _b01000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[72][1] := _b01010100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[73][0] := _b01010101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[73][1] := _b01000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[74][0] := _b01001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[74][1] := _b01010100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[75][0] := _b01010101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[75][1] := _b01001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[76][0] := _b01001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[76][1] := _b01011000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[77][0] := _b01011001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[77][1] := _b01001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[78][0] := _b01001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[78][1] := _b01011000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[79][0] := _b01011001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[79][1] := _b01001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[80][0] := _b01001110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[80][1] := _b01011010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[81][0] := _b01011011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[81][1] := _b01001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[82][0] := _b01010000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[82][1] := _b01011010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[83][0] := _b01011011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[83][1] := _b01010001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[84][0] := _b01010010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[84][1] := _b01011110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[85][0] := _b01011111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[85][1] := _b01010011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[86][0] := _b01010100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[86][1] := _b01011110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[87][0] := _b01011111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[87][1] := _b01010101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[88][0] := _b01010110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[88][1] := _b01100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[89][0] := _b01100001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[89][1] := _b01010111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[90][0] := _b01011000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[90][1] := _b01100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[91][0] := _b01100001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[91][1] := _b01011001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[92][0] := _b01011010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[92][1] := _b01100100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[93][0] := _b01100101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[93][1] := _b01011011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[94][0] := _b01011100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[94][1] := _b01100100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[95][0] := _b01100101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[95][1] := _b01011101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[96][0] := _b01011110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[96][1] := _b01100110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[97][0] := _b01100111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[97][1] := _b01011111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[98][0] := _b01100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[98][1] := _b01101000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[99][0] := _b01101001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[99][1] := _b01100001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[100][0] := _b01100010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[100][1] := _b01101000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[101][0] := _b01101001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[101][1] := _b01100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[102][0] := _b01100100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[102][1] := _b01101100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[103][0] := _b01101101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[103][1] := _b01100101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[104][0] := _b01100110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[104][1] := _b01101100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[105][0] := _b01101101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[105][1] := _b01100111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[106][0] := _b01101000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[106][1] := _b01101110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[107][0] := _b01101111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[107][1] := _b01101001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[108][0] := _b01101010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[108][1] := _b01110000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[109][0] := _b01110001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[109][1] := _b01101011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[110][0] := _b01101100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[110][1] := _b01110010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[111][0] := _b01110011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[111][1] := _b01101101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[112][0] := _b01101110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[112][1] := _b01110100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[113][0] := _b01110101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[113][1] := _b01101111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[114][0] := _b01110000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[114][1] := _b01110110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[115][0] := _b01110111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[115][1] := _b01110001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[116][0] := _b01110010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[116][1] := _b01110110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[117][0] := _b01110111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[117][1] := _b01110011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[118][0] := _b01110100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[118][1] := _b01111010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[119][0] := _b01111011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[119][1] := _b01110101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[120][0] := _b01110110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[120][1] := _b01111010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[121][0] := _b01111011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[121][1] := _b01110111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[122][0] := _b01111000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[122][1] := _b01111100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[123][0] := _b01111101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[123][1] := _b01111001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[124][0] := _b01111010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[124][1] := _b01111110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[125][0] := _b01111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[125][1] := _b01111011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[126][0] := _b01111100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[126][1] := _b01111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[127][0] := _b01111110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[127][1] := _b01111101
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_renorm_shift:$array [64] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_renorm_shift_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_renorm_shift[0] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_renorm_shift[1] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_renorm_shift[2] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_renorm_shift[3] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_renorm_shift[4] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_renorm_shift[5] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_renorm_shift[6] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_renorm_shift[7] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_renorm_shift[8] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_renorm_shift[9] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_renorm_shift[10] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_renorm_shift[11] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_renorm_shift[12] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_renorm_shift[13] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_renorm_shift[14] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_renorm_shift[15] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_renorm_shift[16] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_renorm_shift[17] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_renorm_shift[18] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_renorm_shift[19] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_renorm_shift[20] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_renorm_shift[21] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_renorm_shift[22] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_renorm_shift[23] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_renorm_shift[24] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_renorm_shift[25] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_renorm_shift[26] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_renorm_shift[27] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_renorm_shift[28] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_renorm_shift[29] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_renorm_shift[30] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_renorm_shift[31] := _b00000001
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy:$array [128] $of $uint<16>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[0] := _b0000000000000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[1] := _b0000010110111101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[2] := _b0000000000000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[3] := _b0000010110101001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[4] := _b0000000000001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[5] := _b0000010110010110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[6] := _b0000000000001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[7] := _b0000010110000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[8] := _b0000000000001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[9] := _b0000010101110000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[10] := _b0000000000001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[11] := _b0000010101011100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[12] := _b0000000000001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[13] := _b0000010101001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[14] := _b0000000000001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[15] := _b0000010100110110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[16] := _b0000000000001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[17] := _b0000010100100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[18] := _b0000000000001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[19] := _b0000010100001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[20] := _b0000000000001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[21] := _b0000010011111100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[22] := _b0000000000001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[23] := _b0000010011101001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[24] := _b0000000000001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[25] := _b0000010011010110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[26] := _b0000000000001110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[27] := _b0000010011000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[28] := _b0000000000001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[29] := _b0000010010101111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[30] := _b0000000000001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[31] := _b0000010010011100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[32] := _b0000000000010000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[33] := _b0000010010001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[34] := _b0000000000010001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[35] := _b0000010001110101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[36] := _b0000000000010010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[37] := _b0000010001100010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[38] := _b0000000000010011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[39] := _b0000010001001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[40] := _b0000000000010100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[41] := _b0000010000111100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[42] := _b0000000000010101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[43] := _b0000010000101000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[44] := _b0000000000010110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[45] := _b0000010000010101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[46] := _b0000000000011000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[47] := _b0000010000000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[48] := _b0000000000011001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[49] := _b0000001111101111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[50] := _b0000000000011010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[51] := _b0000001111011011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[52] := _b0000000000011100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[53] := _b0000001111001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[54] := _b0000000000011101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[55] := _b0000001110110101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[56] := _b0000000000011111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[57] := _b0000001110100010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[58] := _b0000000000100001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[59] := _b0000001110001110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[60] := _b0000000000100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[61] := _b0000001101111011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[62] := _b0000000000100101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[63] := _b0000001101101000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[64] := _b0000000000100111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[65] := _b0000001101010101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[66] := _b0000000000101001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[67] := _b0000001101000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[68] := _b0000000000101011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[69] := _b0000001100101110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[70] := _b0000000000101110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[71] := _b0000001100011011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[72] := _b0000000000110000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[73] := _b0000001100001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[74] := _b0000000000110011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[75] := _b0000001011110100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[76] := _b0000000000110110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[77] := _b0000001011100001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[78] := _b0000000000111001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[79] := _b0000001011001110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[80] := _b0000000000111100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[81] := _b0000001010111011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[82] := _b0000000001000000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[83] := _b0000001010100111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[84] := _b0000000001000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[85] := _b0000001010010100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[86] := _b0000000001001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[87] := _b0000001010000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[88] := _b0000000001001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[89] := _b0000001001101110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[90] := _b0000000001010000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[91] := _b0000001001011010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[92] := _b0000000001010101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[93] := _b0000001001000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[94] := _b0000000001011010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[95] := _b0000001000110100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[96] := _b0000000001100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[97] := _b0000001000100001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[98] := _b0000000001100110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[99] := _b0000001000001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[100] := _b0000000001101100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[101] := _b0000000111111010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[102] := _b0000000001110011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[103] := _b0000000111100111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[104] := _b0000000001111010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[105] := _b0000000111010100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[106] := _b0000000010000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[107] := _b0000000111000000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[108] := _b0000000010001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[109] := _b0000000110101101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[110] := _b0000000010010100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[111] := _b0000000110011010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[112] := _b0000000010011101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[113] := _b0000000110000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[114] := _b0000000010101000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[115] := _b0000000101110011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[116] := _b0000000010110100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[117] := _b0000000101100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[118] := _b0000000011000000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[119] := _b0000000101001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[120] := _b0000000011001110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[121] := _b0000000100111010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[122] := _b0000000011011101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[123] := _b0000000100100111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[124] := _b0000000011101110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[125] := _b0000000100010011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[126] := _b0000000100000000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy[127] := _b0000000100000000
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_contexts_hw:$array [4] $of $array [52] $of $array [1024] $of $uint<8>
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_bypass_lut:$array [16] $of $uint<32>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_bypass_lut_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_bypass_lut[0] := _b11111111111111111111111111111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_bypass_lut[1] := _b00000000000000000000000000000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_bypass_lut[2] := _b00000000000000000000000000010100
  x264x_xlinkedx_xoptx_xo_iNtErNal_bypass_lut[3] := _b00000000000000000000000001101000
  x264x_xlinkedx_xoptx_xo_iNtErNal_bypass_lut[4] := _b00000000000000000000000111010000
  x264x_xlinkedx_xoptx_xo_iNtErNal_bypass_lut[5] := _b00000000000000000000011110100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_bypass_lut[6] := _b00000000000000000001111101000000
  x264x_xlinkedx_xoptx_xo_iNtErNal_bypass_lut[7] := _b00000000000000000111111010000000
  x264x_xlinkedx_xoptx_xo_iNtErNal_bypass_lut[8] := _b00000000000000011111110100000000
  x264x_xlinkedx_xoptx_xo_iNtErNal_bypass_lut[9] := _b00000000000001111111101000000000
  x264x_xlinkedx_xoptx_xo_iNtErNal_bypass_lut[10] := _b00000000000111111111010000000000
  x264x_xlinkedx_xoptx_xo_iNtErNal_bypass_lut[11] := _b00000000011111111110100000000000
  x264x_xlinkedx_xoptx_xo_iNtErNal_bypass_lut[12] := _b00000001111111111101000000000000
  x264x_xlinkedx_xoptx_xo_iNtErNal_bypass_lut[13] := _b00000111111111111010000000000000
  x264x_xlinkedx_xoptx_xo_iNtErNal_bypass_lut[14] := _b00011111111111110100000000000000
  x264x_xlinkedx_xoptx_xo_iNtErNal_bypass_lut[15] := _b01111111111111101000000000000000
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cost_i4x4_mode_hw:$array [2272] $of $uint<16>
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cost_ref_hw:$array [70] $of $array [3] $of $array [33] $of $uint<16>
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition_unary_hw:$array [15] $of $array [128] $of $uint<8>
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_size_unary_hw:$array [15] $of $array [128] $of $uint<16>
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_cabac_transition_5ones_hw:$array [128] $of $uint<8>
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_cabac_size_5ones_hw:$array [128] $of $uint<16>
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cache_mv_func_table:$array [10] $of $pointer< $pointer < $void >  >
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cache_mvd_func_table:$array [10] $of $pointer< $pointer < $void >  >
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cache_ref_func_table:$array [10] $of $pointer< $pointer < $void >  >
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr13:$array [21] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr13_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr13[0] := _b00101110
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr13[1] := _b00101111
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr13[2] := _b01100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr13[3] := _b01101111
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr13[4] := _b01101101
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr13[5] := _b01101101
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr13[6] := _b01101111
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr13[7] := _b01101110
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr13[8] := _b00101111
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr13[9] := _b01110010
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr13[10] := _b01100101
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr13[11] := _b01100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr13[12] := _b01110100
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr13[13] := _b01100001
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr13[14] := _b01101110
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr13[15] := _b01100111
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr13[16] := _b01101100
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr13[17] := _b01100101
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr13[18] := _b00101110
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr13[19] := _b01101000
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_cache_rect:$array [65] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_cache_rect_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_cache_rect[0] := _b01110110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_cache_rect[1] := _b01101111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_cache_rect[2] := _b01101001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_cache_rect[3] := _b01100100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_cache_rect[4] := _b00100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_cache_rect[5] := _b01111000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_cache_rect[6] := _b00110010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_cache_rect[7] := _b00110110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_cache_rect[8] := _b00110100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_cache_rect[9] := _b01011111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_cache_rect[10] := _b01101101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_cache_rect[11] := _b01100001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_cache_rect[12] := _b01100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_cache_rect[13] := _b01110010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_cache_rect[14] := _b01101111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_cache_rect[15] := _b01100010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_cache_rect[16] := _b01101100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_cache_rect[17] := _b01101111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_cache_rect[18] := _b01100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_cache_rect[19] := _b01101011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_cache_rect[20] := _b01011111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_cache_rect[21] := _b01100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_cache_rect[22] := _b01100001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_cache_rect[23] := _b01100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_cache_rect[24] := _b01101000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_cache_rect[25] := _b01100101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_cache_rect[26] := _b01011111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_cache_rect[27] := _b01110010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_cache_rect[28] := _b01100101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_cache_rect[29] := _b01100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_cache_rect[30] := _b01110100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_cache_rect[31] := _b00101000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_cache_rect[32] := _b01110110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_cache_rect[33] := _b01101111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_cache_rect[34] := _b01101001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_cache_rect[35] := _b01100100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_cache_rect[36] := _b00100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_cache_rect[37] := _b00101010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_cache_rect[38] := _b00101100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_cache_rect[39] := _b00100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_cache_rect[40] := _b01101001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_cache_rect[41] := _b01101110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_cache_rect[42] := _b01110100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_cache_rect[43] := _b00101100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_cache_rect[44] := _b00100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_cache_rect[45] := _b01101001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_cache_rect[46] := _b01101110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_cache_rect[47] := _b01110100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_cache_rect[48] := _b00101100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_cache_rect[49] := _b00100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_cache_rect[50] := _b01101001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_cache_rect[51] := _b01101110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_cache_rect[52] := _b01110100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_cache_rect[53] := _b00101100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_cache_rect[54] := _b00100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_cache_rect[55] := _b01110101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_cache_rect[56] := _b01101001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_cache_rect[57] := _b01101110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_cache_rect[58] := _b01110100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_cache_rect[59] := _b00110011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_cache_rect[60] := _b00110010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_cache_rect[61] := _b01011111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_cache_rect[62] := _b01110100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_cache_rect[63] := _b00101001
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr2:$array [2] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr2_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr2[0] := _b00110000
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x264_decimate_table4:$array [16] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_x264_decimate_table4_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_decimate_table4[0] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_decimate_table4[1] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_decimate_table4[2] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_decimate_table4[3] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_decimate_table4[4] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_decimate_table4[5] := _b00000001
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x264_decimate_table8:$array [64] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_x264_decimate_table8_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_decimate_table8[0] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_decimate_table8[1] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_decimate_table8[2] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_decimate_table8[3] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_decimate_table8[4] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_decimate_table8[5] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_decimate_table8[6] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_decimate_table8[7] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_decimate_table8[8] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_decimate_table8[9] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_decimate_table8[10] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_decimate_table8[11] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_decimate_table8[12] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_decimate_table8[13] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_decimate_table8[14] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_decimate_table8[15] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_decimate_table8[16] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_decimate_table8[17] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_decimate_table8[18] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_decimate_table8[19] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_decimate_table8[20] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_decimate_table8[21] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_decimate_table8[22] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_decimate_table8[23] := _b00000001
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table:$array [88] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[40] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[41] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[42] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[43] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[44] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[45] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[46] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[47] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[48] := _b00001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[49] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[50] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[51] := _b00010001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[52] := _b00010100
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[53] := _b00010110
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[54] := _b00011001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[55] := _b00011100
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[56] := _b00100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[57] := _b00100100
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[58] := _b00101000
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[59] := _b00101101
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[60] := _b00110010
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[61] := _b00111000
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[62] := _b00111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[63] := _b01000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[64] := _b01010000
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[65] := _b01011010
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[66] := _b01100101
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[67] := _b01110001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[68] := _b01111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[69] := _b10010000
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[70] := _b10100010
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[71] := _b10110110
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[72] := _b11001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[73] := _b11100010
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[74] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[75] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[76] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[77] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[78] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[79] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[80] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[81] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[82] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[83] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[84] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[85] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[86] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[87] := _b11111111
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table:$array [88] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[40] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[41] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[42] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[43] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[44] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[45] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[46] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[47] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[48] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[49] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[50] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[51] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[52] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[53] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[54] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[55] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[56] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[57] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[58] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[59] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[60] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[61] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[62] := _b00001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[63] := _b00001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[64] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[65] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[66] := _b00001110
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[67] := _b00001110
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[68] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[69] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[70] := _b00010000
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[71] := _b00010000
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[72] := _b00010001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[73] := _b00010001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[74] := _b00010010
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[75] := _b00010010
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[76] := _b00010010
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[77] := _b00010010
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[78] := _b00010010
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[79] := _b00010010
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[80] := _b00010010
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[81] := _b00010010
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[82] := _b00010010
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[83] := _b00010010
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[84] := _b00010010
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[85] := _b00010010
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[86] := _b00010010
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[87] := _b00010010
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table:$array [88] $of $array [4] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[0][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[1][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[2][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[3][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[4][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[5][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[6][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[7][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[8][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[9][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[10][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[11][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[12][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[13][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[14][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[15][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[16][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[17][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[18][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[19][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[20][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[21][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[22][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[23][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[24][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[25][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[26][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[27][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[28][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[29][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[30][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[31][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[32][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[33][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[34][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[35][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[36][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[37][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[38][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[39][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[40][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[41][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[41][3] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[42][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[42][3] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[43][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[43][3] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[44][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[44][3] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[45][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[45][2] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[45][3] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[46][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[46][2] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[46][3] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[47][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[47][1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[47][2] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[47][3] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[48][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[48][1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[48][2] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[48][3] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[49][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[49][1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[49][2] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[49][3] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[50][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[50][1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[50][2] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[50][3] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[51][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[51][1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[51][2] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[51][3] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[52][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[52][1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[52][2] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[52][3] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[53][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[53][1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[53][2] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[53][3] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[54][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[54][1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[54][2] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[54][3] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[55][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[55][1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[55][2] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[55][3] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[56][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[56][1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[56][2] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[56][3] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[57][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[57][1] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[57][2] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[57][3] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[58][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[58][1] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[58][2] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[58][3] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[59][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[59][1] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[59][2] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[59][3] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[60][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[60][1] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[60][2] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[60][3] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[61][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[61][1] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[61][2] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[61][3] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[62][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[62][1] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[62][2] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[62][3] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[63][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[63][1] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[63][2] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[63][3] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[64][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[64][1] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[64][2] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[64][3] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[65][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[65][1] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[65][2] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[65][3] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[66][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[66][1] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[66][2] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[66][3] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[67][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[67][1] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[67][2] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[67][3] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[68][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[68][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[68][2] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[68][3] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[69][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[69][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[69][2] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[69][3] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[70][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[70][1] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[70][2] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[70][3] := _b00001110
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[71][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[71][1] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[71][2] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[71][3] := _b00010000
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[72][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[72][1] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[72][2] := _b00001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[72][3] := _b00010010
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[73][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[73][1] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[73][2] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[73][3] := _b00010100
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[74][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[74][1] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[74][2] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[74][3] := _b00010111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[75][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[75][1] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[75][2] := _b00010001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[75][3] := _b00011001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[76][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[76][1] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[76][2] := _b00010001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[76][3] := _b00011001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[77][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[77][1] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[77][2] := _b00010001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[77][3] := _b00011001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[78][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[78][1] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[78][2] := _b00010001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[78][3] := _b00011001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[79][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[79][1] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[79][2] := _b00010001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[79][3] := _b00011001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[80][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[80][1] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[80][2] := _b00010001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[80][3] := _b00011001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[81][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[81][1] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[81][2] := _b00010001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[81][3] := _b00011001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[82][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[82][1] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[82][2] := _b00010001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[82][3] := _b00011001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[83][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[83][1] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[83][2] := _b00010001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[83][3] := _b00011001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[84][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[84][1] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[84][2] := _b00010001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[84][3] := _b00011001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[85][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[85][1] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[85][2] := _b00010001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[85][3] := _b00011001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[86][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[86][1] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[86][2] := _b00010001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[86][3] := _b00011001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[87][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[87][1] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[87][2] := _b00010001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[87][3] := _b00011001
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff0_token:$array [6] $of $record < $uint<8> > < $uint<8> > 
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff0_token_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff0_token[0][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff0_token[0][1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff0_token[1][0] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff0_token[1][1] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff0_token[2][0] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff0_token[2][1] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff0_token[3][0] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff0_token[3][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff0_token[4][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff0_token[4][1] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff0_token[5][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff0_token[5][1] := _b00000001
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token:$array [6] $of $array [16] $of $array [4] $of $record < $uint<8> > < $uint<8> > 
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][0][0][0] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][0][0][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][0][1][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][0][1][1] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][1][0][0] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][1][0][1] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][1][1][0] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][1][1][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][1][2][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][1][2][1] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][2][0][0] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][2][0][1] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][2][1][0] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][2][1][1] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][2][2][0] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][2][2][1] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][2][3][0] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][2][3][1] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][3][0][0] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][3][0][1] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][3][1][0] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][3][1][1] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][3][2][0] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][3][2][1] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][3][3][0] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][3][3][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][4][0][0] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][4][0][1] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][4][1][0] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][4][1][1] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][4][2][0] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][4][2][1] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][4][3][0] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][4][3][1] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][5][0][0] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][5][0][1] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][5][1][0] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][5][1][1] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][5][2][0] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][5][2][1] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][5][3][0] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][5][3][1] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][6][0][0] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][6][0][1] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][6][1][0] := _b00001110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][6][1][1] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][6][2][0] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][6][2][1] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][6][3][0] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][6][3][1] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][7][0][0] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][7][0][1] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][7][1][0] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][7][1][1] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][7][2][0] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][7][2][1] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][7][3][0] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][7][3][1] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][8][0][0] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][8][0][1] := _b00001110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][8][1][0] := _b00001110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][8][1][1] := _b00001110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][8][2][0] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][8][2][1] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][8][3][0] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][8][3][1] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][9][0][0] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][9][0][1] := _b00001110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][9][1][0] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][9][1][1] := _b00001110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][9][2][0] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][9][2][1] := _b00001110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][9][3][0] := _b00001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][9][3][1] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][10][0][0] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][10][0][1] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][10][1][0] := _b00001110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][10][1][1] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][10][2][0] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][10][2][1] := _b00001110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][10][3][0] := _b00001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][10][3][1] := _b00001110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][11][0][0] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][11][0][1] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][11][1][0] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][11][1][1] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][11][2][0] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][11][2][1] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][11][3][0] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][11][3][1] := _b00001110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][12][0][0] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][12][0][1] := _b00010000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][12][1][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][12][1][1] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][12][2][0] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][12][2][1] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][12][3][0] := _b00001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][12][3][1] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][13][0][0] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][13][0][1] := _b00010000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][13][1][0] := _b00001110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][13][1][1] := _b00010000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][13][2][0] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][13][2][1] := _b00010000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][13][3][0] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][13][3][1] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][14][0][0] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][14][0][1] := _b00010000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][14][1][0] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][14][1][1] := _b00010000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][14][2][0] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][14][2][1] := _b00010000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][14][3][0] := _b00001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][14][3][1] := _b00010000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][15][0][0] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][15][0][1] := _b00010000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][15][1][0] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][15][1][1] := _b00010000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][15][2][0] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][15][2][1] := _b00010000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][15][3][0] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[0][15][3][1] := _b00010000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][0][0][0] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][0][0][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][0][1][0] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][0][1][1] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][1][0][0] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][1][0][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][1][1][0] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][1][1][1] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][1][2][0] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][1][2][1] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][2][0][0] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][2][0][1] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][2][1][0] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][2][1][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][2][2][0] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][2][2][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][2][3][0] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][2][3][1] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][3][0][0] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][3][0][1] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][3][1][0] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][3][1][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][3][2][0] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][3][2][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][3][3][0] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][3][3][1] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][4][0][0] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][4][0][1] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][4][1][0] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][4][1][1] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][4][2][0] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][4][2][1] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][4][3][0] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][4][3][1] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][5][0][0] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][5][0][1] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][5][1][0] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][5][1][1] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][5][2][0] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][5][2][1] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][5][3][0] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][5][3][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][6][0][0] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][6][0][1] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][6][1][0] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][6][1][1] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][6][2][0] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][6][2][1] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][6][3][0] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][6][3][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][7][0][0] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][7][0][1] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][7][1][0] := _b00001110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][7][1][1] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][7][2][0] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][7][2][1] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][7][3][0] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][7][3][1] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][8][0][0] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][8][0][1] := _b00001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][8][1][0] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][8][1][1] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][8][2][0] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][8][2][1] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][8][3][0] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][8][3][1] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][9][0][0] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][9][0][1] := _b00001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][9][1][0] := _b00001110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][9][1][1] := _b00001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][9][2][0] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][9][2][1] := _b00001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][9][3][0] := _b00001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][9][3][1] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][10][0][0] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][10][0][1] := _b00001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][10][1][0] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][10][1][1] := _b00001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][10][2][0] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][10][2][1] := _b00001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][10][3][0] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][10][3][1] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][11][0][0] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][11][0][1] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][11][1][0] := _b00001110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][11][1][1] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][11][2][0] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][11][2][1] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][11][3][0] := _b00001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][11][3][1] := _b00001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][12][0][0] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][12][0][1] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][12][1][0] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][12][1][1] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][12][2][0] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][12][2][1] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][12][3][0] := _b00001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][12][3][1] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][13][0][0] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][13][0][1] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][13][1][0] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][13][1][1] := _b00001110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][13][2][0] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][13][2][1] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][13][3][0] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][13][3][1] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][14][0][0] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][14][0][1] := _b00001110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][14][1][0] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][14][1][1] := _b00001110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][14][2][0] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][14][2][1] := _b00001110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][14][3][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][14][3][1] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][15][0][0] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][15][0][1] := _b00001110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][15][1][0] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][15][1][1] := _b00001110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][15][2][0] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][15][2][1] := _b00001110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][15][3][0] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[1][15][3][1] := _b00001110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][0][0][0] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][0][0][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][0][1][0] := _b00001110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][0][1][1] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][1][0][0] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][1][0][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][1][1][0] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][1][1][1] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][1][2][0] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][1][2][1] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][2][0][0] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][2][0][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][2][1][0] := _b00001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][2][1][1] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][2][2][0] := _b00001110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][2][2][1] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][2][3][0] := _b00001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][2][3][1] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][3][0][0] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][3][0][1] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][3][1][0] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][3][1][1] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][3][2][0] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][3][2][1] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][3][3][0] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][3][3][1] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][4][0][0] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][4][0][1] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][4][1][0] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][4][1][1] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][4][2][0] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][4][2][1] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][4][3][0] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][4][3][1] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][5][0][0] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][5][0][1] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][5][1][0] := _b00001110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][5][1][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][5][2][0] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][5][2][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][5][3][0] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][5][3][1] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][6][0][0] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][6][0][1] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][6][1][0] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][6][1][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][6][2][0] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][6][2][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][6][3][0] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][6][3][1] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][7][0][0] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][7][0][1] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][7][1][0] := _b00001110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][7][1][1] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][7][2][0] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][7][2][1] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][7][3][0] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][7][3][1] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][8][0][0] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][8][0][1] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][8][1][0] := _b00001110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][8][1][1] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][8][2][0] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][8][2][1] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][8][3][0] := _b00001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][8][3][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][9][0][0] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][9][0][1] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][9][1][0] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][9][1][1] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][9][2][0] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][9][2][1] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][9][3][0] := _b00001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][9][3][1] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][10][0][0] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][10][0][1] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][10][1][0] := _b00001110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][10][1][1] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][10][2][0] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][10][2][1] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][10][3][0] := _b00001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][10][3][1] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][11][0][0] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][11][0][1] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][11][1][0] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][11][1][1] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][11][2][0] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][11][2][1] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][11][3][0] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][11][3][1] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][12][0][0] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][12][0][1] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][12][1][0] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][12][1][1] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][12][2][0] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][12][2][1] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][12][3][0] := _b00001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][12][3][1] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][13][0][0] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][13][0][1] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][13][1][0] := _b00001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][13][1][1] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][13][2][0] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][13][2][1] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][13][3][0] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][13][3][1] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][14][0][0] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][14][0][1] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][14][1][0] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][14][1][1] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][14][2][0] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][14][2][1] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][14][3][0] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][14][3][1] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][15][0][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][15][0][1] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][15][1][0] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][15][1][1] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][15][2][0] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][15][2][1] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][15][3][0] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[2][15][3][1] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][0][0][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][0][1][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][0][1][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][1][0][0] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][1][0][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][1][1][0] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][1][1][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][1][2][0] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][1][2][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][2][0][0] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][2][0][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][2][1][0] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][2][1][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][2][2][0] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][2][2][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][2][3][0] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][2][3][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][3][0][0] := _b00001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][3][0][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][3][1][0] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][3][1][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][3][2][0] := _b00001110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][3][2][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][3][3][0] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][3][3][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][4][0][0] := _b00010000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][4][0][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][4][1][0] := _b00010001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][4][1][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][4][2][0] := _b00010010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][4][2][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][4][3][0] := _b00010011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][4][3][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][5][0][0] := _b00010100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][5][0][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][5][1][0] := _b00010101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][5][1][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][5][2][0] := _b00010110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][5][2][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][5][3][0] := _b00010111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][5][3][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][6][0][0] := _b00011000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][6][0][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][6][1][0] := _b00011001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][6][1][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][6][2][0] := _b00011010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][6][2][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][6][3][0] := _b00011011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][6][3][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][7][0][0] := _b00011100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][7][0][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][7][1][0] := _b00011101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][7][1][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][7][2][0] := _b00011110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][7][2][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][7][3][0] := _b00011111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][7][3][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][8][0][0] := _b00100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][8][0][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][8][1][0] := _b00100001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][8][1][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][8][2][0] := _b00100010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][8][2][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][8][3][0] := _b00100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][8][3][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][9][0][0] := _b00100100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][9][0][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][9][1][0] := _b00100101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][9][1][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][9][2][0] := _b00100110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][9][2][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][9][3][0] := _b00100111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][9][3][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][10][0][0] := _b00101000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][10][0][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][10][1][0] := _b00101001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][10][1][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][10][2][0] := _b00101010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][10][2][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][10][3][0] := _b00101011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][10][3][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][11][0][0] := _b00101100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][11][0][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][11][1][0] := _b00101101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][11][1][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][11][2][0] := _b00101110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][11][2][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][11][3][0] := _b00101111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][11][3][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][12][0][0] := _b00110000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][12][0][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][12][1][0] := _b00110001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][12][1][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][12][2][0] := _b00110010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][12][2][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][12][3][0] := _b00110011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][12][3][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][13][0][0] := _b00110100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][13][0][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][13][1][0] := _b00110101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][13][1][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][13][2][0] := _b00110110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][13][2][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][13][3][0] := _b00110111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][13][3][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][14][0][0] := _b00111000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][14][0][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][14][1][0] := _b00111001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][14][1][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][14][2][0] := _b00111010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][14][2][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][14][3][0] := _b00111011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][14][3][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][15][0][0] := _b00111100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][15][0][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][15][1][0] := _b00111101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][15][1][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][15][2][0] := _b00111110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][15][2][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][15][3][0] := _b00111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[3][15][3][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[4][0][0][0] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[4][0][0][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[4][0][1][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[4][0][1][1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[4][1][0][0] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[4][1][0][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[4][1][1][0] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[4][1][1][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[4][1][2][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[4][1][2][1] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[4][2][0][0] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[4][2][0][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[4][2][1][0] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[4][2][1][1] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[4][2][2][0] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[4][2][2][1] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[4][2][3][0] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[4][2][3][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[4][3][0][0] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[4][3][0][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[4][3][1][0] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[4][3][1][1] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[4][3][2][0] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[4][3][2][1] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[4][3][3][1] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[5][0][0][0] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[5][0][0][1] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[5][0][1][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[5][0][1][1] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[5][1][0][0] := _b00001110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[5][1][0][1] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[5][1][1][0] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[5][1][1][1] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[5][1][2][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[5][1][2][1] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[5][2][0][0] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[5][2][0][1] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[5][2][1][0] := _b00001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[5][2][1][1] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[5][2][2][0] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[5][2][2][1] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[5][2][3][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[5][2][3][1] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[5][3][0][0] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[5][3][0][1] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[5][3][1][0] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[5][3][1][1] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[5][3][2][0] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[5][3][2][1] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[5][3][3][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[5][3][3][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[5][4][0][0] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[5][4][0][1] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[5][4][1][0] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[5][4][1][1] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[5][4][2][0] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[5][4][2][1] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[5][4][3][0] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[5][4][3][1] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[5][5][0][0] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[5][5][0][1] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[5][5][1][0] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[5][5][1][1] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[5][5][2][0] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[5][5][2][1] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[5][5][3][0] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[5][5][3][1] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[5][6][0][0] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[5][6][0][1] := _b00001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[5][6][1][0] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[5][6][1][1] := _b00001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[5][6][2][0] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[5][6][2][1] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[5][6][3][0] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[5][6][3][1] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[5][7][0][0] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[5][7][0][1] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[5][7][1][0] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[5][7][1][1] := _b00001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[5][7][2][0] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[5][7][2][1] := _b00001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[5][7][3][0] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token[5][7][3][1] := _b00001011
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros:$array [15] $of $array [16] $of $record < $uint<8> > < $uint<8> > 
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[0][0][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[0][0][1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[0][1][0] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[0][1][1] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[0][2][0] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[0][2][1] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[0][3][0] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[0][3][1] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[0][4][0] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[0][4][1] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[0][5][0] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[0][5][1] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[0][6][0] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[0][6][1] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[0][7][0] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[0][7][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[0][8][0] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[0][8][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[0][9][0] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[0][9][1] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[0][10][0] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[0][10][1] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[0][11][0] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[0][11][1] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[0][12][0] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[0][12][1] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[0][13][0] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[0][13][1] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[0][14][0] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[0][14][1] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[0][15][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[0][15][1] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[1][0][0] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[1][0][1] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[1][1][0] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[1][1][1] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[1][2][0] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[1][2][1] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[1][3][0] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[1][3][1] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[1][4][0] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[1][4][1] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[1][5][0] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[1][5][1] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[1][6][0] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[1][6][1] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[1][7][0] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[1][7][1] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[1][8][0] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[1][8][1] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[1][9][0] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[1][9][1] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[1][10][0] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[1][10][1] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[1][11][0] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[1][11][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[1][12][0] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[1][12][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[1][13][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[1][13][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[1][14][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[2][0][0] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[2][0][1] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[2][1][0] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[2][1][1] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[2][2][0] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[2][2][1] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[2][3][0] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[2][3][1] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[2][4][0] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[2][4][1] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[2][5][0] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[2][5][1] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[2][6][0] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[2][6][1] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[2][7][0] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[2][7][1] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[2][8][0] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[2][8][1] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[2][9][0] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[2][9][1] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[2][10][0] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[2][10][1] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[2][11][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[2][11][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[2][12][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[2][12][1] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[2][13][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[3][0][0] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[3][0][1] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[3][1][0] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[3][1][1] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[3][2][0] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[3][2][1] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[3][3][0] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[3][3][1] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[3][4][0] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[3][4][1] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[3][5][0] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[3][5][1] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[3][6][0] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[3][6][1] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[3][7][0] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[3][7][1] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[3][8][0] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[3][8][1] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[3][9][0] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[3][9][1] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[3][10][0] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[3][10][1] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[3][11][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[3][11][1] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[3][12][1] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[4][0][0] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[4][0][1] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[4][1][0] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[4][1][1] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[4][2][0] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[4][2][1] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[4][3][0] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[4][3][1] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[4][4][0] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[4][4][1] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[4][5][0] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[4][5][1] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[4][6][0] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[4][6][1] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[4][7][0] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[4][7][1] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[4][8][0] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[4][8][1] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[4][9][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[4][9][1] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[4][10][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[4][10][1] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[4][11][1] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[5][0][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[5][0][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[5][1][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[5][1][1] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[5][2][0] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[5][2][1] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[5][3][0] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[5][3][1] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[5][4][0] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[5][4][1] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[5][5][0] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[5][5][1] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[5][6][0] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[5][6][1] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[5][7][0] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[5][7][1] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[5][8][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[5][8][1] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[5][9][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[5][9][1] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[5][10][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[6][0][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[6][0][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[6][1][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[6][1][1] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[6][2][0] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[6][2][1] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[6][3][0] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[6][3][1] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[6][4][0] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[6][4][1] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[6][5][0] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[6][5][1] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[6][6][0] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[6][6][1] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[6][7][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[6][7][1] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[6][8][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[6][8][1] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[6][9][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[7][0][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[7][0][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[7][1][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[7][1][1] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[7][2][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[7][2][1] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[7][3][0] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[7][3][1] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[7][4][0] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[7][4][1] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[7][5][0] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[7][5][1] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[7][6][0] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[7][6][1] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[7][7][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[7][7][1] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[7][8][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[8][0][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[8][0][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[8][1][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[8][2][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[8][2][1] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[8][3][0] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[8][3][1] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[8][4][0] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[8][4][1] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[8][5][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[8][5][1] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[8][6][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[8][6][1] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[8][7][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[8][7][1] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[9][0][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[9][0][1] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[9][1][1] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[9][2][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[9][2][1] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[9][3][0] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[9][3][1] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[9][4][0] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[9][4][1] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[9][5][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[9][5][1] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[9][6][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[9][6][1] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[10][0][1] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[10][1][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[10][1][1] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[10][2][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[10][2][1] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[10][3][0] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[10][3][1] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[10][4][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[10][4][1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[10][5][0] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[10][5][1] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[11][0][1] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[11][1][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[11][1][1] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[11][2][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[11][2][1] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[11][3][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[11][3][1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[11][4][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[11][4][1] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[12][0][1] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[12][1][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[12][1][1] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[12][2][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[12][2][1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[12][3][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[12][3][1] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[13][0][1] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[13][1][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[13][1][1] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[13][2][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[13][2][1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[14][0][1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[14][1][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros[14][1][1] := _b00000001
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x2_dc:$array [3] $of $array [4] $of $record < $uint<8> > < $uint<8> > 
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x2_dc_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x2_dc[0][0][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x2_dc[0][0][1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x2_dc[0][1][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x2_dc[0][1][1] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x2_dc[0][2][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x2_dc[0][2][1] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x2_dc[0][3][1] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x2_dc[1][0][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x2_dc[1][0][1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x2_dc[1][1][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x2_dc[1][1][1] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x2_dc[1][2][1] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x2_dc[2][0][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x2_dc[2][0][1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x2_dc[2][1][1] := _b00000001
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x4_dc:$array [7] $of $array [8] $of $record < $uint<8> > < $uint<8> > 
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x4_dc_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x4_dc[0][0][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x4_dc[0][0][1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x4_dc[0][1][0] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x4_dc[0][1][1] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x4_dc[0][2][0] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x4_dc[0][2][1] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x4_dc[0][3][0] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x4_dc[0][3][1] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x4_dc[0][4][0] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x4_dc[0][4][1] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x4_dc[0][5][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x4_dc[0][5][1] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x4_dc[0][6][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x4_dc[0][6][1] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x4_dc[0][7][1] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x4_dc[1][0][1] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x4_dc[1][1][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x4_dc[1][1][1] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x4_dc[1][2][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x4_dc[1][2][1] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x4_dc[1][3][0] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x4_dc[1][3][1] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x4_dc[1][4][0] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x4_dc[1][4][1] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x4_dc[1][5][0] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x4_dc[1][5][1] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x4_dc[1][6][0] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x4_dc[1][6][1] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x4_dc[2][0][1] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x4_dc[2][1][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x4_dc[2][1][1] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x4_dc[2][2][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x4_dc[2][2][1] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x4_dc[2][3][0] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x4_dc[2][3][1] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x4_dc[2][4][0] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x4_dc[2][4][1] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x4_dc[2][5][0] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x4_dc[2][5][1] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x4_dc[3][0][0] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x4_dc[3][0][1] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x4_dc[3][1][1] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x4_dc[3][2][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x4_dc[3][2][1] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x4_dc[3][3][0] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x4_dc[3][3][1] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x4_dc[3][4][0] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x4_dc[3][4][1] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x4_dc[4][0][1] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x4_dc[4][1][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x4_dc[4][1][1] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x4_dc[4][2][0] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x4_dc[4][2][1] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x4_dc[4][3][0] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x4_dc[4][3][1] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x4_dc[5][0][1] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x4_dc[5][1][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x4_dc[5][1][1] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x4_dc[5][2][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x4_dc[5][2][1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x4_dc[6][0][1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x4_dc[6][1][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x4_dc[6][1][1] := _b00000001
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x264_level_token:$array [7] $of $array [128] $of $record < $uint<16> > < $uint<8> > < $uint<8> > 
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x264_run_before:$array [65536] $of $uint<32>
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8:$array [2] $of $array [64] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[0][1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[0][2] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[0][3] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[0][4] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[0][5] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[0][6] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[0][7] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[0][8] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[0][9] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[0][10] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[0][11] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[0][12] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[0][13] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[0][14] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[0][15] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[0][16] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[0][17] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[0][18] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[0][19] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[0][20] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[0][21] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[0][22] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[0][23] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[0][24] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[0][25] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[0][26] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[0][27] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[0][28] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[0][29] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[0][30] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[0][31] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[0][32] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[0][33] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[0][34] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[0][35] := _b00001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[0][36] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[0][37] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[0][38] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[0][39] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[0][40] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[0][41] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[0][42] := _b00001110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[0][43] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[0][44] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[0][45] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[0][46] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[0][47] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[0][48] := _b00001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[0][49] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[0][50] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[0][51] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[0][52] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[0][53] := _b00001110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[0][54] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[0][55] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[0][56] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[0][57] := _b00001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[0][58] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[0][59] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[0][60] := _b00001110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[0][61] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[0][62] := _b00001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[1][1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[1][2] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[1][3] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[1][4] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[1][5] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[1][6] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[1][7] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[1][8] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[1][9] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[1][10] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[1][11] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[1][12] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[1][13] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[1][14] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[1][15] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[1][16] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[1][17] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[1][18] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[1][19] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[1][20] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[1][21] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[1][22] := _b00001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[1][23] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[1][24] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[1][25] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[1][26] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[1][27] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[1][28] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[1][29] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[1][30] := _b00001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[1][31] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[1][32] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[1][33] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[1][34] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[1][35] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[1][36] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[1][37] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[1][38] := _b00001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[1][39] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[1][40] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[1][41] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[1][42] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[1][43] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[1][44] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[1][45] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[1][46] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[1][47] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[1][48] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[1][49] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[1][50] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[1][51] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[1][52] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[1][53] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[1][54] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[1][55] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[1][56] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[1][57] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[1][58] := _b00001110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[1][59] := _b00001110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[1][60] := _b00001110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[1][61] := _b00001110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8[1][62] := _b00001110
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset_8x8:$array [63] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset_8x8_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset_8x8[1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset_8x8[2] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset_8x8[3] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset_8x8[4] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset_8x8[5] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset_8x8[6] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset_8x8[7] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset_8x8[8] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset_8x8[9] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset_8x8[10] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset_8x8[11] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset_8x8[12] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset_8x8[13] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset_8x8[14] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset_8x8[15] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset_8x8[16] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset_8x8[17] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset_8x8[18] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset_8x8[19] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset_8x8[20] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset_8x8[21] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset_8x8[22] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset_8x8[23] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset_8x8[24] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset_8x8[25] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset_8x8[26] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset_8x8[27] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset_8x8[28] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset_8x8[29] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset_8x8[30] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset_8x8[31] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset_8x8[32] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset_8x8[33] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset_8x8[34] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset_8x8[35] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset_8x8[36] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset_8x8[37] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset_8x8[38] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset_8x8[39] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset_8x8[40] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset_8x8[41] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset_8x8[42] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset_8x8[43] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset_8x8[44] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset_8x8[45] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset_8x8[46] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset_8x8[47] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset_8x8[48] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset_8x8[49] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset_8x8[50] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset_8x8[51] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset_8x8[52] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset_8x8[53] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset_8x8[54] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset_8x8[55] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset_8x8[56] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset_8x8[57] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset_8x8[58] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset_8x8[59] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset_8x8[60] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset_8x8[61] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset_8x8[62] := _b00001000
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_flag_offset_chroma_422_dc:$array [7] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_flag_offset_chroma_422_dc_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_flag_offset_chroma_422_dc[2] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_flag_offset_chroma_422_dc[3] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_flag_offset_chroma_422_dc[4] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_flag_offset_chroma_422_dc[5] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_flag_offset_chroma_422_dc[6] := _b00000010
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset:$array [2] $of $array [16] $of $uint<16>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset[0][0] := _b0000000001101001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset[0][1] := _b0000000001111000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset[0][2] := _b0000000010000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset[0][3] := _b0000000010010101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset[0][4] := _b0000000010011000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset[0][5] := _b0000000110010010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset[0][6] := _b0000000111100100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset[0][7] := _b0000000111110011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset[0][8] := _b0000001000000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset[0][9] := _b0000001010010100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset[0][10] := _b0000001000010000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset[0][11] := _b0000001000011111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset[0][12] := _b0000001000101101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset[0][13] := _b0000001011001110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset[1][0] := _b0000000100010101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset[1][1] := _b0000000100100100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset[1][2] := _b0000000100110010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset[1][3] := _b0000000101000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset[1][4] := _b0000000101000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset[1][5] := _b0000000110110100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset[1][6] := _b0000001100001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset[1][7] := _b0000001100010111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset[1][8] := _b0000001100100101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset[1][9] := _b0000001010100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset[1][10] := _b0000001100110100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset[1][11] := _b0000001101000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset[1][12] := _b0000001101010001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset[1][13] := _b0000001011011101
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset:$array [2] $of $array [16] $of $uint<16>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset[0][0] := _b0000000010100110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset[0][1] := _b0000000010110101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset[0][2] := _b0000000011000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset[0][3] := _b0000000011010010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset[0][4] := _b0000000011010101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset[0][5] := _b0000000110100001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset[0][6] := _b0000001000111100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset[0][7] := _b0000001001001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset[0][8] := _b0000001001011001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset[0][9] := _b0000001010110010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset[0][10] := _b0000001001101000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset[0][11] := _b0000001001110111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset[0][12] := _b0000001010000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset[0][13] := _b0000001011101100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset[1][0] := _b0000000101010010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset[1][1] := _b0000000101100001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset[1][2] := _b0000000101101111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset[1][3] := _b0000000101111110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset[1][4] := _b0000000110000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset[1][5] := _b0000000111000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset[1][6] := _b0000001101100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset[1][7] := _b0000001101101111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset[1][8] := _b0000001101111101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset[1][9] := _b0000001010111011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset[1][10] := _b0000001110001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset[1][11] := _b0000001110011011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset[1][12] := _b0000001110101001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset[1][13] := _b0000001011110101
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_abs_level_m1_offset:$array [16] $of $uint<16>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_abs_level_m1_offset_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_abs_level_m1_offset[0] := _b0000000011100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_abs_level_m1_offset[1] := _b0000000011101101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_abs_level_m1_offset[2] := _b0000000011110111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_abs_level_m1_offset[3] := _b0000000100000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_abs_level_m1_offset[4] := _b0000000100001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_abs_level_m1_offset[5] := _b0000000110101010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_abs_level_m1_offset[6] := _b0000001110111000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_abs_level_m1_offset[7] := _b0000001111000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_abs_level_m1_offset[8] := _b0000001111001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_abs_level_m1_offset[9] := _b0000001011000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_abs_level_m1_offset[10] := _b0000001111010110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_abs_level_m1_offset[11] := _b0000001111100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_abs_level_m1_offset[12] := _b0000001111101010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_abs_level_m1_offset[13] := _b0000001011111110
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x264_count_cat_m1:$array [14] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_x264_count_cat_m1_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_count_cat_m1[0] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_count_cat_m1[1] := _b00001110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_count_cat_m1[2] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_count_cat_m1[3] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_count_cat_m1[4] := _b00001110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_count_cat_m1[5] := _b00111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_count_cat_m1[6] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_count_cat_m1[7] := _b00001110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_count_cat_m1[8] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_count_cat_m1[9] := _b00111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_count_cat_m1[10] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_count_cat_m1[11] := _b00001110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_count_cat_m1[12] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_count_cat_m1[13] := _b00111111
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan4:$array [2] $of $array [16] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan4_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan4[0][1] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan4[0][2] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan4[0][3] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan4[0][4] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan4[0][5] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan4[0][6] := _b00001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan4[0][7] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan4[0][8] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan4[0][9] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan4[0][10] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan4[0][11] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan4[0][12] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan4[0][13] := _b00001110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan4[0][14] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan4[0][15] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan4[1][1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan4[1][2] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan4[1][3] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan4[1][4] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan4[1][5] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan4[1][6] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan4[1][7] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan4[1][8] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan4[1][9] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan4[1][10] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan4[1][11] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan4[1][12] := _b00001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan4[1][13] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan4[1][14] := _b00001110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan4[1][15] := _b00001111
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan2x4:$array [8] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan2x4_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan2x4[1] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan2x4[2] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan2x4[3] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan2x4[4] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan2x4[5] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan2x4[6] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan2x4[7] := _b00000111
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan2x2:$array [4] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan2x2_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan2x2[1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan2x2[2] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan2x2[3] := _b00000011
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x264_quant_4x4_trellisx_xctx_ac:$array [14] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_x264_quant_4x4_trellisx_xctx_ac_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_quant_4x4_trellisx_xctx_ac[1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_quant_4x4_trellisx_xctx_ac[4] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_quant_4x4_trellisx_xctx_ac[7] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_quant_4x4_trellisx_xctx_ac[11] := _b00000001
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8:$array [2] $of $array [64] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[0][1] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[0][2] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[0][3] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[0][4] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[0][5] := _b00010000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[0][6] := _b00011000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[0][7] := _b00010001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[0][8] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[0][9] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[0][10] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[0][11] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[0][12] := _b00010010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[0][13] := _b00011001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[0][14] := _b00100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[0][15] := _b00101000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[0][16] := _b00100001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[0][17] := _b00011010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[0][18] := _b00010011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[0][19] := _b00001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[0][20] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[0][21] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[0][22] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[0][23] := _b00010100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[0][24] := _b00011011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[0][25] := _b00100010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[0][26] := _b00101001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[0][27] := _b00110000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[0][28] := _b00111000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[0][29] := _b00110001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[0][30] := _b00101010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[0][31] := _b00100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[0][32] := _b00011100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[0][33] := _b00010101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[0][34] := _b00001110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[0][35] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[0][36] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[0][37] := _b00010110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[0][38] := _b00011101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[0][39] := _b00100100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[0][40] := _b00101011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[0][41] := _b00110010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[0][42] := _b00111001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[0][43] := _b00111010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[0][44] := _b00110011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[0][45] := _b00101100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[0][46] := _b00100101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[0][47] := _b00011110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[0][48] := _b00010111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[0][49] := _b00011111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[0][50] := _b00100110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[0][51] := _b00101101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[0][52] := _b00110100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[0][53] := _b00111011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[0][54] := _b00111100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[0][55] := _b00110101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[0][56] := _b00101110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[0][57] := _b00100111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[0][58] := _b00101111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[0][59] := _b00110110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[0][60] := _b00111101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[0][61] := _b00111110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[0][62] := _b00110111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[0][63] := _b00111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[1][1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[1][2] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[1][3] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[1][4] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[1][5] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[1][6] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[1][7] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[1][8] := _b00010000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[1][9] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[1][10] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[1][11] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[1][12] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[1][13] := _b00001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[1][14] := _b00010001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[1][15] := _b00011000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[1][16] := _b00010010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[1][17] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[1][18] := _b00001110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[1][19] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[1][20] := _b00010011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[1][21] := _b00011001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[1][22] := _b00100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[1][23] := _b00011010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[1][24] := _b00010100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[1][25] := _b00010101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[1][26] := _b00010110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[1][27] := _b00010111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[1][28] := _b00011011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[1][29] := _b00100001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[1][30] := _b00101000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[1][31] := _b00100010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[1][32] := _b00011100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[1][33] := _b00011101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[1][34] := _b00011110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[1][35] := _b00011111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[1][36] := _b00100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[1][37] := _b00101001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[1][38] := _b00110000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[1][39] := _b00101010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[1][40] := _b00100100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[1][41] := _b00100101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[1][42] := _b00100110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[1][43] := _b00100111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[1][44] := _b00101011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[1][45] := _b00110001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[1][46] := _b00110010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[1][47] := _b00101100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[1][48] := _b00101101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[1][49] := _b00101110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[1][50] := _b00101111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[1][51] := _b00110011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[1][52] := _b00111000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[1][53] := _b00111001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[1][54] := _b00110100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[1][55] := _b00110101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[1][56] := _b00110110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[1][57] := _b00110111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[1][58] := _b00111010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[1][59] := _b00111011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[1][60] := _b00111100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[1][61] := _b00111101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[1][62] := _b00111110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8[1][63] := _b00111111
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab:$array [82] $of $uint<16>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[0] := _b0000000000000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[1] := _b0000000000000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[2] := _b0000000000000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[3] := _b0000000000000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[4] := _b0000000000000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[5] := _b0000000000000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[6] := _b0000000000000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[7] := _b0000000000000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[8] := _b0000000000000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[9] := _b0000000000000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[10] := _b0000000000000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[11] := _b0000000000000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[12] := _b0000000000000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[13] := _b0000000000000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[14] := _b0000000000000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[15] := _b0000000000000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[16] := _b0000000000000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[17] := _b0000000000000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[18] := _b0000000000000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[19] := _b0000000000000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[20] := _b0000000000000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[21] := _b0000000000000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[22] := _b0000000000000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[23] := _b0000000000000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[24] := _b0000000000000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[25] := _b0000000000000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[26] := _b0000000000000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[27] := _b0000000000000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[28] := _b0000000000000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[29] := _b0000000000000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[30] := _b0000000000001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[31] := _b0000000000001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[32] := _b0000000000001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[33] := _b0000000000001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[34] := _b0000000000001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[35] := _b0000000000001110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[36] := _b0000000000010000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[37] := _b0000000000010010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[38] := _b0000000000010100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[39] := _b0000000000010111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[40] := _b0000000000011001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[41] := _b0000000000011101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[42] := _b0000000000100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[43] := _b0000000000100100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[44] := _b0000000000101000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[45] := _b0000000000101101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[46] := _b0000000000110011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[47] := _b0000000000111001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[48] := _b0000000001000000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[49] := _b0000000001001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[50] := _b0000000001010001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[51] := _b0000000001011011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[52] := _b0000000001100110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[53] := _b0000000001110010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[54] := _b0000000010000000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[55] := _b0000000010010000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[56] := _b0000000010100001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[57] := _b0000000010110101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[58] := _b0000000011001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[59] := _b0000000011100100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[60] := _b0000000100000000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[61] := _b0000000100011111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[62] := _b0000000101000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[63] := _b0000000101101010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[64] := _b0000000110010110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[65] := _b0000000111001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[66] := _b0000001000000000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[67] := _b0000001000111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[68] := _b0000001010000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[69] := _b0000001011010100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[70] := _b0000001100101101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[71] := _b0000001110010000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[72] := _b0000010000000000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[73] := _b0000010001111101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[74] := _b0000010100001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[75] := _b0000010110101000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[76] := _b0000011001011001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[77] := _b0000011100100001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[78] := _b0000100000000000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[79] := _b0000100011111011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[80] := _b0000100000000000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab[81] := _b0000100011111011
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab:$array [82] $of $uint<32>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[0] := _b00000000000000000000000000001110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[1] := _b00000000000000000000000000010010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[2] := _b00000000000000000000000000010110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[3] := _b00000000000000000000000000011100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[4] := _b00000000000000000000000000100100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[5] := _b00000000000000000000000000101101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[6] := _b00000000000000000000000000111001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[7] := _b00000000000000000000000001001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[8] := _b00000000000000000000000001011011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[9] := _b00000000000000000000000001110011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[10] := _b00000000000000000000000010010001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[11] := _b00000000000000000000000010110110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[12] := _b00000000000000000000000011100110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[13] := _b00000000000000000000000100100010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[14] := _b00000000000000000000000101101101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[15] := _b00000000000000000000000111001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[16] := _b00000000000000000000001001000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[17] := _b00000000000000000000001011011011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[18] := _b00000000000000000000001110011001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[19] := _b00000000000000000000010010001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[20] := _b00000000000000000000010110110110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[21] := _b00000000000000000000011100110011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[22] := _b00000000000000000000100100010010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[23] := _b00000000000000000000101101101101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[24] := _b00000000000000000000111001100110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[25] := _b00000000000000000001001000100100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[26] := _b00000000000000000001011011011011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[27] := _b00000000000000000001110011001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[28] := _b00000000000000000010010001001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[29] := _b00000000000000000010110110110111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[30] := _b00000000000000000011100110011001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[31] := _b00000000000000000100100010010010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[32] := _b00000000000000000101101101101111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[33] := _b00000000000000000111001100110011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[34] := _b00000000000000001001000100100100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[35] := _b00000000000000001011011011011110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[36] := _b00000000000000001110011001100110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[37] := _b00000000000000010010001001001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[38] := _b00000000000000010110110110111100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[39] := _b00000000000000011100110011001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[40] := _b00000000000000100100010010010010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[41] := _b00000000000000101101101101111001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[42] := _b00000000000000111001100110011001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[43] := _b00000000000001001000100100100100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[44] := _b00000000000001011011011011110010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[45] := _b00000000000001110011001100110011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[46] := _b00000000000010010001001001001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[47] := _b00000000000010110110110111100101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[48] := _b00000000000011100110011001100110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[49] := _b00000000000100100010010010010010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[50] := _b00000000000101101101101111001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[51] := _b00000000000111001100110011001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[52] := _b00000000001001000100100100100101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[53] := _b00000000001011011011011110010111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[54] := _b00000000001110011001100110011001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[55] := _b00000000010010001001001001001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[56] := _b00000000010110110110111100101110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[57] := _b00000000011100110011001100110011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[58] := _b00000000100100010010010010010101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[59] := _b00000000101101101101111001011100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[60] := _b00000000111001100110011001100110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[61] := _b00000001001000100100100100101010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[62] := _b00000001011011011011110010111001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[63] := _b00000001110011001100110011001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[64] := _b00000010010001001001001001010101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[65] := _b00000010110110110111100101110010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[66] := _b00000011100110011001100110011001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[67] := _b00000100100010010010010010101011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[68] := _b00000101101101101111001011100101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[69] := _b00000111001100110011001100110011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[70] := _b00000111111111111111111111111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[71] := _b00000111111111111111111111111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[72] := _b00000111111111111111111111111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[73] := _b00000111111111111111111111111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[74] := _b00000111111111111111111111111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[75] := _b00000111111111111111111111111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[76] := _b00000111111111111111111111111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[77] := _b00000111111111111111111111111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[78] := _b00000111111111111111111111111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[79] := _b00000111111111111111111111111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[80] := _b00000111111111111111111111111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab[81] := _b00000111111111111111111111111111
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr8:$array [75] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr8_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr8[0] := _b01101000
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr8[1] := _b00101101
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr8[2] := _b00111110
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr8[3] := _b01101101
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr8[4] := _b01100010
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr8[5] := _b00101110
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr8[6] := _b01100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr8[7] := _b01100001
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr8[8] := _b01100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr8[9] := _b01101000
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr8[10] := _b01100101
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr8[11] := _b00101110
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr8[12] := _b01110000
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr8[13] := _b01110011
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr8[14] := _b01101011
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr8[15] := _b01101001
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr8[16] := _b01110000
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr8[17] := _b01011111
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr8[18] := _b01101101
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr8[19] := _b01110110
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr8[20] := _b01011011
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr8[21] := _b00110001
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr8[22] := _b01011101
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr8[23] := _b00100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr8[24] := _b00111100
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr8[25] := _b00111101
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr8[26] := _b00100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr8[27] := _b01101000
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr8[28] := _b00101101
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr8[29] := _b00111110
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr8[30] := _b01101101
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr8[31] := _b01100010
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr8[32] := _b00101110
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr8[33] := _b01101101
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr8[34] := _b01110110
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr8[35] := _b01011111
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr8[36] := _b01101101
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr8[37] := _b01100001
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr8[38] := _b01111000
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr8[39] := _b01011111
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr8[40] := _b01110011
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr8[41] := _b01110000
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr8[42] := _b01100101
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr8[43] := _b01101100
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr8[44] := _b01011011
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr8[45] := _b00110001
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr8[46] := _b01011101
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr8[47] := _b00100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr8[48] := _b01111100
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr8[49] := _b01111100
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr8[50] := _b00100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr8[51] := _b01101000
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr8[52] := _b00101101
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr8[53] := _b00111110
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr8[54] := _b01101001
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr8[55] := _b01011111
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr8[56] := _b01110100
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr8[57] := _b01101000
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr8[58] := _b01110010
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr8[59] := _b01100101
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr8[60] := _b01100001
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr8[61] := _b01100100
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr8[62] := _b01011111
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr8[63] := _b01100110
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr8[64] := _b01110010
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr8[65] := _b01100001
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr8[66] := _b01101101
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr8[67] := _b01100101
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr8[68] := _b01110011
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr8[69] := _b00100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr8[70] := _b00111101
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr8[71] := _b00111101
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr8[72] := _b00100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr8[73] := _b00110001
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr19:$array [20] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr19_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr19[0] := _b00101110
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr19[1] := _b00101111
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr19[2] := _b01100101
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr19[3] := _b01101110
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr19[4] := _b01100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr19[5] := _b01101111
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr19[6] := _b01100100
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr19[7] := _b01100101
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr19[8] := _b01110010
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr19[9] := _b00101111
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr19[10] := _b01100001
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr19[11] := _b01101110
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr19[12] := _b01100001
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr19[13] := _b01101100
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr19[14] := _b01111001
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr19[15] := _b01110011
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr19[16] := _b01100101
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr19[17] := _b00101110
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr19[18] := _b01100011
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_analyse:$array [39] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_analyse_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_analyse[0] := _b01110110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_analyse[1] := _b01101111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_analyse[2] := _b01101001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_analyse[3] := _b01100100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_analyse[4] := _b00100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_analyse[5] := _b01111000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_analyse[6] := _b00110010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_analyse[7] := _b00110110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_analyse[8] := _b00110100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_analyse[9] := _b01011111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_analyse[10] := _b01101101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_analyse[11] := _b01100001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_analyse[12] := _b01100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_analyse[13] := _b01110010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_analyse[14] := _b01101111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_analyse[15] := _b01100010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_analyse[16] := _b01101100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_analyse[17] := _b01101111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_analyse[18] := _b01100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_analyse[19] := _b01101011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_analyse[20] := _b01011111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_analyse[21] := _b01100001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_analyse[22] := _b01101110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_analyse[23] := _b01100001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_analyse[24] := _b01101100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_analyse[25] := _b01111001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_analyse[26] := _b01110011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_analyse[27] := _b01100101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_analyse[28] := _b00101000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_analyse[29] := _b01111000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_analyse[30] := _b00110010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_analyse[31] := _b00110110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_analyse[32] := _b00110100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_analyse[33] := _b01011111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_analyse[34] := _b01110100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_analyse[35] := _b00100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_analyse[36] := _b00101010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_analyse[37] := _b00101001
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_i_mb_b16x8_cost_table:$array [17] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_i_mb_b16x8_cost_table_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_mb_b16x8_cost_table[8] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_mb_b16x8_cost_table[9] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_mb_b16x8_cost_table[10] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_mb_b16x8_cost_table[11] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_mb_b16x8_cost_table[12] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_mb_b16x8_cost_table[13] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_mb_b16x8_cost_table[14] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_mb_b16x8_cost_table[15] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_mb_b16x8_cost_table[16] := _b00001001
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_partition_listX_table:$array [2] $of $array [17] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_partition_listX_table_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_partition_listX_table[0][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_partition_listX_table[0][1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_partition_listX_table[0][2] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_partition_listX_table[0][3] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_partition_listX_table[0][8] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_partition_listX_table[0][9] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_partition_listX_table[0][10] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_partition_listX_table[0][11] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_partition_listX_table[1][4] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_partition_listX_table[1][5] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_partition_listX_table[1][6] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_partition_listX_table[1][7] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_partition_listX_table[1][8] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_partition_listX_table[1][9] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_partition_listX_table[1][10] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_partition_listX_table[1][11] := _b00000001
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x264_macroblock_analysex_xcheck_mv_lists:$array [19] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_x264_macroblock_analysex_xcheck_mv_lists_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_macroblock_analysex_xcheck_mv_lists[4] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_macroblock_analysex_xcheck_mv_lists[8] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_macroblock_analysex_xcheck_mv_lists[12] := _b00000010
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x264_psy_trellis_initx_xzero:$array [512] $of $uint<8>
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x264_transform_allowed:$array [19] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_x264_transform_allowed_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_transform_allowed[4] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_transform_allowed[5] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_transform_allowed[7] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_transform_allowed[8] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_transform_allowed[9] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_transform_allowed[10] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_transform_allowed[11] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_transform_allowed[12] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_transform_allowed[13] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_transform_allowed[14] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_transform_allowed[15] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_transform_allowed[16] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_transform_allowed[17] := _b00000001
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab:$array [256] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[2] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[3] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[4] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[5] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[6] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[7] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[8] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[9] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[10] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[11] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[12] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[13] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[14] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[15] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[16] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[17] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[18] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[19] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[20] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[21] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[22] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[23] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[24] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[25] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[26] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[27] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[28] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[29] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[30] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[31] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[32] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[33] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[34] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[35] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[36] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[37] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[38] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[39] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[40] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[41] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[42] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[43] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[44] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[45] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[46] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[47] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[48] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[49] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[50] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[51] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[52] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[53] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[54] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[55] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[56] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[57] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[58] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[59] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[60] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[61] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[62] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[63] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[64] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[65] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[66] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[67] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[68] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[69] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[70] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[71] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[72] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[73] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[74] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[75] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[76] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[77] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[78] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[79] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[80] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[81] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[82] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[83] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[84] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[85] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[86] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[87] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[88] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[89] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[90] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[91] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[92] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[93] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[94] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[95] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[96] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[97] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[98] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[99] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[100] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[101] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[102] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[103] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[104] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[105] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[106] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[107] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[108] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[109] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[110] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[111] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[112] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[113] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[114] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[115] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[116] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[117] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[118] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[119] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[120] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[121] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[122] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[123] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[124] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[125] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[126] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[127] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[128] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[129] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[130] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[131] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[132] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[133] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[134] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[135] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[136] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[137] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[138] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[139] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[140] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[141] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[142] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[143] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[144] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[145] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[146] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[147] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[148] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[149] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[150] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[151] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[152] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[153] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[154] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[155] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[156] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[157] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[158] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[159] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[160] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[161] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[162] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[163] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[164] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[165] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[166] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[167] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[168] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[169] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[170] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[171] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[172] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[173] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[174] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[175] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[176] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[177] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[178] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[179] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[180] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[181] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[182] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[183] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[184] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[185] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[186] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[187] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[188] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[189] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[190] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[191] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[192] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[193] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[194] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[195] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[196] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[197] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[198] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[199] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[200] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[201] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[202] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[203] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[204] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[205] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[206] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[207] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[208] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[209] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[210] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[211] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[212] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[213] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[214] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[215] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[216] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[217] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[218] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[219] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[220] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[221] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[222] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[223] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[224] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[225] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[226] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[227] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[228] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[229] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[230] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[231] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[232] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[233] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[234] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[235] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[236] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[237] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[238] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[239] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[240] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[241] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[242] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[243] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[244] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[245] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[246] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[247] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[248] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[249] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[250] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[251] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[252] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[253] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[254] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab[255] := _b00001111
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_chroma_mode_available:$array [5] $of $array [5] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_chroma_mode_available_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_chroma_mode_available[0][0] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_chroma_mode_available[0][1] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_chroma_mode_available[0][2] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_chroma_mode_available[0][3] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_chroma_mode_available[0][4] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_chroma_mode_available[1][0] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_chroma_mode_available[1][1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_chroma_mode_available[1][2] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_chroma_mode_available[1][3] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_chroma_mode_available[1][4] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_chroma_mode_available[2][0] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_chroma_mode_available[2][1] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_chroma_mode_available[2][2] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_chroma_mode_available[2][3] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_chroma_mode_available[2][4] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_chroma_mode_available[3][0] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_chroma_mode_available[3][1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_chroma_mode_available[3][3] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_chroma_mode_available[3][4] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_chroma_mode_available[4][0] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_chroma_mode_available[4][1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_chroma_mode_available[4][3] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_chroma_mode_available[4][4] := _b11111111
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_x:$array [16] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_x_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_x[1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_x[3] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_x[4] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_x[5] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_x[6] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_x[7] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_x[9] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_x[11] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_x[12] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_x[13] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_x[14] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_x[15] := _b00000011
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_y:$array [16] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_y_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_y[2] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_y[3] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_y[6] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_y[7] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_y[8] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_y[9] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_y[10] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_y[11] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_y[12] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_y[13] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_y[14] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_y[15] := _b00000011
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_mb_analyse_inter_p16x16:$array [66] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_mb_analyse_inter_p16x16_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_mb_analyse_inter_p16x16[0] := _b01110110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_mb_analyse_inter_p16x16[1] := _b01101111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_mb_analyse_inter_p16x16[2] := _b01101001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_mb_analyse_inter_p16x16[3] := _b01100100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_mb_analyse_inter_p16x16[4] := _b00100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_mb_analyse_inter_p16x16[5] := _b01111000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_mb_analyse_inter_p16x16[6] := _b00110010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_mb_analyse_inter_p16x16[7] := _b00110110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_mb_analyse_inter_p16x16[8] := _b00110100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_mb_analyse_inter_p16x16[9] := _b01011111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_mb_analyse_inter_p16x16[10] := _b01101101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_mb_analyse_inter_p16x16[11] := _b01100010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_mb_analyse_inter_p16x16[12] := _b01011111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_mb_analyse_inter_p16x16[13] := _b01100001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_mb_analyse_inter_p16x16[14] := _b01101110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_mb_analyse_inter_p16x16[15] := _b01100001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_mb_analyse_inter_p16x16[16] := _b01101100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_mb_analyse_inter_p16x16[17] := _b01111001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_mb_analyse_inter_p16x16[18] := _b01110011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_mb_analyse_inter_p16x16[19] := _b01100101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_mb_analyse_inter_p16x16[20] := _b01011111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_mb_analyse_inter_p16x16[21] := _b01101001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_mb_analyse_inter_p16x16[22] := _b01101110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_mb_analyse_inter_p16x16[23] := _b01110100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_mb_analyse_inter_p16x16[24] := _b01100101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_mb_analyse_inter_p16x16[25] := _b01110010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_mb_analyse_inter_p16x16[26] := _b01011111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_mb_analyse_inter_p16x16[27] := _b01110000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_mb_analyse_inter_p16x16[28] := _b00110001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_mb_analyse_inter_p16x16[29] := _b00110110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_mb_analyse_inter_p16x16[30] := _b01111000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_mb_analyse_inter_p16x16[31] := _b00110001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_mb_analyse_inter_p16x16[32] := _b00110110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_mb_analyse_inter_p16x16[33] := _b00101000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_mb_analyse_inter_p16x16[34] := _b01111000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_mb_analyse_inter_p16x16[35] := _b00110010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_mb_analyse_inter_p16x16[36] := _b00110110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_mb_analyse_inter_p16x16[37] := _b00110100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_mb_analyse_inter_p16x16[38] := _b01011111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_mb_analyse_inter_p16x16[39] := _b01110100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_mb_analyse_inter_p16x16[40] := _b00100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_mb_analyse_inter_p16x16[41] := _b00101010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_mb_analyse_inter_p16x16[42] := _b00101100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_mb_analyse_inter_p16x16[43] := _b00100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_mb_analyse_inter_p16x16[44] := _b01111000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_mb_analyse_inter_p16x16[45] := _b00110010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_mb_analyse_inter_p16x16[46] := _b00110110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_mb_analyse_inter_p16x16[47] := _b00110100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_mb_analyse_inter_p16x16[48] := _b01011111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_mb_analyse_inter_p16x16[49] := _b01101101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_mb_analyse_inter_p16x16[50] := _b01100010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_mb_analyse_inter_p16x16[51] := _b01011111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_mb_analyse_inter_p16x16[52] := _b01100001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_mb_analyse_inter_p16x16[53] := _b01101110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_mb_analyse_inter_p16x16[54] := _b01100001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_mb_analyse_inter_p16x16[55] := _b01101100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_mb_analyse_inter_p16x16[56] := _b01111001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_mb_analyse_inter_p16x16[57] := _b01110011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_mb_analyse_inter_p16x16[58] := _b01101001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_mb_analyse_inter_p16x16[59] := _b01110011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_mb_analyse_inter_p16x16[60] := _b01011111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_mb_analyse_inter_p16x16[61] := _b01110100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_mb_analyse_inter_p16x16[62] := _b00100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_mb_analyse_inter_p16x16[63] := _b00101010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_mb_analyse_inter_p16x16[64] := _b00101001
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr5:$array [71] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr5_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr5[0] := _b01100001
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr5[1] := _b00101101
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr5[2] := _b00111110
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr5[3] := _b01101100
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr5[4] := _b00110000
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr5[5] := _b00101110
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr5[6] := _b01101101
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr5[7] := _b01100101
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr5[8] := _b00110001
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr5[9] := _b00110110
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr5[10] := _b01111000
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr5[11] := _b00110001
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr5[12] := _b00110110
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr5[13] := _b00101110
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr5[14] := _b01101101
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr5[15] := _b01110110
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr5[16] := _b01011011
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr5[17] := _b00110001
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr5[18] := _b01011101
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr5[19] := _b00100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr5[20] := _b00111100
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr5[21] := _b00111101
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr5[22] := _b00100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr5[23] := _b01101000
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr5[24] := _b00101101
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr5[25] := _b00111110
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr5[26] := _b01101101
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr5[27] := _b01100010
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr5[28] := _b00101110
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr5[29] := _b01101101
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr5[30] := _b01110110
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr5[31] := _b01011111
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr5[32] := _b01101101
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr5[33] := _b01100001
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr5[34] := _b01111000
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr5[35] := _b01011111
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr5[36] := _b01110011
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr5[37] := _b01110000
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr5[38] := _b01100101
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr5[39] := _b01101100
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr5[40] := _b01011011
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr5[41] := _b00110001
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr5[42] := _b01011101
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr5[43] := _b00100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr5[44] := _b01111100
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr5[45] := _b01111100
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr5[46] := _b00100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr5[47] := _b01101000
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr5[48] := _b00101101
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr5[49] := _b00111110
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr5[50] := _b01101001
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr5[51] := _b01011111
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr5[52] := _b01110100
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr5[53] := _b01101000
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr5[54] := _b01110010
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr5[55] := _b01100101
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr5[56] := _b01100001
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr5[57] := _b01100100
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr5[58] := _b01011111
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr5[59] := _b01100110
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr5[60] := _b01110010
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr5[61] := _b01100001
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr5[62] := _b01101101
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr5[63] := _b01100101
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr5[64] := _b01110011
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr5[65] := _b00100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr5[66] := _b00111101
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr5[67] := _b00111101
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr5[68] := _b00100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr5[69] := _b00110001
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab:$array [2] $of $array [82] $of $uint<32>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[0][0] := _b00000000000000000000000000101110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[0][1] := _b00000000000000000000000000111010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[0][2] := _b00000000000000000000000001001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[0][3] := _b00000000000000000000000001011100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[0][4] := _b00000000000000000000000001110101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[0][5] := _b00000000000000000000000010010011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[0][6] := _b00000000000000000000000010111001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[0][7] := _b00000000000000000000000011101001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[0][8] := _b00000000000000000000000100100110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[0][9] := _b00000000000000000000000101110010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[0][10] := _b00000000000000000000000111010010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[0][11] := _b00000000000000000000001001001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[0][12] := _b00000000000000000000001011100100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[0][13] := _b00000000000000000000001110100100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[0][14] := _b00000000000000000000010010010110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[0][15] := _b00000000000000000000010111001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[0][16] := _b00000000000000000000011101001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[0][17] := _b00000000000000000000100100101101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[0][18] := _b00000000000000000000101110001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[0][19] := _b00000000000000000000111010010000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[0][20] := _b00000000000000000001001001011001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[0][21] := _b00000000000000000001011100011110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[0][22] := _b00000000000000000001110100100001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[0][23] := _b00000000000000000010010010110011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[0][24] := _b00000000000000000010111000111101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[0][25] := _b00000000000000000011101001000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[0][26] := _b00000000000000000100100101100110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[0][27] := _b00000000000000000101110001111010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[0][28] := _b00000000000000000111010010000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[0][29] := _b00000000000000001001001011001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[0][30] := _b00000000000000001011100011110101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[0][31] := _b00000000000000001110100100001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[0][32] := _b00000000000000010010010110011011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[0][33] := _b00000000000000010111000111101011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[0][34] := _b00000000000000011101001000010001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[0][35] := _b00000000000000100100101100110110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[0][36] := _b00000000000000101110001111010111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[0][37] := _b00000000000000111010010000100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[0][38] := _b00000000000001001001011001101100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[0][39] := _b00000000000001011100011110101110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[0][40] := _b00000000000001110100100001000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[0][41] := _b00000000000010010010110011011000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[0][42] := _b00000000000010111000111101011100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[0][43] := _b00000000000011101001000010001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[0][44] := _b00000000000100100101100110110000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[0][45] := _b00000000000101110001111010111000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[0][46] := _b00000000000111010010000100011110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[0][47] := _b00000000001001001011001101100001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[0][48] := _b00000000001011100011110101110000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[0][49] := _b00000000001110100100001000111101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[0][50] := _b00000000010010010110011011000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[0][51] := _b00000000010111000111101011100001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[0][52] := _b00000000011101001000010001111011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[0][53] := _b00000000100100101100110110001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[0][54] := _b00000000101110001111010111000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[0][55] := _b00000000111010010000100011110110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[0][56] := _b00000001001001011001101100001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[0][57] := _b00000001011100011110101110000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[0][58] := _b00000001110100100001000111101011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[0][59] := _b00000010010010110011011000011110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[0][60] := _b00000010111000111101011100001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[0][61] := _b00000011101001000010001111010110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[0][62] := _b00000100100101100110110000111100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[0][63] := _b00000101110001111010111000010100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[0][64] := _b00000111010010000100011110101101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[0][65] := _b00000111111111111111111111111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[0][66] := _b00000111111111111111111111111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[0][67] := _b00000111111111111111111111111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[0][68] := _b00000111111111111111111111111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[0][69] := _b00000111111111111111111111111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[0][70] := _b00000111111111111111111111111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[0][71] := _b00000111111111111111111111111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[0][72] := _b00000111111111111111111111111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[0][73] := _b00000111111111111111111111111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[0][74] := _b00000111111111111111111111111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[0][75] := _b00000111111111111111111111111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][0] := _b00000000000000000000000000011011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][1] := _b00000000000000000000000000100010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][2] := _b00000000000000000000000000101011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][3] := _b00000000000000000000000000110110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][4] := _b00000000000000000000000001000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][5] := _b00000000000000000000000001010110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][6] := _b00000000000000000000000001101100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][7] := _b00000000000000000000000010001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][8] := _b00000000000000000000000010101100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][9] := _b00000000000000000000000011011000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][10] := _b00000000000000000000000100010001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][11] := _b00000000000000000000000101010111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][12] := _b00000000000000000000000110110001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][13] := _b00000000000000000000001000100001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][14] := _b00000000000000000000001010101111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][15] := _b00000000000000000000001101100001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][16] := _b00000000000000000000010001000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][17] := _b00000000000000000000010101011110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][18] := _b00000000000000000000011011000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][19] := _b00000000000000000000100010000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][20] := _b00000000000000000000101010111011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][21] := _b00000000000000000000110110000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][22] := _b00000000000000000001000100001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][23] := _b00000000000000000001010101110110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][24] := _b00000000000000000001101100001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][25] := _b00000000000000000010001000010001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][26] := _b00000000000000000010101011101100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][27] := _b00000000000000000011011000010100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][28] := _b00000000000000000100010000100010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][29] := _b00000000000000000101010111011000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][30] := _b00000000000000000110110000101000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][31] := _b00000000000000001000100001000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][32] := _b00000000000000001010101110110001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][33] := _b00000000000000001101100001010001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][34] := _b00000000000000010001000010001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][35] := _b00000000000000010101011101100010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][36] := _b00000000000000011011000010100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][37] := _b00000000000000100010000100010111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][38] := _b00000000000000101010111011000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][39] := _b00000000000000110110000101000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][40] := _b00000000000001000100001000101111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][41] := _b00000000000001010101110110001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][42] := _b00000000000001101100001010001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][43] := _b00000000000010001000010001011110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][44] := _b00000000000010101011101100010111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][45] := _b00000000000011011000010100011110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][46] := _b00000000000100010000100010111100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][47] := _b00000000000101010111011000101111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][48] := _b00000000000110110000101000111101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][49] := _b00000000001000100001000101111001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][50] := _b00000000001010101110110001011110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][51] := _b00000000001101100001010001111010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][52] := _b00000000010001000010001011110100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][53] := _b00000000010101011101100010111110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][54] := _b00000000011011000010100011110110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][55] := _b00000000100010000100010111100111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][56] := _b00000000101010111011000101111100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][57] := _b00000000110110000101000111101100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][58] := _b00000001000100001000101111001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][59] := _b00000001010101110110001011111000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][60] := _b00000001101100001010001111010111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][61] := _b00000010001000010001011110011101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][62] := _b00000010101011101100010111110000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][63] := _b00000011011000010100011110101110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][64] := _b00000100010000100010111100111010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][65] := _b00000101010111011000101111100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][66] := _b00000110110000101000111101011100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][67] := _b00000111111111111111111111111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][68] := _b00000111111111111111111111111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][69] := _b00000111111111111111111111111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][70] := _b00000111111111111111111111111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][71] := _b00000111111111111111111111111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][72] := _b00000111111111111111111111111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][73] := _b00000111111111111111111111111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][74] := _b00000111111111111111111111111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][75] := _b00000111111111111111111111111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][76] := _b00000111111111111111111111111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][77] := _b00000111111111111111111111111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][78] := _b00000111111111111111111111111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][79] := _b00000111111111111111111111111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][80] := _b00000111111111111111111111111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab[1][81] := _b00000111111111111111111111111111
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x264_chroma_lambda2_offset_tab:$array [37] $of $uint<16>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_x264_chroma_lambda2_offset_tab_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_chroma_lambda2_offset_tab[0] := _b0000000000010000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_chroma_lambda2_offset_tab[1] := _b0000000000010100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_chroma_lambda2_offset_tab[2] := _b0000000000011001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_chroma_lambda2_offset_tab[3] := _b0000000000100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_chroma_lambda2_offset_tab[4] := _b0000000000101000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_chroma_lambda2_offset_tab[5] := _b0000000000110010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_chroma_lambda2_offset_tab[6] := _b0000000001000000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_chroma_lambda2_offset_tab[7] := _b0000000001010000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_chroma_lambda2_offset_tab[8] := _b0000000001100101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_chroma_lambda2_offset_tab[9] := _b0000000010000000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_chroma_lambda2_offset_tab[10] := _b0000000010100001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_chroma_lambda2_offset_tab[11] := _b0000000011001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_chroma_lambda2_offset_tab[12] := _b0000000100000000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_chroma_lambda2_offset_tab[13] := _b0000000101000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_chroma_lambda2_offset_tab[14] := _b0000000110010110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_chroma_lambda2_offset_tab[15] := _b0000001000000000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_chroma_lambda2_offset_tab[16] := _b0000001010000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_chroma_lambda2_offset_tab[17] := _b0000001100101100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_chroma_lambda2_offset_tab[18] := _b0000010000000000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_chroma_lambda2_offset_tab[19] := _b0000010100001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_chroma_lambda2_offset_tab[20] := _b0000011001011001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_chroma_lambda2_offset_tab[21] := _b0000100000000000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_chroma_lambda2_offset_tab[22] := _b0000101000010100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_chroma_lambda2_offset_tab[23] := _b0000110010110010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_chroma_lambda2_offset_tab[24] := _b0001000000000000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_chroma_lambda2_offset_tab[25] := _b0001010000101000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_chroma_lambda2_offset_tab[26] := _b0001100101100101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_chroma_lambda2_offset_tab[27] := _b0010000000000000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_chroma_lambda2_offset_tab[28] := _b0010100001010001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_chroma_lambda2_offset_tab[29] := _b0011001011001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_chroma_lambda2_offset_tab[30] := _b0100000000000000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_chroma_lambda2_offset_tab[31] := _b0101000010100010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_chroma_lambda2_offset_tab[32] := _b0110010110010111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_chroma_lambda2_offset_tab[33] := _b1000000000000000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_chroma_lambda2_offset_tab[34] := _b1010000101000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_chroma_lambda2_offset_tab[35] := _b1100101100101111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_chroma_lambda2_offset_tab[36] := _b1111111111111111
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_xy_fdec:$array [16] $of $uint<16>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_xy_fdec_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_xy_fdec[1] := _b0000000000000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_xy_fdec[2] := _b0000000010000000
  x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_xy_fdec[3] := _b0000000010000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_xy_fdec[4] := _b0000000000001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_xy_fdec[5] := _b0000000000001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_xy_fdec[6] := _b0000000010001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_xy_fdec[7] := _b0000000010001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_xy_fdec[8] := _b0000000100000000
  x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_xy_fdec[9] := _b0000000100000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_xy_fdec[10] := _b0000000110000000
  x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_xy_fdec[11] := _b0000000110000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_xy_fdec[12] := _b0000000100001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_xy_fdec[13] := _b0000000100001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_xy_fdec[14] := _b0000000110001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_xy_fdec[15] := _b0000000110001100
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb:$array [2] $of $array [2] $of $array [48] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[0][0][1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[0][0][2] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[0][0][3] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[0][0][4] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[0][0][5] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[0][0][6] := _b00001110
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[0][0][7] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[0][0][8] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[0][0][9] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[0][0][10] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[0][0][11] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[0][0][12] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[0][0][13] := _b00001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[0][0][14] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[0][0][15] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[0][1][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[0][1][1] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[0][1][2] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[0][1][3] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[0][1][4] := _b00001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[0][1][5] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[0][1][6] := _b00001110
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[0][1][7] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[0][1][8] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[0][1][9] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[0][1][10] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[0][1][11] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[0][1][12] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[0][1][13] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[0][1][14] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][0][1] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][0][2] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][0][3] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][0][4] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][0][5] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][0][6] := _b00010001
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][0][7] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][0][8] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][0][9] := _b00010010
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][0][10] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][0][11] := _b00001110
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][0][12] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][0][13] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][0][14] := _b00010000
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][0][15] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][0][16] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][0][17] := _b00100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][0][18] := _b00100001
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][0][19] := _b00100100
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][0][20] := _b00100010
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][0][21] := _b00100101
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][0][22] := _b00101100
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][0][23] := _b00101000
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][0][24] := _b00100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][0][25] := _b00101101
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][0][26] := _b00100110
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][0][27] := _b00101001
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][0][28] := _b00100111
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][0][29] := _b00101010
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][0][30] := _b00101011
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][0][31] := _b00010011
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][0][32] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][0][33] := _b00011000
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][0][34] := _b00011001
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][0][35] := _b00010100
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][0][36] := _b00011010
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][0][37] := _b00010101
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][0][38] := _b00101110
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][0][39] := _b00011100
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][0][40] := _b00011011
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][0][41] := _b00101111
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][0][42] := _b00010110
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][0][43] := _b00011101
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][0][44] := _b00010111
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][0][45] := _b00011110
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][0][46] := _b00011111
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][0][47] := _b00001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][1][0] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][1][1] := _b00011101
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][1][2] := _b00011110
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][1][3] := _b00010001
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][1][4] := _b00011111
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][1][5] := _b00010010
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][1][6] := _b00100101
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][1][7] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][1][8] := _b00100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][1][9] := _b00100110
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][1][10] := _b00010011
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][1][11] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][1][12] := _b00010100
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][1][13] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][1][14] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][1][15] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][1][16] := _b00010000
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][1][17] := _b00100001
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][1][18] := _b00100010
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][1][19] := _b00010101
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][1][20] := _b00100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][1][21] := _b00010110
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][1][22] := _b00100111
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][1][23] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][1][24] := _b00100100
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][1][25] := _b00101000
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][1][26] := _b00010111
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][1][27] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][1][28] := _b00011000
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][1][29] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][1][30] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][1][31] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][1][32] := _b00101001
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][1][33] := _b00101010
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][1][34] := _b00101011
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][1][35] := _b00011001
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][1][36] := _b00101100
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][1][37] := _b00011010
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][1][38] := _b00101110
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][1][39] := _b00001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][1][40] := _b00101101
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][1][41] := _b00101111
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][1][42] := _b00011011
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][1][43] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][1][44] := _b00011100
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][1][45] := _b00001110
  x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb[1][1][46] := _b00001111
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_ct_index:$array [17] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_ct_index_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_ct_index[2] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_ct_index[3] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_ct_index[4] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_ct_index[5] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_ct_index[6] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_ct_index[7] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_ct_index[8] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_ct_index[9] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_ct_index[10] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_ct_index[11] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_ct_index[12] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_ct_index[13] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_ct_index[14] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_ct_index[15] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_ct_index[16] := _b00000011
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cavlc_block_residual_internalx_xctz_index:$array [8] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cavlc_block_residual_internalx_xctz_index_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cavlc_block_residual_internalx_xctz_index[0] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cavlc_block_residual_internalx_xctz_index[2] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cavlc_block_residual_internalx_xctz_index[4] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cavlc_block_residual_internalx_xctz_index[6] := _b00000001
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cavlc_block_residual_internalx_xcount_cat:$array [14] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cavlc_block_residual_internalx_xcount_cat_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cavlc_block_residual_internalx_xcount_cat[0] := _b00010000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cavlc_block_residual_internalx_xcount_cat[1] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cavlc_block_residual_internalx_xcount_cat[2] := _b00010000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cavlc_block_residual_internalx_xcount_cat[4] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cavlc_block_residual_internalx_xcount_cat[5] := _b01000000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cavlc_block_residual_internalx_xcount_cat[6] := _b00010000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cavlc_block_residual_internalx_xcount_cat[7] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cavlc_block_residual_internalx_xcount_cat[8] := _b00010000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cavlc_block_residual_internalx_xcount_cat[9] := _b01000000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cavlc_block_residual_internalx_xcount_cat[10] := _b00010000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cavlc_block_residual_internalx_xcount_cat[11] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cavlc_block_residual_internalx_xcount_cat[12] := _b00010000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cavlc_block_residual_internalx_xcount_cat[13] := _b01000000
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cavlc_block_residual_escapex_xnext_suffix:$array [7] $of $uint<16>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cavlc_block_residual_escapex_xnext_suffix_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cavlc_block_residual_escapex_xnext_suffix[1] := _b0000000000000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cavlc_block_residual_escapex_xnext_suffix[2] := _b0000000000000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cavlc_block_residual_escapex_xnext_suffix[3] := _b0000000000001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cavlc_block_residual_escapex_xnext_suffix[4] := _b0000000000011000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cavlc_block_residual_escapex_xnext_suffix[5] := _b0000000000110000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cavlc_block_residual_escapex_xnext_suffix[6] := _b1111111111111111
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_pred_mode4x4_fix:$array [13] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_pred_mode4x4_fix_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_pred_mode4x4_fix[0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_pred_mode4x4_fix[2] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_pred_mode4x4_fix[3] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_pred_mode4x4_fix[4] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_pred_mode4x4_fix[5] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_pred_mode4x4_fix[6] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_pred_mode4x4_fix[7] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_pred_mode4x4_fix[8] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_pred_mode4x4_fix[9] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_pred_mode4x4_fix[10] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_pred_mode4x4_fix[11] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_pred_mode4x4_fix[12] := _b00000010
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_ctx_cat_plane:$array [6] $of $array [3] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_ctx_cat_plane_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_ctx_cat_plane[0][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_ctx_cat_plane[0][2] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_ctx_cat_plane[1][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_ctx_cat_plane[1][1] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_ctx_cat_plane[1][2] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_ctx_cat_plane[2][0] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_ctx_cat_plane[2][1] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_ctx_cat_plane[2][2] := _b00001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_ctx_cat_plane[5][0] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_ctx_cat_plane[5][1] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_ctx_cat_plane[5][2] := _b00001101
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_cbf_ctxidxincx_xbase_ctx:$array [14] $of $uint<16>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_cbf_ctxidxincx_xbase_ctx_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_cbf_ctxidxincx_xbase_ctx[0] := _b0000000001010101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_cbf_ctxidxincx_xbase_ctx[1] := _b0000000001011001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_cbf_ctxidxincx_xbase_ctx[2] := _b0000000001011101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_cbf_ctxidxincx_xbase_ctx[3] := _b0000000001100001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_cbf_ctxidxincx_xbase_ctx[4] := _b0000000001100101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_cbf_ctxidxincx_xbase_ctx[5] := _b0000001111110100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_cbf_ctxidxincx_xbase_ctx[6] := _b0000000111001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_cbf_ctxidxincx_xbase_ctx[7] := _b0000000111010000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_cbf_ctxidxincx_xbase_ctx[8] := _b0000000111010100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_cbf_ctxidxincx_xbase_ctx[9] := _b0000001111111000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_cbf_ctxidxincx_xbase_ctx[10] := _b0000000111011000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_cbf_ctxidxincx_xbase_ctx[11] := _b0000000111011100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_cbf_ctxidxincx_xbase_ctx[12] := _b0000000111100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_cbf_ctxidxincx_xbase_ctx[13] := _b0000001111111100
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x264_pred_i4x4_neighbors:$array [12] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_x264_pred_i4x4_neighbors_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_pred_i4x4_neighbors[0] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_pred_i4x4_neighbors[1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_pred_i4x4_neighbors[2] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_pred_i4x4_neighbors[3] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_pred_i4x4_neighbors[4] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_pred_i4x4_neighbors[5] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_pred_i4x4_neighbors[6] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_pred_i4x4_neighbors[7] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_pred_i4x4_neighbors[8] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_pred_i4x4_neighbors[9] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_pred_i4x4_neighbors[10] := _b00000010
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available:$array [2] $of $array [5] $of $array [10] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[0][0][0] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[0][0][1] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[0][0][2] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[0][0][3] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[0][0][4] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[0][0][5] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[0][0][6] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[0][0][7] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[0][0][8] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[0][0][9] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[0][1][0] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[0][1][1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[0][1][2] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[0][1][3] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[0][1][4] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[0][1][5] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[0][1][6] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[0][1][7] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[0][1][8] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[0][1][9] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[0][2][0] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[0][2][2] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[0][2][3] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[0][2][4] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[0][2][5] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[0][2][6] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[0][2][7] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[0][2][8] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[0][2][9] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[0][3][0] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[0][3][1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[0][3][3] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[0][3][4] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[0][3][5] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[0][3][6] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[0][3][7] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[0][3][8] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[0][3][9] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[0][4][0] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[0][4][1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[0][4][3] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[0][4][4] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[0][4][5] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[0][4][6] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[0][4][7] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[0][4][8] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[0][4][9] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[1][0][0] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[1][0][1] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[1][0][2] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[1][0][3] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[1][0][4] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[1][0][5] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[1][0][6] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[1][0][7] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[1][0][8] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[1][0][9] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[1][1][0] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[1][1][1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[1][1][2] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[1][1][3] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[1][1][4] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[1][1][5] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[1][1][6] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[1][1][7] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[1][1][8] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[1][1][9] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[1][2][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[1][2][1] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[1][2][2] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[1][2][3] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[1][2][4] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[1][2][5] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[1][2][6] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[1][2][7] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[1][2][8] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[1][2][9] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[1][3][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[1][3][1] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[1][3][2] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[1][3][3] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[1][3][4] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[1][3][5] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[1][3][6] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[1][3][7] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[1][3][8] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[1][3][9] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[1][4][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[1][4][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[1][4][2] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[1][4][3] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[1][4][4] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[1][4][5] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[1][4][6] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[1][4][7] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[1][4][8] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available[1][4][9] := _b11111111
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_xy_fenc:$array [16] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_xy_fenc_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_xy_fenc[1] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_xy_fenc[2] := _b01000000
  x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_xy_fenc[3] := _b01000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_xy_fenc[4] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_xy_fenc[5] := _b00001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_xy_fenc[6] := _b01001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_xy_fenc[7] := _b01001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_xy_fenc[8] := _b10000000
  x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_xy_fenc[9] := _b10000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_xy_fenc[10] := _b11000000
  x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_xy_fenc[11] := _b11000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_xy_fenc[12] := _b10001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_xy_fenc[13] := _b10001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_xy_fenc[14] := _b11001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_xy_fenc[15] := _b11001100
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available:$array [2] $of $array [5] $of $array [10] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[0][0][0] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[0][0][1] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[0][0][2] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[0][0][3] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[0][0][4] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[0][0][5] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[0][0][6] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[0][0][7] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[0][0][8] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[0][0][9] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[0][1][0] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[0][1][1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[0][1][2] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[0][1][3] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[0][1][4] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[0][1][5] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[0][1][6] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[0][1][7] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[0][1][8] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[0][1][9] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[0][2][0] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[0][2][2] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[0][2][3] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[0][2][4] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[0][2][5] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[0][2][6] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[0][2][7] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[0][2][8] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[0][2][9] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[0][3][0] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[0][3][1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[0][3][3] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[0][3][4] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[0][3][5] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[0][3][6] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[0][3][7] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[0][3][8] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[0][3][9] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[0][4][0] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[0][4][1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[0][4][3] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[0][4][4] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[0][4][5] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[0][4][6] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[0][4][7] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[0][4][8] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[0][4][9] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[1][0][0] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[1][0][1] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[1][0][2] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[1][0][3] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[1][0][4] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[1][0][5] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[1][0][6] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[1][0][7] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[1][0][8] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[1][0][9] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[1][1][0] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[1][1][1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[1][1][2] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[1][1][3] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[1][1][4] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[1][1][5] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[1][1][6] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[1][1][7] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[1][1][8] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[1][1][9] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[1][2][0] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[1][2][2] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[1][2][3] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[1][2][4] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[1][2][5] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[1][2][6] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[1][2][7] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[1][2][8] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[1][2][9] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[1][3][0] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[1][3][1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[1][3][3] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[1][3][4] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[1][3][5] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[1][3][6] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[1][3][7] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[1][3][8] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[1][3][9] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[1][4][0] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[1][4][1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[1][4][3] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[1][4][4] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[1][4][5] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[1][4][6] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[1][4][7] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[1][4][8] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available[1][4][9] := _b11111111
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_i16x16_mode_available:$array [5] $of $array [5] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_i16x16_mode_available_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_i16x16_mode_available[0][0] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_i16x16_mode_available[0][1] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i16x16_mode_available[0][2] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i16x16_mode_available[0][3] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i16x16_mode_available[0][4] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i16x16_mode_available[1][0] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_i16x16_mode_available[1][1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i16x16_mode_available[1][2] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i16x16_mode_available[1][3] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i16x16_mode_available[1][4] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i16x16_mode_available[2][0] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_i16x16_mode_available[2][2] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i16x16_mode_available[2][3] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i16x16_mode_available[2][4] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i16x16_mode_available[3][1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i16x16_mode_available[3][2] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_i16x16_mode_available[3][3] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i16x16_mode_available[3][4] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i16x16_mode_available[4][1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i16x16_mode_available[4][2] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_i16x16_mode_available[4][3] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_i16x16_mode_available[4][4] := _b11111111
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_analyse_intrax_xintra_analysis_shortcut:$array [2] $of $array [2] $of $array [2] $of $array [5] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_analyse_intrax_xintra_analysis_shortcut_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_analyse_intrax_xintra_analysis_shortcut[0][0][0][0] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_analyse_intrax_xintra_analysis_shortcut[0][0][0][1] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_analyse_intrax_xintra_analysis_shortcut[0][0][0][2] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_analyse_intrax_xintra_analysis_shortcut[0][0][0][3] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_analyse_intrax_xintra_analysis_shortcut[0][0][0][4] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_analyse_intrax_xintra_analysis_shortcut[0][0][1][0] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_analyse_intrax_xintra_analysis_shortcut[0][0][1][1] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_analyse_intrax_xintra_analysis_shortcut[0][0][1][2] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_analyse_intrax_xintra_analysis_shortcut[0][0][1][3] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_analyse_intrax_xintra_analysis_shortcut[0][0][1][4] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_analyse_intrax_xintra_analysis_shortcut[0][1][0][0] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_analyse_intrax_xintra_analysis_shortcut[0][1][0][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_analyse_intrax_xintra_analysis_shortcut[0][1][0][2] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_analyse_intrax_xintra_analysis_shortcut[0][1][0][3] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_analyse_intrax_xintra_analysis_shortcut[0][1][0][4] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_analyse_intrax_xintra_analysis_shortcut[0][1][1][0] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_analyse_intrax_xintra_analysis_shortcut[0][1][1][1] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_analyse_intrax_xintra_analysis_shortcut[0][1][1][2] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_analyse_intrax_xintra_analysis_shortcut[0][1][1][3] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_analyse_intrax_xintra_analysis_shortcut[0][1][1][4] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_analyse_intrax_xintra_analysis_shortcut[1][0][0][0] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_analyse_intrax_xintra_analysis_shortcut[1][0][0][1] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_analyse_intrax_xintra_analysis_shortcut[1][0][0][2] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_analyse_intrax_xintra_analysis_shortcut[1][0][0][3] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_analyse_intrax_xintra_analysis_shortcut[1][0][0][4] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_analyse_intrax_xintra_analysis_shortcut[1][0][1][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_analyse_intrax_xintra_analysis_shortcut[1][0][1][1] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_analyse_intrax_xintra_analysis_shortcut[1][0][1][2] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_analyse_intrax_xintra_analysis_shortcut[1][0][1][3] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_analyse_intrax_xintra_analysis_shortcut[1][0][1][4] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_analyse_intrax_xintra_analysis_shortcut[1][1][0][0] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_analyse_intrax_xintra_analysis_shortcut[1][1][0][1] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_analyse_intrax_xintra_analysis_shortcut[1][1][0][2] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_analyse_intrax_xintra_analysis_shortcut[1][1][0][3] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_analyse_intrax_xintra_analysis_shortcut[1][1][0][4] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_analyse_intrax_xintra_analysis_shortcut[1][1][1][0] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_analyse_intrax_xintra_analysis_shortcut[1][1][1][1] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_analyse_intrax_xintra_analysis_shortcut[1][1][1][2] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_analyse_intrax_xintra_analysis_shortcut[1][1][1][3] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_analyse_intrax_xintra_analysis_shortcut[1][1][1][4] := _b11111111
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_analyse_intrax_xi16x16_thresh_lut:$array [11] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_analyse_intrax_xi16x16_thresh_lut_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_analyse_intrax_xi16x16_thresh_lut[0] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_analyse_intrax_xi16x16_thresh_lut[1] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_analyse_intrax_xi16x16_thresh_lut[2] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_analyse_intrax_xi16x16_thresh_lut[3] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_analyse_intrax_xi16x16_thresh_lut[4] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_analyse_intrax_xi16x16_thresh_lut[5] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_analyse_intrax_xi16x16_thresh_lut[6] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_analyse_intrax_xi16x16_thresh_lut[7] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_analyse_intrax_xi16x16_thresh_lut[8] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_analyse_intrax_xi16x16_thresh_lut[9] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_analyse_intrax_xi16x16_thresh_lut[10] := _b00000100
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_pred_mode16x16_fix:$array [7] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_pred_mode16x16_fix_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_pred_mode16x16_fix[1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_pred_mode16x16_fix[2] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_pred_mode16x16_fix[3] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_pred_mode16x16_fix[4] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_pred_mode16x16_fix[5] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_pred_mode16x16_fix[6] := _b00000010
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_analyse_intrax_xcost_div_fix8:$array [3] $of $uint<16>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_analyse_intrax_xcost_div_fix8_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_analyse_intrax_xcost_div_fix8[0] := _b0000010000000000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_analyse_intrax_xcost_div_fix8[1] := _b0000001000000000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_analyse_intrax_xcost_div_fix8[2] := _b0000000101010101
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_analyse_intrax_xi8x8_thresh:$array [11] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_analyse_intrax_xi8x8_thresh_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_analyse_intrax_xi8x8_thresh[0] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_analyse_intrax_xi8x8_thresh[1] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_analyse_intrax_xi8x8_thresh[2] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_analyse_intrax_xi8x8_thresh[3] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_analyse_intrax_xi8x8_thresh[4] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_analyse_intrax_xi8x8_thresh[5] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_analyse_intrax_xi8x8_thresh[6] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_analyse_intrax_xi8x8_thresh[7] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_analyse_intrax_xi8x8_thresh[8] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_analyse_intrax_xi8x8_thresh[9] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_analyse_intrax_xi8x8_thresh[10] := _b00000110
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_subpartition_p_to_golomb:$array [4] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_subpartition_p_to_golomb_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_subpartition_p_to_golomb[0] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_subpartition_p_to_golomb[1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_subpartition_p_to_golomb[2] := _b00000010
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_type_list_table:$array [19] $of $array [2] $of $array [2] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_type_list_table_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_type_list_table[4][0][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_type_list_table[4][0][1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_type_list_table[6][0][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_type_list_table[6][0][1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_type_list_table[8][0][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_type_list_table[8][0][1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_type_list_table[9][0][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_type_list_table[9][1][1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_type_list_table[10][0][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_type_list_table[10][0][1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_type_list_table[10][1][1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_type_list_table[11][0][1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_type_list_table[11][1][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_type_list_table[12][1][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_type_list_table[12][1][1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_type_list_table[13][0][1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_type_list_table[13][1][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_type_list_table[13][1][1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_type_list_table[14][0][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_type_list_table[14][0][1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_type_list_table[14][1][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_type_list_table[15][0][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_type_list_table[15][1][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_type_list_table[15][1][1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_type_list_table[16][0][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_type_list_table[16][0][1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_type_list_table[16][1][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_type_list_table[16][1][1] := _b00000001
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x264_pixel_size:$array [12] $of $record < $uint<8> > < $uint<8> > 
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_x264_pixel_size_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_pixel_size[0][0] := _b00010000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_pixel_size[0][1] := _b00010000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_pixel_size[1][0] := _b00010000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_pixel_size[1][1] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_pixel_size[2][0] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_pixel_size[2][1] := _b00010000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_pixel_size[3][0] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_pixel_size[3][1] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_pixel_size[4][0] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_pixel_size[4][1] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_pixel_size[5][0] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_pixel_size[5][1] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_pixel_size[6][0] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_pixel_size[6][1] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_pixel_size[7][0] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_pixel_size[7][1] := _b00010000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_pixel_size[8][0] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_pixel_size[8][1] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_pixel_size[9][0] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_pixel_size[9][1] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_pixel_size[10][0] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_pixel_size[10][1] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_pixel_size[11][0] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_pixel_size[11][1] := _b00000010
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr6:$array [18] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr6_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr6[0] := _b00101110
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr6[1] := _b00101111
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr6[2] := _b01100101
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr6[3] := _b01101110
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr6[4] := _b01100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr6[5] := _b01101111
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr6[6] := _b01100100
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr6[7] := _b01100101
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr6[8] := _b01110010
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr6[9] := _b00101111
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr6[10] := _b01100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr6[11] := _b01100001
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr6[12] := _b01100010
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr6[13] := _b01100001
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr6[14] := _b01100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr6[15] := _b00101110
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr6[16] := _b01100011
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_cabac_8x8_mvd:$array [55] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_cabac_8x8_mvd_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_cabac_8x8_mvd[0] := _b01110110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_cabac_8x8_mvd[1] := _b01101111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_cabac_8x8_mvd[2] := _b01101001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_cabac_8x8_mvd[3] := _b01100100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_cabac_8x8_mvd[4] := _b00100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_cabac_8x8_mvd[5] := _b01111000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_cabac_8x8_mvd[6] := _b00110010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_cabac_8x8_mvd[7] := _b00110110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_cabac_8x8_mvd[8] := _b00110100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_cabac_8x8_mvd[9] := _b01011111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_cabac_8x8_mvd[10] := _b01100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_cabac_8x8_mvd[11] := _b01100001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_cabac_8x8_mvd[12] := _b01100010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_cabac_8x8_mvd[13] := _b01100001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_cabac_8x8_mvd[14] := _b01100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_cabac_8x8_mvd[15] := _b01011111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_cabac_8x8_mvd[16] := _b00111000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_cabac_8x8_mvd[17] := _b01111000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_cabac_8x8_mvd[18] := _b00111000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_cabac_8x8_mvd[19] := _b01011111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_cabac_8x8_mvd[20] := _b01101101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_cabac_8x8_mvd[21] := _b01110110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_cabac_8x8_mvd[22] := _b01100100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_cabac_8x8_mvd[23] := _b00101000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_cabac_8x8_mvd[24] := _b01111000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_cabac_8x8_mvd[25] := _b00110010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_cabac_8x8_mvd[26] := _b00110110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_cabac_8x8_mvd[27] := _b00110100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_cabac_8x8_mvd[28] := _b01011111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_cabac_8x8_mvd[29] := _b01110100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_cabac_8x8_mvd[30] := _b00100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_cabac_8x8_mvd[31] := _b00101010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_cabac_8x8_mvd[32] := _b00101100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_cabac_8x8_mvd[33] := _b00100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_cabac_8x8_mvd[34] := _b01111000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_cabac_8x8_mvd[35] := _b00110010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_cabac_8x8_mvd[36] := _b00110110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_cabac_8x8_mvd[37] := _b00110100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_cabac_8x8_mvd[38] := _b01011111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_cabac_8x8_mvd[39] := _b01100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_cabac_8x8_mvd[40] := _b01100001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_cabac_8x8_mvd[41] := _b01100010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_cabac_8x8_mvd[42] := _b01100001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_cabac_8x8_mvd[43] := _b01100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_cabac_8x8_mvd[44] := _b01011111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_cabac_8x8_mvd[45] := _b01110100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_cabac_8x8_mvd[46] := _b00100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_cabac_8x8_mvd[47] := _b00101010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_cabac_8x8_mvd[48] := _b00101100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_cabac_8x8_mvd[49] := _b00100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_cabac_8x8_mvd[50] := _b01101001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_cabac_8x8_mvd[51] := _b01101110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_cabac_8x8_mvd[52] := _b01110100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_cabac_8x8_mvd[53] := _b00101001
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_ssd_planex_xzero:$array [16] $of $uint<8>
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_cached_satdx_xsatd_shift_x:$array [3] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_cached_satdx_xsatd_shift_x_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_cached_satdx_xsatd_shift_x[0] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_cached_satdx_xsatd_shift_x[1] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_cached_satdx_xsatd_shift_x[2] := _b00000010
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_cached_satdx_xsatd_shift_y:$array [3] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_cached_satdx_xsatd_shift_y_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_cached_satdx_xsatd_shift_y[0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_cached_satdx_xsatd_shift_y[1] := _b00000001
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_cached_satdx_xsatd_offset:$array [3] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_cached_satdx_xsatd_offset_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_cached_satdx_xsatd_offset[1] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_cached_satdx_xsatd_offset[2] := _b00010000
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_cached_satdx_xzero:$array [16] $of $uint<8>
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_cached_hadamardx_xhadamard_shift_x:$array [4] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_cached_hadamardx_xhadamard_shift_x_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_cached_hadamardx_xhadamard_shift_x[0] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_cached_hadamardx_xhadamard_shift_x[1] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_cached_hadamardx_xhadamard_shift_x[2] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_cached_hadamardx_xhadamard_shift_x[3] := _b00000011
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_cached_hadamardx_xhadamard_shift_y:$array [4] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_cached_hadamardx_xhadamard_shift_y_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_cached_hadamardx_xhadamard_shift_y[0] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_cached_hadamardx_xhadamard_shift_y[1] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_cached_hadamardx_xhadamard_shift_y[2] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_cached_hadamardx_xhadamard_shift_y[3] := _b00000010
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_cached_hadamardx_xhadamard_offset:$array [4] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_cached_hadamardx_xhadamard_offset_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_cached_hadamardx_xhadamard_offset[1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_cached_hadamardx_xhadamard_offset[2] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_cached_hadamardx_xhadamard_offset[3] := _b00000101
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ctz_4bitx_xlut:$array [16] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ctz_4bitx_xlut_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ctz_4bitx_xlut[0] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ctz_4bitx_xlut[2] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ctz_4bitx_xlut[4] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ctz_4bitx_xlut[6] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ctz_4bitx_xlut[8] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ctz_4bitx_xlut[10] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ctz_4bitx_xlut[12] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ctz_4bitx_xlut[14] := _b00000001
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_subpartition_b_to_golomb:$array [13] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_subpartition_b_to_golomb_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_subpartition_b_to_golomb[0] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_subpartition_b_to_golomb[1] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_subpartition_b_to_golomb[2] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_subpartition_b_to_golomb[3] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_subpartition_b_to_golomb[4] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_subpartition_b_to_golomb[5] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_subpartition_b_to_golomb[6] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_subpartition_b_to_golomb[7] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_subpartition_b_to_golomb[8] := _b00001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_subpartition_b_to_golomb[9] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_subpartition_b_to_golomb[10] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_subpartition_b_to_golomb[11] := _b00000011
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_mb_type_b_to_golomb:$array [3] $of $array [9] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_mb_type_b_to_golomb_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_mb_type_b_to_golomb[0][0] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_mb_type_b_to_golomb[0][1] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_mb_type_b_to_golomb[0][2] := _b00001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_mb_type_b_to_golomb[0][3] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_mb_type_b_to_golomb[0][4] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_mb_type_b_to_golomb[0][5] := _b00001110
  x264x_xlinkedx_xoptx_xo_iNtErNal_mb_type_b_to_golomb[0][6] := _b00010000
  x264x_xlinkedx_xoptx_xo_iNtErNal_mb_type_b_to_golomb[0][7] := _b00010010
  x264x_xlinkedx_xoptx_xo_iNtErNal_mb_type_b_to_golomb[0][8] := _b00010100
  x264x_xlinkedx_xoptx_xo_iNtErNal_mb_type_b_to_golomb[1][0] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_mb_type_b_to_golomb[1][1] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_mb_type_b_to_golomb[1][2] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_mb_type_b_to_golomb[1][3] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_mb_type_b_to_golomb[1][4] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_mb_type_b_to_golomb[1][5] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_mb_type_b_to_golomb[1][6] := _b00010001
  x264x_xlinkedx_xoptx_xo_iNtErNal_mb_type_b_to_golomb[1][7] := _b00010011
  x264x_xlinkedx_xoptx_xo_iNtErNal_mb_type_b_to_golomb[1][8] := _b00010101
  x264x_xlinkedx_xoptx_xo_iNtErNal_mb_type_b_to_golomb[2][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_mb_type_b_to_golomb[2][1] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_mb_type_b_to_golomb[2][2] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_mb_type_b_to_golomb[2][3] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_mb_type_b_to_golomb[2][4] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_mb_type_b_to_golomb[2][5] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_mb_type_b_to_golomb[2][6] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_mb_type_b_to_golomb[2][7] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_mb_type_b_to_golomb[2][8] := _b00000011
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_mb_header_bx_xi_mb_bits:$array [27] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_mb_header_bx_xi_mb_bits_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_mb_header_bx_xi_mb_bits[0] := _b00110001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_mb_header_bx_xi_mb_bits[1] := _b00101001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_mb_header_bx_xi_mb_bits[2] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_mb_header_bx_xi_mb_bits[3] := _b00110101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_mb_header_bx_xi_mb_bits[4] := _b00101101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_mb_header_bx_xi_mb_bits[6] := _b01000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_mb_header_bx_xi_mb_bits[7] := _b01100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_mb_header_bx_xi_mb_bits[9] := _b00111101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_mb_header_bx_xi_mb_bits[10] := _b00101111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_mb_header_bx_xi_mb_bits[12] := _b00111001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_mb_header_bx_xi_mb_bits[13] := _b00100101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_mb_header_bx_xi_mb_bits[14] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_mb_header_bx_xi_mb_bits[15] := _b01010011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_mb_header_bx_xi_mb_bits[16] := _b01110011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_mb_header_bx_xi_mb_bits[18] := _b01001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_mb_header_bx_xi_mb_bits[19] := _b01101011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_mb_header_bx_xi_mb_bits[21] := _b01011011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_mb_header_bx_xi_mb_bits[22] := _b01111011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_mb_header_bx_xi_mb_bits[24] := _b01000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_mb_header_bx_xi_mb_bits[25] := _b01100111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_mb_header_bx_xi_mb_bits[26] := _b00100001
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_coeff_abs_level1_ctx:$array [8] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_coeff_abs_level1_ctx_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_coeff_abs_level1_ctx[0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_coeff_abs_level1_ctx[1] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_coeff_abs_level1_ctx[2] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_coeff_abs_level1_ctx[3] := _b00000100
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_coeff_abs_levelgt1_ctx_chroma_dc:$array [8] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_coeff_abs_levelgt1_ctx_chroma_dc_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_coeff_abs_levelgt1_ctx_chroma_dc[0] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_coeff_abs_levelgt1_ctx_chroma_dc[1] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_coeff_abs_levelgt1_ctx_chroma_dc[2] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_coeff_abs_levelgt1_ctx_chroma_dc[3] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_coeff_abs_levelgt1_ctx_chroma_dc[4] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_coeff_abs_levelgt1_ctx_chroma_dc[5] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_coeff_abs_levelgt1_ctx_chroma_dc[6] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_coeff_abs_levelgt1_ctx_chroma_dc[7] := _b00001000
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_coeff_abs_levelgt1_ctx:$array [8] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_coeff_abs_levelgt1_ctx_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_coeff_abs_levelgt1_ctx[0] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_coeff_abs_levelgt1_ctx[1] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_coeff_abs_levelgt1_ctx[2] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_coeff_abs_levelgt1_ctx[3] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_coeff_abs_levelgt1_ctx[4] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_coeff_abs_levelgt1_ctx[5] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_coeff_abs_levelgt1_ctx[6] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_coeff_abs_levelgt1_ctx[7] := _b00001001
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_coeff_abs_level_transition:$array [2] $of $array [8] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_coeff_abs_level_transition_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_coeff_abs_level_transition[0][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_coeff_abs_level_transition[0][1] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_coeff_abs_level_transition[0][2] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_coeff_abs_level_transition[0][3] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_coeff_abs_level_transition[0][4] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_coeff_abs_level_transition[0][5] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_coeff_abs_level_transition[0][6] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_coeff_abs_level_transition[0][7] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_coeff_abs_level_transition[1][0] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_coeff_abs_level_transition[1][1] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_coeff_abs_level_transition[1][2] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_coeff_abs_level_transition[1][3] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_coeff_abs_level_transition[1][4] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_coeff_abs_level_transition[1][5] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_coeff_abs_level_transition[1][6] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_coeff_abs_level_transition[1][7] := _b00000111
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_hex2:$array [8] $of $array [2] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_hex2_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_hex2[0][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_hex2[0][1] := _b11111110
  x264x_xlinkedx_xoptx_xo_iNtErNal_hex2[1][0] := _b11111110
  x264x_xlinkedx_xoptx_xo_iNtErNal_hex2[2][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_hex2[2][1] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_hex2[3][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_hex2[3][1] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_hex2[4][0] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_hex2[5][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_hex2[5][1] := _b11111110
  x264x_xlinkedx_xoptx_xo_iNtErNal_hex2[6][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_hex2[6][1] := _b11111110
  x264x_xlinkedx_xoptx_xo_iNtErNal_hex2[7][0] := _b11111110
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_mod6m1:$array [8] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_mod6m1_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_mod6m1[0] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_mod6m1[2] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_mod6m1[3] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_mod6m1[4] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_mod6m1[5] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_mod6m1[6] := _b00000101
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_square1:$array [9] $of $array [2] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_square1_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_square1[1][1] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_square1[2][1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_square1[3][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_square1[4][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_square1[5][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_square1[5][1] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_square1[6][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_square1[6][1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_square1[7][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_square1[7][1] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_square1[8][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_square1[8][1] := _b00000001
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_search_refx_xx264_pixel_size_shift:$array [7] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_search_refx_xx264_pixel_size_shift_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_search_refx_xx264_pixel_size_shift[1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_search_refx_xx264_pixel_size_shift[2] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_search_refx_xx264_pixel_size_shift[3] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_search_refx_xx264_pixel_size_shift[4] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_search_refx_xx264_pixel_size_shift[5] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_search_refx_xx264_pixel_size_shift[6] := _b00000100
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_search_refx_xrange_mul:$array [4] $of $array [4] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_search_refx_xrange_mul_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_search_refx_xrange_mul[0][0] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_search_refx_xrange_mul[0][1] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_search_refx_xrange_mul[0][2] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_search_refx_xrange_mul[0][3] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_search_refx_xrange_mul[1][0] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_search_refx_xrange_mul[1][1] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_search_refx_xrange_mul[1][2] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_search_refx_xrange_mul[1][3] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_search_refx_xrange_mul[2][0] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_search_refx_xrange_mul[2][1] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_search_refx_xrange_mul[2][2] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_search_refx_xrange_mul[2][3] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_search_refx_xrange_mul[3][0] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_search_refx_xrange_mul[3][1] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_search_refx_xrange_mul[3][2] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_search_refx_xrange_mul[3][3] := _b00000110
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_search_refx_xhex4:$array [16] $of $array [2] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_search_refx_xhex4_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_search_refx_xhex4[0][1] := _b11111100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_search_refx_xhex4[1][1] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_search_refx_xhex4[2][0] := _b11111110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_search_refx_xhex4[2][1] := _b11111101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_search_refx_xhex4[3][0] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_search_refx_xhex4[3][1] := _b11111101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_search_refx_xhex4[4][0] := _b11111100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_search_refx_xhex4[4][1] := _b11111110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_search_refx_xhex4[5][0] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_search_refx_xhex4[5][1] := _b11111110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_search_refx_xhex4[6][0] := _b11111100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_search_refx_xhex4[6][1] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_search_refx_xhex4[7][0] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_search_refx_xhex4[7][1] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_search_refx_xhex4[8][0] := _b11111100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_search_refx_xhex4[9][0] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_search_refx_xhex4[10][0] := _b11111100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_search_refx_xhex4[10][1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_search_refx_xhex4[11][0] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_search_refx_xhex4[11][1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_search_refx_xhex4[12][0] := _b11111100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_search_refx_xhex4[12][1] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_search_refx_xhex4[13][0] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_search_refx_xhex4[13][1] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_search_refx_xhex4[14][0] := _b11111110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_search_refx_xhex4[14][1] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_search_refx_xhex4[15][0] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_search_refx_xhex4[15][1] := _b00000011
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_search_refx_xzero:$array [128] $of $uint<8>
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_subpel_iterations:$array [12] $of $array [4] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_subpel_iterations_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_subpel_iterations[1][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_subpel_iterations[1][1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_subpel_iterations[2][1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_subpel_iterations[2][2] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_subpel_iterations[3][1] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_subpel_iterations[3][2] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_subpel_iterations[4][1] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_subpel_iterations[4][2] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_subpel_iterations[4][3] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_subpel_iterations[5][1] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_subpel_iterations[5][2] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_subpel_iterations[5][3] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_subpel_iterations[6][2] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_subpel_iterations[6][3] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_subpel_iterations[7][2] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_subpel_iterations[7][3] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_subpel_iterations[8][2] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_subpel_iterations[8][3] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_subpel_iterations[9][2] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_subpel_iterations[9][3] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_subpel_iterations[10][2] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_subpel_iterations[10][3] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_subpel_iterations[11][2] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_subpel_iterations[11][3] := _b00001010
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_refine_bidirx_xdia4d:$array [33] $of $array [4] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_refine_bidirx_xdia4d_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_refine_bidirx_xdia4d[1][3] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_refine_bidirx_xdia4d[2][3] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_refine_bidirx_xdia4d[3][2] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_refine_bidirx_xdia4d[4][2] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_refine_bidirx_xdia4d[5][1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_refine_bidirx_xdia4d[6][1] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_refine_bidirx_xdia4d[7][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_refine_bidirx_xdia4d[8][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_refine_bidirx_xdia4d[9][2] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_refine_bidirx_xdia4d[9][3] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_refine_bidirx_xdia4d[10][2] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_refine_bidirx_xdia4d[10][3] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_refine_bidirx_xdia4d[11][1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_refine_bidirx_xdia4d[11][2] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_refine_bidirx_xdia4d[12][1] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_refine_bidirx_xdia4d[12][2] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_refine_bidirx_xdia4d[13][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_refine_bidirx_xdia4d[13][1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_refine_bidirx_xdia4d[14][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_refine_bidirx_xdia4d[14][1] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_refine_bidirx_xdia4d[15][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_refine_bidirx_xdia4d[15][3] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_refine_bidirx_xdia4d[16][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_refine_bidirx_xdia4d[16][3] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_refine_bidirx_xdia4d[17][1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_refine_bidirx_xdia4d[17][3] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_refine_bidirx_xdia4d[18][1] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_refine_bidirx_xdia4d[18][3] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_refine_bidirx_xdia4d[19][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_refine_bidirx_xdia4d[19][2] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_refine_bidirx_xdia4d[20][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_refine_bidirx_xdia4d[20][2] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_refine_bidirx_xdia4d[21][2] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_refine_bidirx_xdia4d[21][3] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_refine_bidirx_xdia4d[22][2] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_refine_bidirx_xdia4d[22][3] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_refine_bidirx_xdia4d[23][1] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_refine_bidirx_xdia4d[23][2] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_refine_bidirx_xdia4d[24][1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_refine_bidirx_xdia4d[24][2] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_refine_bidirx_xdia4d[25][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_refine_bidirx_xdia4d[25][1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_refine_bidirx_xdia4d[26][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_refine_bidirx_xdia4d[26][1] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_refine_bidirx_xdia4d[27][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_refine_bidirx_xdia4d[27][3] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_refine_bidirx_xdia4d[28][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_refine_bidirx_xdia4d[28][3] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_refine_bidirx_xdia4d[29][1] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_refine_bidirx_xdia4d[29][3] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_refine_bidirx_xdia4d[30][1] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_refine_bidirx_xdia4d[30][3] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_refine_bidirx_xdia4d[31][0] := _b11111111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_refine_bidirx_xdia4d[31][2] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_refine_bidirx_xdia4d[32][0] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_refine_bidirx_xdia4d[32][2] := _b11111111
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_yx_1d:$array [16] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_yx_1d_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_yx_1d[1] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_yx_1d[2] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_yx_1d[3] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_yx_1d[4] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_yx_1d[5] := _b00001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_yx_1d[6] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_yx_1d[7] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_yx_1d[8] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_yx_1d[9] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_yx_1d[10] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_yx_1d[11] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_yx_1d[12] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_yx_1d[13] := _b00001110
  x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_yx_1d[14] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_yx_1d[15] := _b00001111
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_encode_chroma_internalx_xchroma422_scan:$array [8] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_encode_chroma_internalx_xchroma422_scan_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_encode_chroma_internalx_xchroma422_scan[1] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_encode_chroma_internalx_xchroma422_scan[2] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_encode_chroma_internalx_xchroma422_scan[3] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_encode_chroma_internalx_xchroma422_scan[4] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_encode_chroma_internalx_xchroma422_scan[5] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_encode_chroma_internalx_xchroma422_scan[6] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_encode_chroma_internalx_xchroma422_scan[7] := _b00000111
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_mvd_cpnx_xctxes:$array [8] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_mvd_cpnx_xctxes_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_mvd_cpnx_xctxes[0] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_mvd_cpnx_xctxes[1] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_mvd_cpnx_xctxes[2] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_mvd_cpnx_xctxes[3] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_mvd_cpnx_xctxes[4] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_mvd_cpnx_xctxes[5] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_mvd_cpnx_xctxes[6] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_mvd_cpnx_xctxes[7] := _b00000110
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x264_macroblock_write_cavlcx_xi_offsets:$array [3] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_x264_macroblock_write_cavlcx_xi_offsets_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_macroblock_write_cavlcx_xi_offsets[0] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x264_macroblock_write_cavlcx_xi_offsets[1] := _b00010111
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_i_chroma_qp_table:$array [94] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_i_chroma_qp_table_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_chroma_qp_table[13] := _b00000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_chroma_qp_table[14] := _b00000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_chroma_qp_table[15] := _b00000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_chroma_qp_table[16] := _b00000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_chroma_qp_table[17] := _b00000101
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_chroma_qp_table[18] := _b00000110
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_chroma_qp_table[19] := _b00000111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_chroma_qp_table[20] := _b00001000
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_chroma_qp_table[21] := _b00001001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_chroma_qp_table[22] := _b00001010
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_chroma_qp_table[23] := _b00001011
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_chroma_qp_table[24] := _b00001100
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_chroma_qp_table[25] := _b00001101
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_chroma_qp_table[26] := _b00001110
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_chroma_qp_table[27] := _b00001111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_chroma_qp_table[28] := _b00010000
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_chroma_qp_table[29] := _b00010001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_chroma_qp_table[30] := _b00010010
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_chroma_qp_table[31] := _b00010011
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_chroma_qp_table[32] := _b00010100
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_chroma_qp_table[33] := _b00010101
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_chroma_qp_table[34] := _b00010110
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_chroma_qp_table[35] := _b00010111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_chroma_qp_table[36] := _b00011000
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_chroma_qp_table[37] := _b00011001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_chroma_qp_table[38] := _b00011010
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_chroma_qp_table[39] := _b00011011
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_chroma_qp_table[40] := _b00011100
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_chroma_qp_table[41] := _b00011101
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_chroma_qp_table[42] := _b00011101
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_chroma_qp_table[43] := _b00011110
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_chroma_qp_table[44] := _b00011111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_chroma_qp_table[45] := _b00100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_chroma_qp_table[46] := _b00100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_chroma_qp_table[47] := _b00100001
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_chroma_qp_table[48] := _b00100010
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_chroma_qp_table[49] := _b00100010
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_chroma_qp_table[50] := _b00100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_chroma_qp_table[51] := _b00100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_chroma_qp_table[52] := _b00100100
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_chroma_qp_table[53] := _b00100100
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_chroma_qp_table[54] := _b00100101
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_chroma_qp_table[55] := _b00100101
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_chroma_qp_table[56] := _b00100101
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_chroma_qp_table[57] := _b00100110
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_chroma_qp_table[58] := _b00100110
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_chroma_qp_table[59] := _b00100110
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_chroma_qp_table[60] := _b00100111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_chroma_qp_table[61] := _b00100111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_chroma_qp_table[62] := _b00100111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_chroma_qp_table[63] := _b00100111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_chroma_qp_table[64] := _b00100111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_chroma_qp_table[65] := _b00100111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_chroma_qp_table[66] := _b00100111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_chroma_qp_table[67] := _b00100111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_chroma_qp_table[68] := _b00100111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_chroma_qp_table[69] := _b00100111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_chroma_qp_table[70] := _b00100111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_chroma_qp_table[71] := _b00100111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_chroma_qp_table[72] := _b00100111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_chroma_qp_table[73] := _b00100111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_chroma_qp_table[74] := _b00100111
  x264x_xlinkedx_xoptx_xo_iNtErNal_i_chroma_qp_table[75] := _b00100111
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr83:$array [35] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr83_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr83[0] := _b01111000
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr83[1] := _b00110010
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr83[2] := _b00110110
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr83[3] := _b00110100
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr83[4] := _b01011111
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr83[5] := _b01100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr83[6] := _b01101100
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr83[7] := _b01101001
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr83[8] := _b01110000
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr83[9] := _b00110011
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr83[10] := _b00101000
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr83[11] := _b00100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr83[12] := _b01100100
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr83[13] := _b01100101
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr83[14] := _b01101110
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr83[15] := _b01101111
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr83[16] := _b01101101
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr83[17] := _b00101100
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr83[18] := _b00100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr83[19] := _b00110000
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr83[20] := _b00101100
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr83[21] := _b00100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr83[22] := _b00110111
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr83[23] := _b00100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr83[24] := _b00101001
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr83[25] := _b00100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr83[26] := _b00111101
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr83[27] := _b00111101
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr83[28] := _b00100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr83[29] := _b01100100
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr83[30] := _b01100101
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr83[31] := _b01101110
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr83[32] := _b01101111
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr83[33] := _b01101101
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr184:$array [20] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr184_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr184[0] := _b00101110
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr184[1] := _b00101111
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr184[2] := _b01100101
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr184[3] := _b01101110
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr184[4] := _b01100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr184[5] := _b01101111
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr184[6] := _b01100100
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr184[7] := _b01100101
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr184[8] := _b01110010
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr184[9] := _b00101111
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr184[10] := _b01100101
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr184[11] := _b01101110
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr184[12] := _b01100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr184[13] := _b01101111
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr184[14] := _b01100100
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr184[15] := _b01100101
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr184[16] := _b01110010
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr184[17] := _b00101110
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr184[18] := _b01100011
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_weighted_pred_init:$array [39] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_weighted_pred_init_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_weighted_pred_init[0] := _b01110110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_weighted_pred_init[1] := _b01101111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_weighted_pred_init[2] := _b01101001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_weighted_pred_init[3] := _b01100100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_weighted_pred_init[4] := _b00100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_weighted_pred_init[5] := _b01111000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_weighted_pred_init[6] := _b00110010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_weighted_pred_init[7] := _b00110110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_weighted_pred_init[8] := _b00110100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_weighted_pred_init[9] := _b01011111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_weighted_pred_init[10] := _b01110111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_weighted_pred_init[11] := _b01100101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_weighted_pred_init[12] := _b01101001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_weighted_pred_init[13] := _b01100111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_weighted_pred_init[14] := _b01101000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_weighted_pred_init[15] := _b01110100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_weighted_pred_init[16] := _b01100101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_weighted_pred_init[17] := _b01100100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_weighted_pred_init[18] := _b01011111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_weighted_pred_init[19] := _b01110000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_weighted_pred_init[20] := _b01110010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_weighted_pred_init[21] := _b01100101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_weighted_pred_init[22] := _b01100100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_weighted_pred_init[23] := _b01011111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_weighted_pred_init[24] := _b01101001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_weighted_pred_init[25] := _b01101110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_weighted_pred_init[26] := _b01101001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_weighted_pred_init[27] := _b01110100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_weighted_pred_init[28] := _b00101000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_weighted_pred_init[29] := _b01111000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_weighted_pred_init[30] := _b00110010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_weighted_pred_init[31] := _b00110110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_weighted_pred_init[32] := _b00110100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_weighted_pred_init[33] := _b01011111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_weighted_pred_init[34] := _b01110100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_weighted_pred_init[35] := _b00100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_weighted_pred_init[36] := _b00101010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_weighted_pred_init[37] := _b00101001
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr285:$array [36] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr285_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr285[0] := _b01101000
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr285[1] := _b00101101
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr285[2] := _b00111110
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr285[3] := _b01110011
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr285[4] := _b01101000
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr285[5] := _b00101110
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr285[6] := _b01110111
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr285[7] := _b01100101
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr285[8] := _b01101001
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr285[9] := _b01100111
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr285[10] := _b01101000
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr285[11] := _b01110100
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr285[12] := _b01011011
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr285[13] := _b01101010
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr285[14] := _b01011101
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr285[15] := _b01011011
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr285[16] := _b01101001
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr285[17] := _b01011101
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr285[18] := _b00101110
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr285[19] := _b01101001
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr285[20] := _b01011111
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr285[21] := _b01100100
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr285[22] := _b01100101
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr285[23] := _b01101110
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr285[24] := _b01101111
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr285[25] := _b01101101
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr285[26] := _b00100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr285[27] := _b00111101
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr285[28] := _b00111101
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr285[29] := _b00100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr285[30] := _b01100100
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr285[31] := _b01100101
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr285[32] := _b01101110
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr285[33] := _b01101111
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr285[34] := _b01101101
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr3:$array [17] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr3_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr3[0] := _b00101000
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr3[1] := _b01100110
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr3[2] := _b01101001
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr3[3] := _b01110010
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr3[4] := _b01110011
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr3[5] := _b01110100
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr3[6] := _b01011111
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr3[7] := _b01111001
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr3[8] := _b00100110
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr3[9] := _b00110001
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr3[10] := _b00101001
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr3[11] := _b00100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr3[12] := _b00111101
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr3[13] := _b00111101
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr3[14] := _b00100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr3[15] := _b00110000
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_slice_header_write:$array [65] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_slice_header_write_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_slice_header_write[0] := _b01110110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_slice_header_write[1] := _b01101111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_slice_header_write[2] := _b01101001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_slice_header_write[3] := _b01100100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_slice_header_write[4] := _b00100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_slice_header_write[5] := _b01111000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_slice_header_write[6] := _b00110010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_slice_header_write[7] := _b00110110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_slice_header_write[8] := _b00110100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_slice_header_write[9] := _b01011111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_slice_header_write[10] := _b01110011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_slice_header_write[11] := _b01101100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_slice_header_write[12] := _b01101001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_slice_header_write[13] := _b01100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_slice_header_write[14] := _b01100101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_slice_header_write[15] := _b01011111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_slice_header_write[16] := _b01101000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_slice_header_write[17] := _b01100101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_slice_header_write[18] := _b01100001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_slice_header_write[19] := _b01100100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_slice_header_write[20] := _b01100101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_slice_header_write[21] := _b01110010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_slice_header_write[22] := _b01011111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_slice_header_write[23] := _b01110111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_slice_header_write[24] := _b01110010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_slice_header_write[25] := _b01101001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_slice_header_write[26] := _b01110100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_slice_header_write[27] := _b01100101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_slice_header_write[28] := _b00101000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_slice_header_write[29] := _b01100010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_slice_header_write[30] := _b01110011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_slice_header_write[31] := _b01011111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_slice_header_write[32] := _b01110100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_slice_header_write[33] := _b00100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_slice_header_write[34] := _b00101010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_slice_header_write[35] := _b00101100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_slice_header_write[36] := _b00100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_slice_header_write[37] := _b01111000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_slice_header_write[38] := _b00110010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_slice_header_write[39] := _b00110110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_slice_header_write[40] := _b00110100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_slice_header_write[41] := _b01011111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_slice_header_write[42] := _b01110011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_slice_header_write[43] := _b01101100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_slice_header_write[44] := _b01101001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_slice_header_write[45] := _b01100011
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_slice_header_write[46] := _b01100101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_slice_header_write[47] := _b01011111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_slice_header_write[48] := _b01101000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_slice_header_write[49] := _b01100101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_slice_header_write[50] := _b01100001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_slice_header_write[51] := _b01100100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_slice_header_write[52] := _b01100101
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_slice_header_write[53] := _b01110010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_slice_header_write[54] := _b01011111
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_slice_header_write[55] := _b01110100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_slice_header_write[56] := _b00100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_slice_header_write[57] := _b00101010
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_slice_header_write[58] := _b00101100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_slice_header_write[59] := _b00100000
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_slice_header_write[60] := _b01101001
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_slice_header_write[61] := _b01101110
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_slice_header_write[62] := _b01110100
  x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_slice_header_write[63] := _b00101001
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_f_map:$array [6] $of structx_xframe_map
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_h_hw:$pointer< structx_xx264_t >
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_h_hw_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_h_hw := _b1111111111111111111111111111111111111111111111111111111111111111
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x0:$pointer< $uint<16> >
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x0_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x0 := _b1111111111111111111111111111111111111111111111111111111111111111
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x1:$pointer< $uint<32> >
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x1_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x1 := _b1111111111111111111111111111111111111111111111111111111111111111
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x2:$pointer< $uint<32> >
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x2_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x2 := _b1111111111111111111111111111111111111111111111111111111111111111
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x3:$pointer< $uint<16> >
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x3_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x3 := _b1111111111111111111111111111111111111111111111111111111111111111
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x4:$pointer< $uint<16> >
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x4_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x4 := _b1111111111111111111111111111111111111111111111111111111111111111
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x5:$pointer< $uint<16> >
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x5_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x5 := _b1111111111111111111111111111111111111111111111111111111111111111
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x6:$pointer< $uint<16> >
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x6_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x6 := _b1111111111111111111111111111111111111111111111111111111111111111
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x7:$pointer< $uint<16> >
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x7_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x7 := _b1111111111111111111111111111111111111111111111111111111111111111
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x8:$pointer< $uint<32> >
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x8_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x8 := _b1111111111111111111111111111111111111111111111111111111111111111
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x9:$pointer< $uint<32> >
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x9_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x9 := _b1111111111111111111111111111111111111111111111111111111111111111
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x10:$pointer< $uint<16> >
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x10_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x10 := _b1111111111111111111111111111111111111111111111111111111111111111
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x11:$pointer< $uint<16> >
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x11_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x11 := _b1111111111111111111111111111111111111111111111111111111111111111
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x12:$pointer< $uint<16> >
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x12_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x12 := _b1111111111111111111111111111111111111111111111111111111111111111
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x13:$pointer< $uint<16> >
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x13_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x13 := _b1111111111111111111111111111111111111111111111111111111111111111
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x14:$pointer< $uint<16> >
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x14_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x14 := _b1111111111111111111111111111111111111111111111111111111111111111
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x15:$pointer< $pointer< structx_xx264_frame > >
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x15_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x15 := _b1111111111111111111111111111111111111111111111111111111111111111
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x16:$pointer< $pointer< structx_xx264_frame > >
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x16_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x16 := _b1111111111111111111111111111111111111111111111111111111111111111
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x17:$pointer< $pointer< structx_xx264_frame > >
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x17_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x17 := _b1111111111111111111111111111111111111111111111111111111111111111
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x18:$pointer< $pointer< structx_xx264_frame > >
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x18_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x18 := _b1111111111111111111111111111111111111111111111111111111111111111
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x19:$array [70] $of $pointer< $uint<16> >
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x21:$pointer< structx_xx264_t >
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x21_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x21 := _b1111111111111111111111111111111111111111111111111111111111111111
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x22:$pointer< $uint<8> >
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x22_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x22 := _b1111111111111111111111111111111111111111111111111111111111111111
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x23:$pointer< $record < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $pointer< $uint<8> > > < $uint<32> >  >
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x23_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x23 := _b1111111111111111111111111111111111111111111111111111111111111111
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x24:$pointer< $uint<8> >
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x24_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x24 := _b1111111111111111111111111111111111111111111111111111111111111111
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x25:$pointer< $uint<8> >
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x25_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x25 := _b1111111111111111111111111111111111111111111111111111111111111111
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x26:$pointer< $uint<8> >
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x26_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x26 := _b1111111111111111111111111111111111111111111111111111111111111111
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x27:$pointer< $uint<8> >
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x27_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x27 := _b1111111111111111111111111111111111111111111111111111111111111111
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x28:$pointer< $uint<8> >
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x28_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x28 := _b1111111111111111111111111111111111111111111111111111111111111111
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x29:$pointer< $uint<8> >
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x29_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x29 := _b1111111111111111111111111111111111111111111111111111111111111111
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x30:$pointer< $uint<8> >
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x30_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x30 := _b1111111111111111111111111111111111111111111111111111111111111111
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x31:$pointer< $uint<8> >
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x31_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x31 := _b1111111111111111111111111111111111111111111111111111111111111111
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x32:$pointer< structx_xx264_ratecontrol_t >
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x32_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x32 := _b1111111111111111111111111111111111111111111111111111111111111111
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x33:$pointer< $record < $float<8,23> > < $float<8,23> > < $float<8,23> > < $float<8,23> > < $float<8,23> >  >
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x33_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x33 := _b1111111111111111111111111111111111111111111111111111111111111111
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x34:$pointer< $record < $float<8,23> > < $float<8,23> > < $float<8,23> > < $float<8,23> > < $float<8,23> >  >
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x34_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x34 := _b1111111111111111111111111111111111111111111111111111111111111111
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x35:$pointer< structx_xx264_frame >
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x35_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x35 := _b1111111111111111111111111111111111111111111111111111111111111111
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x36:$pointer< structx_xx264_frame >
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x36_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x36 := _b1111111111111111111111111111111111111111111111111111111111111111
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x37:$array [2] $of $array [19] $of $pointer< structx_xx264_frame >
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x38:$array [2] $of $array [19] $of $pointer< structx_xx264_frame >
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x39:$pointer< $uint<8> >
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x39_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x39 := _b1111111111111111111111111111111111111111111111111111111111111111
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x40:$pointer< $uint<8> >
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x40_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x40 := _b1111111111111111111111111111111111111111111111111111111111111111
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x41:$array [6] $of $pointer< $uint<8> >
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x43:$array [2] $of $pointer< structx_xx264_frame >
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_Buff0:$array [9437184] $of $uint<8>
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_COPY_BUFFER_1:$array [9437184] $of $uint<8>
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr90:$array [9] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr90_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr90[0] := _b01101111
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr90[1] := _b01110101
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr90[2] := _b01110100
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr90[3] := _b01011111
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr90[4] := _b01100100
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr90[5] := _b01100001
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr90[6] := _b01110100
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr90[7] := _b01100001
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_ref_num:$uint<32>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_ref_num_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_ref_num := _b00000000000000000000000000000101
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_ref_list:$array [6] $of $uint<32>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_ref_list_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_ref_list[1] := _b00000000000000000000000000000001
  x264x_xlinkedx_xoptx_xo_iNtErNal_ref_list[2] := _b00000000000000000000000000000010
  x264x_xlinkedx_xoptx_xo_iNtErNal_ref_list[3] := _b00000000000000000000000000000011
  x264x_xlinkedx_xoptx_xo_iNtErNal_ref_list[4] := _b00000000000000000000000000000100
  x264x_xlinkedx_xoptx_xo_iNtErNal_ref_list[5] := _b00000000000000000000000000000101
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr191:$array [8] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr191_initializer_in_x264x_xlinkedx_xoptx_xo] $in () $out () $is 
{
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr191[0] := _b01101001
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr191[1] := _b01101110
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr191[2] := _b01011111
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr191[3] := _b01100100
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr191[4] := _b01100001
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr191[5] := _b01110100
  x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr191[6] := _b01100001
  $attribute nooptimize 
}
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_already_alloted:$uint<32>
$storage x264x_xlinkedx_xoptx_xo_iNtErNal_mem_space:$array [10485760] $of $uint<8>
$module [x264x_xlinkedx_xoptx_xo_storage_initializer_] $in () $out () $is 
{
  $parallelblock [pb] 
  {
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_hpel_ref0_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_hpel_ref1_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_x264_scan8_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_left_indices_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_type_fix_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_chroma_pred_mode_fix_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr1_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr12_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_bipred_init_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_x264_macroblock_deblock_strength_mbaffx_xoffset_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_x264_size2pixel_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight_tab_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct4_weight_tab_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct4_weight2_tab_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_x264_dct8_weight2_tab_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_renorm_shift_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_entropy_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_bypass_lut_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr13_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_cache_rect_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr2_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_x264_decimate_table4_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_x264_decimate_table8_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff0_token_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_token_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x2_dc_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_x264_total_zeros_2x4_dc_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_8x8_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset_8x8_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_flag_offset_chroma_422_dc_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_x264_significant_coeff_flag_offset_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_x264_last_coeff_flag_offset_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_x264_coeff_abs_level_m1_offset_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_x264_count_cat_m1_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan4_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan2x4_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan2x2_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_x264_quant_4x4_trellisx_xctx_ac_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_x264_zigzag_scan8_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda_tab_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_x264_lambda2_tab_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr8_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr19_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_analyse_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_i_mb_b16x8_cost_table_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_partition_listX_table_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_x264_macroblock_analysex_xcheck_mv_lists_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_x264_transform_allowed_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ue_size_tab_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_chroma_mode_available_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_x_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_y_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_mb_analyse_inter_p16x16_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr5_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_x264_trellis_lambda2_tab_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_x264_chroma_lambda2_offset_tab_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_xy_fdec_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_cbp_to_golomb_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_ct_index_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cavlc_block_residual_internalx_xctz_index_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cavlc_block_residual_internalx_xcount_cat_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cavlc_block_residual_escapex_xnext_suffix_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_pred_mode4x4_fix_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_ctx_cat_plane_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_cbf_ctxidxincx_xbase_ctx_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_x264_pred_i4x4_neighbors_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_i8x8_mode_available_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_xy_fenc_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_i4x4_mode_available_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_i16x16_mode_available_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_analyse_intrax_xintra_analysis_shortcut_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_analyse_intrax_xi16x16_thresh_lut_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_pred_mode16x16_fix_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_analyse_intrax_xcost_div_fix8_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_analyse_intrax_xi8x8_thresh_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_subpartition_p_to_golomb_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_type_list_table_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_x264_pixel_size_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr6_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_cabac_8x8_mvd_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_cached_satdx_xsatd_shift_x_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_cached_satdx_xsatd_shift_y_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_cached_satdx_xsatd_offset_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_cached_hadamardx_xhadamard_shift_x_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_cached_hadamardx_xhadamard_shift_y_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_cached_hadamardx_xhadamard_offset_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_x264_ctz_4bitx_xlut_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_subpartition_b_to_golomb_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_mb_type_b_to_golomb_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_mb_header_bx_xi_mb_bits_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_coeff_abs_level1_ctx_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_coeff_abs_levelgt1_ctx_chroma_dc_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_coeff_abs_levelgt1_ctx_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_coeff_abs_level_transition_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_hex2_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_mod6m1_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_square1_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_search_refx_xx264_pixel_size_shift_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_search_refx_xrange_mul_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_search_refx_xhex4_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_subpel_iterations_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_x264_me_refine_bidirx_xdia4d_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_block_idx_yx_1d_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_x264_mb_encode_chroma_internalx_xchroma422_scan_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_mvd_cpnx_xctxes_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_x264_macroblock_write_cavlcx_xi_offsets_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_i_chroma_qp_table_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr83_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr184_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_weighted_pred_init_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr285_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr3_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_slice_header_write_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_h_hw_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x0_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x1_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x2_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x3_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x4_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x5_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x6_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x7_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x8_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x9_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x10_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x11_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x12_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x13_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x14_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x15_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x16_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x17_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x18_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x21_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x22_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x23_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x24_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x25_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x26_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x27_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x28_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x29_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x30_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x31_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x32_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x33_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x34_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x35_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x36_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x39_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_ptx_x40_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr90_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_ref_num_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_ref_list_initializer_in_x264x_xlinkedx_xoptx_xo () () 
    $call x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr191_initializer_in_x264x_xlinkedx_xoptx_xo () () 
  }
  $attribute initializer
}
$module [main] 
$in ()
$out (ret_val__ : $uint<32>)
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    // load 
    iNsTr_0 := stderr
    iNsTr_1 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ])
    $call fwrite (iNsTr_1 ( $bitcast ($uint<32> ) _b00000000000000000000000000010001 )  ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  iNsTr_0 )  (iNsTr_2)
    $call x264_hardware ()  ()
    ret_val__ := ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) 
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [pixel_avg_16x16] 
$in (pix1 : $pointer< $uint<8> > i_stride_pix1 : $uint<32> pix2 : $pointer< $uint<8> > i_stride_pix2 : $uint<32> pix3 : $pointer< $uint<8> > i_stride_pix3 : $uint<32> weight : $uint<32> )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    // compare instruction
    iNsTr_0 := (weight == ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  )
    $if iNsTr_0 $then  $place [bb_0_bbx_xnphx_xusx_xix_xpreheader] $else $place [bb_0_bb_8] $endif 
    //begin: basic-block bbx_xnphx_xusx_xix_xpreheader
    $merge bb_0_bbx_xnphx_xusx_xix_xpreheader
    $endmerge
    $place [bbx_xnphx_xusx_xix_xpreheader_bbx_xnphx_xusx_xi]
    //begin: basic-block bb_2
    $merge bb_3_bb_2
    $endmerge
    iNsTr_29 := (yx_x05x_xusx_xi + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond20 := (iNsTr_29 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond20 $then  $place [bb_2_pixel_avg_wxhx_xexitx_xloopexit19] $else $place [bb_2_bbx_xnphx_xusx_xi] $endif 
    //begin: basic-block bb_3
    $merge bb_3_bb_3 bbx_xnphx_xusx_xi_bb_3
    $phi xx_x03x_xusx_xi :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xusx_xi_bb_3 ( $cast ($uint<32>) iNsTr_16) $on bb_3_bb_3 
    $endmerge
    tmp22 := (tmp21 + xx_x03x_xusx_xi)
    scevgep16x_xi := pix2[tmp22]
    tmp24 := (tmp23 + xx_x03x_xusx_xi)
    scevgep13x_xi := pix3[tmp24]
    tmp26 := (tmp25 + xx_x03x_xusx_xi)
    scevgepx_xi := pix1[tmp26]
    // load 
    iNsTr_7 := ->(scevgep16x_xi) 
    iNsTr_8 := ($cast ($uint<32>) iNsTr_7)
    // load 
    iNsTr_9 := ->(scevgep13x_xi) 
    iNsTr_10 := ($cast ($uint<32>) iNsTr_9)
    iNsTr_11 := (iNsTr_8 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_12 := (iNsTr_11 + iNsTr_10)
    iNsTr_13 := (iNsTr_12 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_14 := ($cast ($uint<8>) iNsTr_13)
    ->(scevgepx_xi) := iNsTr_14
    iNsTr_16 := (xx_x03x_xusx_xi + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond13 := (iNsTr_16 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond13 $then  $place [bb_3_bb_2] $else $place [bb_3_bb_3] $endif 
    //begin: basic-block bbx_xnphx_xusx_xi
    $merge bb_2_bbx_xnphx_xusx_xi bbx_xnphx_xusx_xix_xpreheader_bbx_xnphx_xusx_xi
    $phi yx_x05x_xusx_xi :=  ( $cast ($uint<32>) iNsTr_29) $on bb_2_bbx_xnphx_xusx_xi ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xusx_xix_xpreheader_bbx_xnphx_xusx_xi 
    $endmerge
    tmp21 := (i_stride_pix2 * yx_x05x_xusx_xi)
    tmp23 := (i_stride_pix3 * yx_x05x_xusx_xi)
    tmp25 := (i_stride_pix1 * yx_x05x_xusx_xi)
    $place [bbx_xnphx_xusx_xi_bb_3]
    //begin: basic-block pixel_avg_wxhx_xexitx_xloopexit
    $merge bb_9_pixel_avg_wxhx_xexitx_xloopexit
    $endmerge
    $place [pixel_avg_wxhx_xexitx_xloopexit_pixel_avg_wxhx_xexit]
    //begin: basic-block pixel_avg_wxhx_xexitx_xloopexit19
    $merge bb_2_pixel_avg_wxhx_xexitx_xloopexit19
    $endmerge
    $place [pixel_avg_wxhx_xexitx_xloopexit19_pixel_avg_wxhx_xexit]
    //begin: basic-block pixel_avg_wxhx_xexit
    $merge pixel_avg_wxhx_xexitx_xloopexit_pixel_avg_wxhx_xexit pixel_avg_wxhx_xexitx_xloopexit19_pixel_avg_wxhx_xexit
    $endmerge
    $place [return__]
    //begin: basic-block bb_8
    $merge bb_0_bb_8
    $endmerge
    iNsTr_3 := (( $bitcast ($uint<32> ) _b00000000000000000000000001000000 )  - weight)
    $place [bb_8_bbx_xnphx_xusx_xi14]
    //begin: basic-block bb_9
    $merge x264_clip_pixelx_xexitx_xusx_xi_bb_9
    $endmerge
    iNsTr_41 := (yx_x05x_xusx_xi10 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond := (iNsTr_41 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond $then  $place [bb_9_pixel_avg_wxhx_xexitx_xloopexit] $else $place [bb_9_bbx_xnphx_xusx_xi14] $endif 
    //begin: basic-block x264_clip_pixelx_xexitx_xusx_xi
    $merge bb_11_x264_clip_pixelx_xexitx_xusx_xi bb_12_x264_clip_pixelx_xexitx_xusx_xi
    $phi iNsTr_35 :=  ( $cast ($uint<32>) iNsTr_33) $on bb_11_x264_clip_pixelx_xexitx_xusx_xi ( $cast ($uint<32>) iNsTr_26) $on bb_12_x264_clip_pixelx_xexitx_xusx_xi 
    $endmerge
    iNsTr_36 := ($cast ($uint<8>) iNsTr_35)
    ->(scevgep16x_xi5) := iNsTr_36
    iNsTr_38 := (xx_x03x_xusx_xi3 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (iNsTr_38 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond1 $then  $place [x264_clip_pixelx_xexitx_xusx_xi_bb_9] $else $place [x264_clip_pixelx_xexitx_xusx_xi_bb_12] $endif 
    //begin: basic-block bb_11
    $merge bb_12_bb_11
    $endmerge
    iNsTr_31 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_26)
    iNsTr_32 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_31) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_33 := (iNsTr_32 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_11_x264_clip_pixelx_xexitx_xusx_xi]
    //begin: basic-block bb_12
    $merge bbx_xnphx_xusx_xi14_bb_12 x264_clip_pixelx_xexitx_xusx_xi_bb_12
    $phi xx_x03x_xusx_xi3 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xusx_xi14_bb_12 ( $cast ($uint<32>) iNsTr_38) $on x264_clip_pixelx_xexitx_xusx_xi_bb_12 
    $endmerge
    tmp8 := (tmp7 + xx_x03x_xusx_xi3)
    scevgep16x_xi5 := pix1[tmp8]
    tmp10 := (tmp9 + xx_x03x_xusx_xi3)
    scevgep13x_xi7 := pix2[tmp10]
    tmp12 := (tmp11 + xx_x03x_xusx_xi3)
    scevgepx_xi9 := pix3[tmp12]
    // load 
    iNsTr_18 := ->(scevgep13x_xi7) 
    iNsTr_19 := ($cast ($uint<32>) iNsTr_18)
    iNsTr_20 := (iNsTr_19 * weight)
    // load 
    iNsTr_21 := ->(scevgepx_xi9) 
    iNsTr_22 := ($cast ($uint<32>) iNsTr_21)
    iNsTr_23 := (iNsTr_22 * iNsTr_3)
    iNsTr_24 := (iNsTr_20 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    iNsTr_25 := (iNsTr_24 + iNsTr_23)
    iNsTr_26 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_25) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 )  )))
    // compare instruction
    iNsTr_27 := (iNsTr_26 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_27 $then  $place [bb_12_bb_11] $else $place [bb_12_x264_clip_pixelx_xexitx_xusx_xi] $endif 
    //begin: basic-block bbx_xnphx_xusx_xi14
    $merge bb_8_bbx_xnphx_xusx_xi14 bb_9_bbx_xnphx_xusx_xi14
    $phi yx_x05x_xusx_xi10 :=  ( $cast ($uint<32>) iNsTr_41) $on bb_9_bbx_xnphx_xusx_xi14 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bb_8_bbx_xnphx_xusx_xi14 
    $endmerge
    tmp7 := (i_stride_pix1 * yx_x05x_xusx_xi10)
    tmp9 := (i_stride_pix2 * yx_x05x_xusx_xi10)
    tmp11 := (i_stride_pix3 * yx_x05x_xusx_xi10)
    $place [bbx_xnphx_xusx_xi14_bb_12]
    $merge return__ $endmerge
  }
}
$module [pixel_avg_16x8] 
$in (pix1 : $pointer< $uint<8> > i_stride_pix1 : $uint<32> pix2 : $pointer< $uint<8> > i_stride_pix2 : $uint<32> pix3 : $pointer< $uint<8> > i_stride_pix3 : $uint<32> weight : $uint<32> )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    // compare instruction
    iNsTr_0 := (weight == ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  )
    $if iNsTr_0 $then  $place [bb_0_bbx_xnphx_xusx_xix_xpreheaderx_xpreheader] $else $place [bb_0_bb_7] $endif 
    //begin: basic-block bbx_xnphx_xusx_xix_xpreheaderx_xpreheader
    $merge bb_0_bbx_xnphx_xusx_xix_xpreheaderx_xpreheader
    $endmerge
    $place [bbx_xnphx_xusx_xix_xpreheaderx_xpreheader_bbx_xnphx_xusx_xix_xpreheader]
    //begin: basic-block bbx_xnphx_xusx_xix_xpreheader
    $merge bbx_xnphx_xusx_xix_xpreheader_bbx_xnphx_xusx_xix_xpreheader bbx_xnphx_xusx_xix_xpreheaderx_xpreheader_bbx_xnphx_xusx_xix_xpreheader
    $phi xx_x03x_xusx_xi :=  ( $cast ($uint<32>) iNsTr_14) $on bbx_xnphx_xusx_xix_xpreheader_bbx_xnphx_xusx_xix_xpreheader ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xusx_xix_xpreheaderx_xpreheader_bbx_xnphx_xusx_xix_xpreheader 
    $endmerge
    scevgepx_xi := pix1[xx_x03x_xusx_xi]
    scevgep13x_xi := pix3[xx_x03x_xusx_xi]
    scevgep16x_xi := pix2[xx_x03x_xusx_xi]
    // load 
    iNsTr_5 := ->(scevgep16x_xi) 
    iNsTr_6 := ($cast ($uint<32>) iNsTr_5)
    // load 
    iNsTr_7 := ->(scevgep13x_xi) 
    iNsTr_8 := ($cast ($uint<32>) iNsTr_7)
    iNsTr_9 := (iNsTr_6 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_10 := (iNsTr_9 + iNsTr_8)
    iNsTr_11 := (iNsTr_10 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_12 := ($cast ($uint<8>) iNsTr_11)
    ->(scevgepx_xi) := iNsTr_12
    iNsTr_14 := (xx_x03x_xusx_xi + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond47 := (iNsTr_14 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond47 $then  $place [bbx_xnphx_xusx_xix_xpreheader_bbx_xnphx_xusx_xix_x1x_xpreheader] $else $place [bbx_xnphx_xusx_xix_xpreheader_bbx_xnphx_xusx_xix_xpreheader] $endif 
    //begin: basic-block bbx_xnphx_xusx_xix_x1x_xpreheader
    $merge bbx_xnphx_xusx_xix_xpreheader_bbx_xnphx_xusx_xix_x1x_xpreheader
    $endmerge
    $place [bbx_xnphx_xusx_xix_x1x_xpreheader_bbx_xnphx_xusx_xix_x1]
    //begin: basic-block pixel_avg_wxhx_xexitx_xloopexit
    $merge bb_8_pixel_avg_wxhx_xexitx_xloopexit
    $endmerge
    $place [pixel_avg_wxhx_xexitx_xloopexit_pixel_avg_wxhx_xexit]
    //begin: basic-block pixel_avg_wxhx_xexitx_xloopexit13
    $merge bb_25_pixel_avg_wxhx_xexitx_xloopexit13
    $endmerge
    $place [pixel_avg_wxhx_xexitx_xloopexit13_pixel_avg_wxhx_xexit]
    //begin: basic-block pixel_avg_wxhx_xexit
    $merge pixel_avg_wxhx_xexitx_xloopexit_pixel_avg_wxhx_xexit pixel_avg_wxhx_xexitx_xloopexit13_pixel_avg_wxhx_xexit
    $endmerge
    $place [return__]
    //begin: basic-block bb_7
    $merge bb_0_bb_7
    $endmerge
    iNsTr_3 := (( $bitcast ($uint<32> ) _b00000000000000000000000001000000 )  - weight)
    $place [bb_7_bbx_xnphx_xusx_xi14]
    //begin: basic-block bb_8
    $merge x264_clip_pixelx_xexitx_xusx_xi_bb_8
    $endmerge
    iNsTr_50 := (yx_x05x_xusx_xi10 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond := (iNsTr_50 == ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 )  )
    $if exitcond $then  $place [bb_8_pixel_avg_wxhx_xexitx_xloopexit] $else $place [bb_8_bbx_xnphx_xusx_xi14] $endif 
    //begin: basic-block x264_clip_pixelx_xexitx_xusx_xi
    $merge bb_10_x264_clip_pixelx_xexitx_xusx_xi bb_11_x264_clip_pixelx_xexitx_xusx_xi
    $phi iNsTr_44 :=  ( $cast ($uint<32>) iNsTr_42) $on bb_10_x264_clip_pixelx_xexitx_xusx_xi ( $cast ($uint<32>) iNsTr_26) $on bb_11_x264_clip_pixelx_xexitx_xusx_xi 
    $endmerge
    iNsTr_45 := ($cast ($uint<8>) iNsTr_44)
    ->(scevgep16x_xi5) := iNsTr_45
    iNsTr_47 := (xx_x03x_xusx_xi3 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (iNsTr_47 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond1 $then  $place [x264_clip_pixelx_xexitx_xusx_xi_bb_8] $else $place [x264_clip_pixelx_xexitx_xusx_xi_bb_11] $endif 
    //begin: basic-block bb_10
    $merge bb_11_bb_10
    $endmerge
    iNsTr_40 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_26)
    iNsTr_41 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_40) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_42 := (iNsTr_41 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_10_x264_clip_pixelx_xexitx_xusx_xi]
    //begin: basic-block bb_11
    $merge bbx_xnphx_xusx_xi14_bb_11 x264_clip_pixelx_xexitx_xusx_xi_bb_11
    $phi xx_x03x_xusx_xi3 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xusx_xi14_bb_11 ( $cast ($uint<32>) iNsTr_47) $on x264_clip_pixelx_xexitx_xusx_xi_bb_11 
    $endmerge
    tmp8 := (tmp7 + xx_x03x_xusx_xi3)
    scevgep16x_xi5 := pix1[tmp8]
    tmp10 := (tmp9 + xx_x03x_xusx_xi3)
    scevgep13x_xi7 := pix2[tmp10]
    tmp12 := (tmp11 + xx_x03x_xusx_xi3)
    scevgepx_xi9 := pix3[tmp12]
    // load 
    iNsTr_18 := ->(scevgep13x_xi7) 
    iNsTr_19 := ($cast ($uint<32>) iNsTr_18)
    iNsTr_20 := (iNsTr_19 * weight)
    // load 
    iNsTr_21 := ->(scevgepx_xi9) 
    iNsTr_22 := ($cast ($uint<32>) iNsTr_21)
    iNsTr_23 := (iNsTr_22 * iNsTr_3)
    iNsTr_24 := (iNsTr_20 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    iNsTr_25 := (iNsTr_24 + iNsTr_23)
    iNsTr_26 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_25) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 )  )))
    // compare instruction
    iNsTr_27 := (iNsTr_26 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_27 $then  $place [bb_11_bb_10] $else $place [bb_11_x264_clip_pixelx_xexitx_xusx_xi] $endif 
    //begin: basic-block bbx_xnphx_xusx_xi14
    $merge bb_7_bbx_xnphx_xusx_xi14 bb_8_bbx_xnphx_xusx_xi14
    $phi yx_x05x_xusx_xi10 :=  ( $cast ($uint<32>) iNsTr_50) $on bb_8_bbx_xnphx_xusx_xi14 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bb_7_bbx_xnphx_xusx_xi14 
    $endmerge
    tmp7 := (i_stride_pix1 * yx_x05x_xusx_xi10)
    tmp9 := (i_stride_pix2 * yx_x05x_xusx_xi10)
    tmp11 := (i_stride_pix3 * yx_x05x_xusx_xi10)
    $place [bbx_xnphx_xusx_xi14_bb_11]
    //begin: basic-block bbx_xnphx_xusx_xix_x2
    $merge bbx_xnphx_xusx_xix_x1_bbx_xnphx_xusx_xix_x2
    $endmerge
    tmp37 := (i_stride_pix1 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    tmp39 := (i_stride_pix3 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    tmp41 := (i_stride_pix2 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    $place [bbx_xnphx_xusx_xix_x2_bb_16]
    //begin: basic-block bbx_xnphx_xusx_xix_x1
    $merge bbx_xnphx_xusx_xix_x1_bbx_xnphx_xusx_xix_x1 bbx_xnphx_xusx_xix_x1x_xpreheader_bbx_xnphx_xusx_xix_x1
    $phi xx_x03x_xusx_xix_x1 :=  ( $cast ($uint<32>) iNsTr_38) $on bbx_xnphx_xusx_xix_x1_bbx_xnphx_xusx_xix_x1 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xusx_xix_x1x_xpreheader_bbx_xnphx_xusx_xix_x1 
    $endmerge
    tmp44 := (i_stride_pix1 + xx_x03x_xusx_xix_x1)
    scevgepx_xix_x1 := pix1[tmp44]
    tmp45 := (i_stride_pix3 + xx_x03x_xusx_xix_x1)
    scevgep13x_xix_x1 := pix3[tmp45]
    tmp46 := (i_stride_pix2 + xx_x03x_xusx_xix_x1)
    scevgep16x_xix_x1 := pix2[tmp46]
    // load 
    iNsTr_29 := ->(scevgep16x_xix_x1) 
    iNsTr_30 := ($cast ($uint<32>) iNsTr_29)
    // load 
    iNsTr_31 := ->(scevgep13x_xix_x1) 
    iNsTr_32 := ($cast ($uint<32>) iNsTr_31)
    iNsTr_33 := (iNsTr_30 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_34 := (iNsTr_33 + iNsTr_32)
    iNsTr_35 := (iNsTr_34 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_36 := ($cast ($uint<8>) iNsTr_35)
    ->(scevgepx_xix_x1) := iNsTr_36
    iNsTr_38 := (xx_x03x_xusx_xix_x1 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond43 := (iNsTr_38 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond43 $then  $place [bbx_xnphx_xusx_xix_x1_bbx_xnphx_xusx_xix_x2] $else $place [bbx_xnphx_xusx_xix_x1_bbx_xnphx_xusx_xix_x1] $endif 
    //begin: basic-block bbx_xnphx_xusx_xix_x3
    $merge bb_16_bbx_xnphx_xusx_xix_x3
    $endmerge
    tmp35x_x3 := (i_stride_pix2 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    tmp37x_x3 := (i_stride_pix3 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    tmp39x_x3 := (i_stride_pix1 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    $place [bbx_xnphx_xusx_xix_x3_bb_18]
    //begin: basic-block bb_16
    $merge bb_16_bb_16 bbx_xnphx_xusx_xix_x2_bb_16
    $phi xx_x03x_xusx_xix_x2 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xusx_xix_x2_bb_16 ( $cast ($uint<32>) iNsTr_61) $on bb_16_bb_16 
    $endmerge
    tmp38 := (tmp37 + xx_x03x_xusx_xix_x2)
    scevgepx_xix_x2 := pix1[tmp38]
    tmp40 := (tmp39 + xx_x03x_xusx_xix_x2)
    scevgep13x_xix_x2 := pix3[tmp40]
    tmp42 := (tmp41 + xx_x03x_xusx_xix_x2)
    scevgep16x_xix_x2 := pix2[tmp42]
    // load 
    iNsTr_52 := ->(scevgep16x_xix_x2) 
    iNsTr_53 := ($cast ($uint<32>) iNsTr_52)
    // load 
    iNsTr_54 := ->(scevgep13x_xix_x2) 
    iNsTr_55 := ($cast ($uint<32>) iNsTr_54)
    iNsTr_56 := (iNsTr_53 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_57 := (iNsTr_56 + iNsTr_55)
    iNsTr_58 := (iNsTr_57 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_59 := ($cast ($uint<8>) iNsTr_58)
    ->(scevgepx_xix_x2) := iNsTr_59
    iNsTr_61 := (xx_x03x_xusx_xix_x2 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond36 := (iNsTr_61 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond36 $then  $place [bb_16_bbx_xnphx_xusx_xix_x3] $else $place [bb_16_bb_16] $endif 
    //begin: basic-block bbx_xnphx_xusx_xix_x4
    $merge bb_18_bbx_xnphx_xusx_xix_x4
    $endmerge
    tmp26 := (i_stride_pix1 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    tmp28 := (i_stride_pix3 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    tmp30 := (i_stride_pix2 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    $place [bbx_xnphx_xusx_xix_x4_bb_20]
    //begin: basic-block bb_18
    $merge bb_18_bb_18 bbx_xnphx_xusx_xix_x3_bb_18
    $phi xx_x03x_xusx_xix_x3 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xusx_xix_x3_bb_18 ( $cast ($uint<32>) iNsTr_75) $on bb_18_bb_18 
    $endmerge
    tmp33 := (tmp39x_x3 + xx_x03x_xusx_xix_x3)
    scevgepx_xix_x3 := pix1[tmp33]
    tmp34 := (tmp37x_x3 + xx_x03x_xusx_xix_x3)
    scevgep13x_xix_x3 := pix3[tmp34]
    tmp35 := (tmp35x_x3 + xx_x03x_xusx_xix_x3)
    scevgep16x_xix_x3 := pix2[tmp35]
    // load 
    iNsTr_66 := ->(scevgep16x_xix_x3) 
    iNsTr_67 := ($cast ($uint<32>) iNsTr_66)
    // load 
    iNsTr_68 := ->(scevgep13x_xix_x3) 
    iNsTr_69 := ($cast ($uint<32>) iNsTr_68)
    iNsTr_70 := (iNsTr_67 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_71 := (iNsTr_70 + iNsTr_69)
    iNsTr_72 := (iNsTr_71 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_73 := ($cast ($uint<8>) iNsTr_72)
    ->(scevgepx_xix_x3) := iNsTr_73
    iNsTr_75 := (xx_x03x_xusx_xix_x3 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond32 := (iNsTr_75 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond32 $then  $place [bb_18_bbx_xnphx_xusx_xix_x4] $else $place [bb_18_bb_18] $endif 
    //begin: basic-block bbx_xnphx_xusx_xix_x5
    $merge bb_20_bbx_xnphx_xusx_xix_x5
    $endmerge
    tmp35x_x5 := (i_stride_pix2 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) )
    tmp37x_x5 := (i_stride_pix3 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) )
    tmp39x_x5 := (i_stride_pix1 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) )
    $place [bbx_xnphx_xusx_xix_x5_bb_22]
    //begin: basic-block bb_20
    $merge bb_20_bb_20 bbx_xnphx_xusx_xix_x4_bb_20
    $phi xx_x03x_xusx_xix_x4 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xusx_xix_x4_bb_20 ( $cast ($uint<32>) iNsTr_87) $on bb_20_bb_20 
    $endmerge
    tmp27 := (tmp26 + xx_x03x_xusx_xix_x4)
    scevgepx_xix_x4 := pix1[tmp27]
    tmp29 := (tmp28 + xx_x03x_xusx_xix_x4)
    scevgep13x_xix_x4 := pix3[tmp29]
    tmp31 := (tmp30 + xx_x03x_xusx_xix_x4)
    scevgep16x_xix_x4 := pix2[tmp31]
    // load 
    iNsTr_78 := ->(scevgep16x_xix_x4) 
    iNsTr_79 := ($cast ($uint<32>) iNsTr_78)
    // load 
    iNsTr_80 := ->(scevgep13x_xix_x4) 
    iNsTr_81 := ($cast ($uint<32>) iNsTr_80)
    iNsTr_82 := (iNsTr_79 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_83 := (iNsTr_82 + iNsTr_81)
    iNsTr_84 := (iNsTr_83 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_85 := ($cast ($uint<8>) iNsTr_84)
    ->(scevgepx_xix_x4) := iNsTr_85
    iNsTr_87 := (xx_x03x_xusx_xix_x4 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond25 := (iNsTr_87 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond25 $then  $place [bb_20_bbx_xnphx_xusx_xix_x5] $else $place [bb_20_bb_20] $endif 
    //begin: basic-block bbx_xnphx_xusx_xix_x6
    $merge bb_22_bbx_xnphx_xusx_xix_x6
    $endmerge
    tmp35x_x6 := (i_stride_pix2 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    tmp37x_x6 := (i_stride_pix3 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    tmp39x_x6 := (i_stride_pix1 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    $place [bbx_xnphx_xusx_xix_x6_bb_24]
    //begin: basic-block bb_22
    $merge bb_22_bb_22 bbx_xnphx_xusx_xix_x5_bb_22
    $phi xx_x03x_xusx_xix_x5 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xusx_xix_x5_bb_22 ( $cast ($uint<32>) iNsTr_99) $on bb_22_bb_22 
    $endmerge
    tmp22 := (tmp39x_x5 + xx_x03x_xusx_xix_x5)
    scevgepx_xix_x5 := pix1[tmp22]
    tmp23 := (tmp37x_x5 + xx_x03x_xusx_xix_x5)
    scevgep13x_xix_x5 := pix3[tmp23]
    tmp24 := (tmp35x_x5 + xx_x03x_xusx_xix_x5)
    scevgep16x_xix_x5 := pix2[tmp24]
    // load 
    iNsTr_90 := ->(scevgep16x_xix_x5) 
    iNsTr_91 := ($cast ($uint<32>) iNsTr_90)
    // load 
    iNsTr_92 := ->(scevgep13x_xix_x5) 
    iNsTr_93 := ($cast ($uint<32>) iNsTr_92)
    iNsTr_94 := (iNsTr_91 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_95 := (iNsTr_94 + iNsTr_93)
    iNsTr_96 := (iNsTr_95 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_97 := ($cast ($uint<8>) iNsTr_96)
    ->(scevgepx_xix_x5) := iNsTr_97
    iNsTr_99 := (xx_x03x_xusx_xix_x5 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond21 := (iNsTr_99 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond21 $then  $place [bb_22_bbx_xnphx_xusx_xix_x6] $else $place [bb_22_bb_22] $endif 
    //begin: basic-block bbx_xnphx_xusx_xix_x7
    $merge bb_24_bbx_xnphx_xusx_xix_x7
    $endmerge
    tmp35x_x7 := (i_stride_pix2 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    tmp37x_x7 := (i_stride_pix3 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    tmp39x_x7 := (i_stride_pix1 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    $place [bbx_xnphx_xusx_xix_x7_bb_25]
    //begin: basic-block bb_24
    $merge bb_24_bb_24 bbx_xnphx_xusx_xix_x6_bb_24
    $phi xx_x03x_xusx_xix_x6 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xusx_xix_x6_bb_24 ( $cast ($uint<32>) iNsTr_111) $on bb_24_bb_24 
    $endmerge
    tmp18 := (tmp39x_x6 + xx_x03x_xusx_xix_x6)
    scevgepx_xix_x6 := pix1[tmp18]
    tmp19 := (tmp37x_x6 + xx_x03x_xusx_xix_x6)
    scevgep13x_xix_x6 := pix3[tmp19]
    tmp20 := (tmp35x_x6 + xx_x03x_xusx_xix_x6)
    scevgep16x_xix_x6 := pix2[tmp20]
    // load 
    iNsTr_102 := ->(scevgep16x_xix_x6) 
    iNsTr_103 := ($cast ($uint<32>) iNsTr_102)
    // load 
    iNsTr_104 := ->(scevgep13x_xix_x6) 
    iNsTr_105 := ($cast ($uint<32>) iNsTr_104)
    iNsTr_106 := (iNsTr_103 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_107 := (iNsTr_106 + iNsTr_105)
    iNsTr_108 := (iNsTr_107 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_109 := ($cast ($uint<8>) iNsTr_108)
    ->(scevgepx_xix_x6) := iNsTr_109
    iNsTr_111 := (xx_x03x_xusx_xix_x6 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond17 := (iNsTr_111 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond17 $then  $place [bb_24_bbx_xnphx_xusx_xix_x7] $else $place [bb_24_bb_24] $endif 
    //begin: basic-block bb_25
    $merge bb_25_bb_25 bbx_xnphx_xusx_xix_x7_bb_25
    $phi xx_x03x_xusx_xix_x7 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xusx_xix_x7_bb_25 ( $cast ($uint<32>) iNsTr_123) $on bb_25_bb_25 
    $endmerge
    tmp := (tmp39x_x7 + xx_x03x_xusx_xix_x7)
    scevgepx_xix_x7 := pix1[tmp]
    tmp15 := (tmp37x_x7 + xx_x03x_xusx_xix_x7)
    scevgep13x_xix_x7 := pix3[tmp15]
    tmp16 := (tmp35x_x7 + xx_x03x_xusx_xix_x7)
    scevgep16x_xix_x7 := pix2[tmp16]
    // load 
    iNsTr_114 := ->(scevgep16x_xix_x7) 
    iNsTr_115 := ($cast ($uint<32>) iNsTr_114)
    // load 
    iNsTr_116 := ->(scevgep13x_xix_x7) 
    iNsTr_117 := ($cast ($uint<32>) iNsTr_116)
    iNsTr_118 := (iNsTr_115 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_119 := (iNsTr_118 + iNsTr_117)
    iNsTr_120 := (iNsTr_119 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_121 := ($cast ($uint<8>) iNsTr_120)
    ->(scevgepx_xix_x7) := iNsTr_121
    iNsTr_123 := (xx_x03x_xusx_xix_x7 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond14 := (iNsTr_123 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond14 $then  $place [bb_25_pixel_avg_wxhx_xexitx_xloopexit13] $else $place [bb_25_bb_25] $endif 
    $merge return__ $endmerge
  }
}
$module [pixel_avg_8x16] 
$in (pix1 : $pointer< $uint<8> > i_stride_pix1 : $uint<32> pix2 : $pointer< $uint<8> > i_stride_pix2 : $uint<32> pix3 : $pointer< $uint<8> > i_stride_pix3 : $uint<32> weight : $uint<32> )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    // compare instruction
    iNsTr_0 := (weight == ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  )
    $if iNsTr_0 $then  $place [bb_0_bbx_xnphx_xusx_xix_xpreheader] $else $place [bb_0_bb_6] $endif 
    //begin: basic-block bbx_xnphx_xusx_xix_xpreheader
    $merge bb_0_bbx_xnphx_xusx_xix_xpreheader
    $endmerge
    $place [bbx_xnphx_xusx_xix_xpreheader_bbx_xnphx_xusx_xi]
    //begin: basic-block bbx_xnphx_xusx_xi
    $merge bbx_xnphx_xusx_xi_bbx_xnphx_xusx_xi bbx_xnphx_xusx_xix_xpreheader_bbx_xnphx_xusx_xi
    $phi yx_x05x_xusx_xi :=  ( $cast ($uint<32>) iNsTr_77) $on bbx_xnphx_xusx_xi_bbx_xnphx_xusx_xi ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xusx_xix_xpreheader_bbx_xnphx_xusx_xi 
    $endmerge
    tmp := (i_stride_pix1 * yx_x05x_xusx_xi)
    scevgepx_xi := pix1[tmp]
    tmp15 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    scevgepx_xix_x7 := pix1[tmp15]
    tmp16 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    scevgepx_xix_x6 := pix1[tmp16]
    tmp17 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) )
    scevgepx_xix_x5 := pix1[tmp17]
    tmp18 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    scevgepx_xix_x4 := pix1[tmp18]
    tmp19 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgepx_xix_x3 := pix1[tmp19]
    tmp20 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgepx_xix_x2 := pix1[tmp20]
    tmp21 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgepx_xix_x1 := pix1[tmp21]
    tmp22 := (i_stride_pix3 * yx_x05x_xusx_xi)
    scevgep13x_xi := pix3[tmp22]
    tmp23 := (tmp22 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    scevgep13x_xix_x7 := pix3[tmp23]
    tmp24 := (tmp22 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    scevgep13x_xix_x6 := pix3[tmp24]
    tmp25 := (tmp22 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) )
    scevgep13x_xix_x5 := pix3[tmp25]
    tmp26 := (tmp22 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    scevgep13x_xix_x4 := pix3[tmp26]
    tmp27 := (tmp22 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep13x_xix_x3 := pix3[tmp27]
    tmp28 := (tmp22 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep13x_xix_x2 := pix3[tmp28]
    tmp29 := (tmp22 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep13x_xix_x1 := pix3[tmp29]
    tmp30 := (i_stride_pix2 * yx_x05x_xusx_xi)
    scevgep16x_xi := pix2[tmp30]
    tmp31 := (tmp30 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    scevgep16x_xix_x7 := pix2[tmp31]
    tmp32 := (tmp30 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    scevgep16x_xix_x6 := pix2[tmp32]
    tmp33 := (tmp30 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) )
    scevgep16x_xix_x5 := pix2[tmp33]
    tmp34 := (tmp30 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    scevgep16x_xix_x4 := pix2[tmp34]
    tmp59 := (tmp30 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep16x_xix_x3 := pix2[tmp59]
    tmp60 := (tmp30 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep16x_xix_x2 := pix2[tmp60]
    tmp61 := (tmp30 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep16x_xix_x1 := pix2[tmp61]
    // load 
    iNsTr_5 := ->(scevgep16x_xi) 
    iNsTr_6 := ($cast ($uint<32>) iNsTr_5)
    // load 
    iNsTr_7 := ->(scevgep13x_xi) 
    iNsTr_8 := ($cast ($uint<32>) iNsTr_7)
    iNsTr_9 := (iNsTr_6 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_10 := (iNsTr_9 + iNsTr_8)
    iNsTr_11 := (iNsTr_10 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_12 := ($cast ($uint<8>) iNsTr_11)
    ->(scevgepx_xi) := iNsTr_12
    // load 
    iNsTr_14 := ->(scevgep16x_xix_x1) 
    iNsTr_15 := ($cast ($uint<32>) iNsTr_14)
    // load 
    iNsTr_16 := ->(scevgep13x_xix_x1) 
    iNsTr_17 := ($cast ($uint<32>) iNsTr_16)
    iNsTr_18 := (iNsTr_15 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_19 := (iNsTr_18 + iNsTr_17)
    iNsTr_20 := (iNsTr_19 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_21 := ($cast ($uint<8>) iNsTr_20)
    ->(scevgepx_xix_x1) := iNsTr_21
    // load 
    iNsTr_23 := ->(scevgep16x_xix_x2) 
    iNsTr_24 := ($cast ($uint<32>) iNsTr_23)
    // load 
    iNsTr_25 := ->(scevgep13x_xix_x2) 
    iNsTr_26 := ($cast ($uint<32>) iNsTr_25)
    iNsTr_27 := (iNsTr_24 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_28 := (iNsTr_27 + iNsTr_26)
    iNsTr_29 := (iNsTr_28 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_30 := ($cast ($uint<8>) iNsTr_29)
    ->(scevgepx_xix_x2) := iNsTr_30
    // load 
    iNsTr_32 := ->(scevgep16x_xix_x3) 
    iNsTr_33 := ($cast ($uint<32>) iNsTr_32)
    // load 
    iNsTr_34 := ->(scevgep13x_xix_x3) 
    iNsTr_35 := ($cast ($uint<32>) iNsTr_34)
    iNsTr_36 := (iNsTr_33 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_37 := (iNsTr_36 + iNsTr_35)
    iNsTr_38 := (iNsTr_37 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_39 := ($cast ($uint<8>) iNsTr_38)
    ->(scevgepx_xix_x3) := iNsTr_39
    // load 
    iNsTr_41 := ->(scevgep16x_xix_x4) 
    iNsTr_42 := ($cast ($uint<32>) iNsTr_41)
    // load 
    iNsTr_43 := ->(scevgep13x_xix_x4) 
    iNsTr_44 := ($cast ($uint<32>) iNsTr_43)
    iNsTr_45 := (iNsTr_42 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_46 := (iNsTr_45 + iNsTr_44)
    iNsTr_47 := (iNsTr_46 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_48 := ($cast ($uint<8>) iNsTr_47)
    ->(scevgepx_xix_x4) := iNsTr_48
    // load 
    iNsTr_50 := ->(scevgep16x_xix_x5) 
    iNsTr_51 := ($cast ($uint<32>) iNsTr_50)
    // load 
    iNsTr_52 := ->(scevgep13x_xix_x5) 
    iNsTr_53 := ($cast ($uint<32>) iNsTr_52)
    iNsTr_54 := (iNsTr_51 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_55 := (iNsTr_54 + iNsTr_53)
    iNsTr_56 := (iNsTr_55 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_57 := ($cast ($uint<8>) iNsTr_56)
    ->(scevgepx_xix_x5) := iNsTr_57
    // load 
    iNsTr_59 := ->(scevgep16x_xix_x6) 
    iNsTr_60 := ($cast ($uint<32>) iNsTr_59)
    // load 
    iNsTr_61 := ->(scevgep13x_xix_x6) 
    iNsTr_62 := ($cast ($uint<32>) iNsTr_61)
    iNsTr_63 := (iNsTr_60 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_64 := (iNsTr_63 + iNsTr_62)
    iNsTr_65 := (iNsTr_64 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_66 := ($cast ($uint<8>) iNsTr_65)
    ->(scevgepx_xix_x6) := iNsTr_66
    // load 
    iNsTr_68 := ->(scevgep16x_xix_x7) 
    iNsTr_69 := ($cast ($uint<32>) iNsTr_68)
    // load 
    iNsTr_70 := ->(scevgep13x_xix_x7) 
    iNsTr_71 := ($cast ($uint<32>) iNsTr_70)
    iNsTr_72 := (iNsTr_69 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_73 := (iNsTr_72 + iNsTr_71)
    iNsTr_74 := (iNsTr_73 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_75 := ($cast ($uint<8>) iNsTr_74)
    ->(scevgepx_xix_x7) := iNsTr_75
    iNsTr_77 := (yx_x05x_xusx_xi + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond14 := (iNsTr_77 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond14 $then  $place [bbx_xnphx_xusx_xi_pixel_avg_wxhx_xexitx_xloopexit13] $else $place [bbx_xnphx_xusx_xi_bbx_xnphx_xusx_xi] $endif 
    //begin: basic-block pixel_avg_wxhx_xexitx_xloopexit
    $merge bb_7_pixel_avg_wxhx_xexitx_xloopexit
    $endmerge
    $place [pixel_avg_wxhx_xexitx_xloopexit_pixel_avg_wxhx_xexit]
    //begin: basic-block pixel_avg_wxhx_xexitx_xloopexit13
    $merge bbx_xnphx_xusx_xi_pixel_avg_wxhx_xexitx_xloopexit13
    $endmerge
    $place [pixel_avg_wxhx_xexitx_xloopexit13_pixel_avg_wxhx_xexit]
    //begin: basic-block pixel_avg_wxhx_xexit
    $merge pixel_avg_wxhx_xexitx_xloopexit_pixel_avg_wxhx_xexit pixel_avg_wxhx_xexitx_xloopexit13_pixel_avg_wxhx_xexit
    $endmerge
    $place [return__]
    //begin: basic-block bb_6
    $merge bb_0_bb_6
    $endmerge
    iNsTr_3 := (( $bitcast ($uint<32> ) _b00000000000000000000000001000000 )  - weight)
    $place [bb_6_bbx_xnphx_xusx_xi14]
    //begin: basic-block bb_7
    $merge x264_clip_pixelx_xexitx_xusx_xi_bb_7
    $endmerge
    iNsTr_102 := (yx_x05x_xusx_xi10 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond := (iNsTr_102 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond $then  $place [bb_7_pixel_avg_wxhx_xexitx_xloopexit] $else $place [bb_7_bbx_xnphx_xusx_xi14] $endif 
    //begin: basic-block x264_clip_pixelx_xexitx_xusx_xi
    $merge bb_10_x264_clip_pixelx_xexitx_xusx_xi bb_9_x264_clip_pixelx_xexitx_xusx_xi
    $phi iNsTr_97 :=  ( $cast ($uint<32>) iNsTr_95) $on bb_9_x264_clip_pixelx_xexitx_xusx_xi ( $cast ($uint<32>) iNsTr_89) $on bb_10_x264_clip_pixelx_xexitx_xusx_xi 
    $endmerge
    iNsTr_98 := ($cast ($uint<8>) iNsTr_97)
    ->(scevgep16x_xi5) := iNsTr_98
    iNsTr_100 := (xx_x03x_xusx_xi3 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (iNsTr_100 == ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 )  )
    $if exitcond1 $then  $place [x264_clip_pixelx_xexitx_xusx_xi_bb_7] $else $place [x264_clip_pixelx_xexitx_xusx_xi_bb_10] $endif 
    //begin: basic-block bb_9
    $merge bb_10_bb_9
    $endmerge
    iNsTr_93 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_89)
    iNsTr_94 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_93) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_95 := (iNsTr_94 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_9_x264_clip_pixelx_xexitx_xusx_xi]
    //begin: basic-block bb_10
    $merge bbx_xnphx_xusx_xi14_bb_10 x264_clip_pixelx_xexitx_xusx_xi_bb_10
    $phi xx_x03x_xusx_xi3 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xusx_xi14_bb_10 ( $cast ($uint<32>) iNsTr_100) $on x264_clip_pixelx_xexitx_xusx_xi_bb_10 
    $endmerge
    tmp8 := (tmp7 + xx_x03x_xusx_xi3)
    scevgep16x_xi5 := pix1[tmp8]
    tmp10 := (tmp9 + xx_x03x_xusx_xi3)
    scevgep13x_xi7 := pix2[tmp10]
    tmp12 := (tmp11 + xx_x03x_xusx_xi3)
    scevgepx_xi9 := pix3[tmp12]
    // load 
    iNsTr_81 := ->(scevgep13x_xi7) 
    iNsTr_82 := ($cast ($uint<32>) iNsTr_81)
    iNsTr_83 := (iNsTr_82 * weight)
    // load 
    iNsTr_84 := ->(scevgepx_xi9) 
    iNsTr_85 := ($cast ($uint<32>) iNsTr_84)
    iNsTr_86 := (iNsTr_85 * iNsTr_3)
    iNsTr_87 := (iNsTr_83 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    iNsTr_88 := (iNsTr_87 + iNsTr_86)
    iNsTr_89 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_88) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 )  )))
    // compare instruction
    iNsTr_90 := (iNsTr_89 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_90 $then  $place [bb_10_bb_9] $else $place [bb_10_x264_clip_pixelx_xexitx_xusx_xi] $endif 
    //begin: basic-block bbx_xnphx_xusx_xi14
    $merge bb_6_bbx_xnphx_xusx_xi14 bb_7_bbx_xnphx_xusx_xi14
    $phi yx_x05x_xusx_xi10 :=  ( $cast ($uint<32>) iNsTr_102) $on bb_7_bbx_xnphx_xusx_xi14 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bb_6_bbx_xnphx_xusx_xi14 
    $endmerge
    tmp7 := (i_stride_pix1 * yx_x05x_xusx_xi10)
    tmp9 := (i_stride_pix2 * yx_x05x_xusx_xi10)
    tmp11 := (i_stride_pix3 * yx_x05x_xusx_xi10)
    $place [bbx_xnphx_xusx_xi14_bb_10]
    $merge return__ $endmerge
  }
}
$module [pixel_avg_8x8] 
$in (pix1 : $pointer< $uint<8> > i_stride_pix1 : $uint<32> pix2 : $pointer< $uint<8> > i_stride_pix2 : $uint<32> pix3 : $pointer< $uint<8> > i_stride_pix3 : $uint<32> weight : $uint<32> )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    // compare instruction
    iNsTr_0 := (weight == ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  )
    $if iNsTr_0 $then  $place [bb_0_bbx_xnphx_xusx_xix_xpreheader] $else $place [bb_0_bb_6] $endif 
    //begin: basic-block bbx_xnphx_xusx_xix_xpreheader
    $merge bb_0_bbx_xnphx_xusx_xix_xpreheader
    $endmerge
    $place [bbx_xnphx_xusx_xix_xpreheader_bbx_xnphx_xusx_xi]
    //begin: basic-block bbx_xnphx_xusx_xi
    $merge bbx_xnphx_xusx_xi_bbx_xnphx_xusx_xi bbx_xnphx_xusx_xix_xpreheader_bbx_xnphx_xusx_xi
    $phi yx_x05x_xusx_xi :=  ( $cast ($uint<32>) iNsTr_77) $on bbx_xnphx_xusx_xi_bbx_xnphx_xusx_xi ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xusx_xix_xpreheader_bbx_xnphx_xusx_xi 
    $endmerge
    tmp := (i_stride_pix1 * yx_x05x_xusx_xi)
    scevgepx_xi := pix1[tmp]
    tmp15 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    scevgepx_xix_x7 := pix1[tmp15]
    tmp16 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    scevgepx_xix_x6 := pix1[tmp16]
    tmp17 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) )
    scevgepx_xix_x5 := pix1[tmp17]
    tmp18 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    scevgepx_xix_x4 := pix1[tmp18]
    tmp19 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgepx_xix_x3 := pix1[tmp19]
    tmp20 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgepx_xix_x2 := pix1[tmp20]
    tmp21 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgepx_xix_x1 := pix1[tmp21]
    tmp22 := (i_stride_pix3 * yx_x05x_xusx_xi)
    scevgep13x_xi := pix3[tmp22]
    tmp23 := (tmp22 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    scevgep13x_xix_x7 := pix3[tmp23]
    tmp24 := (tmp22 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    scevgep13x_xix_x6 := pix3[tmp24]
    tmp25 := (tmp22 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) )
    scevgep13x_xix_x5 := pix3[tmp25]
    tmp26 := (tmp22 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    scevgep13x_xix_x4 := pix3[tmp26]
    tmp27 := (tmp22 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep13x_xix_x3 := pix3[tmp27]
    tmp28 := (tmp22 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep13x_xix_x2 := pix3[tmp28]
    tmp29 := (tmp22 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep13x_xix_x1 := pix3[tmp29]
    tmp30 := (i_stride_pix2 * yx_x05x_xusx_xi)
    scevgep16x_xi := pix2[tmp30]
    tmp31 := (tmp30 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    scevgep16x_xix_x7 := pix2[tmp31]
    tmp32 := (tmp30 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    scevgep16x_xix_x6 := pix2[tmp32]
    tmp33 := (tmp30 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) )
    scevgep16x_xix_x5 := pix2[tmp33]
    tmp34 := (tmp30 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    scevgep16x_xix_x4 := pix2[tmp34]
    tmp59 := (tmp30 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep16x_xix_x3 := pix2[tmp59]
    tmp60 := (tmp30 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep16x_xix_x2 := pix2[tmp60]
    tmp61 := (tmp30 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep16x_xix_x1 := pix2[tmp61]
    // load 
    iNsTr_5 := ->(scevgep16x_xi) 
    iNsTr_6 := ($cast ($uint<32>) iNsTr_5)
    // load 
    iNsTr_7 := ->(scevgep13x_xi) 
    iNsTr_8 := ($cast ($uint<32>) iNsTr_7)
    iNsTr_9 := (iNsTr_6 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_10 := (iNsTr_9 + iNsTr_8)
    iNsTr_11 := (iNsTr_10 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_12 := ($cast ($uint<8>) iNsTr_11)
    ->(scevgepx_xi) := iNsTr_12
    // load 
    iNsTr_14 := ->(scevgep16x_xix_x1) 
    iNsTr_15 := ($cast ($uint<32>) iNsTr_14)
    // load 
    iNsTr_16 := ->(scevgep13x_xix_x1) 
    iNsTr_17 := ($cast ($uint<32>) iNsTr_16)
    iNsTr_18 := (iNsTr_15 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_19 := (iNsTr_18 + iNsTr_17)
    iNsTr_20 := (iNsTr_19 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_21 := ($cast ($uint<8>) iNsTr_20)
    ->(scevgepx_xix_x1) := iNsTr_21
    // load 
    iNsTr_23 := ->(scevgep16x_xix_x2) 
    iNsTr_24 := ($cast ($uint<32>) iNsTr_23)
    // load 
    iNsTr_25 := ->(scevgep13x_xix_x2) 
    iNsTr_26 := ($cast ($uint<32>) iNsTr_25)
    iNsTr_27 := (iNsTr_24 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_28 := (iNsTr_27 + iNsTr_26)
    iNsTr_29 := (iNsTr_28 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_30 := ($cast ($uint<8>) iNsTr_29)
    ->(scevgepx_xix_x2) := iNsTr_30
    // load 
    iNsTr_32 := ->(scevgep16x_xix_x3) 
    iNsTr_33 := ($cast ($uint<32>) iNsTr_32)
    // load 
    iNsTr_34 := ->(scevgep13x_xix_x3) 
    iNsTr_35 := ($cast ($uint<32>) iNsTr_34)
    iNsTr_36 := (iNsTr_33 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_37 := (iNsTr_36 + iNsTr_35)
    iNsTr_38 := (iNsTr_37 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_39 := ($cast ($uint<8>) iNsTr_38)
    ->(scevgepx_xix_x3) := iNsTr_39
    // load 
    iNsTr_41 := ->(scevgep16x_xix_x4) 
    iNsTr_42 := ($cast ($uint<32>) iNsTr_41)
    // load 
    iNsTr_43 := ->(scevgep13x_xix_x4) 
    iNsTr_44 := ($cast ($uint<32>) iNsTr_43)
    iNsTr_45 := (iNsTr_42 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_46 := (iNsTr_45 + iNsTr_44)
    iNsTr_47 := (iNsTr_46 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_48 := ($cast ($uint<8>) iNsTr_47)
    ->(scevgepx_xix_x4) := iNsTr_48
    // load 
    iNsTr_50 := ->(scevgep16x_xix_x5) 
    iNsTr_51 := ($cast ($uint<32>) iNsTr_50)
    // load 
    iNsTr_52 := ->(scevgep13x_xix_x5) 
    iNsTr_53 := ($cast ($uint<32>) iNsTr_52)
    iNsTr_54 := (iNsTr_51 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_55 := (iNsTr_54 + iNsTr_53)
    iNsTr_56 := (iNsTr_55 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_57 := ($cast ($uint<8>) iNsTr_56)
    ->(scevgepx_xix_x5) := iNsTr_57
    // load 
    iNsTr_59 := ->(scevgep16x_xix_x6) 
    iNsTr_60 := ($cast ($uint<32>) iNsTr_59)
    // load 
    iNsTr_61 := ->(scevgep13x_xix_x6) 
    iNsTr_62 := ($cast ($uint<32>) iNsTr_61)
    iNsTr_63 := (iNsTr_60 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_64 := (iNsTr_63 + iNsTr_62)
    iNsTr_65 := (iNsTr_64 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_66 := ($cast ($uint<8>) iNsTr_65)
    ->(scevgepx_xix_x6) := iNsTr_66
    // load 
    iNsTr_68 := ->(scevgep16x_xix_x7) 
    iNsTr_69 := ($cast ($uint<32>) iNsTr_68)
    // load 
    iNsTr_70 := ->(scevgep13x_xix_x7) 
    iNsTr_71 := ($cast ($uint<32>) iNsTr_70)
    iNsTr_72 := (iNsTr_69 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_73 := (iNsTr_72 + iNsTr_71)
    iNsTr_74 := (iNsTr_73 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_75 := ($cast ($uint<8>) iNsTr_74)
    ->(scevgepx_xix_x7) := iNsTr_75
    iNsTr_77 := (yx_x05x_xusx_xi + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond14 := (iNsTr_77 == ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 )  )
    $if exitcond14 $then  $place [bbx_xnphx_xusx_xi_pixel_avg_wxhx_xexitx_xloopexit13] $else $place [bbx_xnphx_xusx_xi_bbx_xnphx_xusx_xi] $endif 
    //begin: basic-block pixel_avg_wxhx_xexitx_xloopexit
    $merge bb_7_pixel_avg_wxhx_xexitx_xloopexit
    $endmerge
    $place [pixel_avg_wxhx_xexitx_xloopexit_pixel_avg_wxhx_xexit]
    //begin: basic-block pixel_avg_wxhx_xexitx_xloopexit13
    $merge bbx_xnphx_xusx_xi_pixel_avg_wxhx_xexitx_xloopexit13
    $endmerge
    $place [pixel_avg_wxhx_xexitx_xloopexit13_pixel_avg_wxhx_xexit]
    //begin: basic-block pixel_avg_wxhx_xexit
    $merge pixel_avg_wxhx_xexitx_xloopexit_pixel_avg_wxhx_xexit pixel_avg_wxhx_xexitx_xloopexit13_pixel_avg_wxhx_xexit
    $endmerge
    $place [return__]
    //begin: basic-block bb_6
    $merge bb_0_bb_6
    $endmerge
    iNsTr_3 := (( $bitcast ($uint<32> ) _b00000000000000000000000001000000 )  - weight)
    $place [bb_6_bbx_xnphx_xusx_xi14]
    //begin: basic-block bb_7
    $merge x264_clip_pixelx_xexitx_xusx_xi_bb_7
    $endmerge
    iNsTr_102 := (yx_x05x_xusx_xi10 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond := (iNsTr_102 == ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 )  )
    $if exitcond $then  $place [bb_7_pixel_avg_wxhx_xexitx_xloopexit] $else $place [bb_7_bbx_xnphx_xusx_xi14] $endif 
    //begin: basic-block x264_clip_pixelx_xexitx_xusx_xi
    $merge bb_10_x264_clip_pixelx_xexitx_xusx_xi bb_9_x264_clip_pixelx_xexitx_xusx_xi
    $phi iNsTr_97 :=  ( $cast ($uint<32>) iNsTr_95) $on bb_9_x264_clip_pixelx_xexitx_xusx_xi ( $cast ($uint<32>) iNsTr_89) $on bb_10_x264_clip_pixelx_xexitx_xusx_xi 
    $endmerge
    iNsTr_98 := ($cast ($uint<8>) iNsTr_97)
    ->(scevgep16x_xi5) := iNsTr_98
    iNsTr_100 := (xx_x03x_xusx_xi3 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (iNsTr_100 == ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 )  )
    $if exitcond1 $then  $place [x264_clip_pixelx_xexitx_xusx_xi_bb_7] $else $place [x264_clip_pixelx_xexitx_xusx_xi_bb_10] $endif 
    //begin: basic-block bb_9
    $merge bb_10_bb_9
    $endmerge
    iNsTr_93 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_89)
    iNsTr_94 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_93) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_95 := (iNsTr_94 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_9_x264_clip_pixelx_xexitx_xusx_xi]
    //begin: basic-block bb_10
    $merge bbx_xnphx_xusx_xi14_bb_10 x264_clip_pixelx_xexitx_xusx_xi_bb_10
    $phi xx_x03x_xusx_xi3 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xusx_xi14_bb_10 ( $cast ($uint<32>) iNsTr_100) $on x264_clip_pixelx_xexitx_xusx_xi_bb_10 
    $endmerge
    tmp8 := (tmp7 + xx_x03x_xusx_xi3)
    scevgep16x_xi5 := pix1[tmp8]
    tmp10 := (tmp9 + xx_x03x_xusx_xi3)
    scevgep13x_xi7 := pix2[tmp10]
    tmp12 := (tmp11 + xx_x03x_xusx_xi3)
    scevgepx_xi9 := pix3[tmp12]
    // load 
    iNsTr_81 := ->(scevgep13x_xi7) 
    iNsTr_82 := ($cast ($uint<32>) iNsTr_81)
    iNsTr_83 := (iNsTr_82 * weight)
    // load 
    iNsTr_84 := ->(scevgepx_xi9) 
    iNsTr_85 := ($cast ($uint<32>) iNsTr_84)
    iNsTr_86 := (iNsTr_85 * iNsTr_3)
    iNsTr_87 := (iNsTr_83 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    iNsTr_88 := (iNsTr_87 + iNsTr_86)
    iNsTr_89 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_88) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 )  )))
    // compare instruction
    iNsTr_90 := (iNsTr_89 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_90 $then  $place [bb_10_bb_9] $else $place [bb_10_x264_clip_pixelx_xexitx_xusx_xi] $endif 
    //begin: basic-block bbx_xnphx_xusx_xi14
    $merge bb_6_bbx_xnphx_xusx_xi14 bb_7_bbx_xnphx_xusx_xi14
    $phi yx_x05x_xusx_xi10 :=  ( $cast ($uint<32>) iNsTr_102) $on bb_7_bbx_xnphx_xusx_xi14 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bb_6_bbx_xnphx_xusx_xi14 
    $endmerge
    tmp7 := (i_stride_pix1 * yx_x05x_xusx_xi10)
    tmp9 := (i_stride_pix2 * yx_x05x_xusx_xi10)
    tmp11 := (i_stride_pix3 * yx_x05x_xusx_xi10)
    $place [bbx_xnphx_xusx_xi14_bb_10]
    $merge return__ $endmerge
  }
}
$module [pixel_avg_8x4] 
$in (pix1 : $pointer< $uint<8> > i_stride_pix1 : $uint<32> pix2 : $pointer< $uint<8> > i_stride_pix2 : $uint<32> pix3 : $pointer< $uint<8> > i_stride_pix3 : $uint<32> weight : $uint<32> )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    // compare instruction
    iNsTr_0 := (weight == ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  )
    $if iNsTr_0 $then  $place [bb_0_bbx_xnphx_xusx_xix_xpreheader] $else $place [bb_0_bbx_xnphx_xusx_xi14] $endif 
    //begin: basic-block bbx_xnphx_xusx_xix_xpreheader
    $merge bb_0_bbx_xnphx_xusx_xix_xpreheader
    $endmerge
    $place [bbx_xnphx_xusx_xix_xpreheader_bbx_xnphx_xusx_xi]
    //begin: basic-block bbx_xnphx_xusx_xi
    $merge bbx_xnphx_xusx_xi_bbx_xnphx_xusx_xi bbx_xnphx_xusx_xix_xpreheader_bbx_xnphx_xusx_xi
    $phi yx_x05x_xusx_xi :=  ( $cast ($uint<32>) iNsTr_77) $on bbx_xnphx_xusx_xi_bbx_xnphx_xusx_xi ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xusx_xix_xpreheader_bbx_xnphx_xusx_xi 
    $endmerge
    tmp17 := (i_stride_pix1 * yx_x05x_xusx_xi)
    scevgepx_xi := pix1[tmp17]
    tmp18 := (tmp17 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    scevgepx_xix_x7 := pix1[tmp18]
    tmp19 := (tmp17 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    scevgepx_xix_x6 := pix1[tmp19]
    tmp20 := (tmp17 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) )
    scevgepx_xix_x5 := pix1[tmp20]
    tmp21 := (tmp17 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    scevgepx_xix_x4 := pix1[tmp21]
    tmp22 := (tmp17 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgepx_xix_x3 := pix1[tmp22]
    tmp23 := (tmp17 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgepx_xix_x2 := pix1[tmp23]
    tmp24 := (tmp17 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgepx_xix_x1 := pix1[tmp24]
    tmp25 := (i_stride_pix3 * yx_x05x_xusx_xi)
    scevgep13x_xi := pix3[tmp25]
    tmp26 := (tmp25 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    scevgep13x_xix_x7 := pix3[tmp26]
    tmp27 := (tmp25 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    scevgep13x_xix_x6 := pix3[tmp27]
    tmp28 := (tmp25 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) )
    scevgep13x_xix_x5 := pix3[tmp28]
    tmp29 := (tmp25 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    scevgep13x_xix_x4 := pix3[tmp29]
    tmp30 := (tmp25 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep13x_xix_x3 := pix3[tmp30]
    tmp31 := (tmp25 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep13x_xix_x2 := pix3[tmp31]
    tmp32 := (tmp25 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep13x_xix_x1 := pix3[tmp32]
    tmp33 := (i_stride_pix2 * yx_x05x_xusx_xi)
    scevgep16x_xi := pix2[tmp33]
    tmp34 := (tmp33 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    scevgep16x_xix_x7 := pix2[tmp34]
    tmp59 := (tmp33 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    scevgep16x_xix_x6 := pix2[tmp59]
    tmp60 := (tmp33 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) )
    scevgep16x_xix_x5 := pix2[tmp60]
    tmp61 := (tmp33 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    scevgep16x_xix_x4 := pix2[tmp61]
    tmp62 := (tmp33 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep16x_xix_x3 := pix2[tmp62]
    tmp63 := (tmp33 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep16x_xix_x2 := pix2[tmp63]
    tmp64 := (tmp33 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep16x_xix_x1 := pix2[tmp64]
    // load 
    iNsTr_5 := ->(scevgep16x_xi) 
    iNsTr_6 := ($cast ($uint<32>) iNsTr_5)
    // load 
    iNsTr_7 := ->(scevgep13x_xi) 
    iNsTr_8 := ($cast ($uint<32>) iNsTr_7)
    iNsTr_9 := (iNsTr_6 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_10 := (iNsTr_9 + iNsTr_8)
    iNsTr_11 := (iNsTr_10 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_12 := ($cast ($uint<8>) iNsTr_11)
    ->(scevgepx_xi) := iNsTr_12
    // load 
    iNsTr_14 := ->(scevgep16x_xix_x1) 
    iNsTr_15 := ($cast ($uint<32>) iNsTr_14)
    // load 
    iNsTr_16 := ->(scevgep13x_xix_x1) 
    iNsTr_17 := ($cast ($uint<32>) iNsTr_16)
    iNsTr_18 := (iNsTr_15 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_19 := (iNsTr_18 + iNsTr_17)
    iNsTr_20 := (iNsTr_19 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_21 := ($cast ($uint<8>) iNsTr_20)
    ->(scevgepx_xix_x1) := iNsTr_21
    // load 
    iNsTr_23 := ->(scevgep16x_xix_x2) 
    iNsTr_24 := ($cast ($uint<32>) iNsTr_23)
    // load 
    iNsTr_25 := ->(scevgep13x_xix_x2) 
    iNsTr_26 := ($cast ($uint<32>) iNsTr_25)
    iNsTr_27 := (iNsTr_24 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_28 := (iNsTr_27 + iNsTr_26)
    iNsTr_29 := (iNsTr_28 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_30 := ($cast ($uint<8>) iNsTr_29)
    ->(scevgepx_xix_x2) := iNsTr_30
    // load 
    iNsTr_32 := ->(scevgep16x_xix_x3) 
    iNsTr_33 := ($cast ($uint<32>) iNsTr_32)
    // load 
    iNsTr_34 := ->(scevgep13x_xix_x3) 
    iNsTr_35 := ($cast ($uint<32>) iNsTr_34)
    iNsTr_36 := (iNsTr_33 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_37 := (iNsTr_36 + iNsTr_35)
    iNsTr_38 := (iNsTr_37 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_39 := ($cast ($uint<8>) iNsTr_38)
    ->(scevgepx_xix_x3) := iNsTr_39
    // load 
    iNsTr_41 := ->(scevgep16x_xix_x4) 
    iNsTr_42 := ($cast ($uint<32>) iNsTr_41)
    // load 
    iNsTr_43 := ->(scevgep13x_xix_x4) 
    iNsTr_44 := ($cast ($uint<32>) iNsTr_43)
    iNsTr_45 := (iNsTr_42 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_46 := (iNsTr_45 + iNsTr_44)
    iNsTr_47 := (iNsTr_46 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_48 := ($cast ($uint<8>) iNsTr_47)
    ->(scevgepx_xix_x4) := iNsTr_48
    // load 
    iNsTr_50 := ->(scevgep16x_xix_x5) 
    iNsTr_51 := ($cast ($uint<32>) iNsTr_50)
    // load 
    iNsTr_52 := ->(scevgep13x_xix_x5) 
    iNsTr_53 := ($cast ($uint<32>) iNsTr_52)
    iNsTr_54 := (iNsTr_51 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_55 := (iNsTr_54 + iNsTr_53)
    iNsTr_56 := (iNsTr_55 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_57 := ($cast ($uint<8>) iNsTr_56)
    ->(scevgepx_xix_x5) := iNsTr_57
    // load 
    iNsTr_59 := ->(scevgep16x_xix_x6) 
    iNsTr_60 := ($cast ($uint<32>) iNsTr_59)
    // load 
    iNsTr_61 := ->(scevgep13x_xix_x6) 
    iNsTr_62 := ($cast ($uint<32>) iNsTr_61)
    iNsTr_63 := (iNsTr_60 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_64 := (iNsTr_63 + iNsTr_62)
    iNsTr_65 := (iNsTr_64 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_66 := ($cast ($uint<8>) iNsTr_65)
    ->(scevgepx_xix_x6) := iNsTr_66
    // load 
    iNsTr_68 := ->(scevgep16x_xix_x7) 
    iNsTr_69 := ($cast ($uint<32>) iNsTr_68)
    // load 
    iNsTr_70 := ->(scevgep13x_xix_x7) 
    iNsTr_71 := ($cast ($uint<32>) iNsTr_70)
    iNsTr_72 := (iNsTr_69 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_73 := (iNsTr_72 + iNsTr_71)
    iNsTr_74 := (iNsTr_73 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_75 := ($cast ($uint<8>) iNsTr_74)
    ->(scevgepx_xix_x7) := iNsTr_75
    iNsTr_77 := (yx_x05x_xusx_xi + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond := (iNsTr_77 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 )  )
    $if exitcond $then  $place [bbx_xnphx_xusx_xi_pixel_avg_wxhx_xexitx_xloopexit16] $else $place [bbx_xnphx_xusx_xi_bbx_xnphx_xusx_xi] $endif 
    //begin: basic-block pixel_avg_wxhx_xexitx_xloopexit
    $merge x264_clip_pixelx_xexitx_xusx_xix_x3_pixel_avg_wxhx_xexitx_xloopexit
    $endmerge
    $place [pixel_avg_wxhx_xexitx_xloopexit_pixel_avg_wxhx_xexit]
    //begin: basic-block pixel_avg_wxhx_xexitx_xloopexit16
    $merge bbx_xnphx_xusx_xi_pixel_avg_wxhx_xexitx_xloopexit16
    $endmerge
    $place [pixel_avg_wxhx_xexitx_xloopexit16_pixel_avg_wxhx_xexit]
    //begin: basic-block pixel_avg_wxhx_xexit
    $merge pixel_avg_wxhx_xexitx_xloopexit_pixel_avg_wxhx_xexit pixel_avg_wxhx_xexitx_xloopexit16_pixel_avg_wxhx_xexit
    $endmerge
    $place [return__]
    //begin: basic-block bbx_xnphx_xusx_xi14
    $merge bb_0_bbx_xnphx_xusx_xi14
    $endmerge
    iNsTr_3 := (( $bitcast ($uint<32> ) _b00000000000000000000000001000000 )  - weight)
    $place [bbx_xnphx_xusx_xi14_bb_10]
    //begin: basic-block x264_clip_pixelx_xexitx_xusx_xi
    $merge bb_10_x264_clip_pixelx_xexitx_xusx_xi bb_9_x264_clip_pixelx_xexitx_xusx_xi
    $phi iNsTr_95 :=  ( $cast ($uint<32>) iNsTr_93) $on bb_9_x264_clip_pixelx_xexitx_xusx_xi ( $cast ($uint<32>) iNsTr_87) $on bb_10_x264_clip_pixelx_xexitx_xusx_xi 
    $endmerge
    iNsTr_96 := ($cast ($uint<8>) iNsTr_95)
    ->(scevgep16x_xi5) := iNsTr_96
    iNsTr_98 := (xx_x03x_xusx_xi3 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond15 := (iNsTr_98 == ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 )  )
    $if exitcond15 $then  $place [x264_clip_pixelx_xexitx_xusx_xi_bbx_xnphx_xusx_xi14x_x1x_xpreheader] $else $place [x264_clip_pixelx_xexitx_xusx_xi_bb_10] $endif 
    //begin: basic-block bbx_xnphx_xusx_xi14x_x1x_xpreheader
    $merge x264_clip_pixelx_xexitx_xusx_xi_bbx_xnphx_xusx_xi14x_x1x_xpreheader
    $endmerge
    $place [bbx_xnphx_xusx_xi14x_x1x_xpreheader_bbx_xnphx_xusx_xi14x_x1]
    //begin: basic-block bb_9
    $merge bb_10_bb_9
    $endmerge
    iNsTr_91 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_87)
    iNsTr_92 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_91) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_93 := (iNsTr_92 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_9_x264_clip_pixelx_xexitx_xusx_xi]
    //begin: basic-block bb_10
    $merge bbx_xnphx_xusx_xi14_bb_10 x264_clip_pixelx_xexitx_xusx_xi_bb_10
    $phi xx_x03x_xusx_xi3 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xusx_xi14_bb_10 ( $cast ($uint<32>) iNsTr_98) $on x264_clip_pixelx_xexitx_xusx_xi_bb_10 
    $endmerge
    scevgepx_xi9 := pix3[xx_x03x_xusx_xi3]
    scevgep13x_xi7 := pix2[xx_x03x_xusx_xi3]
    scevgep16x_xi5 := pix1[xx_x03x_xusx_xi3]
    // load 
    iNsTr_79 := ->(scevgep13x_xi7) 
    iNsTr_80 := ($cast ($uint<32>) iNsTr_79)
    iNsTr_81 := (iNsTr_80 * weight)
    // load 
    iNsTr_82 := ->(scevgepx_xi9) 
    iNsTr_83 := ($cast ($uint<32>) iNsTr_82)
    iNsTr_84 := (iNsTr_83 * iNsTr_3)
    iNsTr_85 := (iNsTr_81 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    iNsTr_86 := (iNsTr_85 + iNsTr_84)
    iNsTr_87 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_86) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 )  )))
    // compare instruction
    iNsTr_88 := (iNsTr_87 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_88 $then  $place [bb_10_bb_9] $else $place [bb_10_x264_clip_pixelx_xexitx_xusx_xi] $endif 
    //begin: basic-block bbx_xnphx_xusx_xi14x_x2
    $merge x264_clip_pixelx_xexitx_xusx_xix_x1_bbx_xnphx_xusx_xi14x_x2
    $endmerge
    tmp5 := (i_stride_pix3 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    tmp7 := (i_stride_pix2 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    tmp9 := (i_stride_pix1 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    $place [bbx_xnphx_xusx_xi14x_x2_bb_18]
    //begin: basic-block x264_clip_pixelx_xexitx_xusx_xix_x1
    $merge bb_13_x264_clip_pixelx_xexitx_xusx_xix_x1 bbx_xnphx_xusx_xi14x_x1_x264_clip_pixelx_xexitx_xusx_xix_x1
    $phi iNsTr_117 :=  ( $cast ($uint<32>) iNsTr_115) $on bb_13_x264_clip_pixelx_xexitx_xusx_xix_x1 ( $cast ($uint<32>) iNsTr_110) $on bbx_xnphx_xusx_xi14x_x1_x264_clip_pixelx_xexitx_xusx_xix_x1 
    $endmerge
    iNsTr_118 := ($cast ($uint<8>) iNsTr_117)
    ->(scevgep16x_xi5x_x1) := iNsTr_118
    iNsTr_120 := (xx_x03x_xusx_xi3x_x1 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond11 := (iNsTr_120 == ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 )  )
    $if exitcond11 $then  $place [x264_clip_pixelx_xexitx_xusx_xix_x1_bbx_xnphx_xusx_xi14x_x2] $else $place [x264_clip_pixelx_xexitx_xusx_xix_x1_bbx_xnphx_xusx_xi14x_x1] $endif 
    //begin: basic-block bb_13
    $merge bbx_xnphx_xusx_xi14x_x1_bb_13
    $endmerge
    iNsTr_113 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_110)
    iNsTr_114 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_113) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_115 := (iNsTr_114 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_13_x264_clip_pixelx_xexitx_xusx_xix_x1]
    //begin: basic-block bbx_xnphx_xusx_xi14x_x1
    $merge bbx_xnphx_xusx_xi14x_x1x_xpreheader_bbx_xnphx_xusx_xi14x_x1 x264_clip_pixelx_xexitx_xusx_xix_x1_bbx_xnphx_xusx_xi14x_x1
    $phi xx_x03x_xusx_xi3x_x1 :=  ( $cast ($uint<32>) iNsTr_120) $on x264_clip_pixelx_xexitx_xusx_xix_x1_bbx_xnphx_xusx_xi14x_x1 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xusx_xi14x_x1x_xpreheader_bbx_xnphx_xusx_xi14x_x1 
    $endmerge
    tmp12 := (i_stride_pix3 + xx_x03x_xusx_xi3x_x1)
    scevgepx_xi9x_x1 := pix3[tmp12]
    tmp13 := (i_stride_pix2 + xx_x03x_xusx_xi3x_x1)
    scevgep13x_xi7x_x1 := pix2[tmp13]
    tmp14 := (i_stride_pix1 + xx_x03x_xusx_xi3x_x1)
    scevgep16x_xi5x_x1 := pix1[tmp14]
    // load 
    iNsTr_102 := ->(scevgep13x_xi7x_x1) 
    iNsTr_103 := ($cast ($uint<32>) iNsTr_102)
    iNsTr_104 := (iNsTr_103 * weight)
    // load 
    iNsTr_105 := ->(scevgepx_xi9x_x1) 
    iNsTr_106 := ($cast ($uint<32>) iNsTr_105)
    iNsTr_107 := (iNsTr_106 * iNsTr_3)
    iNsTr_108 := (iNsTr_104 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    iNsTr_109 := (iNsTr_108 + iNsTr_107)
    iNsTr_110 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_109) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 )  )))
    // compare instruction
    iNsTr_111 := (iNsTr_110 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_111 $then  $place [bbx_xnphx_xusx_xi14x_x1_bb_13] $else $place [bbx_xnphx_xusx_xi14x_x1_x264_clip_pixelx_xexitx_xusx_xix_x1] $endif 
    //begin: basic-block bbx_xnphx_xusx_xi14x_x3
    $merge x264_clip_pixelx_xexitx_xusx_xix_x2_bbx_xnphx_xusx_xi14x_x3
    $endmerge
    tmp22x_x3 := (i_stride_pix1 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    tmp24x_x3 := (i_stride_pix2 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    tmp26x_x3 := (i_stride_pix3 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    $place [bbx_xnphx_xusx_xi14x_x3_bb_21]
    //begin: basic-block x264_clip_pixelx_xexitx_xusx_xix_x2
    $merge bb_17_x264_clip_pixelx_xexitx_xusx_xix_x2 bb_18_x264_clip_pixelx_xexitx_xusx_xix_x2
    $phi iNsTr_138 :=  ( $cast ($uint<32>) iNsTr_136) $on bb_17_x264_clip_pixelx_xexitx_xusx_xix_x2 ( $cast ($uint<32>) iNsTr_131) $on bb_18_x264_clip_pixelx_xexitx_xusx_xix_x2 
    $endmerge
    iNsTr_139 := ($cast ($uint<8>) iNsTr_138)
    ->(scevgep16x_xi5x_x2) := iNsTr_139
    iNsTr_141 := (xx_x03x_xusx_xi3x_x2 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond4 := (iNsTr_141 == ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 )  )
    $if exitcond4 $then  $place [x264_clip_pixelx_xexitx_xusx_xix_x2_bbx_xnphx_xusx_xi14x_x3] $else $place [x264_clip_pixelx_xexitx_xusx_xix_x2_bb_18] $endif 
    //begin: basic-block bb_17
    $merge bb_18_bb_17
    $endmerge
    iNsTr_134 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_131)
    iNsTr_135 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_134) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_136 := (iNsTr_135 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_17_x264_clip_pixelx_xexitx_xusx_xix_x2]
    //begin: basic-block bb_18
    $merge bbx_xnphx_xusx_xi14x_x2_bb_18 x264_clip_pixelx_xexitx_xusx_xix_x2_bb_18
    $phi xx_x03x_xusx_xi3x_x2 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xusx_xi14x_x2_bb_18 ( $cast ($uint<32>) iNsTr_141) $on x264_clip_pixelx_xexitx_xusx_xix_x2_bb_18 
    $endmerge
    tmp6 := (tmp5 + xx_x03x_xusx_xi3x_x2)
    scevgepx_xi9x_x2 := pix3[tmp6]
    tmp8 := (tmp7 + xx_x03x_xusx_xi3x_x2)
    scevgep13x_xi7x_x2 := pix2[tmp8]
    tmp10 := (tmp9 + xx_x03x_xusx_xi3x_x2)
    scevgep16x_xi5x_x2 := pix1[tmp10]
    // load 
    iNsTr_123 := ->(scevgep13x_xi7x_x2) 
    iNsTr_124 := ($cast ($uint<32>) iNsTr_123)
    iNsTr_125 := (iNsTr_124 * weight)
    // load 
    iNsTr_126 := ->(scevgepx_xi9x_x2) 
    iNsTr_127 := ($cast ($uint<32>) iNsTr_126)
    iNsTr_128 := (iNsTr_127 * iNsTr_3)
    iNsTr_129 := (iNsTr_125 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    iNsTr_130 := (iNsTr_129 + iNsTr_128)
    iNsTr_131 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_130) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 )  )))
    // compare instruction
    iNsTr_132 := (iNsTr_131 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_132 $then  $place [bb_18_bb_17] $else $place [bb_18_x264_clip_pixelx_xexitx_xusx_xix_x2] $endif 
    //begin: basic-block x264_clip_pixelx_xexitx_xusx_xix_x3
    $merge bb_20_x264_clip_pixelx_xexitx_xusx_xix_x3 bb_21_x264_clip_pixelx_xexitx_xusx_xix_x3
    $phi iNsTr_159 :=  ( $cast ($uint<32>) iNsTr_157) $on bb_20_x264_clip_pixelx_xexitx_xusx_xix_x3 ( $cast ($uint<32>) iNsTr_152) $on bb_21_x264_clip_pixelx_xexitx_xusx_xix_x3 
    $endmerge
    iNsTr_160 := ($cast ($uint<8>) iNsTr_159)
    ->(scevgep16x_xi5x_x3) := iNsTr_160
    iNsTr_162 := (xx_x03x_xusx_xi3x_x3 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (iNsTr_162 == ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 )  )
    $if exitcond1 $then  $place [x264_clip_pixelx_xexitx_xusx_xix_x3_pixel_avg_wxhx_xexitx_xloopexit] $else $place [x264_clip_pixelx_xexitx_xusx_xix_x3_bb_21] $endif 
    //begin: basic-block bb_20
    $merge bb_21_bb_20
    $endmerge
    iNsTr_155 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_152)
    iNsTr_156 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_155) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_157 := (iNsTr_156 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_20_x264_clip_pixelx_xexitx_xusx_xix_x3]
    //begin: basic-block bb_21
    $merge bbx_xnphx_xusx_xi14x_x3_bb_21 x264_clip_pixelx_xexitx_xusx_xix_x3_bb_21
    $phi xx_x03x_xusx_xi3x_x3 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xusx_xi14x_x3_bb_21 ( $cast ($uint<32>) iNsTr_162) $on x264_clip_pixelx_xexitx_xusx_xix_x3_bb_21 
    $endmerge
    tmp := (tmp26x_x3 + xx_x03x_xusx_xi3x_x3)
    scevgepx_xi9x_x3 := pix3[tmp]
    tmp2 := (tmp24x_x3 + xx_x03x_xusx_xi3x_x3)
    scevgep13x_xi7x_x3 := pix2[tmp2]
    tmp3 := (tmp22x_x3 + xx_x03x_xusx_xi3x_x3)
    scevgep16x_xi5x_x3 := pix1[tmp3]
    // load 
    iNsTr_144 := ->(scevgep13x_xi7x_x3) 
    iNsTr_145 := ($cast ($uint<32>) iNsTr_144)
    iNsTr_146 := (iNsTr_145 * weight)
    // load 
    iNsTr_147 := ->(scevgepx_xi9x_x3) 
    iNsTr_148 := ($cast ($uint<32>) iNsTr_147)
    iNsTr_149 := (iNsTr_148 * iNsTr_3)
    iNsTr_150 := (iNsTr_146 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    iNsTr_151 := (iNsTr_150 + iNsTr_149)
    iNsTr_152 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_151) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 )  )))
    // compare instruction
    iNsTr_153 := (iNsTr_152 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_153 $then  $place [bb_21_bb_20] $else $place [bb_21_x264_clip_pixelx_xexitx_xusx_xix_x3] $endif 
    $merge return__ $endmerge
  }
}
$module [pixel_avg_4x16] 
$in (pix1 : $pointer< $uint<8> > i_stride_pix1 : $uint<32> pix2 : $pointer< $uint<8> > i_stride_pix2 : $uint<32> pix3 : $pointer< $uint<8> > i_stride_pix3 : $uint<32> weight : $uint<32> )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    // compare instruction
    iNsTr_0 := (weight == ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  )
    $if iNsTr_0 $then  $place [bb_0_bbx_xnphx_xusx_xix_xpreheader] $else $place [bb_0_bb_6] $endif 
    //begin: basic-block bbx_xnphx_xusx_xix_xpreheader
    $merge bb_0_bbx_xnphx_xusx_xix_xpreheader
    $endmerge
    $place [bbx_xnphx_xusx_xix_xpreheader_bbx_xnphx_xusx_xi]
    //begin: basic-block bbx_xnphx_xusx_xi
    $merge bbx_xnphx_xusx_xi_bbx_xnphx_xusx_xi bbx_xnphx_xusx_xix_xpreheader_bbx_xnphx_xusx_xi
    $phi yx_x05x_xusx_xi :=  ( $cast ($uint<32>) iNsTr_41) $on bbx_xnphx_xusx_xi_bbx_xnphx_xusx_xi ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xusx_xix_xpreheader_bbx_xnphx_xusx_xi 
    $endmerge
    tmp14 := (i_stride_pix1 * yx_x05x_xusx_xi)
    scevgepx_xi := pix1[tmp14]
    tmp15 := (tmp14 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgepx_xix_x3 := pix1[tmp15]
    tmp16 := (tmp14 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgepx_xix_x2 := pix1[tmp16]
    tmp17 := (tmp14 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgepx_xix_x1 := pix1[tmp17]
    tmp18 := (i_stride_pix3 * yx_x05x_xusx_xi)
    scevgep13x_xi := pix3[tmp18]
    tmp19 := (tmp18 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep13x_xix_x3 := pix3[tmp19]
    tmp20 := (tmp18 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep13x_xix_x2 := pix3[tmp20]
    tmp21 := (tmp18 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep13x_xix_x1 := pix3[tmp21]
    tmp22 := (i_stride_pix2 * yx_x05x_xusx_xi)
    scevgep16x_xi := pix2[tmp22]
    tmp23 := (tmp22 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep16x_xix_x3 := pix2[tmp23]
    tmp24 := (tmp22 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep16x_xix_x2 := pix2[tmp24]
    tmp25 := (tmp22 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep16x_xix_x1 := pix2[tmp25]
    // load 
    iNsTr_5 := ->(scevgep16x_xi) 
    iNsTr_6 := ($cast ($uint<32>) iNsTr_5)
    // load 
    iNsTr_7 := ->(scevgep13x_xi) 
    iNsTr_8 := ($cast ($uint<32>) iNsTr_7)
    iNsTr_9 := (iNsTr_6 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_10 := (iNsTr_9 + iNsTr_8)
    iNsTr_11 := (iNsTr_10 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_12 := ($cast ($uint<8>) iNsTr_11)
    ->(scevgepx_xi) := iNsTr_12
    // load 
    iNsTr_14 := ->(scevgep16x_xix_x1) 
    iNsTr_15 := ($cast ($uint<32>) iNsTr_14)
    // load 
    iNsTr_16 := ->(scevgep13x_xix_x1) 
    iNsTr_17 := ($cast ($uint<32>) iNsTr_16)
    iNsTr_18 := (iNsTr_15 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_19 := (iNsTr_18 + iNsTr_17)
    iNsTr_20 := (iNsTr_19 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_21 := ($cast ($uint<8>) iNsTr_20)
    ->(scevgepx_xix_x1) := iNsTr_21
    // load 
    iNsTr_23 := ->(scevgep16x_xix_x2) 
    iNsTr_24 := ($cast ($uint<32>) iNsTr_23)
    // load 
    iNsTr_25 := ->(scevgep13x_xix_x2) 
    iNsTr_26 := ($cast ($uint<32>) iNsTr_25)
    iNsTr_27 := (iNsTr_24 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_28 := (iNsTr_27 + iNsTr_26)
    iNsTr_29 := (iNsTr_28 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_30 := ($cast ($uint<8>) iNsTr_29)
    ->(scevgepx_xix_x2) := iNsTr_30
    // load 
    iNsTr_32 := ->(scevgep16x_xix_x3) 
    iNsTr_33 := ($cast ($uint<32>) iNsTr_32)
    // load 
    iNsTr_34 := ->(scevgep13x_xix_x3) 
    iNsTr_35 := ($cast ($uint<32>) iNsTr_34)
    iNsTr_36 := (iNsTr_33 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_37 := (iNsTr_36 + iNsTr_35)
    iNsTr_38 := (iNsTr_37 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_39 := ($cast ($uint<8>) iNsTr_38)
    ->(scevgepx_xix_x3) := iNsTr_39
    iNsTr_41 := (yx_x05x_xusx_xi + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond := (iNsTr_41 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond $then  $place [bbx_xnphx_xusx_xi_pixel_avg_wxhx_xexitx_xloopexit13] $else $place [bbx_xnphx_xusx_xi_bbx_xnphx_xusx_xi] $endif 
    //begin: basic-block pixel_avg_wxhx_xexitx_xloopexit
    $merge x264_clip_pixelx_xexitx_xusx_xix_x3_pixel_avg_wxhx_xexitx_xloopexit
    $endmerge
    $place [pixel_avg_wxhx_xexitx_xloopexit_pixel_avg_wxhx_xexit]
    //begin: basic-block pixel_avg_wxhx_xexitx_xloopexit13
    $merge bbx_xnphx_xusx_xi_pixel_avg_wxhx_xexitx_xloopexit13
    $endmerge
    $place [pixel_avg_wxhx_xexitx_xloopexit13_pixel_avg_wxhx_xexit]
    //begin: basic-block pixel_avg_wxhx_xexit
    $merge pixel_avg_wxhx_xexitx_xloopexit_pixel_avg_wxhx_xexit pixel_avg_wxhx_xexitx_xloopexit13_pixel_avg_wxhx_xexit
    $endmerge
    $place [return__]
    //begin: basic-block bb_6
    $merge bb_0_bb_6
    $endmerge
    iNsTr_3 := (( $bitcast ($uint<32> ) _b00000000000000000000000001000000 )  - weight)
    $place [bb_6_bbx_xnphx_xusx_xi14]
    //begin: basic-block x264_clip_pixelx_xexitx_xusx_xi
    $merge bb_8_x264_clip_pixelx_xexitx_xusx_xi bbx_xnphx_xusx_xi14_x264_clip_pixelx_xexitx_xusx_xi
    $phi iNsTr_59 :=  ( $cast ($uint<32>) iNsTr_57) $on bb_8_x264_clip_pixelx_xexitx_xusx_xi ( $cast ($uint<32>) iNsTr_51) $on bbx_xnphx_xusx_xi14_x264_clip_pixelx_xexitx_xusx_xi 
    $endmerge
    iNsTr_60 := ($cast ($uint<8>) iNsTr_59)
    ->(scevgep16x_xi5) := iNsTr_60
    // load 
    iNsTr_62 := ->(scevgep13x_xi7x_x1) 
    iNsTr_63 := ($cast ($uint<32>) iNsTr_62)
    iNsTr_64 := (iNsTr_63 * weight)
    // load 
    iNsTr_65 := ->(scevgepx_xi9x_x1) 
    iNsTr_66 := ($cast ($uint<32>) iNsTr_65)
    iNsTr_67 := (iNsTr_66 * iNsTr_3)
    iNsTr_68 := (iNsTr_64 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    iNsTr_69 := (iNsTr_68 + iNsTr_67)
    iNsTr_70 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_69) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 )  )))
    // compare instruction
    iNsTr_71 := (iNsTr_70 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_71 $then  $place [x264_clip_pixelx_xexitx_xusx_xi_bb_11] $else $place [x264_clip_pixelx_xexitx_xusx_xi_x264_clip_pixelx_xexitx_xusx_xix_x1] $endif 
    //begin: basic-block bb_8
    $merge bbx_xnphx_xusx_xi14_bb_8
    $endmerge
    iNsTr_55 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_51)
    iNsTr_56 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_55) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_57 := (iNsTr_56 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_8_x264_clip_pixelx_xexitx_xusx_xi]
    //begin: basic-block bbx_xnphx_xusx_xi14
    $merge bb_6_bbx_xnphx_xusx_xi14 x264_clip_pixelx_xexitx_xusx_xix_x3_bbx_xnphx_xusx_xi14
    $phi yx_x05x_xusx_xi10 :=  ( $cast ($uint<32>) iNsTr_117) $on x264_clip_pixelx_xexitx_xusx_xix_x3_bbx_xnphx_xusx_xi14 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bb_6_bbx_xnphx_xusx_xi14 
    $endmerge
    tmp := (i_stride_pix3 * yx_x05x_xusx_xi10)
    scevgepx_xi9 := pix3[tmp]
    tmp2 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgepx_xi9x_x1 := pix3[tmp2]
    tmp3 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgepx_xi9x_x2 := pix3[tmp3]
    tmp4 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgepx_xi9x_x3 := pix3[tmp4]
    tmp5 := (i_stride_pix2 * yx_x05x_xusx_xi10)
    scevgep13x_xi7 := pix2[tmp5]
    tmp6 := (tmp5 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep13x_xi7x_x1 := pix2[tmp6]
    tmp7 := (tmp5 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep13x_xi7x_x2 := pix2[tmp7]
    tmp8 := (tmp5 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep13x_xi7x_x3 := pix2[tmp8]
    tmp9 := (i_stride_pix1 * yx_x05x_xusx_xi10)
    scevgep16x_xi5 := pix1[tmp9]
    tmp10 := (tmp9 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep16x_xi5x_x1 := pix1[tmp10]
    tmp11 := (tmp9 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep16x_xi5x_x2 := pix1[tmp11]
    tmp12 := (tmp9 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep16x_xi5x_x3 := pix1[tmp12]
    // load 
    iNsTr_43 := ->(scevgep13x_xi7) 
    iNsTr_44 := ($cast ($uint<32>) iNsTr_43)
    iNsTr_45 := (iNsTr_44 * weight)
    // load 
    iNsTr_46 := ->(scevgepx_xi9) 
    iNsTr_47 := ($cast ($uint<32>) iNsTr_46)
    iNsTr_48 := (iNsTr_47 * iNsTr_3)
    iNsTr_49 := (iNsTr_45 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    iNsTr_50 := (iNsTr_49 + iNsTr_48)
    iNsTr_51 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_50) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 )  )))
    // compare instruction
    iNsTr_52 := (iNsTr_51 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_52 $then  $place [bbx_xnphx_xusx_xi14_bb_8] $else $place [bbx_xnphx_xusx_xi14_x264_clip_pixelx_xexitx_xusx_xi] $endif 
    //begin: basic-block x264_clip_pixelx_xexitx_xusx_xix_x1
    $merge bb_11_x264_clip_pixelx_xexitx_xusx_xix_x1 x264_clip_pixelx_xexitx_xusx_xi_x264_clip_pixelx_xexitx_xusx_xix_x1
    $phi iNsTr_78 :=  ( $cast ($uint<32>) iNsTr_76) $on bb_11_x264_clip_pixelx_xexitx_xusx_xix_x1 ( $cast ($uint<32>) iNsTr_70) $on x264_clip_pixelx_xexitx_xusx_xi_x264_clip_pixelx_xexitx_xusx_xix_x1 
    $endmerge
    iNsTr_79 := ($cast ($uint<8>) iNsTr_78)
    ->(scevgep16x_xi5x_x1) := iNsTr_79
    // load 
    iNsTr_81 := ->(scevgep13x_xi7x_x2) 
    iNsTr_82 := ($cast ($uint<32>) iNsTr_81)
    iNsTr_83 := (iNsTr_82 * weight)
    // load 
    iNsTr_84 := ->(scevgepx_xi9x_x2) 
    iNsTr_85 := ($cast ($uint<32>) iNsTr_84)
    iNsTr_86 := (iNsTr_85 * iNsTr_3)
    iNsTr_87 := (iNsTr_83 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    iNsTr_88 := (iNsTr_87 + iNsTr_86)
    iNsTr_89 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_88) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 )  )))
    // compare instruction
    iNsTr_90 := (iNsTr_89 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_90 $then  $place [x264_clip_pixelx_xexitx_xusx_xix_x1_bb_13] $else $place [x264_clip_pixelx_xexitx_xusx_xix_x1_x264_clip_pixelx_xexitx_xusx_xix_x2] $endif 
    //begin: basic-block bb_11
    $merge x264_clip_pixelx_xexitx_xusx_xi_bb_11
    $endmerge
    iNsTr_74 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_70)
    iNsTr_75 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_74) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_76 := (iNsTr_75 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_11_x264_clip_pixelx_xexitx_xusx_xix_x1]
    //begin: basic-block x264_clip_pixelx_xexitx_xusx_xix_x2
    $merge bb_13_x264_clip_pixelx_xexitx_xusx_xix_x2 x264_clip_pixelx_xexitx_xusx_xix_x1_x264_clip_pixelx_xexitx_xusx_xix_x2
    $phi iNsTr_96 :=  ( $cast ($uint<32>) iNsTr_94) $on bb_13_x264_clip_pixelx_xexitx_xusx_xix_x2 ( $cast ($uint<32>) iNsTr_89) $on x264_clip_pixelx_xexitx_xusx_xix_x1_x264_clip_pixelx_xexitx_xusx_xix_x2 
    $endmerge
    iNsTr_97 := ($cast ($uint<8>) iNsTr_96)
    ->(scevgep16x_xi5x_x2) := iNsTr_97
    // load 
    iNsTr_99 := ->(scevgep13x_xi7x_x3) 
    iNsTr_100 := ($cast ($uint<32>) iNsTr_99)
    iNsTr_101 := (iNsTr_100 * weight)
    // load 
    iNsTr_102 := ->(scevgepx_xi9x_x3) 
    iNsTr_103 := ($cast ($uint<32>) iNsTr_102)
    iNsTr_104 := (iNsTr_103 * iNsTr_3)
    iNsTr_105 := (iNsTr_101 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    iNsTr_106 := (iNsTr_105 + iNsTr_104)
    iNsTr_107 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_106) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 )  )))
    // compare instruction
    iNsTr_108 := (iNsTr_107 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_108 $then  $place [x264_clip_pixelx_xexitx_xusx_xix_x2_bb_15] $else $place [x264_clip_pixelx_xexitx_xusx_xix_x2_x264_clip_pixelx_xexitx_xusx_xix_x3] $endif 
    //begin: basic-block bb_13
    $merge x264_clip_pixelx_xexitx_xusx_xix_x1_bb_13
    $endmerge
    iNsTr_92 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_89)
    iNsTr_93 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_92) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_94 := (iNsTr_93 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_13_x264_clip_pixelx_xexitx_xusx_xix_x2]
    //begin: basic-block x264_clip_pixelx_xexitx_xusx_xix_x3
    $merge bb_15_x264_clip_pixelx_xexitx_xusx_xix_x3 x264_clip_pixelx_xexitx_xusx_xix_x2_x264_clip_pixelx_xexitx_xusx_xix_x3
    $phi iNsTr_114 :=  ( $cast ($uint<32>) iNsTr_112) $on bb_15_x264_clip_pixelx_xexitx_xusx_xix_x3 ( $cast ($uint<32>) iNsTr_107) $on x264_clip_pixelx_xexitx_xusx_xix_x2_x264_clip_pixelx_xexitx_xusx_xix_x3 
    $endmerge
    iNsTr_115 := ($cast ($uint<8>) iNsTr_114)
    ->(scevgep16x_xi5x_x3) := iNsTr_115
    iNsTr_117 := (yx_x05x_xusx_xi10 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (iNsTr_117 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond1 $then  $place [x264_clip_pixelx_xexitx_xusx_xix_x3_pixel_avg_wxhx_xexitx_xloopexit] $else $place [x264_clip_pixelx_xexitx_xusx_xix_x3_bbx_xnphx_xusx_xi14] $endif 
    //begin: basic-block bb_15
    $merge x264_clip_pixelx_xexitx_xusx_xix_x2_bb_15
    $endmerge
    iNsTr_110 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_107)
    iNsTr_111 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_110) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_112 := (iNsTr_111 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_15_x264_clip_pixelx_xexitx_xusx_xix_x3]
    $merge return__ $endmerge
  }
}
$module [pixel_avg_4x8] 
$in (pix1 : $pointer< $uint<8> > i_stride_pix1 : $uint<32> pix2 : $pointer< $uint<8> > i_stride_pix2 : $uint<32> pix3 : $pointer< $uint<8> > i_stride_pix3 : $uint<32> weight : $uint<32> )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    // compare instruction
    iNsTr_0 := (weight == ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  )
    $if iNsTr_0 $then  $place [bb_0_bbx_xnphx_xusx_xix_xpreheader] $else $place [bb_0_bb_6] $endif 
    //begin: basic-block bbx_xnphx_xusx_xix_xpreheader
    $merge bb_0_bbx_xnphx_xusx_xix_xpreheader
    $endmerge
    $place [bbx_xnphx_xusx_xix_xpreheader_bbx_xnphx_xusx_xi]
    //begin: basic-block bbx_xnphx_xusx_xi
    $merge bbx_xnphx_xusx_xi_bbx_xnphx_xusx_xi bbx_xnphx_xusx_xix_xpreheader_bbx_xnphx_xusx_xi
    $phi yx_x05x_xusx_xi :=  ( $cast ($uint<32>) iNsTr_41) $on bbx_xnphx_xusx_xi_bbx_xnphx_xusx_xi ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xusx_xix_xpreheader_bbx_xnphx_xusx_xi 
    $endmerge
    tmp14 := (i_stride_pix1 * yx_x05x_xusx_xi)
    scevgepx_xi := pix1[tmp14]
    tmp15 := (tmp14 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgepx_xix_x3 := pix1[tmp15]
    tmp16 := (tmp14 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgepx_xix_x2 := pix1[tmp16]
    tmp17 := (tmp14 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgepx_xix_x1 := pix1[tmp17]
    tmp18 := (i_stride_pix3 * yx_x05x_xusx_xi)
    scevgep13x_xi := pix3[tmp18]
    tmp19 := (tmp18 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep13x_xix_x3 := pix3[tmp19]
    tmp20 := (tmp18 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep13x_xix_x2 := pix3[tmp20]
    tmp21 := (tmp18 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep13x_xix_x1 := pix3[tmp21]
    tmp22 := (i_stride_pix2 * yx_x05x_xusx_xi)
    scevgep16x_xi := pix2[tmp22]
    tmp23 := (tmp22 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep16x_xix_x3 := pix2[tmp23]
    tmp24 := (tmp22 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep16x_xix_x2 := pix2[tmp24]
    tmp25 := (tmp22 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep16x_xix_x1 := pix2[tmp25]
    // load 
    iNsTr_5 := ->(scevgep16x_xi) 
    iNsTr_6 := ($cast ($uint<32>) iNsTr_5)
    // load 
    iNsTr_7 := ->(scevgep13x_xi) 
    iNsTr_8 := ($cast ($uint<32>) iNsTr_7)
    iNsTr_9 := (iNsTr_6 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_10 := (iNsTr_9 + iNsTr_8)
    iNsTr_11 := (iNsTr_10 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_12 := ($cast ($uint<8>) iNsTr_11)
    ->(scevgepx_xi) := iNsTr_12
    // load 
    iNsTr_14 := ->(scevgep16x_xix_x1) 
    iNsTr_15 := ($cast ($uint<32>) iNsTr_14)
    // load 
    iNsTr_16 := ->(scevgep13x_xix_x1) 
    iNsTr_17 := ($cast ($uint<32>) iNsTr_16)
    iNsTr_18 := (iNsTr_15 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_19 := (iNsTr_18 + iNsTr_17)
    iNsTr_20 := (iNsTr_19 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_21 := ($cast ($uint<8>) iNsTr_20)
    ->(scevgepx_xix_x1) := iNsTr_21
    // load 
    iNsTr_23 := ->(scevgep16x_xix_x2) 
    iNsTr_24 := ($cast ($uint<32>) iNsTr_23)
    // load 
    iNsTr_25 := ->(scevgep13x_xix_x2) 
    iNsTr_26 := ($cast ($uint<32>) iNsTr_25)
    iNsTr_27 := (iNsTr_24 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_28 := (iNsTr_27 + iNsTr_26)
    iNsTr_29 := (iNsTr_28 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_30 := ($cast ($uint<8>) iNsTr_29)
    ->(scevgepx_xix_x2) := iNsTr_30
    // load 
    iNsTr_32 := ->(scevgep16x_xix_x3) 
    iNsTr_33 := ($cast ($uint<32>) iNsTr_32)
    // load 
    iNsTr_34 := ->(scevgep13x_xix_x3) 
    iNsTr_35 := ($cast ($uint<32>) iNsTr_34)
    iNsTr_36 := (iNsTr_33 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_37 := (iNsTr_36 + iNsTr_35)
    iNsTr_38 := (iNsTr_37 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_39 := ($cast ($uint<8>) iNsTr_38)
    ->(scevgepx_xix_x3) := iNsTr_39
    iNsTr_41 := (yx_x05x_xusx_xi + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond := (iNsTr_41 == ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 )  )
    $if exitcond $then  $place [bbx_xnphx_xusx_xi_pixel_avg_wxhx_xexitx_xloopexit13] $else $place [bbx_xnphx_xusx_xi_bbx_xnphx_xusx_xi] $endif 
    //begin: basic-block pixel_avg_wxhx_xexitx_xloopexit
    $merge x264_clip_pixelx_xexitx_xusx_xix_x3_pixel_avg_wxhx_xexitx_xloopexit
    $endmerge
    $place [pixel_avg_wxhx_xexitx_xloopexit_pixel_avg_wxhx_xexit]
    //begin: basic-block pixel_avg_wxhx_xexitx_xloopexit13
    $merge bbx_xnphx_xusx_xi_pixel_avg_wxhx_xexitx_xloopexit13
    $endmerge
    $place [pixel_avg_wxhx_xexitx_xloopexit13_pixel_avg_wxhx_xexit]
    //begin: basic-block pixel_avg_wxhx_xexit
    $merge pixel_avg_wxhx_xexitx_xloopexit_pixel_avg_wxhx_xexit pixel_avg_wxhx_xexitx_xloopexit13_pixel_avg_wxhx_xexit
    $endmerge
    $place [return__]
    //begin: basic-block bb_6
    $merge bb_0_bb_6
    $endmerge
    iNsTr_3 := (( $bitcast ($uint<32> ) _b00000000000000000000000001000000 )  - weight)
    $place [bb_6_bbx_xnphx_xusx_xi14]
    //begin: basic-block x264_clip_pixelx_xexitx_xusx_xi
    $merge bb_8_x264_clip_pixelx_xexitx_xusx_xi bbx_xnphx_xusx_xi14_x264_clip_pixelx_xexitx_xusx_xi
    $phi iNsTr_59 :=  ( $cast ($uint<32>) iNsTr_57) $on bb_8_x264_clip_pixelx_xexitx_xusx_xi ( $cast ($uint<32>) iNsTr_51) $on bbx_xnphx_xusx_xi14_x264_clip_pixelx_xexitx_xusx_xi 
    $endmerge
    iNsTr_60 := ($cast ($uint<8>) iNsTr_59)
    ->(scevgep16x_xi5) := iNsTr_60
    // load 
    iNsTr_62 := ->(scevgep13x_xi7x_x1) 
    iNsTr_63 := ($cast ($uint<32>) iNsTr_62)
    iNsTr_64 := (iNsTr_63 * weight)
    // load 
    iNsTr_65 := ->(scevgepx_xi9x_x1) 
    iNsTr_66 := ($cast ($uint<32>) iNsTr_65)
    iNsTr_67 := (iNsTr_66 * iNsTr_3)
    iNsTr_68 := (iNsTr_64 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    iNsTr_69 := (iNsTr_68 + iNsTr_67)
    iNsTr_70 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_69) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 )  )))
    // compare instruction
    iNsTr_71 := (iNsTr_70 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_71 $then  $place [x264_clip_pixelx_xexitx_xusx_xi_bb_11] $else $place [x264_clip_pixelx_xexitx_xusx_xi_x264_clip_pixelx_xexitx_xusx_xix_x1] $endif 
    //begin: basic-block bb_8
    $merge bbx_xnphx_xusx_xi14_bb_8
    $endmerge
    iNsTr_55 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_51)
    iNsTr_56 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_55) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_57 := (iNsTr_56 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_8_x264_clip_pixelx_xexitx_xusx_xi]
    //begin: basic-block bbx_xnphx_xusx_xi14
    $merge bb_6_bbx_xnphx_xusx_xi14 x264_clip_pixelx_xexitx_xusx_xix_x3_bbx_xnphx_xusx_xi14
    $phi yx_x05x_xusx_xi10 :=  ( $cast ($uint<32>) iNsTr_117) $on x264_clip_pixelx_xexitx_xusx_xix_x3_bbx_xnphx_xusx_xi14 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bb_6_bbx_xnphx_xusx_xi14 
    $endmerge
    tmp := (i_stride_pix3 * yx_x05x_xusx_xi10)
    scevgepx_xi9 := pix3[tmp]
    tmp2 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgepx_xi9x_x1 := pix3[tmp2]
    tmp3 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgepx_xi9x_x2 := pix3[tmp3]
    tmp4 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgepx_xi9x_x3 := pix3[tmp4]
    tmp5 := (i_stride_pix2 * yx_x05x_xusx_xi10)
    scevgep13x_xi7 := pix2[tmp5]
    tmp6 := (tmp5 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep13x_xi7x_x1 := pix2[tmp6]
    tmp7 := (tmp5 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep13x_xi7x_x2 := pix2[tmp7]
    tmp8 := (tmp5 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep13x_xi7x_x3 := pix2[tmp8]
    tmp9 := (i_stride_pix1 * yx_x05x_xusx_xi10)
    scevgep16x_xi5 := pix1[tmp9]
    tmp10 := (tmp9 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep16x_xi5x_x1 := pix1[tmp10]
    tmp11 := (tmp9 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep16x_xi5x_x2 := pix1[tmp11]
    tmp12 := (tmp9 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep16x_xi5x_x3 := pix1[tmp12]
    // load 
    iNsTr_43 := ->(scevgep13x_xi7) 
    iNsTr_44 := ($cast ($uint<32>) iNsTr_43)
    iNsTr_45 := (iNsTr_44 * weight)
    // load 
    iNsTr_46 := ->(scevgepx_xi9) 
    iNsTr_47 := ($cast ($uint<32>) iNsTr_46)
    iNsTr_48 := (iNsTr_47 * iNsTr_3)
    iNsTr_49 := (iNsTr_45 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    iNsTr_50 := (iNsTr_49 + iNsTr_48)
    iNsTr_51 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_50) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 )  )))
    // compare instruction
    iNsTr_52 := (iNsTr_51 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_52 $then  $place [bbx_xnphx_xusx_xi14_bb_8] $else $place [bbx_xnphx_xusx_xi14_x264_clip_pixelx_xexitx_xusx_xi] $endif 
    //begin: basic-block x264_clip_pixelx_xexitx_xusx_xix_x1
    $merge bb_11_x264_clip_pixelx_xexitx_xusx_xix_x1 x264_clip_pixelx_xexitx_xusx_xi_x264_clip_pixelx_xexitx_xusx_xix_x1
    $phi iNsTr_78 :=  ( $cast ($uint<32>) iNsTr_76) $on bb_11_x264_clip_pixelx_xexitx_xusx_xix_x1 ( $cast ($uint<32>) iNsTr_70) $on x264_clip_pixelx_xexitx_xusx_xi_x264_clip_pixelx_xexitx_xusx_xix_x1 
    $endmerge
    iNsTr_79 := ($cast ($uint<8>) iNsTr_78)
    ->(scevgep16x_xi5x_x1) := iNsTr_79
    // load 
    iNsTr_81 := ->(scevgep13x_xi7x_x2) 
    iNsTr_82 := ($cast ($uint<32>) iNsTr_81)
    iNsTr_83 := (iNsTr_82 * weight)
    // load 
    iNsTr_84 := ->(scevgepx_xi9x_x2) 
    iNsTr_85 := ($cast ($uint<32>) iNsTr_84)
    iNsTr_86 := (iNsTr_85 * iNsTr_3)
    iNsTr_87 := (iNsTr_83 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    iNsTr_88 := (iNsTr_87 + iNsTr_86)
    iNsTr_89 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_88) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 )  )))
    // compare instruction
    iNsTr_90 := (iNsTr_89 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_90 $then  $place [x264_clip_pixelx_xexitx_xusx_xix_x1_bb_13] $else $place [x264_clip_pixelx_xexitx_xusx_xix_x1_x264_clip_pixelx_xexitx_xusx_xix_x2] $endif 
    //begin: basic-block bb_11
    $merge x264_clip_pixelx_xexitx_xusx_xi_bb_11
    $endmerge
    iNsTr_74 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_70)
    iNsTr_75 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_74) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_76 := (iNsTr_75 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_11_x264_clip_pixelx_xexitx_xusx_xix_x1]
    //begin: basic-block x264_clip_pixelx_xexitx_xusx_xix_x2
    $merge bb_13_x264_clip_pixelx_xexitx_xusx_xix_x2 x264_clip_pixelx_xexitx_xusx_xix_x1_x264_clip_pixelx_xexitx_xusx_xix_x2
    $phi iNsTr_96 :=  ( $cast ($uint<32>) iNsTr_94) $on bb_13_x264_clip_pixelx_xexitx_xusx_xix_x2 ( $cast ($uint<32>) iNsTr_89) $on x264_clip_pixelx_xexitx_xusx_xix_x1_x264_clip_pixelx_xexitx_xusx_xix_x2 
    $endmerge
    iNsTr_97 := ($cast ($uint<8>) iNsTr_96)
    ->(scevgep16x_xi5x_x2) := iNsTr_97
    // load 
    iNsTr_99 := ->(scevgep13x_xi7x_x3) 
    iNsTr_100 := ($cast ($uint<32>) iNsTr_99)
    iNsTr_101 := (iNsTr_100 * weight)
    // load 
    iNsTr_102 := ->(scevgepx_xi9x_x3) 
    iNsTr_103 := ($cast ($uint<32>) iNsTr_102)
    iNsTr_104 := (iNsTr_103 * iNsTr_3)
    iNsTr_105 := (iNsTr_101 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    iNsTr_106 := (iNsTr_105 + iNsTr_104)
    iNsTr_107 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_106) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 )  )))
    // compare instruction
    iNsTr_108 := (iNsTr_107 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_108 $then  $place [x264_clip_pixelx_xexitx_xusx_xix_x2_bb_15] $else $place [x264_clip_pixelx_xexitx_xusx_xix_x2_x264_clip_pixelx_xexitx_xusx_xix_x3] $endif 
    //begin: basic-block bb_13
    $merge x264_clip_pixelx_xexitx_xusx_xix_x1_bb_13
    $endmerge
    iNsTr_92 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_89)
    iNsTr_93 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_92) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_94 := (iNsTr_93 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_13_x264_clip_pixelx_xexitx_xusx_xix_x2]
    //begin: basic-block x264_clip_pixelx_xexitx_xusx_xix_x3
    $merge bb_15_x264_clip_pixelx_xexitx_xusx_xix_x3 x264_clip_pixelx_xexitx_xusx_xix_x2_x264_clip_pixelx_xexitx_xusx_xix_x3
    $phi iNsTr_114 :=  ( $cast ($uint<32>) iNsTr_112) $on bb_15_x264_clip_pixelx_xexitx_xusx_xix_x3 ( $cast ($uint<32>) iNsTr_107) $on x264_clip_pixelx_xexitx_xusx_xix_x2_x264_clip_pixelx_xexitx_xusx_xix_x3 
    $endmerge
    iNsTr_115 := ($cast ($uint<8>) iNsTr_114)
    ->(scevgep16x_xi5x_x3) := iNsTr_115
    iNsTr_117 := (yx_x05x_xusx_xi10 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (iNsTr_117 == ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 )  )
    $if exitcond1 $then  $place [x264_clip_pixelx_xexitx_xusx_xix_x3_pixel_avg_wxhx_xexitx_xloopexit] $else $place [x264_clip_pixelx_xexitx_xusx_xix_x3_bbx_xnphx_xusx_xi14] $endif 
    //begin: basic-block bb_15
    $merge x264_clip_pixelx_xexitx_xusx_xix_x2_bb_15
    $endmerge
    iNsTr_110 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_107)
    iNsTr_111 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_110) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_112 := (iNsTr_111 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_15_x264_clip_pixelx_xexitx_xusx_xix_x3]
    $merge return__ $endmerge
  }
}
$module [pixel_avg_4x4] 
$in (pix1 : $pointer< $uint<8> > i_stride_pix1 : $uint<32> pix2 : $pointer< $uint<8> > i_stride_pix2 : $uint<32> pix3 : $pointer< $uint<8> > i_stride_pix3 : $uint<32> weight : $uint<32> )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    // compare instruction
    iNsTr_0 := (weight == ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  )
    $if iNsTr_0 $then  $place [bb_0_bbx_xnphx_xusx_xix_xpreheader] $else $place [bb_0_bb_6] $endif 
    //begin: basic-block bbx_xnphx_xusx_xix_xpreheader
    $merge bb_0_bbx_xnphx_xusx_xix_xpreheader
    $endmerge
    $place [bbx_xnphx_xusx_xix_xpreheader_bbx_xnphx_xusx_xi]
    //begin: basic-block bbx_xnphx_xusx_xi
    $merge bbx_xnphx_xusx_xi_bbx_xnphx_xusx_xi bbx_xnphx_xusx_xix_xpreheader_bbx_xnphx_xusx_xi
    $phi yx_x05x_xusx_xi :=  ( $cast ($uint<32>) iNsTr_41) $on bbx_xnphx_xusx_xi_bbx_xnphx_xusx_xi ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xusx_xix_xpreheader_bbx_xnphx_xusx_xi 
    $endmerge
    tmp14 := (i_stride_pix1 * yx_x05x_xusx_xi)
    scevgepx_xi := pix1[tmp14]
    tmp15 := (tmp14 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgepx_xix_x3 := pix1[tmp15]
    tmp16 := (tmp14 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgepx_xix_x2 := pix1[tmp16]
    tmp17 := (tmp14 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgepx_xix_x1 := pix1[tmp17]
    tmp18 := (i_stride_pix3 * yx_x05x_xusx_xi)
    scevgep13x_xi := pix3[tmp18]
    tmp19 := (tmp18 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep13x_xix_x3 := pix3[tmp19]
    tmp20 := (tmp18 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep13x_xix_x2 := pix3[tmp20]
    tmp21 := (tmp18 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep13x_xix_x1 := pix3[tmp21]
    tmp22 := (i_stride_pix2 * yx_x05x_xusx_xi)
    scevgep16x_xi := pix2[tmp22]
    tmp23 := (tmp22 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep16x_xix_x3 := pix2[tmp23]
    tmp24 := (tmp22 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep16x_xix_x2 := pix2[tmp24]
    tmp25 := (tmp22 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep16x_xix_x1 := pix2[tmp25]
    // load 
    iNsTr_5 := ->(scevgep16x_xi) 
    iNsTr_6 := ($cast ($uint<32>) iNsTr_5)
    // load 
    iNsTr_7 := ->(scevgep13x_xi) 
    iNsTr_8 := ($cast ($uint<32>) iNsTr_7)
    iNsTr_9 := (iNsTr_6 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_10 := (iNsTr_9 + iNsTr_8)
    iNsTr_11 := (iNsTr_10 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_12 := ($cast ($uint<8>) iNsTr_11)
    ->(scevgepx_xi) := iNsTr_12
    // load 
    iNsTr_14 := ->(scevgep16x_xix_x1) 
    iNsTr_15 := ($cast ($uint<32>) iNsTr_14)
    // load 
    iNsTr_16 := ->(scevgep13x_xix_x1) 
    iNsTr_17 := ($cast ($uint<32>) iNsTr_16)
    iNsTr_18 := (iNsTr_15 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_19 := (iNsTr_18 + iNsTr_17)
    iNsTr_20 := (iNsTr_19 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_21 := ($cast ($uint<8>) iNsTr_20)
    ->(scevgepx_xix_x1) := iNsTr_21
    // load 
    iNsTr_23 := ->(scevgep16x_xix_x2) 
    iNsTr_24 := ($cast ($uint<32>) iNsTr_23)
    // load 
    iNsTr_25 := ->(scevgep13x_xix_x2) 
    iNsTr_26 := ($cast ($uint<32>) iNsTr_25)
    iNsTr_27 := (iNsTr_24 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_28 := (iNsTr_27 + iNsTr_26)
    iNsTr_29 := (iNsTr_28 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_30 := ($cast ($uint<8>) iNsTr_29)
    ->(scevgepx_xix_x2) := iNsTr_30
    // load 
    iNsTr_32 := ->(scevgep16x_xix_x3) 
    iNsTr_33 := ($cast ($uint<32>) iNsTr_32)
    // load 
    iNsTr_34 := ->(scevgep13x_xix_x3) 
    iNsTr_35 := ($cast ($uint<32>) iNsTr_34)
    iNsTr_36 := (iNsTr_33 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_37 := (iNsTr_36 + iNsTr_35)
    iNsTr_38 := (iNsTr_37 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_39 := ($cast ($uint<8>) iNsTr_38)
    ->(scevgepx_xix_x3) := iNsTr_39
    iNsTr_41 := (yx_x05x_xusx_xi + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond := (iNsTr_41 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 )  )
    $if exitcond $then  $place [bbx_xnphx_xusx_xi_pixel_avg_wxhx_xexitx_xloopexit13] $else $place [bbx_xnphx_xusx_xi_bbx_xnphx_xusx_xi] $endif 
    //begin: basic-block pixel_avg_wxhx_xexitx_xloopexit
    $merge x264_clip_pixelx_xexitx_xusx_xix_x3_pixel_avg_wxhx_xexitx_xloopexit
    $endmerge
    $place [pixel_avg_wxhx_xexitx_xloopexit_pixel_avg_wxhx_xexit]
    //begin: basic-block pixel_avg_wxhx_xexitx_xloopexit13
    $merge bbx_xnphx_xusx_xi_pixel_avg_wxhx_xexitx_xloopexit13
    $endmerge
    $place [pixel_avg_wxhx_xexitx_xloopexit13_pixel_avg_wxhx_xexit]
    //begin: basic-block pixel_avg_wxhx_xexit
    $merge pixel_avg_wxhx_xexitx_xloopexit_pixel_avg_wxhx_xexit pixel_avg_wxhx_xexitx_xloopexit13_pixel_avg_wxhx_xexit
    $endmerge
    $place [return__]
    //begin: basic-block bb_6
    $merge bb_0_bb_6
    $endmerge
    iNsTr_3 := (( $bitcast ($uint<32> ) _b00000000000000000000000001000000 )  - weight)
    $place [bb_6_bbx_xnphx_xusx_xi14]
    //begin: basic-block x264_clip_pixelx_xexitx_xusx_xi
    $merge bb_8_x264_clip_pixelx_xexitx_xusx_xi bbx_xnphx_xusx_xi14_x264_clip_pixelx_xexitx_xusx_xi
    $phi iNsTr_59 :=  ( $cast ($uint<32>) iNsTr_57) $on bb_8_x264_clip_pixelx_xexitx_xusx_xi ( $cast ($uint<32>) iNsTr_51) $on bbx_xnphx_xusx_xi14_x264_clip_pixelx_xexitx_xusx_xi 
    $endmerge
    iNsTr_60 := ($cast ($uint<8>) iNsTr_59)
    ->(scevgep16x_xi5) := iNsTr_60
    // load 
    iNsTr_62 := ->(scevgep13x_xi7x_x1) 
    iNsTr_63 := ($cast ($uint<32>) iNsTr_62)
    iNsTr_64 := (iNsTr_63 * weight)
    // load 
    iNsTr_65 := ->(scevgepx_xi9x_x1) 
    iNsTr_66 := ($cast ($uint<32>) iNsTr_65)
    iNsTr_67 := (iNsTr_66 * iNsTr_3)
    iNsTr_68 := (iNsTr_64 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    iNsTr_69 := (iNsTr_68 + iNsTr_67)
    iNsTr_70 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_69) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 )  )))
    // compare instruction
    iNsTr_71 := (iNsTr_70 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_71 $then  $place [x264_clip_pixelx_xexitx_xusx_xi_bb_11] $else $place [x264_clip_pixelx_xexitx_xusx_xi_x264_clip_pixelx_xexitx_xusx_xix_x1] $endif 
    //begin: basic-block bb_8
    $merge bbx_xnphx_xusx_xi14_bb_8
    $endmerge
    iNsTr_55 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_51)
    iNsTr_56 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_55) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_57 := (iNsTr_56 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_8_x264_clip_pixelx_xexitx_xusx_xi]
    //begin: basic-block bbx_xnphx_xusx_xi14
    $merge bb_6_bbx_xnphx_xusx_xi14 x264_clip_pixelx_xexitx_xusx_xix_x3_bbx_xnphx_xusx_xi14
    $phi yx_x05x_xusx_xi10 :=  ( $cast ($uint<32>) iNsTr_117) $on x264_clip_pixelx_xexitx_xusx_xix_x3_bbx_xnphx_xusx_xi14 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bb_6_bbx_xnphx_xusx_xi14 
    $endmerge
    tmp := (i_stride_pix3 * yx_x05x_xusx_xi10)
    scevgepx_xi9 := pix3[tmp]
    tmp2 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgepx_xi9x_x1 := pix3[tmp2]
    tmp3 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgepx_xi9x_x2 := pix3[tmp3]
    tmp4 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgepx_xi9x_x3 := pix3[tmp4]
    tmp5 := (i_stride_pix2 * yx_x05x_xusx_xi10)
    scevgep13x_xi7 := pix2[tmp5]
    tmp6 := (tmp5 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep13x_xi7x_x1 := pix2[tmp6]
    tmp7 := (tmp5 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep13x_xi7x_x2 := pix2[tmp7]
    tmp8 := (tmp5 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep13x_xi7x_x3 := pix2[tmp8]
    tmp9 := (i_stride_pix1 * yx_x05x_xusx_xi10)
    scevgep16x_xi5 := pix1[tmp9]
    tmp10 := (tmp9 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep16x_xi5x_x1 := pix1[tmp10]
    tmp11 := (tmp9 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep16x_xi5x_x2 := pix1[tmp11]
    tmp12 := (tmp9 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep16x_xi5x_x3 := pix1[tmp12]
    // load 
    iNsTr_43 := ->(scevgep13x_xi7) 
    iNsTr_44 := ($cast ($uint<32>) iNsTr_43)
    iNsTr_45 := (iNsTr_44 * weight)
    // load 
    iNsTr_46 := ->(scevgepx_xi9) 
    iNsTr_47 := ($cast ($uint<32>) iNsTr_46)
    iNsTr_48 := (iNsTr_47 * iNsTr_3)
    iNsTr_49 := (iNsTr_45 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    iNsTr_50 := (iNsTr_49 + iNsTr_48)
    iNsTr_51 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_50) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 )  )))
    // compare instruction
    iNsTr_52 := (iNsTr_51 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_52 $then  $place [bbx_xnphx_xusx_xi14_bb_8] $else $place [bbx_xnphx_xusx_xi14_x264_clip_pixelx_xexitx_xusx_xi] $endif 
    //begin: basic-block x264_clip_pixelx_xexitx_xusx_xix_x1
    $merge bb_11_x264_clip_pixelx_xexitx_xusx_xix_x1 x264_clip_pixelx_xexitx_xusx_xi_x264_clip_pixelx_xexitx_xusx_xix_x1
    $phi iNsTr_78 :=  ( $cast ($uint<32>) iNsTr_76) $on bb_11_x264_clip_pixelx_xexitx_xusx_xix_x1 ( $cast ($uint<32>) iNsTr_70) $on x264_clip_pixelx_xexitx_xusx_xi_x264_clip_pixelx_xexitx_xusx_xix_x1 
    $endmerge
    iNsTr_79 := ($cast ($uint<8>) iNsTr_78)
    ->(scevgep16x_xi5x_x1) := iNsTr_79
    // load 
    iNsTr_81 := ->(scevgep13x_xi7x_x2) 
    iNsTr_82 := ($cast ($uint<32>) iNsTr_81)
    iNsTr_83 := (iNsTr_82 * weight)
    // load 
    iNsTr_84 := ->(scevgepx_xi9x_x2) 
    iNsTr_85 := ($cast ($uint<32>) iNsTr_84)
    iNsTr_86 := (iNsTr_85 * iNsTr_3)
    iNsTr_87 := (iNsTr_83 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    iNsTr_88 := (iNsTr_87 + iNsTr_86)
    iNsTr_89 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_88) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 )  )))
    // compare instruction
    iNsTr_90 := (iNsTr_89 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_90 $then  $place [x264_clip_pixelx_xexitx_xusx_xix_x1_bb_13] $else $place [x264_clip_pixelx_xexitx_xusx_xix_x1_x264_clip_pixelx_xexitx_xusx_xix_x2] $endif 
    //begin: basic-block bb_11
    $merge x264_clip_pixelx_xexitx_xusx_xi_bb_11
    $endmerge
    iNsTr_74 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_70)
    iNsTr_75 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_74) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_76 := (iNsTr_75 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_11_x264_clip_pixelx_xexitx_xusx_xix_x1]
    //begin: basic-block x264_clip_pixelx_xexitx_xusx_xix_x2
    $merge bb_13_x264_clip_pixelx_xexitx_xusx_xix_x2 x264_clip_pixelx_xexitx_xusx_xix_x1_x264_clip_pixelx_xexitx_xusx_xix_x2
    $phi iNsTr_96 :=  ( $cast ($uint<32>) iNsTr_94) $on bb_13_x264_clip_pixelx_xexitx_xusx_xix_x2 ( $cast ($uint<32>) iNsTr_89) $on x264_clip_pixelx_xexitx_xusx_xix_x1_x264_clip_pixelx_xexitx_xusx_xix_x2 
    $endmerge
    iNsTr_97 := ($cast ($uint<8>) iNsTr_96)
    ->(scevgep16x_xi5x_x2) := iNsTr_97
    // load 
    iNsTr_99 := ->(scevgep13x_xi7x_x3) 
    iNsTr_100 := ($cast ($uint<32>) iNsTr_99)
    iNsTr_101 := (iNsTr_100 * weight)
    // load 
    iNsTr_102 := ->(scevgepx_xi9x_x3) 
    iNsTr_103 := ($cast ($uint<32>) iNsTr_102)
    iNsTr_104 := (iNsTr_103 * iNsTr_3)
    iNsTr_105 := (iNsTr_101 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    iNsTr_106 := (iNsTr_105 + iNsTr_104)
    iNsTr_107 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_106) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 )  )))
    // compare instruction
    iNsTr_108 := (iNsTr_107 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_108 $then  $place [x264_clip_pixelx_xexitx_xusx_xix_x2_bb_15] $else $place [x264_clip_pixelx_xexitx_xusx_xix_x2_x264_clip_pixelx_xexitx_xusx_xix_x3] $endif 
    //begin: basic-block bb_13
    $merge x264_clip_pixelx_xexitx_xusx_xix_x1_bb_13
    $endmerge
    iNsTr_92 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_89)
    iNsTr_93 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_92) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_94 := (iNsTr_93 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_13_x264_clip_pixelx_xexitx_xusx_xix_x2]
    //begin: basic-block x264_clip_pixelx_xexitx_xusx_xix_x3
    $merge bb_15_x264_clip_pixelx_xexitx_xusx_xix_x3 x264_clip_pixelx_xexitx_xusx_xix_x2_x264_clip_pixelx_xexitx_xusx_xix_x3
    $phi iNsTr_114 :=  ( $cast ($uint<32>) iNsTr_112) $on bb_15_x264_clip_pixelx_xexitx_xusx_xix_x3 ( $cast ($uint<32>) iNsTr_107) $on x264_clip_pixelx_xexitx_xusx_xix_x2_x264_clip_pixelx_xexitx_xusx_xix_x3 
    $endmerge
    iNsTr_115 := ($cast ($uint<8>) iNsTr_114)
    ->(scevgep16x_xi5x_x3) := iNsTr_115
    iNsTr_117 := (yx_x05x_xusx_xi10 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (iNsTr_117 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 )  )
    $if exitcond1 $then  $place [x264_clip_pixelx_xexitx_xusx_xix_x3_pixel_avg_wxhx_xexitx_xloopexit] $else $place [x264_clip_pixelx_xexitx_xusx_xix_x3_bbx_xnphx_xusx_xi14] $endif 
    //begin: basic-block bb_15
    $merge x264_clip_pixelx_xexitx_xusx_xix_x2_bb_15
    $endmerge
    iNsTr_110 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_107)
    iNsTr_111 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_110) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_112 := (iNsTr_111 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_15_x264_clip_pixelx_xexitx_xusx_xix_x3]
    $merge return__ $endmerge
  }
}
$module [pixel_avg_4x2] 
$in (pix1 : $pointer< $uint<8> > i_stride_pix1 : $uint<32> pix2 : $pointer< $uint<8> > i_stride_pix2 : $uint<32> pix3 : $pointer< $uint<8> > i_stride_pix3 : $uint<32> weight : $uint<32> )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    // compare instruction
    iNsTr_0 := (weight == ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  )
    $if iNsTr_0 $then  $place [bb_0_bbx_xnphx_xusx_xix_xpreheader] $else $place [bb_0_bbx_xnphx_xusx_xi14] $endif 
    //begin: basic-block bbx_xnphx_xusx_xix_xpreheader
    $merge bb_0_bbx_xnphx_xusx_xix_xpreheader
    $endmerge
    scevgepx_xix_x1 := pix1[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    scevgepx_xix_x2 := pix1[( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    scevgepx_xix_x3 := pix1[( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    scevgep13x_xix_x1 := pix3[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    scevgep13x_xix_x2 := pix3[( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    scevgep13x_xix_x3 := pix3[( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    scevgep16x_xix_x1 := pix2[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    scevgep16x_xix_x2 := pix2[( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    scevgep16x_xix_x3 := pix2[( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    iNsTr_2 := ->(pix2) 
    iNsTr_3 := ($cast ($uint<32>) iNsTr_2)
    // load 
    iNsTr_4 := ->(pix3) 
    iNsTr_5 := ($cast ($uint<32>) iNsTr_4)
    iNsTr_6 := (iNsTr_3 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_7 := (iNsTr_6 + iNsTr_5)
    iNsTr_8 := (iNsTr_7 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_9 := ($cast ($uint<8>) iNsTr_8)
    ->(pix1) := iNsTr_9
    // load 
    iNsTr_11 := ->(scevgep16x_xix_x1) 
    iNsTr_12 := ($cast ($uint<32>) iNsTr_11)
    // load 
    iNsTr_13 := ->(scevgep13x_xix_x1) 
    iNsTr_14 := ($cast ($uint<32>) iNsTr_13)
    iNsTr_15 := (iNsTr_12 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_16 := (iNsTr_15 + iNsTr_14)
    iNsTr_17 := (iNsTr_16 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_18 := ($cast ($uint<8>) iNsTr_17)
    ->(scevgepx_xix_x1) := iNsTr_18
    // load 
    iNsTr_20 := ->(scevgep16x_xix_x2) 
    iNsTr_21 := ($cast ($uint<32>) iNsTr_20)
    // load 
    iNsTr_22 := ->(scevgep13x_xix_x2) 
    iNsTr_23 := ($cast ($uint<32>) iNsTr_22)
    iNsTr_24 := (iNsTr_21 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_25 := (iNsTr_24 + iNsTr_23)
    iNsTr_26 := (iNsTr_25 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_27 := ($cast ($uint<8>) iNsTr_26)
    ->(scevgepx_xix_x2) := iNsTr_27
    // load 
    iNsTr_29 := ->(scevgep16x_xix_x3) 
    iNsTr_30 := ($cast ($uint<32>) iNsTr_29)
    // load 
    iNsTr_31 := ->(scevgep13x_xix_x3) 
    iNsTr_32 := ($cast ($uint<32>) iNsTr_31)
    iNsTr_33 := (iNsTr_30 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_34 := (iNsTr_33 + iNsTr_32)
    iNsTr_35 := (iNsTr_34 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_36 := ($cast ($uint<8>) iNsTr_35)
    ->(scevgepx_xix_x3) := iNsTr_36
    tmp53x_x1 := (i_stride_pix1 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    tmp52x_x1 := (i_stride_pix1 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    tmp51x_x1 := (i_stride_pix1 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    tmp49x_x1 := (i_stride_pix3 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    tmp48x_x1 := (i_stride_pix3 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    tmp47x_x1 := (i_stride_pix3 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    tmp45x_x1 := (i_stride_pix2 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    tmp44x_x1 := (i_stride_pix2 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    tmp43x_x1 := (i_stride_pix2 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgepx_xix_x156 := pix1[i_stride_pix1]
    scevgepx_xix_x1x_x1 := pix1[tmp53x_x1]
    scevgepx_xix_x2x_x1 := pix1[tmp52x_x1]
    scevgepx_xix_x3x_x1 := pix1[tmp51x_x1]
    scevgep13x_xix_x155 := pix3[i_stride_pix3]
    scevgep13x_xix_x1x_x1 := pix3[tmp49x_x1]
    scevgep13x_xix_x2x_x1 := pix3[tmp48x_x1]
    scevgep13x_xix_x3x_x1 := pix3[tmp47x_x1]
    scevgep16x_xix_x154 := pix2[i_stride_pix2]
    scevgep16x_xix_x1x_x1 := pix2[tmp45x_x1]
    scevgep16x_xix_x2x_x1 := pix2[tmp44x_x1]
    scevgep16x_xix_x3x_x1 := pix2[tmp43x_x1]
    // load 
    iNsTr_38 := ->(scevgep16x_xix_x154) 
    iNsTr_39 := ($cast ($uint<32>) iNsTr_38)
    // load 
    iNsTr_40 := ->(scevgep13x_xix_x155) 
    iNsTr_41 := ($cast ($uint<32>) iNsTr_40)
    iNsTr_42 := (iNsTr_39 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_43 := (iNsTr_42 + iNsTr_41)
    iNsTr_44 := (iNsTr_43 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_45 := ($cast ($uint<8>) iNsTr_44)
    ->(scevgepx_xix_x156) := iNsTr_45
    // load 
    iNsTr_47 := ->(scevgep16x_xix_x1x_x1) 
    iNsTr_48 := ($cast ($uint<32>) iNsTr_47)
    // load 
    iNsTr_49 := ->(scevgep13x_xix_x1x_x1) 
    iNsTr_50 := ($cast ($uint<32>) iNsTr_49)
    iNsTr_51 := (iNsTr_48 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_52 := (iNsTr_51 + iNsTr_50)
    iNsTr_53 := (iNsTr_52 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_54 := ($cast ($uint<8>) iNsTr_53)
    ->(scevgepx_xix_x1x_x1) := iNsTr_54
    // load 
    iNsTr_56 := ->(scevgep16x_xix_x2x_x1) 
    iNsTr_57 := ($cast ($uint<32>) iNsTr_56)
    // load 
    iNsTr_58 := ->(scevgep13x_xix_x2x_x1) 
    iNsTr_59 := ($cast ($uint<32>) iNsTr_58)
    iNsTr_60 := (iNsTr_57 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_61 := (iNsTr_60 + iNsTr_59)
    iNsTr_62 := (iNsTr_61 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_63 := ($cast ($uint<8>) iNsTr_62)
    ->(scevgepx_xix_x2x_x1) := iNsTr_63
    // load 
    iNsTr_65 := ->(scevgep16x_xix_x3x_x1) 
    iNsTr_66 := ($cast ($uint<32>) iNsTr_65)
    // load 
    iNsTr_67 := ->(scevgep13x_xix_x3x_x1) 
    iNsTr_68 := ($cast ($uint<32>) iNsTr_67)
    iNsTr_69 := (iNsTr_66 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_70 := (iNsTr_69 + iNsTr_68)
    iNsTr_71 := (iNsTr_70 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_72 := ($cast ($uint<8>) iNsTr_71)
    ->(scevgepx_xix_x3x_x1) := iNsTr_72
    $place [bbx_xnphx_xusx_xix_xpreheader_UnifiedReturnBlock]
    //begin: basic-block bbx_xnphx_xusx_xi14
    $merge bb_0_bbx_xnphx_xusx_xi14
    $endmerge
    iNsTr_75 := (( $bitcast ($uint<32> ) _b00000000000000000000000001000000 )  - weight)
    scevgep16x_xi5x_x3 := pix1[( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    scevgep16x_xi5x_x2 := pix1[( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    scevgep16x_xi5x_x1 := pix1[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    scevgep13x_xi7x_x3 := pix2[( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    scevgep13x_xi7x_x2 := pix2[( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    scevgep13x_xi7x_x1 := pix2[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    scevgepx_xi9x_x3 := pix3[( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    scevgepx_xi9x_x2 := pix3[( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    scevgepx_xi9x_x1 := pix3[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_76 := ->(pix2) 
    iNsTr_77 := ($cast ($uint<32>) iNsTr_76)
    iNsTr_78 := (iNsTr_77 * weight)
    // load 
    iNsTr_79 := ->(pix3) 
    iNsTr_80 := ($cast ($uint<32>) iNsTr_79)
    iNsTr_81 := (iNsTr_80 * iNsTr_75)
    iNsTr_82 := (iNsTr_78 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    iNsTr_83 := (iNsTr_82 + iNsTr_81)
    iNsTr_84 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_83) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 )  )))
    // compare instruction
    iNsTr_85 := (iNsTr_84 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_85 $then  $place [bbx_xnphx_xusx_xi14_bb_4] $else $place [bbx_xnphx_xusx_xi14_x264_clip_pixelx_xexitx_xusx_xi] $endif 
    //begin: basic-block x264_clip_pixelx_xexitx_xusx_xi
    $merge bb_4_x264_clip_pixelx_xexitx_xusx_xi bbx_xnphx_xusx_xi14_x264_clip_pixelx_xexitx_xusx_xi
    $phi iNsTr_92 :=  ( $cast ($uint<32>) iNsTr_90) $on bb_4_x264_clip_pixelx_xexitx_xusx_xi ( $cast ($uint<32>) iNsTr_84) $on bbx_xnphx_xusx_xi14_x264_clip_pixelx_xexitx_xusx_xi 
    $endmerge
    iNsTr_93 := ($cast ($uint<8>) iNsTr_92)
    ->(pix1) := iNsTr_93
    // load 
    iNsTr_95 := ->(scevgep13x_xi7x_x1) 
    iNsTr_96 := ($cast ($uint<32>) iNsTr_95)
    iNsTr_97 := (iNsTr_96 * weight)
    // load 
    iNsTr_98 := ->(scevgepx_xi9x_x1) 
    iNsTr_99 := ($cast ($uint<32>) iNsTr_98)
    iNsTr_100 := (iNsTr_99 * iNsTr_75)
    iNsTr_101 := (iNsTr_97 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    iNsTr_102 := (iNsTr_101 + iNsTr_100)
    iNsTr_103 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_102) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 )  )))
    // compare instruction
    iNsTr_104 := (iNsTr_103 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_104 $then  $place [x264_clip_pixelx_xexitx_xusx_xi_bb_6] $else $place [x264_clip_pixelx_xexitx_xusx_xi_x264_clip_pixelx_xexitx_xusx_xix_x1] $endif 
    //begin: basic-block bb_4
    $merge bbx_xnphx_xusx_xi14_bb_4
    $endmerge
    iNsTr_88 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_84)
    iNsTr_89 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_88) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_90 := (iNsTr_89 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_4_x264_clip_pixelx_xexitx_xusx_xi]
    //begin: basic-block x264_clip_pixelx_xexitx_xusx_xix_x1
    $merge bb_6_x264_clip_pixelx_xexitx_xusx_xix_x1 x264_clip_pixelx_xexitx_xusx_xi_x264_clip_pixelx_xexitx_xusx_xix_x1
    $phi iNsTr_110 :=  ( $cast ($uint<32>) iNsTr_108) $on bb_6_x264_clip_pixelx_xexitx_xusx_xix_x1 ( $cast ($uint<32>) iNsTr_103) $on x264_clip_pixelx_xexitx_xusx_xi_x264_clip_pixelx_xexitx_xusx_xix_x1 
    $endmerge
    iNsTr_111 := ($cast ($uint<8>) iNsTr_110)
    ->(scevgep16x_xi5x_x1) := iNsTr_111
    // load 
    iNsTr_113 := ->(scevgep13x_xi7x_x2) 
    iNsTr_114 := ($cast ($uint<32>) iNsTr_113)
    iNsTr_115 := (iNsTr_114 * weight)
    // load 
    iNsTr_116 := ->(scevgepx_xi9x_x2) 
    iNsTr_117 := ($cast ($uint<32>) iNsTr_116)
    iNsTr_118 := (iNsTr_117 * iNsTr_75)
    iNsTr_119 := (iNsTr_115 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    iNsTr_120 := (iNsTr_119 + iNsTr_118)
    iNsTr_121 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_120) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 )  )))
    // compare instruction
    iNsTr_122 := (iNsTr_121 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_122 $then  $place [x264_clip_pixelx_xexitx_xusx_xix_x1_bb_8] $else $place [x264_clip_pixelx_xexitx_xusx_xix_x1_x264_clip_pixelx_xexitx_xusx_xix_x2] $endif 
    //begin: basic-block bb_6
    $merge x264_clip_pixelx_xexitx_xusx_xi_bb_6
    $endmerge
    iNsTr_106 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_103)
    iNsTr_107 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_106) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_108 := (iNsTr_107 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_6_x264_clip_pixelx_xexitx_xusx_xix_x1]
    //begin: basic-block x264_clip_pixelx_xexitx_xusx_xix_x2
    $merge bb_8_x264_clip_pixelx_xexitx_xusx_xix_x2 x264_clip_pixelx_xexitx_xusx_xix_x1_x264_clip_pixelx_xexitx_xusx_xix_x2
    $phi iNsTr_128 :=  ( $cast ($uint<32>) iNsTr_126) $on bb_8_x264_clip_pixelx_xexitx_xusx_xix_x2 ( $cast ($uint<32>) iNsTr_121) $on x264_clip_pixelx_xexitx_xusx_xix_x1_x264_clip_pixelx_xexitx_xusx_xix_x2 
    $endmerge
    iNsTr_129 := ($cast ($uint<8>) iNsTr_128)
    ->(scevgep16x_xi5x_x2) := iNsTr_129
    // load 
    iNsTr_131 := ->(scevgep13x_xi7x_x3) 
    iNsTr_132 := ($cast ($uint<32>) iNsTr_131)
    iNsTr_133 := (iNsTr_132 * weight)
    // load 
    iNsTr_134 := ->(scevgepx_xi9x_x3) 
    iNsTr_135 := ($cast ($uint<32>) iNsTr_134)
    iNsTr_136 := (iNsTr_135 * iNsTr_75)
    iNsTr_137 := (iNsTr_133 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    iNsTr_138 := (iNsTr_137 + iNsTr_136)
    iNsTr_139 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_138) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 )  )))
    // compare instruction
    iNsTr_140 := (iNsTr_139 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_140 $then  $place [x264_clip_pixelx_xexitx_xusx_xix_x2_bb_10] $else $place [x264_clip_pixelx_xexitx_xusx_xix_x2_x264_clip_pixelx_xexitx_xusx_xix_x3] $endif 
    //begin: basic-block bb_8
    $merge x264_clip_pixelx_xexitx_xusx_xix_x1_bb_8
    $endmerge
    iNsTr_124 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_121)
    iNsTr_125 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_124) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_126 := (iNsTr_125 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_8_x264_clip_pixelx_xexitx_xusx_xix_x2]
    //begin: basic-block x264_clip_pixelx_xexitx_xusx_xix_x3
    $merge bb_10_x264_clip_pixelx_xexitx_xusx_xix_x3 x264_clip_pixelx_xexitx_xusx_xix_x2_x264_clip_pixelx_xexitx_xusx_xix_x3
    $phi iNsTr_146 :=  ( $cast ($uint<32>) iNsTr_144) $on bb_10_x264_clip_pixelx_xexitx_xusx_xix_x3 ( $cast ($uint<32>) iNsTr_139) $on x264_clip_pixelx_xexitx_xusx_xix_x2_x264_clip_pixelx_xexitx_xusx_xix_x3 
    $endmerge
    iNsTr_147 := ($cast ($uint<8>) iNsTr_146)
    ->(scevgep16x_xi5x_x3) := iNsTr_147
    tmp22x_x1 := (i_stride_pix1 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep16x_xi5x_x3x_x1 := pix1[tmp22x_x1]
    tmp23x_x1 := (i_stride_pix1 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep16x_xi5x_x2x_x1 := pix1[tmp23x_x1]
    tmp24x_x1 := (i_stride_pix1 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep16x_xi5x_x1x_x1 := pix1[tmp24x_x1]
    scevgep16x_xi5x_x133 := pix1[i_stride_pix1]
    tmp26x_x1 := (i_stride_pix2 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep13x_xi7x_x3x_x1 := pix2[tmp26x_x1]
    tmp27x_x1 := (i_stride_pix2 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep13x_xi7x_x2x_x1 := pix2[tmp27x_x1]
    tmp28x_x1 := (i_stride_pix2 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep13x_xi7x_x1x_x1 := pix2[tmp28x_x1]
    tmp30x_x1 := (i_stride_pix3 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgepx_xi9x_x3x_x1 := pix3[tmp30x_x1]
    tmp31x_x1 := (i_stride_pix3 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgepx_xi9x_x2x_x1 := pix3[tmp31x_x1]
    tmp32x_x1 := (i_stride_pix3 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgepx_xi9x_x1x_x1 := pix3[tmp32x_x1]
    scevgepx_xi9x_x135 := pix3[i_stride_pix3]
    scevgep13x_xi7x_x134 := pix2[i_stride_pix2]
    // load 
    iNsTr_149 := ->(scevgep13x_xi7x_x134) 
    iNsTr_150 := ($cast ($uint<32>) iNsTr_149)
    iNsTr_151 := (iNsTr_150 * weight)
    // load 
    iNsTr_152 := ->(scevgepx_xi9x_x135) 
    iNsTr_153 := ($cast ($uint<32>) iNsTr_152)
    iNsTr_154 := (iNsTr_153 * iNsTr_75)
    iNsTr_155 := (iNsTr_151 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    iNsTr_156 := (iNsTr_155 + iNsTr_154)
    iNsTr_157 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_156) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 )  )))
    // compare instruction
    iNsTr_158 := (iNsTr_157 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_158 $then  $place [x264_clip_pixelx_xexitx_xusx_xix_x3_bb_12] $else $place [x264_clip_pixelx_xexitx_xusx_xix_x3_x264_clip_pixelx_xexitx_xusx_xix_x136] $endif 
    //begin: basic-block bb_10
    $merge x264_clip_pixelx_xexitx_xusx_xix_x2_bb_10
    $endmerge
    iNsTr_142 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_139)
    iNsTr_143 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_142) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_144 := (iNsTr_143 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_10_x264_clip_pixelx_xexitx_xusx_xix_x3]
    //begin: basic-block x264_clip_pixelx_xexitx_xusx_xix_x136
    $merge bb_12_x264_clip_pixelx_xexitx_xusx_xix_x136 x264_clip_pixelx_xexitx_xusx_xix_x3_x264_clip_pixelx_xexitx_xusx_xix_x136
    $phi iNsTr_164 :=  ( $cast ($uint<32>) iNsTr_162) $on bb_12_x264_clip_pixelx_xexitx_xusx_xix_x136 ( $cast ($uint<32>) iNsTr_157) $on x264_clip_pixelx_xexitx_xusx_xix_x3_x264_clip_pixelx_xexitx_xusx_xix_x136 
    $endmerge
    iNsTr_165 := ($cast ($uint<8>) iNsTr_164)
    ->(scevgep16x_xi5x_x133) := iNsTr_165
    // load 
    iNsTr_167 := ->(scevgep13x_xi7x_x1x_x1) 
    iNsTr_168 := ($cast ($uint<32>) iNsTr_167)
    iNsTr_169 := (iNsTr_168 * weight)
    // load 
    iNsTr_170 := ->(scevgepx_xi9x_x1x_x1) 
    iNsTr_171 := ($cast ($uint<32>) iNsTr_170)
    iNsTr_172 := (iNsTr_171 * iNsTr_75)
    iNsTr_173 := (iNsTr_169 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    iNsTr_174 := (iNsTr_173 + iNsTr_172)
    iNsTr_175 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_174) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 )  )))
    // compare instruction
    iNsTr_176 := (iNsTr_175 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_176 $then  $place [x264_clip_pixelx_xexitx_xusx_xix_x136_bb_14] $else $place [x264_clip_pixelx_xexitx_xusx_xix_x136_x264_clip_pixelx_xexitx_xusx_xix_x1x_x1] $endif 
    //begin: basic-block bb_12
    $merge x264_clip_pixelx_xexitx_xusx_xix_x3_bb_12
    $endmerge
    iNsTr_160 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_157)
    iNsTr_161 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_160) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_162 := (iNsTr_161 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_12_x264_clip_pixelx_xexitx_xusx_xix_x136]
    //begin: basic-block x264_clip_pixelx_xexitx_xusx_xix_x1x_x1
    $merge bb_14_x264_clip_pixelx_xexitx_xusx_xix_x1x_x1 x264_clip_pixelx_xexitx_xusx_xix_x136_x264_clip_pixelx_xexitx_xusx_xix_x1x_x1
    $phi iNsTr_182 :=  ( $cast ($uint<32>) iNsTr_180) $on bb_14_x264_clip_pixelx_xexitx_xusx_xix_x1x_x1 ( $cast ($uint<32>) iNsTr_175) $on x264_clip_pixelx_xexitx_xusx_xix_x136_x264_clip_pixelx_xexitx_xusx_xix_x1x_x1 
    $endmerge
    iNsTr_183 := ($cast ($uint<8>) iNsTr_182)
    ->(scevgep16x_xi5x_x1x_x1) := iNsTr_183
    // load 
    iNsTr_185 := ->(scevgep13x_xi7x_x2x_x1) 
    iNsTr_186 := ($cast ($uint<32>) iNsTr_185)
    iNsTr_187 := (iNsTr_186 * weight)
    // load 
    iNsTr_188 := ->(scevgepx_xi9x_x2x_x1) 
    iNsTr_189 := ($cast ($uint<32>) iNsTr_188)
    iNsTr_190 := (iNsTr_189 * iNsTr_75)
    iNsTr_191 := (iNsTr_187 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    iNsTr_192 := (iNsTr_191 + iNsTr_190)
    iNsTr_193 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_192) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 )  )))
    // compare instruction
    iNsTr_194 := (iNsTr_193 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_194 $then  $place [x264_clip_pixelx_xexitx_xusx_xix_x1x_x1_bb_16] $else $place [x264_clip_pixelx_xexitx_xusx_xix_x1x_x1_x264_clip_pixelx_xexitx_xusx_xix_x2x_x1] $endif 
    //begin: basic-block bb_14
    $merge x264_clip_pixelx_xexitx_xusx_xix_x136_bb_14
    $endmerge
    iNsTr_178 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_175)
    iNsTr_179 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_178) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_180 := (iNsTr_179 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_14_x264_clip_pixelx_xexitx_xusx_xix_x1x_x1]
    //begin: basic-block x264_clip_pixelx_xexitx_xusx_xix_x2x_x1
    $merge bb_16_x264_clip_pixelx_xexitx_xusx_xix_x2x_x1 x264_clip_pixelx_xexitx_xusx_xix_x1x_x1_x264_clip_pixelx_xexitx_xusx_xix_x2x_x1
    $phi iNsTr_200 :=  ( $cast ($uint<32>) iNsTr_198) $on bb_16_x264_clip_pixelx_xexitx_xusx_xix_x2x_x1 ( $cast ($uint<32>) iNsTr_193) $on x264_clip_pixelx_xexitx_xusx_xix_x1x_x1_x264_clip_pixelx_xexitx_xusx_xix_x2x_x1 
    $endmerge
    iNsTr_201 := ($cast ($uint<8>) iNsTr_200)
    ->(scevgep16x_xi5x_x2x_x1) := iNsTr_201
    // load 
    iNsTr_203 := ->(scevgep13x_xi7x_x3x_x1) 
    iNsTr_204 := ($cast ($uint<32>) iNsTr_203)
    iNsTr_205 := (iNsTr_204 * weight)
    // load 
    iNsTr_206 := ->(scevgepx_xi9x_x3x_x1) 
    iNsTr_207 := ($cast ($uint<32>) iNsTr_206)
    iNsTr_208 := (iNsTr_207 * iNsTr_75)
    iNsTr_209 := (iNsTr_205 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    iNsTr_210 := (iNsTr_209 + iNsTr_208)
    iNsTr_211 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_210) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 )  )))
    // compare instruction
    iNsTr_212 := (iNsTr_211 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_212 $then  $place [x264_clip_pixelx_xexitx_xusx_xix_x2x_x1_bb_18] $else $place [x264_clip_pixelx_xexitx_xusx_xix_x2x_x1_x264_clip_pixelx_xexitx_xusx_xix_x3x_x1] $endif 
    //begin: basic-block bb_16
    $merge x264_clip_pixelx_xexitx_xusx_xix_x1x_x1_bb_16
    $endmerge
    iNsTr_196 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_193)
    iNsTr_197 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_196) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_198 := (iNsTr_197 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_16_x264_clip_pixelx_xexitx_xusx_xix_x2x_x1]
    //begin: basic-block x264_clip_pixelx_xexitx_xusx_xix_x3x_x1
    $merge bb_18_x264_clip_pixelx_xexitx_xusx_xix_x3x_x1 x264_clip_pixelx_xexitx_xusx_xix_x2x_x1_x264_clip_pixelx_xexitx_xusx_xix_x3x_x1
    $phi iNsTr_218 :=  ( $cast ($uint<32>) iNsTr_216) $on bb_18_x264_clip_pixelx_xexitx_xusx_xix_x3x_x1 ( $cast ($uint<32>) iNsTr_211) $on x264_clip_pixelx_xexitx_xusx_xix_x2x_x1_x264_clip_pixelx_xexitx_xusx_xix_x3x_x1 
    $endmerge
    iNsTr_219 := ($cast ($uint<8>) iNsTr_218)
    ->(scevgep16x_xi5x_x3x_x1) := iNsTr_219
    $place [x264_clip_pixelx_xexitx_xusx_xix_x3x_x1_UnifiedReturnBlock]
    //begin: basic-block bb_18
    $merge x264_clip_pixelx_xexitx_xusx_xix_x2x_x1_bb_18
    $endmerge
    iNsTr_214 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_211)
    iNsTr_215 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_214) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_216 := (iNsTr_215 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_18_x264_clip_pixelx_xexitx_xusx_xix_x3x_x1]
    //begin: basic-block UnifiedReturnBlock
    $merge bbx_xnphx_xusx_xix_xpreheader_UnifiedReturnBlock x264_clip_pixelx_xexitx_xusx_xix_x3x_x1_UnifiedReturnBlock
    $endmerge
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [pixel_avg_2x8] 
$in (pix1 : $pointer< $uint<8> > i_stride_pix1 : $uint<32> pix2 : $pointer< $uint<8> > i_stride_pix2 : $uint<32> pix3 : $pointer< $uint<8> > i_stride_pix3 : $uint<32> weight : $uint<32> )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    // compare instruction
    iNsTr_0 := (weight == ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  )
    $if iNsTr_0 $then  $place [bb_0_bbx_xnphx_xusx_xix_xpreheader] $else $place [bb_0_bb_6] $endif 
    //begin: basic-block bbx_xnphx_xusx_xix_xpreheader
    $merge bb_0_bbx_xnphx_xusx_xix_xpreheader
    $endmerge
    $place [bbx_xnphx_xusx_xix_xpreheader_bbx_xnphx_xusx_xi]
    //begin: basic-block bbx_xnphx_xusx_xi
    $merge bbx_xnphx_xusx_xi_bbx_xnphx_xusx_xi bbx_xnphx_xusx_xix_xpreheader_bbx_xnphx_xusx_xi
    $phi yx_x05x_xusx_xi :=  ( $cast ($uint<32>) iNsTr_23) $on bbx_xnphx_xusx_xi_bbx_xnphx_xusx_xi ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xusx_xix_xpreheader_bbx_xnphx_xusx_xi 
    $endmerge
    tmp8 := (i_stride_pix1 * yx_x05x_xusx_xi)
    scevgepx_xi := pix1[tmp8]
    tmp9 := (tmp8 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgepx_xix_x1 := pix1[tmp9]
    tmp10 := (i_stride_pix3 * yx_x05x_xusx_xi)
    scevgep13x_xi := pix3[tmp10]
    tmp11 := (tmp10 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep13x_xix_x1 := pix3[tmp11]
    tmp12 := (i_stride_pix2 * yx_x05x_xusx_xi)
    scevgep16x_xi := pix2[tmp12]
    tmp13 := (tmp12 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep16x_xix_x1 := pix2[tmp13]
    // load 
    iNsTr_5 := ->(scevgep16x_xi) 
    iNsTr_6 := ($cast ($uint<32>) iNsTr_5)
    // load 
    iNsTr_7 := ->(scevgep13x_xi) 
    iNsTr_8 := ($cast ($uint<32>) iNsTr_7)
    iNsTr_9 := (iNsTr_6 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_10 := (iNsTr_9 + iNsTr_8)
    iNsTr_11 := (iNsTr_10 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_12 := ($cast ($uint<8>) iNsTr_11)
    ->(scevgepx_xi) := iNsTr_12
    // load 
    iNsTr_14 := ->(scevgep16x_xix_x1) 
    iNsTr_15 := ($cast ($uint<32>) iNsTr_14)
    // load 
    iNsTr_16 := ->(scevgep13x_xix_x1) 
    iNsTr_17 := ($cast ($uint<32>) iNsTr_16)
    iNsTr_18 := (iNsTr_15 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_19 := (iNsTr_18 + iNsTr_17)
    iNsTr_20 := (iNsTr_19 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_21 := ($cast ($uint<8>) iNsTr_20)
    ->(scevgepx_xix_x1) := iNsTr_21
    iNsTr_23 := (yx_x05x_xusx_xi + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond := (iNsTr_23 == ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 )  )
    $if exitcond $then  $place [bbx_xnphx_xusx_xi_pixel_avg_wxhx_xexitx_xloopexit7] $else $place [bbx_xnphx_xusx_xi_bbx_xnphx_xusx_xi] $endif 
    //begin: basic-block pixel_avg_wxhx_xexitx_xloopexit
    $merge x264_clip_pixelx_xexitx_xusx_xix_x1_pixel_avg_wxhx_xexitx_xloopexit
    $endmerge
    $place [pixel_avg_wxhx_xexitx_xloopexit_pixel_avg_wxhx_xexit]
    //begin: basic-block pixel_avg_wxhx_xexitx_xloopexit7
    $merge bbx_xnphx_xusx_xi_pixel_avg_wxhx_xexitx_xloopexit7
    $endmerge
    $place [pixel_avg_wxhx_xexitx_xloopexit7_pixel_avg_wxhx_xexit]
    //begin: basic-block pixel_avg_wxhx_xexit
    $merge pixel_avg_wxhx_xexitx_xloopexit_pixel_avg_wxhx_xexit pixel_avg_wxhx_xexitx_xloopexit7_pixel_avg_wxhx_xexit
    $endmerge
    $place [return__]
    //begin: basic-block bb_6
    $merge bb_0_bb_6
    $endmerge
    iNsTr_3 := (( $bitcast ($uint<32> ) _b00000000000000000000000001000000 )  - weight)
    $place [bb_6_bbx_xnphx_xusx_xi14]
    //begin: basic-block x264_clip_pixelx_xexitx_xusx_xi
    $merge bb_8_x264_clip_pixelx_xexitx_xusx_xi bbx_xnphx_xusx_xi14_x264_clip_pixelx_xexitx_xusx_xi
    $phi iNsTr_41 :=  ( $cast ($uint<32>) iNsTr_39) $on bb_8_x264_clip_pixelx_xexitx_xusx_xi ( $cast ($uint<32>) iNsTr_33) $on bbx_xnphx_xusx_xi14_x264_clip_pixelx_xexitx_xusx_xi 
    $endmerge
    iNsTr_42 := ($cast ($uint<8>) iNsTr_41)
    ->(scevgep16x_xi5) := iNsTr_42
    // load 
    iNsTr_44 := ->(scevgep13x_xi7x_x1) 
    iNsTr_45 := ($cast ($uint<32>) iNsTr_44)
    iNsTr_46 := (iNsTr_45 * weight)
    // load 
    iNsTr_47 := ->(scevgepx_xi9x_x1) 
    iNsTr_48 := ($cast ($uint<32>) iNsTr_47)
    iNsTr_49 := (iNsTr_48 * iNsTr_3)
    iNsTr_50 := (iNsTr_46 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    iNsTr_51 := (iNsTr_50 + iNsTr_49)
    iNsTr_52 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_51) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 )  )))
    // compare instruction
    iNsTr_53 := (iNsTr_52 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_53 $then  $place [x264_clip_pixelx_xexitx_xusx_xi_bb_11] $else $place [x264_clip_pixelx_xexitx_xusx_xi_x264_clip_pixelx_xexitx_xusx_xix_x1] $endif 
    //begin: basic-block bb_8
    $merge bbx_xnphx_xusx_xi14_bb_8
    $endmerge
    iNsTr_37 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_33)
    iNsTr_38 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_37) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_39 := (iNsTr_38 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_8_x264_clip_pixelx_xexitx_xusx_xi]
    //begin: basic-block bbx_xnphx_xusx_xi14
    $merge bb_6_bbx_xnphx_xusx_xi14 x264_clip_pixelx_xexitx_xusx_xix_x1_bbx_xnphx_xusx_xi14
    $phi yx_x05x_xusx_xi10 :=  ( $cast ($uint<32>) iNsTr_63) $on x264_clip_pixelx_xexitx_xusx_xix_x1_bbx_xnphx_xusx_xi14 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bb_6_bbx_xnphx_xusx_xi14 
    $endmerge
    tmp := (i_stride_pix3 * yx_x05x_xusx_xi10)
    scevgepx_xi9 := pix3[tmp]
    tmp2 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgepx_xi9x_x1 := pix3[tmp2]
    tmp3 := (i_stride_pix2 * yx_x05x_xusx_xi10)
    scevgep13x_xi7 := pix2[tmp3]
    tmp4 := (tmp3 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep13x_xi7x_x1 := pix2[tmp4]
    tmp5 := (i_stride_pix1 * yx_x05x_xusx_xi10)
    scevgep16x_xi5 := pix1[tmp5]
    tmp6 := (tmp5 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep16x_xi5x_x1 := pix1[tmp6]
    // load 
    iNsTr_25 := ->(scevgep13x_xi7) 
    iNsTr_26 := ($cast ($uint<32>) iNsTr_25)
    iNsTr_27 := (iNsTr_26 * weight)
    // load 
    iNsTr_28 := ->(scevgepx_xi9) 
    iNsTr_29 := ($cast ($uint<32>) iNsTr_28)
    iNsTr_30 := (iNsTr_29 * iNsTr_3)
    iNsTr_31 := (iNsTr_27 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    iNsTr_32 := (iNsTr_31 + iNsTr_30)
    iNsTr_33 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_32) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 )  )))
    // compare instruction
    iNsTr_34 := (iNsTr_33 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_34 $then  $place [bbx_xnphx_xusx_xi14_bb_8] $else $place [bbx_xnphx_xusx_xi14_x264_clip_pixelx_xexitx_xusx_xi] $endif 
    //begin: basic-block x264_clip_pixelx_xexitx_xusx_xix_x1
    $merge bb_11_x264_clip_pixelx_xexitx_xusx_xix_x1 x264_clip_pixelx_xexitx_xusx_xi_x264_clip_pixelx_xexitx_xusx_xix_x1
    $phi iNsTr_60 :=  ( $cast ($uint<32>) iNsTr_58) $on bb_11_x264_clip_pixelx_xexitx_xusx_xix_x1 ( $cast ($uint<32>) iNsTr_52) $on x264_clip_pixelx_xexitx_xusx_xi_x264_clip_pixelx_xexitx_xusx_xix_x1 
    $endmerge
    iNsTr_61 := ($cast ($uint<8>) iNsTr_60)
    ->(scevgep16x_xi5x_x1) := iNsTr_61
    iNsTr_63 := (yx_x05x_xusx_xi10 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (iNsTr_63 == ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 )  )
    $if exitcond1 $then  $place [x264_clip_pixelx_xexitx_xusx_xix_x1_pixel_avg_wxhx_xexitx_xloopexit] $else $place [x264_clip_pixelx_xexitx_xusx_xix_x1_bbx_xnphx_xusx_xi14] $endif 
    //begin: basic-block bb_11
    $merge x264_clip_pixelx_xexitx_xusx_xi_bb_11
    $endmerge
    iNsTr_56 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_52)
    iNsTr_57 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_56) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_58 := (iNsTr_57 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_11_x264_clip_pixelx_xexitx_xusx_xix_x1]
    $merge return__ $endmerge
  }
}
$module [pixel_avg_2x4] 
$in (pix1 : $pointer< $uint<8> > i_stride_pix1 : $uint<32> pix2 : $pointer< $uint<8> > i_stride_pix2 : $uint<32> pix3 : $pointer< $uint<8> > i_stride_pix3 : $uint<32> weight : $uint<32> )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    // compare instruction
    iNsTr_0 := (weight == ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  )
    $if iNsTr_0 $then  $place [bb_0_bbx_xnphx_xusx_xix_xpreheader] $else $place [bb_0_bbx_xnphx_xusx_xi14] $endif 
    //begin: basic-block bbx_xnphx_xusx_xix_xpreheader
    $merge bb_0_bbx_xnphx_xusx_xix_xpreheader
    $endmerge
    scevgepx_xix_x1 := pix1[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    scevgep13x_xix_x1 := pix3[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    scevgep16x_xix_x1 := pix2[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_2 := ->(pix2) 
    iNsTr_3 := ($cast ($uint<32>) iNsTr_2)
    // load 
    iNsTr_4 := ->(pix3) 
    iNsTr_5 := ($cast ($uint<32>) iNsTr_4)
    iNsTr_6 := (iNsTr_3 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_7 := (iNsTr_6 + iNsTr_5)
    iNsTr_8 := (iNsTr_7 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_9 := ($cast ($uint<8>) iNsTr_8)
    ->(pix1) := iNsTr_9
    // load 
    iNsTr_11 := ->(scevgep16x_xix_x1) 
    iNsTr_12 := ($cast ($uint<32>) iNsTr_11)
    // load 
    iNsTr_13 := ->(scevgep13x_xix_x1) 
    iNsTr_14 := ($cast ($uint<32>) iNsTr_13)
    iNsTr_15 := (iNsTr_12 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_16 := (iNsTr_15 + iNsTr_14)
    iNsTr_17 := (iNsTr_16 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_18 := ($cast ($uint<8>) iNsTr_17)
    ->(scevgepx_xix_x1) := iNsTr_18
    tmp41x_x1 := (i_stride_pix1 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    tmp39x_x1 := (i_stride_pix3 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    tmp37x_x1 := (i_stride_pix2 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgepx_xix_x144 := pix1[i_stride_pix1]
    scevgepx_xix_x1x_x1 := pix1[tmp41x_x1]
    scevgep13x_xix_x143 := pix3[i_stride_pix3]
    scevgep13x_xix_x1x_x1 := pix3[tmp39x_x1]
    scevgep16x_xix_x142 := pix2[i_stride_pix2]
    scevgep16x_xix_x1x_x1 := pix2[tmp37x_x1]
    // load 
    iNsTr_20 := ->(scevgep16x_xix_x142) 
    iNsTr_21 := ($cast ($uint<32>) iNsTr_20)
    // load 
    iNsTr_22 := ->(scevgep13x_xix_x143) 
    iNsTr_23 := ($cast ($uint<32>) iNsTr_22)
    iNsTr_24 := (iNsTr_21 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_25 := (iNsTr_24 + iNsTr_23)
    iNsTr_26 := (iNsTr_25 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_27 := ($cast ($uint<8>) iNsTr_26)
    ->(scevgepx_xix_x144) := iNsTr_27
    // load 
    iNsTr_29 := ->(scevgep16x_xix_x1x_x1) 
    iNsTr_30 := ($cast ($uint<32>) iNsTr_29)
    // load 
    iNsTr_31 := ->(scevgep13x_xix_x1x_x1) 
    iNsTr_32 := ($cast ($uint<32>) iNsTr_31)
    iNsTr_33 := (iNsTr_30 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_34 := (iNsTr_33 + iNsTr_32)
    iNsTr_35 := (iNsTr_34 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_36 := ($cast ($uint<8>) iNsTr_35)
    ->(scevgepx_xix_x1x_x1) := iNsTr_36
    tmp36x_x2 := (i_stride_pix2 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    tmp38x_x2 := (i_stride_pix3 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    tmp40x_x2 := (i_stride_pix1 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    tmp41x_x250 := (tmp40x_x2 | ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    tmp39x_x249 := (tmp38x_x2 | ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    tmp37x_x248 := (tmp36x_x2 | ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgepx_xix_x2 := pix1[tmp40x_x2]
    scevgepx_xix_x1x_x2 := pix1[tmp41x_x250]
    scevgep13x_xix_x2 := pix3[tmp38x_x2]
    scevgep13x_xix_x1x_x2 := pix3[tmp39x_x249]
    scevgep16x_xix_x2 := pix2[tmp36x_x2]
    scevgep16x_xix_x1x_x2 := pix2[tmp37x_x248]
    // load 
    iNsTr_38 := ->(scevgep16x_xix_x2) 
    iNsTr_39 := ($cast ($uint<32>) iNsTr_38)
    // load 
    iNsTr_40 := ->(scevgep13x_xix_x2) 
    iNsTr_41 := ($cast ($uint<32>) iNsTr_40)
    iNsTr_42 := (iNsTr_39 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_43 := (iNsTr_42 + iNsTr_41)
    iNsTr_44 := (iNsTr_43 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_45 := ($cast ($uint<8>) iNsTr_44)
    ->(scevgepx_xix_x2) := iNsTr_45
    // load 
    iNsTr_47 := ->(scevgep16x_xix_x1x_x2) 
    iNsTr_48 := ($cast ($uint<32>) iNsTr_47)
    // load 
    iNsTr_49 := ->(scevgep13x_xix_x1x_x2) 
    iNsTr_50 := ($cast ($uint<32>) iNsTr_49)
    iNsTr_51 := (iNsTr_48 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_52 := (iNsTr_51 + iNsTr_50)
    iNsTr_53 := (iNsTr_52 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_54 := ($cast ($uint<8>) iNsTr_53)
    ->(scevgepx_xix_x1x_x2) := iNsTr_54
    tmp36x_x3 := (i_stride_pix2 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    tmp38x_x3 := (i_stride_pix3 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    tmp40x_x3 := (i_stride_pix1 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    tmp41x_x3 := (tmp40x_x3 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    tmp39x_x3 := (tmp38x_x3 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    tmp37x_x3 := (tmp36x_x3 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgepx_xix_x3 := pix1[tmp40x_x3]
    scevgepx_xix_x1x_x3 := pix1[tmp41x_x3]
    scevgep13x_xix_x3 := pix3[tmp38x_x3]
    scevgep13x_xix_x1x_x3 := pix3[tmp39x_x3]
    scevgep16x_xix_x3 := pix2[tmp36x_x3]
    scevgep16x_xix_x1x_x3 := pix2[tmp37x_x3]
    // load 
    iNsTr_56 := ->(scevgep16x_xix_x3) 
    iNsTr_57 := ($cast ($uint<32>) iNsTr_56)
    // load 
    iNsTr_58 := ->(scevgep13x_xix_x3) 
    iNsTr_59 := ($cast ($uint<32>) iNsTr_58)
    iNsTr_60 := (iNsTr_57 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_61 := (iNsTr_60 + iNsTr_59)
    iNsTr_62 := (iNsTr_61 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_63 := ($cast ($uint<8>) iNsTr_62)
    ->(scevgepx_xix_x3) := iNsTr_63
    // load 
    iNsTr_65 := ->(scevgep16x_xix_x1x_x3) 
    iNsTr_66 := ($cast ($uint<32>) iNsTr_65)
    // load 
    iNsTr_67 := ->(scevgep13x_xix_x1x_x3) 
    iNsTr_68 := ($cast ($uint<32>) iNsTr_67)
    iNsTr_69 := (iNsTr_66 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_70 := (iNsTr_69 + iNsTr_68)
    iNsTr_71 := (iNsTr_70 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_72 := ($cast ($uint<8>) iNsTr_71)
    ->(scevgepx_xix_x1x_x3) := iNsTr_72
    $place [bbx_xnphx_xusx_xix_xpreheader_UnifiedReturnBlock]
    //begin: basic-block bbx_xnphx_xusx_xi14
    $merge bb_0_bbx_xnphx_xusx_xi14
    $endmerge
    iNsTr_75 := (( $bitcast ($uint<32> ) _b00000000000000000000000001000000 )  - weight)
    scevgep16x_xi5x_x1 := pix1[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    scevgep13x_xi7x_x1 := pix2[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    scevgepx_xi9x_x1 := pix3[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_76 := ->(pix2) 
    iNsTr_77 := ($cast ($uint<32>) iNsTr_76)
    iNsTr_78 := (iNsTr_77 * weight)
    // load 
    iNsTr_79 := ->(pix3) 
    iNsTr_80 := ($cast ($uint<32>) iNsTr_79)
    iNsTr_81 := (iNsTr_80 * iNsTr_75)
    iNsTr_82 := (iNsTr_78 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    iNsTr_83 := (iNsTr_82 + iNsTr_81)
    iNsTr_84 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_83) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 )  )))
    // compare instruction
    iNsTr_85 := (iNsTr_84 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_85 $then  $place [bbx_xnphx_xusx_xi14_bb_4] $else $place [bbx_xnphx_xusx_xi14_x264_clip_pixelx_xexitx_xusx_xi] $endif 
    //begin: basic-block x264_clip_pixelx_xexitx_xusx_xi
    $merge bb_4_x264_clip_pixelx_xexitx_xusx_xi bbx_xnphx_xusx_xi14_x264_clip_pixelx_xexitx_xusx_xi
    $phi iNsTr_92 :=  ( $cast ($uint<32>) iNsTr_90) $on bb_4_x264_clip_pixelx_xexitx_xusx_xi ( $cast ($uint<32>) iNsTr_84) $on bbx_xnphx_xusx_xi14_x264_clip_pixelx_xexitx_xusx_xi 
    $endmerge
    iNsTr_93 := ($cast ($uint<8>) iNsTr_92)
    ->(pix1) := iNsTr_93
    // load 
    iNsTr_95 := ->(scevgep13x_xi7x_x1) 
    iNsTr_96 := ($cast ($uint<32>) iNsTr_95)
    iNsTr_97 := (iNsTr_96 * weight)
    // load 
    iNsTr_98 := ->(scevgepx_xi9x_x1) 
    iNsTr_99 := ($cast ($uint<32>) iNsTr_98)
    iNsTr_100 := (iNsTr_99 * iNsTr_75)
    iNsTr_101 := (iNsTr_97 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    iNsTr_102 := (iNsTr_101 + iNsTr_100)
    iNsTr_103 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_102) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 )  )))
    // compare instruction
    iNsTr_104 := (iNsTr_103 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_104 $then  $place [x264_clip_pixelx_xexitx_xusx_xi_bb_6] $else $place [x264_clip_pixelx_xexitx_xusx_xi_x264_clip_pixelx_xexitx_xusx_xix_x1] $endif 
    //begin: basic-block bb_4
    $merge bbx_xnphx_xusx_xi14_bb_4
    $endmerge
    iNsTr_88 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_84)
    iNsTr_89 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_88) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_90 := (iNsTr_89 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_4_x264_clip_pixelx_xexitx_xusx_xi]
    //begin: basic-block x264_clip_pixelx_xexitx_xusx_xix_x1
    $merge bb_6_x264_clip_pixelx_xexitx_xusx_xix_x1 x264_clip_pixelx_xexitx_xusx_xi_x264_clip_pixelx_xexitx_xusx_xix_x1
    $phi iNsTr_110 :=  ( $cast ($uint<32>) iNsTr_108) $on bb_6_x264_clip_pixelx_xexitx_xusx_xix_x1 ( $cast ($uint<32>) iNsTr_103) $on x264_clip_pixelx_xexitx_xusx_xi_x264_clip_pixelx_xexitx_xusx_xix_x1 
    $endmerge
    iNsTr_111 := ($cast ($uint<8>) iNsTr_110)
    ->(scevgep16x_xi5x_x1) := iNsTr_111
    tmp22x_x1 := (i_stride_pix1 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep16x_xi5x_x1x_x1 := pix1[tmp22x_x1]
    scevgep16x_xi5x_x127 := pix1[i_stride_pix1]
    tmp24x_x1 := (i_stride_pix2 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep13x_xi7x_x1x_x1 := pix2[tmp24x_x1]
    tmp26x_x1 := (i_stride_pix3 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgepx_xi9x_x1x_x1 := pix3[tmp26x_x1]
    scevgepx_xi9x_x129 := pix3[i_stride_pix3]
    scevgep13x_xi7x_x128 := pix2[i_stride_pix2]
    // load 
    iNsTr_113 := ->(scevgep13x_xi7x_x128) 
    iNsTr_114 := ($cast ($uint<32>) iNsTr_113)
    iNsTr_115 := (iNsTr_114 * weight)
    // load 
    iNsTr_116 := ->(scevgepx_xi9x_x129) 
    iNsTr_117 := ($cast ($uint<32>) iNsTr_116)
    iNsTr_118 := (iNsTr_117 * iNsTr_75)
    iNsTr_119 := (iNsTr_115 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    iNsTr_120 := (iNsTr_119 + iNsTr_118)
    iNsTr_121 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_120) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 )  )))
    // compare instruction
    iNsTr_122 := (iNsTr_121 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_122 $then  $place [x264_clip_pixelx_xexitx_xusx_xix_x1_bb_8] $else $place [x264_clip_pixelx_xexitx_xusx_xix_x1_x264_clip_pixelx_xexitx_xusx_xix_x130] $endif 
    //begin: basic-block bb_6
    $merge x264_clip_pixelx_xexitx_xusx_xi_bb_6
    $endmerge
    iNsTr_106 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_103)
    iNsTr_107 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_106) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_108 := (iNsTr_107 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_6_x264_clip_pixelx_xexitx_xusx_xix_x1]
    //begin: basic-block x264_clip_pixelx_xexitx_xusx_xix_x130
    $merge bb_8_x264_clip_pixelx_xexitx_xusx_xix_x130 x264_clip_pixelx_xexitx_xusx_xix_x1_x264_clip_pixelx_xexitx_xusx_xix_x130
    $phi iNsTr_128 :=  ( $cast ($uint<32>) iNsTr_126) $on bb_8_x264_clip_pixelx_xexitx_xusx_xix_x130 ( $cast ($uint<32>) iNsTr_121) $on x264_clip_pixelx_xexitx_xusx_xix_x1_x264_clip_pixelx_xexitx_xusx_xix_x130 
    $endmerge
    iNsTr_129 := ($cast ($uint<8>) iNsTr_128)
    ->(scevgep16x_xi5x_x127) := iNsTr_129
    // load 
    iNsTr_131 := ->(scevgep13x_xi7x_x1x_x1) 
    iNsTr_132 := ($cast ($uint<32>) iNsTr_131)
    iNsTr_133 := (iNsTr_132 * weight)
    // load 
    iNsTr_134 := ->(scevgepx_xi9x_x1x_x1) 
    iNsTr_135 := ($cast ($uint<32>) iNsTr_134)
    iNsTr_136 := (iNsTr_135 * iNsTr_75)
    iNsTr_137 := (iNsTr_133 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    iNsTr_138 := (iNsTr_137 + iNsTr_136)
    iNsTr_139 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_138) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 )  )))
    // compare instruction
    iNsTr_140 := (iNsTr_139 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_140 $then  $place [x264_clip_pixelx_xexitx_xusx_xix_x130_bb_10] $else $place [x264_clip_pixelx_xexitx_xusx_xix_x130_x264_clip_pixelx_xexitx_xusx_xix_x1x_x1] $endif 
    //begin: basic-block bb_8
    $merge x264_clip_pixelx_xexitx_xusx_xix_x1_bb_8
    $endmerge
    iNsTr_124 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_121)
    iNsTr_125 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_124) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_126 := (iNsTr_125 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_8_x264_clip_pixelx_xexitx_xusx_xix_x130]
    //begin: basic-block x264_clip_pixelx_xexitx_xusx_xix_x1x_x1
    $merge bb_10_x264_clip_pixelx_xexitx_xusx_xix_x1x_x1 x264_clip_pixelx_xexitx_xusx_xix_x130_x264_clip_pixelx_xexitx_xusx_xix_x1x_x1
    $phi iNsTr_146 :=  ( $cast ($uint<32>) iNsTr_144) $on bb_10_x264_clip_pixelx_xexitx_xusx_xix_x1x_x1 ( $cast ($uint<32>) iNsTr_139) $on x264_clip_pixelx_xexitx_xusx_xix_x130_x264_clip_pixelx_xexitx_xusx_xix_x1x_x1 
    $endmerge
    iNsTr_147 := ($cast ($uint<8>) iNsTr_146)
    ->(scevgep16x_xi5x_x1x_x1) := iNsTr_147
    tmp21x_x2 := (i_stride_pix1 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    tmp22x_x245 := (tmp21x_x2 | ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep16x_xi5x_x1x_x2 := pix1[tmp22x_x245]
    scevgep16x_xi5x_x2 := pix1[tmp21x_x2]
    tmp23x_x2 := (i_stride_pix2 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    tmp24x_x246 := (tmp23x_x2 | ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep13x_xi7x_x1x_x2 := pix2[tmp24x_x246]
    tmp25x_x2 := (i_stride_pix3 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    tmp26x_x247 := (tmp25x_x2 | ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgepx_xi9x_x1x_x2 := pix3[tmp26x_x247]
    scevgepx_xi9x_x2 := pix3[tmp25x_x2]
    scevgep13x_xi7x_x2 := pix2[tmp23x_x2]
    // load 
    iNsTr_149 := ->(scevgep13x_xi7x_x2) 
    iNsTr_150 := ($cast ($uint<32>) iNsTr_149)
    iNsTr_151 := (iNsTr_150 * weight)
    // load 
    iNsTr_152 := ->(scevgepx_xi9x_x2) 
    iNsTr_153 := ($cast ($uint<32>) iNsTr_152)
    iNsTr_154 := (iNsTr_153 * iNsTr_75)
    iNsTr_155 := (iNsTr_151 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    iNsTr_156 := (iNsTr_155 + iNsTr_154)
    iNsTr_157 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_156) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 )  )))
    // compare instruction
    iNsTr_158 := (iNsTr_157 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_158 $then  $place [x264_clip_pixelx_xexitx_xusx_xix_x1x_x1_bb_12] $else $place [x264_clip_pixelx_xexitx_xusx_xix_x1x_x1_x264_clip_pixelx_xexitx_xusx_xix_x2] $endif 
    //begin: basic-block bb_10
    $merge x264_clip_pixelx_xexitx_xusx_xix_x130_bb_10
    $endmerge
    iNsTr_142 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_139)
    iNsTr_143 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_142) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_144 := (iNsTr_143 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_10_x264_clip_pixelx_xexitx_xusx_xix_x1x_x1]
    //begin: basic-block x264_clip_pixelx_xexitx_xusx_xix_x2
    $merge bb_12_x264_clip_pixelx_xexitx_xusx_xix_x2 x264_clip_pixelx_xexitx_xusx_xix_x1x_x1_x264_clip_pixelx_xexitx_xusx_xix_x2
    $phi iNsTr_164 :=  ( $cast ($uint<32>) iNsTr_162) $on bb_12_x264_clip_pixelx_xexitx_xusx_xix_x2 ( $cast ($uint<32>) iNsTr_157) $on x264_clip_pixelx_xexitx_xusx_xix_x1x_x1_x264_clip_pixelx_xexitx_xusx_xix_x2 
    $endmerge
    iNsTr_165 := ($cast ($uint<8>) iNsTr_164)
    ->(scevgep16x_xi5x_x2) := iNsTr_165
    // load 
    iNsTr_167 := ->(scevgep13x_xi7x_x1x_x2) 
    iNsTr_168 := ($cast ($uint<32>) iNsTr_167)
    iNsTr_169 := (iNsTr_168 * weight)
    // load 
    iNsTr_170 := ->(scevgepx_xi9x_x1x_x2) 
    iNsTr_171 := ($cast ($uint<32>) iNsTr_170)
    iNsTr_172 := (iNsTr_171 * iNsTr_75)
    iNsTr_173 := (iNsTr_169 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    iNsTr_174 := (iNsTr_173 + iNsTr_172)
    iNsTr_175 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_174) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 )  )))
    // compare instruction
    iNsTr_176 := (iNsTr_175 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_176 $then  $place [x264_clip_pixelx_xexitx_xusx_xix_x2_bb_14] $else $place [x264_clip_pixelx_xexitx_xusx_xix_x2_x264_clip_pixelx_xexitx_xusx_xix_x1x_x2] $endif 
    //begin: basic-block bb_12
    $merge x264_clip_pixelx_xexitx_xusx_xix_x1x_x1_bb_12
    $endmerge
    iNsTr_160 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_157)
    iNsTr_161 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_160) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_162 := (iNsTr_161 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_12_x264_clip_pixelx_xexitx_xusx_xix_x2]
    //begin: basic-block x264_clip_pixelx_xexitx_xusx_xix_x1x_x2
    $merge bb_14_x264_clip_pixelx_xexitx_xusx_xix_x1x_x2 x264_clip_pixelx_xexitx_xusx_xix_x2_x264_clip_pixelx_xexitx_xusx_xix_x1x_x2
    $phi iNsTr_182 :=  ( $cast ($uint<32>) iNsTr_180) $on bb_14_x264_clip_pixelx_xexitx_xusx_xix_x1x_x2 ( $cast ($uint<32>) iNsTr_175) $on x264_clip_pixelx_xexitx_xusx_xix_x2_x264_clip_pixelx_xexitx_xusx_xix_x1x_x2 
    $endmerge
    iNsTr_183 := ($cast ($uint<8>) iNsTr_182)
    ->(scevgep16x_xi5x_x1x_x2) := iNsTr_183
    tmp21x_x3 := (i_stride_pix1 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    tmp22x_x3 := (tmp21x_x3 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep16x_xi5x_x1x_x3 := pix1[tmp22x_x3]
    scevgep16x_xi5x_x3 := pix1[tmp21x_x3]
    tmp23x_x3 := (i_stride_pix2 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    tmp24x_x3 := (tmp23x_x3 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep13x_xi7x_x1x_x3 := pix2[tmp24x_x3]
    tmp25x_x3 := (i_stride_pix3 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    tmp26x_x3 := (tmp25x_x3 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgepx_xi9x_x1x_x3 := pix3[tmp26x_x3]
    scevgepx_xi9x_x3 := pix3[tmp25x_x3]
    scevgep13x_xi7x_x3 := pix2[tmp23x_x3]
    // load 
    iNsTr_185 := ->(scevgep13x_xi7x_x3) 
    iNsTr_186 := ($cast ($uint<32>) iNsTr_185)
    iNsTr_187 := (iNsTr_186 * weight)
    // load 
    iNsTr_188 := ->(scevgepx_xi9x_x3) 
    iNsTr_189 := ($cast ($uint<32>) iNsTr_188)
    iNsTr_190 := (iNsTr_189 * iNsTr_75)
    iNsTr_191 := (iNsTr_187 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    iNsTr_192 := (iNsTr_191 + iNsTr_190)
    iNsTr_193 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_192) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 )  )))
    // compare instruction
    iNsTr_194 := (iNsTr_193 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_194 $then  $place [x264_clip_pixelx_xexitx_xusx_xix_x1x_x2_bb_16] $else $place [x264_clip_pixelx_xexitx_xusx_xix_x1x_x2_x264_clip_pixelx_xexitx_xusx_xix_x3] $endif 
    //begin: basic-block bb_14
    $merge x264_clip_pixelx_xexitx_xusx_xix_x2_bb_14
    $endmerge
    iNsTr_178 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_175)
    iNsTr_179 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_178) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_180 := (iNsTr_179 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_14_x264_clip_pixelx_xexitx_xusx_xix_x1x_x2]
    //begin: basic-block x264_clip_pixelx_xexitx_xusx_xix_x3
    $merge bb_16_x264_clip_pixelx_xexitx_xusx_xix_x3 x264_clip_pixelx_xexitx_xusx_xix_x1x_x2_x264_clip_pixelx_xexitx_xusx_xix_x3
    $phi iNsTr_200 :=  ( $cast ($uint<32>) iNsTr_198) $on bb_16_x264_clip_pixelx_xexitx_xusx_xix_x3 ( $cast ($uint<32>) iNsTr_193) $on x264_clip_pixelx_xexitx_xusx_xix_x1x_x2_x264_clip_pixelx_xexitx_xusx_xix_x3 
    $endmerge
    iNsTr_201 := ($cast ($uint<8>) iNsTr_200)
    ->(scevgep16x_xi5x_x3) := iNsTr_201
    // load 
    iNsTr_203 := ->(scevgep13x_xi7x_x1x_x3) 
    iNsTr_204 := ($cast ($uint<32>) iNsTr_203)
    iNsTr_205 := (iNsTr_204 * weight)
    // load 
    iNsTr_206 := ->(scevgepx_xi9x_x1x_x3) 
    iNsTr_207 := ($cast ($uint<32>) iNsTr_206)
    iNsTr_208 := (iNsTr_207 * iNsTr_75)
    iNsTr_209 := (iNsTr_205 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    iNsTr_210 := (iNsTr_209 + iNsTr_208)
    iNsTr_211 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_210) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 )  )))
    // compare instruction
    iNsTr_212 := (iNsTr_211 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_212 $then  $place [x264_clip_pixelx_xexitx_xusx_xix_x3_bb_18] $else $place [x264_clip_pixelx_xexitx_xusx_xix_x3_x264_clip_pixelx_xexitx_xusx_xix_x1x_x3] $endif 
    //begin: basic-block bb_16
    $merge x264_clip_pixelx_xexitx_xusx_xix_x1x_x2_bb_16
    $endmerge
    iNsTr_196 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_193)
    iNsTr_197 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_196) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_198 := (iNsTr_197 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_16_x264_clip_pixelx_xexitx_xusx_xix_x3]
    //begin: basic-block x264_clip_pixelx_xexitx_xusx_xix_x1x_x3
    $merge bb_18_x264_clip_pixelx_xexitx_xusx_xix_x1x_x3 x264_clip_pixelx_xexitx_xusx_xix_x3_x264_clip_pixelx_xexitx_xusx_xix_x1x_x3
    $phi iNsTr_218 :=  ( $cast ($uint<32>) iNsTr_216) $on bb_18_x264_clip_pixelx_xexitx_xusx_xix_x1x_x3 ( $cast ($uint<32>) iNsTr_211) $on x264_clip_pixelx_xexitx_xusx_xix_x3_x264_clip_pixelx_xexitx_xusx_xix_x1x_x3 
    $endmerge
    iNsTr_219 := ($cast ($uint<8>) iNsTr_218)
    ->(scevgep16x_xi5x_x1x_x3) := iNsTr_219
    $place [x264_clip_pixelx_xexitx_xusx_xix_x1x_x3_UnifiedReturnBlock]
    //begin: basic-block bb_18
    $merge x264_clip_pixelx_xexitx_xusx_xix_x3_bb_18
    $endmerge
    iNsTr_214 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_211)
    iNsTr_215 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_214) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_216 := (iNsTr_215 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_18_x264_clip_pixelx_xexitx_xusx_xix_x1x_x3]
    //begin: basic-block UnifiedReturnBlock
    $merge bbx_xnphx_xusx_xix_xpreheader_UnifiedReturnBlock x264_clip_pixelx_xexitx_xusx_xix_x1x_x3_UnifiedReturnBlock
    $endmerge
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [pixel_avg_2x2] 
$in (pix1 : $pointer< $uint<8> > i_stride_pix1 : $uint<32> pix2 : $pointer< $uint<8> > i_stride_pix2 : $uint<32> pix3 : $pointer< $uint<8> > i_stride_pix3 : $uint<32> weight : $uint<32> )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    // compare instruction
    iNsTr_0 := (weight == ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  )
    $if iNsTr_0 $then  $place [bb_0_bbx_xnphx_xusx_xix_xpreheader] $else $place [bb_0_bbx_xnphx_xusx_xi14] $endif 
    //begin: basic-block bbx_xnphx_xusx_xix_xpreheader
    $merge bb_0_bbx_xnphx_xusx_xix_xpreheader
    $endmerge
    scevgepx_xix_x1 := pix1[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    scevgep13x_xix_x1 := pix3[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    scevgep16x_xix_x1 := pix2[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_2 := ->(pix2) 
    iNsTr_3 := ($cast ($uint<32>) iNsTr_2)
    // load 
    iNsTr_4 := ->(pix3) 
    iNsTr_5 := ($cast ($uint<32>) iNsTr_4)
    iNsTr_6 := (iNsTr_3 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_7 := (iNsTr_6 + iNsTr_5)
    iNsTr_8 := (iNsTr_7 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_9 := ($cast ($uint<8>) iNsTr_8)
    ->(pix1) := iNsTr_9
    // load 
    iNsTr_11 := ->(scevgep16x_xix_x1) 
    iNsTr_12 := ($cast ($uint<32>) iNsTr_11)
    // load 
    iNsTr_13 := ->(scevgep13x_xix_x1) 
    iNsTr_14 := ($cast ($uint<32>) iNsTr_13)
    iNsTr_15 := (iNsTr_12 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_16 := (iNsTr_15 + iNsTr_14)
    iNsTr_17 := (iNsTr_16 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_18 := ($cast ($uint<8>) iNsTr_17)
    ->(scevgepx_xix_x1) := iNsTr_18
    tmp41x_x1 := (i_stride_pix1 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    tmp39x_x1 := (i_stride_pix3 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    tmp37x_x1 := (i_stride_pix2 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgepx_xix_x144 := pix1[i_stride_pix1]
    scevgepx_xix_x1x_x1 := pix1[tmp41x_x1]
    scevgep13x_xix_x143 := pix3[i_stride_pix3]
    scevgep13x_xix_x1x_x1 := pix3[tmp39x_x1]
    scevgep16x_xix_x142 := pix2[i_stride_pix2]
    scevgep16x_xix_x1x_x1 := pix2[tmp37x_x1]
    // load 
    iNsTr_20 := ->(scevgep16x_xix_x142) 
    iNsTr_21 := ($cast ($uint<32>) iNsTr_20)
    // load 
    iNsTr_22 := ->(scevgep13x_xix_x143) 
    iNsTr_23 := ($cast ($uint<32>) iNsTr_22)
    iNsTr_24 := (iNsTr_21 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_25 := (iNsTr_24 + iNsTr_23)
    iNsTr_26 := (iNsTr_25 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_27 := ($cast ($uint<8>) iNsTr_26)
    ->(scevgepx_xix_x144) := iNsTr_27
    // load 
    iNsTr_29 := ->(scevgep16x_xix_x1x_x1) 
    iNsTr_30 := ($cast ($uint<32>) iNsTr_29)
    // load 
    iNsTr_31 := ->(scevgep13x_xix_x1x_x1) 
    iNsTr_32 := ($cast ($uint<32>) iNsTr_31)
    iNsTr_33 := (iNsTr_30 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_34 := (iNsTr_33 + iNsTr_32)
    iNsTr_35 := (iNsTr_34 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_36 := ($cast ($uint<8>) iNsTr_35)
    ->(scevgepx_xix_x1x_x1) := iNsTr_36
    $place [bbx_xnphx_xusx_xix_xpreheader_UnifiedReturnBlock]
    //begin: basic-block bbx_xnphx_xusx_xi14
    $merge bb_0_bbx_xnphx_xusx_xi14
    $endmerge
    iNsTr_39 := (( $bitcast ($uint<32> ) _b00000000000000000000000001000000 )  - weight)
    scevgep16x_xi5x_x1 := pix1[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    scevgep13x_xi7x_x1 := pix2[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    scevgepx_xi9x_x1 := pix3[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_40 := ->(pix2) 
    iNsTr_41 := ($cast ($uint<32>) iNsTr_40)
    iNsTr_42 := (iNsTr_41 * weight)
    // load 
    iNsTr_43 := ->(pix3) 
    iNsTr_44 := ($cast ($uint<32>) iNsTr_43)
    iNsTr_45 := (iNsTr_44 * iNsTr_39)
    iNsTr_46 := (iNsTr_42 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    iNsTr_47 := (iNsTr_46 + iNsTr_45)
    iNsTr_48 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_47) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 )  )))
    // compare instruction
    iNsTr_49 := (iNsTr_48 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_49 $then  $place [bbx_xnphx_xusx_xi14_bb_4] $else $place [bbx_xnphx_xusx_xi14_x264_clip_pixelx_xexitx_xusx_xi] $endif 
    //begin: basic-block x264_clip_pixelx_xexitx_xusx_xi
    $merge bb_4_x264_clip_pixelx_xexitx_xusx_xi bbx_xnphx_xusx_xi14_x264_clip_pixelx_xexitx_xusx_xi
    $phi iNsTr_56 :=  ( $cast ($uint<32>) iNsTr_54) $on bb_4_x264_clip_pixelx_xexitx_xusx_xi ( $cast ($uint<32>) iNsTr_48) $on bbx_xnphx_xusx_xi14_x264_clip_pixelx_xexitx_xusx_xi 
    $endmerge
    iNsTr_57 := ($cast ($uint<8>) iNsTr_56)
    ->(pix1) := iNsTr_57
    // load 
    iNsTr_59 := ->(scevgep13x_xi7x_x1) 
    iNsTr_60 := ($cast ($uint<32>) iNsTr_59)
    iNsTr_61 := (iNsTr_60 * weight)
    // load 
    iNsTr_62 := ->(scevgepx_xi9x_x1) 
    iNsTr_63 := ($cast ($uint<32>) iNsTr_62)
    iNsTr_64 := (iNsTr_63 * iNsTr_39)
    iNsTr_65 := (iNsTr_61 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    iNsTr_66 := (iNsTr_65 + iNsTr_64)
    iNsTr_67 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_66) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 )  )))
    // compare instruction
    iNsTr_68 := (iNsTr_67 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_68 $then  $place [x264_clip_pixelx_xexitx_xusx_xi_bb_6] $else $place [x264_clip_pixelx_xexitx_xusx_xi_x264_clip_pixelx_xexitx_xusx_xix_x1] $endif 
    //begin: basic-block bb_4
    $merge bbx_xnphx_xusx_xi14_bb_4
    $endmerge
    iNsTr_52 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_48)
    iNsTr_53 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_52) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_54 := (iNsTr_53 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_4_x264_clip_pixelx_xexitx_xusx_xi]
    //begin: basic-block x264_clip_pixelx_xexitx_xusx_xix_x1
    $merge bb_6_x264_clip_pixelx_xexitx_xusx_xix_x1 x264_clip_pixelx_xexitx_xusx_xi_x264_clip_pixelx_xexitx_xusx_xix_x1
    $phi iNsTr_74 :=  ( $cast ($uint<32>) iNsTr_72) $on bb_6_x264_clip_pixelx_xexitx_xusx_xix_x1 ( $cast ($uint<32>) iNsTr_67) $on x264_clip_pixelx_xexitx_xusx_xi_x264_clip_pixelx_xexitx_xusx_xix_x1 
    $endmerge
    iNsTr_75 := ($cast ($uint<8>) iNsTr_74)
    ->(scevgep16x_xi5x_x1) := iNsTr_75
    tmp22x_x1 := (i_stride_pix1 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep16x_xi5x_x1x_x1 := pix1[tmp22x_x1]
    scevgep16x_xi5x_x127 := pix1[i_stride_pix1]
    tmp24x_x1 := (i_stride_pix2 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep13x_xi7x_x1x_x1 := pix2[tmp24x_x1]
    tmp26x_x1 := (i_stride_pix3 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgepx_xi9x_x1x_x1 := pix3[tmp26x_x1]
    scevgepx_xi9x_x129 := pix3[i_stride_pix3]
    scevgep13x_xi7x_x128 := pix2[i_stride_pix2]
    // load 
    iNsTr_77 := ->(scevgep13x_xi7x_x128) 
    iNsTr_78 := ($cast ($uint<32>) iNsTr_77)
    iNsTr_79 := (iNsTr_78 * weight)
    // load 
    iNsTr_80 := ->(scevgepx_xi9x_x129) 
    iNsTr_81 := ($cast ($uint<32>) iNsTr_80)
    iNsTr_82 := (iNsTr_81 * iNsTr_39)
    iNsTr_83 := (iNsTr_79 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    iNsTr_84 := (iNsTr_83 + iNsTr_82)
    iNsTr_85 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_84) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 )  )))
    // compare instruction
    iNsTr_86 := (iNsTr_85 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_86 $then  $place [x264_clip_pixelx_xexitx_xusx_xix_x1_bb_8] $else $place [x264_clip_pixelx_xexitx_xusx_xix_x1_x264_clip_pixelx_xexitx_xusx_xix_x130] $endif 
    //begin: basic-block bb_6
    $merge x264_clip_pixelx_xexitx_xusx_xi_bb_6
    $endmerge
    iNsTr_70 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_67)
    iNsTr_71 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_70) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_72 := (iNsTr_71 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_6_x264_clip_pixelx_xexitx_xusx_xix_x1]
    //begin: basic-block x264_clip_pixelx_xexitx_xusx_xix_x130
    $merge bb_8_x264_clip_pixelx_xexitx_xusx_xix_x130 x264_clip_pixelx_xexitx_xusx_xix_x1_x264_clip_pixelx_xexitx_xusx_xix_x130
    $phi iNsTr_92 :=  ( $cast ($uint<32>) iNsTr_90) $on bb_8_x264_clip_pixelx_xexitx_xusx_xix_x130 ( $cast ($uint<32>) iNsTr_85) $on x264_clip_pixelx_xexitx_xusx_xix_x1_x264_clip_pixelx_xexitx_xusx_xix_x130 
    $endmerge
    iNsTr_93 := ($cast ($uint<8>) iNsTr_92)
    ->(scevgep16x_xi5x_x127) := iNsTr_93
    // load 
    iNsTr_95 := ->(scevgep13x_xi7x_x1x_x1) 
    iNsTr_96 := ($cast ($uint<32>) iNsTr_95)
    iNsTr_97 := (iNsTr_96 * weight)
    // load 
    iNsTr_98 := ->(scevgepx_xi9x_x1x_x1) 
    iNsTr_99 := ($cast ($uint<32>) iNsTr_98)
    iNsTr_100 := (iNsTr_99 * iNsTr_39)
    iNsTr_101 := (iNsTr_97 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    iNsTr_102 := (iNsTr_101 + iNsTr_100)
    iNsTr_103 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_102) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 )  )))
    // compare instruction
    iNsTr_104 := (iNsTr_103 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_104 $then  $place [x264_clip_pixelx_xexitx_xusx_xix_x130_bb_10] $else $place [x264_clip_pixelx_xexitx_xusx_xix_x130_x264_clip_pixelx_xexitx_xusx_xix_x1x_x1] $endif 
    //begin: basic-block bb_8
    $merge x264_clip_pixelx_xexitx_xusx_xix_x1_bb_8
    $endmerge
    iNsTr_88 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_85)
    iNsTr_89 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_88) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_90 := (iNsTr_89 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_8_x264_clip_pixelx_xexitx_xusx_xix_x130]
    //begin: basic-block x264_clip_pixelx_xexitx_xusx_xix_x1x_x1
    $merge bb_10_x264_clip_pixelx_xexitx_xusx_xix_x1x_x1 x264_clip_pixelx_xexitx_xusx_xix_x130_x264_clip_pixelx_xexitx_xusx_xix_x1x_x1
    $phi iNsTr_110 :=  ( $cast ($uint<32>) iNsTr_108) $on bb_10_x264_clip_pixelx_xexitx_xusx_xix_x1x_x1 ( $cast ($uint<32>) iNsTr_103) $on x264_clip_pixelx_xexitx_xusx_xix_x130_x264_clip_pixelx_xexitx_xusx_xix_x1x_x1 
    $endmerge
    iNsTr_111 := ($cast ($uint<8>) iNsTr_110)
    ->(scevgep16x_xi5x_x1x_x1) := iNsTr_111
    $place [x264_clip_pixelx_xexitx_xusx_xix_x1x_x1_UnifiedReturnBlock]
    //begin: basic-block bb_10
    $merge x264_clip_pixelx_xexitx_xusx_xix_x130_bb_10
    $endmerge
    iNsTr_106 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_103)
    iNsTr_107 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_106) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_108 := (iNsTr_107 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_10_x264_clip_pixelx_xexitx_xusx_xix_x1x_x1]
    //begin: basic-block UnifiedReturnBlock
    $merge bbx_xnphx_xusx_xix_xpreheader_UnifiedReturnBlock x264_clip_pixelx_xexitx_xusx_xix_x1x_x1_UnifiedReturnBlock
    $endmerge
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [mc_weight_w20] 
$in (dst : $pointer< $uint<8> > i_dst_stride : $uint<32> src : $pointer< $uint<8> > i_src_stride : $uint<32> weightx_x0x_x2x_xval : $uint<32> weightx_x0x_x3x_xval : $uint<32> weightx_x0x_x4x_xval : $uint<32> height : $uint<32> )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    // compare instruction
    iNsTr_0 := ( ($bitcast ( $int<32>) weightx_x0x_x2x_xval) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    // compare instruction
    iNsTr_1 := ( ($bitcast ( $int<32>) height) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    $if iNsTr_0 $then  $place [bb_0_xx_xpreheader11x_xi] $else $place [bb_0_xx_xpreheader2x_xi] $endif 
    //begin: basic-block xx_xpreheader11x_xi
    $merge bb_0_xx_xpreheader11x_xi
    $endmerge
    $if iNsTr_1 $then  $place [xx_xpreheader11x_xi_bbx_xnph16x_xi] $else $place [xx_xpreheader11x_xi_mc_weightx_xexit] $endif 
    //begin: basic-block xx_xpreheader2x_xi
    $merge bb_0_xx_xpreheader2x_xi
    $endmerge
    $if iNsTr_1 $then  $place [xx_xpreheader2x_xi_bbx_xnphx_xusx_xix_xpreheader] $else $place [xx_xpreheader2x_xi_mc_weightx_xexit] $endif 
    //begin: basic-block bbx_xnphx_xusx_xix_xpreheader
    $merge xx_xpreheader2x_xi_bbx_xnphx_xusx_xix_xpreheader
    $endmerge
    $place [bbx_xnphx_xusx_xix_xpreheader_bbx_xnphx_xusx_xi]
    //begin: basic-block bbx_xnph16x_xi
    $merge xx_xpreheader11x_xi_bbx_xnph16x_xi
    $endmerge
    iNsTr_5 := (weightx_x0x_x2x_xval + ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) )
    iNsTr_6 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  << iNsTr_5)
    $place [bbx_xnph16x_xi_bbx_xnph9x_xusx_xi]
    //begin: basic-block bb_5
    $merge x264_clip_pixelx_xexitx_xusx_xi_bb_5
    $endmerge
    iNsTr_44 := (yx_x013x_xusx_xi + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond14 := (iNsTr_44 == height )
    $if exitcond14 $then  $place [bb_5_mc_weightx_xexitx_xloopexit13] $else $place [bb_5_bbx_xnph9x_xusx_xi] $endif 
    //begin: basic-block x264_clip_pixelx_xexitx_xusx_xi
    $merge bb_7_x264_clip_pixelx_xexitx_xusx_xi bb_8_x264_clip_pixelx_xexitx_xusx_xi
    $phi iNsTr_30 :=  ( $cast ($uint<32>) iNsTr_28) $on bb_7_x264_clip_pixelx_xexitx_xusx_xi ( $cast ($uint<32>) iNsTr_17) $on bb_8_x264_clip_pixelx_xexitx_xusx_xi 
    $endmerge
    iNsTr_31 := ($cast ($uint<8>) iNsTr_30)
    ->(scevgep20x_xi) := iNsTr_31
    iNsTr_33 := (xx_x08x_xusx_xi + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond9 := (iNsTr_33 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010100 )  )
    $if exitcond9 $then  $place [x264_clip_pixelx_xexitx_xusx_xi_bb_5] $else $place [x264_clip_pixelx_xexitx_xusx_xi_bb_8] $endif 
    //begin: basic-block bb_7
    $merge bb_8_bb_7
    $endmerge
    iNsTr_26 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_17)
    iNsTr_27 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_26) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_28 := (iNsTr_27 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_7_x264_clip_pixelx_xexitx_xusx_xi]
    //begin: basic-block bb_8
    $merge bbx_xnph9x_xusx_xi_bb_8 x264_clip_pixelx_xexitx_xusx_xi_bb_8
    $phi xx_x08x_xusx_xi :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph9x_xusx_xi_bb_8 ( $cast ($uint<32>) iNsTr_33) $on x264_clip_pixelx_xexitx_xusx_xi_bb_8 
    $endmerge
    tmp16 := (tmp15 + xx_x08x_xusx_xi)
    scevgep20x_xi := dst[tmp16]
    tmp18 := (tmp17 + xx_x08x_xusx_xi)
    scevgepx_xi := src[tmp18]
    // load 
    iNsTr_12 := ->(scevgepx_xi) 
    iNsTr_13 := ($cast ($uint<32>) iNsTr_12)
    iNsTr_14 := (iNsTr_13 * weightx_x0x_x3x_xval)
    iNsTr_15 := (iNsTr_14 + iNsTr_6)
    iNsTr_16 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_15) >>  ($bitcast ( $int<32>) weightx_x0x_x2x_xval )))
    iNsTr_17 := (iNsTr_16 + weightx_x0x_x4x_xval)
    // compare instruction
    iNsTr_18 := (iNsTr_17 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_18 $then  $place [bb_8_bb_7] $else $place [bb_8_x264_clip_pixelx_xexitx_xusx_xi] $endif 
    //begin: basic-block bbx_xnph9x_xusx_xi
    $merge bb_5_bbx_xnph9x_xusx_xi bbx_xnph16x_xi_bbx_xnph9x_xusx_xi
    $phi yx_x013x_xusx_xi :=  ( $cast ($uint<32>) iNsTr_44) $on bb_5_bbx_xnph9x_xusx_xi ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph16x_xi_bbx_xnph9x_xusx_xi 
    $endmerge
    tmp15 := (i_dst_stride * yx_x013x_xusx_xi)
    tmp17 := (i_src_stride * yx_x013x_xusx_xi)
    $place [bbx_xnph9x_xusx_xi_bb_8]
    //begin: basic-block bb_10
    $merge x264_clip_pixelx_xexit5x_xusx_xi_bb_10
    $endmerge
    iNsTr_46 := (y1x_x03x_xusx_xi + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond := (iNsTr_46 == height )
    $if exitcond $then  $place [bb_10_mc_weightx_xexitx_xloopexit] $else $place [bb_10_bbx_xnphx_xusx_xi] $endif 
    //begin: basic-block x264_clip_pixelx_xexit5x_xusx_xi
    $merge bb_12_x264_clip_pixelx_xexit5x_xusx_xi bb_13_x264_clip_pixelx_xexit5x_xusx_xi
    $phi iNsTr_39 :=  ( $cast ($uint<32>) iNsTr_37) $on bb_12_x264_clip_pixelx_xexit5x_xusx_xi ( $cast ($uint<32>) iNsTr_23) $on bb_13_x264_clip_pixelx_xexit5x_xusx_xi 
    $endmerge
    iNsTr_40 := ($cast ($uint<8>) iNsTr_39)
    ->(scevgep33x_xi) := iNsTr_40
    iNsTr_42 := (x2x_x01x_xusx_xi + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (iNsTr_42 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010100 )  )
    $if exitcond1 $then  $place [x264_clip_pixelx_xexit5x_xusx_xi_bb_10] $else $place [x264_clip_pixelx_xexit5x_xusx_xi_bb_13] $endif 
    //begin: basic-block bb_12
    $merge bb_13_bb_12
    $endmerge
    iNsTr_35 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_23)
    iNsTr_36 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_35) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_37 := (iNsTr_36 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_12_x264_clip_pixelx_xexit5x_xusx_xi]
    //begin: basic-block bb_13
    $merge bbx_xnphx_xusx_xi_bb_13 x264_clip_pixelx_xexit5x_xusx_xi_bb_13
    $phi x2x_x01x_xusx_xi :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xusx_xi_bb_13 ( $cast ($uint<32>) iNsTr_42) $on x264_clip_pixelx_xexit5x_xusx_xi_bb_13 
    $endmerge
    tmp6 := (tmp5 + x2x_x01x_xusx_xi)
    scevgep33x_xi := dst[tmp6]
    tmp8 := (tmp7 + x2x_x01x_xusx_xi)
    scevgep30x_xi := src[tmp8]
    // load 
    iNsTr_20 := ->(scevgep30x_xi) 
    iNsTr_21 := ($cast ($uint<32>) iNsTr_20)
    iNsTr_22 := (iNsTr_21 * weightx_x0x_x3x_xval)
    iNsTr_23 := (iNsTr_22 + weightx_x0x_x4x_xval)
    // compare instruction
    iNsTr_24 := (iNsTr_23 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_24 $then  $place [bb_13_bb_12] $else $place [bb_13_x264_clip_pixelx_xexit5x_xusx_xi] $endif 
    //begin: basic-block bbx_xnphx_xusx_xi
    $merge bb_10_bbx_xnphx_xusx_xi bbx_xnphx_xusx_xix_xpreheader_bbx_xnphx_xusx_xi
    $phi y1x_x03x_xusx_xi :=  ( $cast ($uint<32>) iNsTr_46) $on bb_10_bbx_xnphx_xusx_xi ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xusx_xix_xpreheader_bbx_xnphx_xusx_xi 
    $endmerge
    tmp5 := (i_dst_stride * y1x_x03x_xusx_xi)
    tmp7 := (i_src_stride * y1x_x03x_xusx_xi)
    $place [bbx_xnphx_xusx_xi_bb_13]
    //begin: basic-block mc_weightx_xexitx_xloopexit
    $merge bb_10_mc_weightx_xexitx_xloopexit
    $endmerge
    $place [mc_weightx_xexitx_xloopexit_mc_weightx_xexit]
    //begin: basic-block mc_weightx_xexitx_xloopexit13
    $merge bb_5_mc_weightx_xexitx_xloopexit13
    $endmerge
    $place [mc_weightx_xexitx_xloopexit13_mc_weightx_xexit]
    //begin: basic-block mc_weightx_xexit
    $merge mc_weightx_xexitx_xloopexit_mc_weightx_xexit mc_weightx_xexitx_xloopexit13_mc_weightx_xexit xx_xpreheader11x_xi_mc_weightx_xexit xx_xpreheader2x_xi_mc_weightx_xexit
    $endmerge
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [mc_weight_w16] 
$in (dst : $pointer< $uint<8> > i_dst_stride : $uint<32> src : $pointer< $uint<8> > i_src_stride : $uint<32> weightx_x0x_x2x_xval : $uint<32> weightx_x0x_x3x_xval : $uint<32> weightx_x0x_x4x_xval : $uint<32> height : $uint<32> )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    // compare instruction
    iNsTr_0 := ( ($bitcast ( $int<32>) weightx_x0x_x2x_xval) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    // compare instruction
    iNsTr_1 := ( ($bitcast ( $int<32>) height) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    $if iNsTr_0 $then  $place [bb_0_xx_xpreheader11x_xi] $else $place [bb_0_xx_xpreheader2x_xi] $endif 
    //begin: basic-block xx_xpreheader11x_xi
    $merge bb_0_xx_xpreheader11x_xi
    $endmerge
    $if iNsTr_1 $then  $place [xx_xpreheader11x_xi_bbx_xnph16x_xi] $else $place [xx_xpreheader11x_xi_mc_weightx_xexit] $endif 
    //begin: basic-block xx_xpreheader2x_xi
    $merge bb_0_xx_xpreheader2x_xi
    $endmerge
    $if iNsTr_1 $then  $place [xx_xpreheader2x_xi_bbx_xnphx_xusx_xix_xpreheader] $else $place [xx_xpreheader2x_xi_mc_weightx_xexit] $endif 
    //begin: basic-block bbx_xnphx_xusx_xix_xpreheader
    $merge xx_xpreheader2x_xi_bbx_xnphx_xusx_xix_xpreheader
    $endmerge
    $place [bbx_xnphx_xusx_xix_xpreheader_bbx_xnphx_xusx_xi]
    //begin: basic-block bbx_xnph16x_xi
    $merge xx_xpreheader11x_xi_bbx_xnph16x_xi
    $endmerge
    iNsTr_5 := (weightx_x0x_x2x_xval + ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) )
    iNsTr_6 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  << iNsTr_5)
    $place [bbx_xnph16x_xi_bbx_xnph9x_xusx_xi]
    //begin: basic-block bb_5
    $merge x264_clip_pixelx_xexitx_xusx_xi_bb_5
    $endmerge
    iNsTr_44 := (yx_x013x_xusx_xi + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond14 := (iNsTr_44 == height )
    $if exitcond14 $then  $place [bb_5_mc_weightx_xexitx_xloopexit13] $else $place [bb_5_bbx_xnph9x_xusx_xi] $endif 
    //begin: basic-block x264_clip_pixelx_xexitx_xusx_xi
    $merge bb_7_x264_clip_pixelx_xexitx_xusx_xi bb_8_x264_clip_pixelx_xexitx_xusx_xi
    $phi iNsTr_30 :=  ( $cast ($uint<32>) iNsTr_28) $on bb_7_x264_clip_pixelx_xexitx_xusx_xi ( $cast ($uint<32>) iNsTr_17) $on bb_8_x264_clip_pixelx_xexitx_xusx_xi 
    $endmerge
    iNsTr_31 := ($cast ($uint<8>) iNsTr_30)
    ->(scevgep20x_xi) := iNsTr_31
    iNsTr_33 := (xx_x08x_xusx_xi + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond9 := (iNsTr_33 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond9 $then  $place [x264_clip_pixelx_xexitx_xusx_xi_bb_5] $else $place [x264_clip_pixelx_xexitx_xusx_xi_bb_8] $endif 
    //begin: basic-block bb_7
    $merge bb_8_bb_7
    $endmerge
    iNsTr_26 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_17)
    iNsTr_27 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_26) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_28 := (iNsTr_27 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_7_x264_clip_pixelx_xexitx_xusx_xi]
    //begin: basic-block bb_8
    $merge bbx_xnph9x_xusx_xi_bb_8 x264_clip_pixelx_xexitx_xusx_xi_bb_8
    $phi xx_x08x_xusx_xi :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph9x_xusx_xi_bb_8 ( $cast ($uint<32>) iNsTr_33) $on x264_clip_pixelx_xexitx_xusx_xi_bb_8 
    $endmerge
    tmp16 := (tmp15 + xx_x08x_xusx_xi)
    scevgep20x_xi := dst[tmp16]
    tmp18 := (tmp17 + xx_x08x_xusx_xi)
    scevgepx_xi := src[tmp18]
    // load 
    iNsTr_12 := ->(scevgepx_xi) 
    iNsTr_13 := ($cast ($uint<32>) iNsTr_12)
    iNsTr_14 := (iNsTr_13 * weightx_x0x_x3x_xval)
    iNsTr_15 := (iNsTr_14 + iNsTr_6)
    iNsTr_16 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_15) >>  ($bitcast ( $int<32>) weightx_x0x_x2x_xval )))
    iNsTr_17 := (iNsTr_16 + weightx_x0x_x4x_xval)
    // compare instruction
    iNsTr_18 := (iNsTr_17 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_18 $then  $place [bb_8_bb_7] $else $place [bb_8_x264_clip_pixelx_xexitx_xusx_xi] $endif 
    //begin: basic-block bbx_xnph9x_xusx_xi
    $merge bb_5_bbx_xnph9x_xusx_xi bbx_xnph16x_xi_bbx_xnph9x_xusx_xi
    $phi yx_x013x_xusx_xi :=  ( $cast ($uint<32>) iNsTr_44) $on bb_5_bbx_xnph9x_xusx_xi ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph16x_xi_bbx_xnph9x_xusx_xi 
    $endmerge
    tmp15 := (i_dst_stride * yx_x013x_xusx_xi)
    tmp17 := (i_src_stride * yx_x013x_xusx_xi)
    $place [bbx_xnph9x_xusx_xi_bb_8]
    //begin: basic-block bb_10
    $merge x264_clip_pixelx_xexit5x_xusx_xi_bb_10
    $endmerge
    iNsTr_46 := (y1x_x03x_xusx_xi + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond := (iNsTr_46 == height )
    $if exitcond $then  $place [bb_10_mc_weightx_xexitx_xloopexit] $else $place [bb_10_bbx_xnphx_xusx_xi] $endif 
    //begin: basic-block x264_clip_pixelx_xexit5x_xusx_xi
    $merge bb_12_x264_clip_pixelx_xexit5x_xusx_xi bb_13_x264_clip_pixelx_xexit5x_xusx_xi
    $phi iNsTr_39 :=  ( $cast ($uint<32>) iNsTr_37) $on bb_12_x264_clip_pixelx_xexit5x_xusx_xi ( $cast ($uint<32>) iNsTr_23) $on bb_13_x264_clip_pixelx_xexit5x_xusx_xi 
    $endmerge
    iNsTr_40 := ($cast ($uint<8>) iNsTr_39)
    ->(scevgep33x_xi) := iNsTr_40
    iNsTr_42 := (x2x_x01x_xusx_xi + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (iNsTr_42 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond1 $then  $place [x264_clip_pixelx_xexit5x_xusx_xi_bb_10] $else $place [x264_clip_pixelx_xexit5x_xusx_xi_bb_13] $endif 
    //begin: basic-block bb_12
    $merge bb_13_bb_12
    $endmerge
    iNsTr_35 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_23)
    iNsTr_36 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_35) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_37 := (iNsTr_36 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_12_x264_clip_pixelx_xexit5x_xusx_xi]
    //begin: basic-block bb_13
    $merge bbx_xnphx_xusx_xi_bb_13 x264_clip_pixelx_xexit5x_xusx_xi_bb_13
    $phi x2x_x01x_xusx_xi :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xusx_xi_bb_13 ( $cast ($uint<32>) iNsTr_42) $on x264_clip_pixelx_xexit5x_xusx_xi_bb_13 
    $endmerge
    tmp6 := (tmp5 + x2x_x01x_xusx_xi)
    scevgep33x_xi := dst[tmp6]
    tmp8 := (tmp7 + x2x_x01x_xusx_xi)
    scevgep30x_xi := src[tmp8]
    // load 
    iNsTr_20 := ->(scevgep30x_xi) 
    iNsTr_21 := ($cast ($uint<32>) iNsTr_20)
    iNsTr_22 := (iNsTr_21 * weightx_x0x_x3x_xval)
    iNsTr_23 := (iNsTr_22 + weightx_x0x_x4x_xval)
    // compare instruction
    iNsTr_24 := (iNsTr_23 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_24 $then  $place [bb_13_bb_12] $else $place [bb_13_x264_clip_pixelx_xexit5x_xusx_xi] $endif 
    //begin: basic-block bbx_xnphx_xusx_xi
    $merge bb_10_bbx_xnphx_xusx_xi bbx_xnphx_xusx_xix_xpreheader_bbx_xnphx_xusx_xi
    $phi y1x_x03x_xusx_xi :=  ( $cast ($uint<32>) iNsTr_46) $on bb_10_bbx_xnphx_xusx_xi ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xusx_xix_xpreheader_bbx_xnphx_xusx_xi 
    $endmerge
    tmp5 := (i_dst_stride * y1x_x03x_xusx_xi)
    tmp7 := (i_src_stride * y1x_x03x_xusx_xi)
    $place [bbx_xnphx_xusx_xi_bb_13]
    //begin: basic-block mc_weightx_xexitx_xloopexit
    $merge bb_10_mc_weightx_xexitx_xloopexit
    $endmerge
    $place [mc_weightx_xexitx_xloopexit_mc_weightx_xexit]
    //begin: basic-block mc_weightx_xexitx_xloopexit13
    $merge bb_5_mc_weightx_xexitx_xloopexit13
    $endmerge
    $place [mc_weightx_xexitx_xloopexit13_mc_weightx_xexit]
    //begin: basic-block mc_weightx_xexit
    $merge mc_weightx_xexitx_xloopexit_mc_weightx_xexit mc_weightx_xexitx_xloopexit13_mc_weightx_xexit xx_xpreheader11x_xi_mc_weightx_xexit xx_xpreheader2x_xi_mc_weightx_xexit
    $endmerge
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [mc_weight_w12] 
$in (dst : $pointer< $uint<8> > i_dst_stride : $uint<32> src : $pointer< $uint<8> > i_src_stride : $uint<32> weightx_x0x_x2x_xval : $uint<32> weightx_x0x_x3x_xval : $uint<32> weightx_x0x_x4x_xval : $uint<32> height : $uint<32> )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    // compare instruction
    iNsTr_0 := ( ($bitcast ( $int<32>) weightx_x0x_x2x_xval) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    // compare instruction
    iNsTr_1 := ( ($bitcast ( $int<32>) height) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    $if iNsTr_0 $then  $place [bb_0_xx_xpreheader11x_xi] $else $place [bb_0_xx_xpreheader2x_xi] $endif 
    //begin: basic-block xx_xpreheader11x_xi
    $merge bb_0_xx_xpreheader11x_xi
    $endmerge
    $if iNsTr_1 $then  $place [xx_xpreheader11x_xi_bbx_xnph16x_xi] $else $place [xx_xpreheader11x_xi_mc_weightx_xexit] $endif 
    //begin: basic-block xx_xpreheader2x_xi
    $merge bb_0_xx_xpreheader2x_xi
    $endmerge
    $if iNsTr_1 $then  $place [xx_xpreheader2x_xi_bbx_xnphx_xusx_xix_xpreheader] $else $place [xx_xpreheader2x_xi_mc_weightx_xexit] $endif 
    //begin: basic-block bbx_xnphx_xusx_xix_xpreheader
    $merge xx_xpreheader2x_xi_bbx_xnphx_xusx_xix_xpreheader
    $endmerge
    $place [bbx_xnphx_xusx_xix_xpreheader_bbx_xnphx_xusx_xi]
    //begin: basic-block bbx_xnph16x_xi
    $merge xx_xpreheader11x_xi_bbx_xnph16x_xi
    $endmerge
    iNsTr_5 := (weightx_x0x_x2x_xval + ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) )
    iNsTr_6 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  << iNsTr_5)
    $place [bbx_xnph16x_xi_bbx_xnph9x_xusx_xi]
    //begin: basic-block bb_5
    $merge x264_clip_pixelx_xexitx_xusx_xi_bb_5
    $endmerge
    iNsTr_44 := (yx_x013x_xusx_xi + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond14 := (iNsTr_44 == height )
    $if exitcond14 $then  $place [bb_5_mc_weightx_xexitx_xloopexit13] $else $place [bb_5_bbx_xnph9x_xusx_xi] $endif 
    //begin: basic-block x264_clip_pixelx_xexitx_xusx_xi
    $merge bb_7_x264_clip_pixelx_xexitx_xusx_xi bb_8_x264_clip_pixelx_xexitx_xusx_xi
    $phi iNsTr_30 :=  ( $cast ($uint<32>) iNsTr_28) $on bb_7_x264_clip_pixelx_xexitx_xusx_xi ( $cast ($uint<32>) iNsTr_17) $on bb_8_x264_clip_pixelx_xexitx_xusx_xi 
    $endmerge
    iNsTr_31 := ($cast ($uint<8>) iNsTr_30)
    ->(scevgep20x_xi) := iNsTr_31
    iNsTr_33 := (xx_x08x_xusx_xi + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond9 := (iNsTr_33 == ( $bitcast ($uint<32> ) _b00000000000000000000000000001100 )  )
    $if exitcond9 $then  $place [x264_clip_pixelx_xexitx_xusx_xi_bb_5] $else $place [x264_clip_pixelx_xexitx_xusx_xi_bb_8] $endif 
    //begin: basic-block bb_7
    $merge bb_8_bb_7
    $endmerge
    iNsTr_26 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_17)
    iNsTr_27 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_26) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_28 := (iNsTr_27 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_7_x264_clip_pixelx_xexitx_xusx_xi]
    //begin: basic-block bb_8
    $merge bbx_xnph9x_xusx_xi_bb_8 x264_clip_pixelx_xexitx_xusx_xi_bb_8
    $phi xx_x08x_xusx_xi :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph9x_xusx_xi_bb_8 ( $cast ($uint<32>) iNsTr_33) $on x264_clip_pixelx_xexitx_xusx_xi_bb_8 
    $endmerge
    tmp16 := (tmp15 + xx_x08x_xusx_xi)
    scevgep20x_xi := dst[tmp16]
    tmp18 := (tmp17 + xx_x08x_xusx_xi)
    scevgepx_xi := src[tmp18]
    // load 
    iNsTr_12 := ->(scevgepx_xi) 
    iNsTr_13 := ($cast ($uint<32>) iNsTr_12)
    iNsTr_14 := (iNsTr_13 * weightx_x0x_x3x_xval)
    iNsTr_15 := (iNsTr_14 + iNsTr_6)
    iNsTr_16 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_15) >>  ($bitcast ( $int<32>) weightx_x0x_x2x_xval )))
    iNsTr_17 := (iNsTr_16 + weightx_x0x_x4x_xval)
    // compare instruction
    iNsTr_18 := (iNsTr_17 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_18 $then  $place [bb_8_bb_7] $else $place [bb_8_x264_clip_pixelx_xexitx_xusx_xi] $endif 
    //begin: basic-block bbx_xnph9x_xusx_xi
    $merge bb_5_bbx_xnph9x_xusx_xi bbx_xnph16x_xi_bbx_xnph9x_xusx_xi
    $phi yx_x013x_xusx_xi :=  ( $cast ($uint<32>) iNsTr_44) $on bb_5_bbx_xnph9x_xusx_xi ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph16x_xi_bbx_xnph9x_xusx_xi 
    $endmerge
    tmp15 := (i_dst_stride * yx_x013x_xusx_xi)
    tmp17 := (i_src_stride * yx_x013x_xusx_xi)
    $place [bbx_xnph9x_xusx_xi_bb_8]
    //begin: basic-block bb_10
    $merge x264_clip_pixelx_xexit5x_xusx_xi_bb_10
    $endmerge
    iNsTr_46 := (y1x_x03x_xusx_xi + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond := (iNsTr_46 == height )
    $if exitcond $then  $place [bb_10_mc_weightx_xexitx_xloopexit] $else $place [bb_10_bbx_xnphx_xusx_xi] $endif 
    //begin: basic-block x264_clip_pixelx_xexit5x_xusx_xi
    $merge bb_12_x264_clip_pixelx_xexit5x_xusx_xi bb_13_x264_clip_pixelx_xexit5x_xusx_xi
    $phi iNsTr_39 :=  ( $cast ($uint<32>) iNsTr_37) $on bb_12_x264_clip_pixelx_xexit5x_xusx_xi ( $cast ($uint<32>) iNsTr_23) $on bb_13_x264_clip_pixelx_xexit5x_xusx_xi 
    $endmerge
    iNsTr_40 := ($cast ($uint<8>) iNsTr_39)
    ->(scevgep33x_xi) := iNsTr_40
    iNsTr_42 := (x2x_x01x_xusx_xi + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (iNsTr_42 == ( $bitcast ($uint<32> ) _b00000000000000000000000000001100 )  )
    $if exitcond1 $then  $place [x264_clip_pixelx_xexit5x_xusx_xi_bb_10] $else $place [x264_clip_pixelx_xexit5x_xusx_xi_bb_13] $endif 
    //begin: basic-block bb_12
    $merge bb_13_bb_12
    $endmerge
    iNsTr_35 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_23)
    iNsTr_36 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_35) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_37 := (iNsTr_36 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_12_x264_clip_pixelx_xexit5x_xusx_xi]
    //begin: basic-block bb_13
    $merge bbx_xnphx_xusx_xi_bb_13 x264_clip_pixelx_xexit5x_xusx_xi_bb_13
    $phi x2x_x01x_xusx_xi :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xusx_xi_bb_13 ( $cast ($uint<32>) iNsTr_42) $on x264_clip_pixelx_xexit5x_xusx_xi_bb_13 
    $endmerge
    tmp6 := (tmp5 + x2x_x01x_xusx_xi)
    scevgep33x_xi := dst[tmp6]
    tmp8 := (tmp7 + x2x_x01x_xusx_xi)
    scevgep30x_xi := src[tmp8]
    // load 
    iNsTr_20 := ->(scevgep30x_xi) 
    iNsTr_21 := ($cast ($uint<32>) iNsTr_20)
    iNsTr_22 := (iNsTr_21 * weightx_x0x_x3x_xval)
    iNsTr_23 := (iNsTr_22 + weightx_x0x_x4x_xval)
    // compare instruction
    iNsTr_24 := (iNsTr_23 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_24 $then  $place [bb_13_bb_12] $else $place [bb_13_x264_clip_pixelx_xexit5x_xusx_xi] $endif 
    //begin: basic-block bbx_xnphx_xusx_xi
    $merge bb_10_bbx_xnphx_xusx_xi bbx_xnphx_xusx_xix_xpreheader_bbx_xnphx_xusx_xi
    $phi y1x_x03x_xusx_xi :=  ( $cast ($uint<32>) iNsTr_46) $on bb_10_bbx_xnphx_xusx_xi ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xusx_xix_xpreheader_bbx_xnphx_xusx_xi 
    $endmerge
    tmp5 := (i_dst_stride * y1x_x03x_xusx_xi)
    tmp7 := (i_src_stride * y1x_x03x_xusx_xi)
    $place [bbx_xnphx_xusx_xi_bb_13]
    //begin: basic-block mc_weightx_xexitx_xloopexit
    $merge bb_10_mc_weightx_xexitx_xloopexit
    $endmerge
    $place [mc_weightx_xexitx_xloopexit_mc_weightx_xexit]
    //begin: basic-block mc_weightx_xexitx_xloopexit13
    $merge bb_5_mc_weightx_xexitx_xloopexit13
    $endmerge
    $place [mc_weightx_xexitx_xloopexit13_mc_weightx_xexit]
    //begin: basic-block mc_weightx_xexit
    $merge mc_weightx_xexitx_xloopexit_mc_weightx_xexit mc_weightx_xexitx_xloopexit13_mc_weightx_xexit xx_xpreheader11x_xi_mc_weightx_xexit xx_xpreheader2x_xi_mc_weightx_xexit
    $endmerge
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [mc_weight_w8] 
$in (dst : $pointer< $uint<8> > i_dst_stride : $uint<32> src : $pointer< $uint<8> > i_src_stride : $uint<32> weightx_x0x_x2x_xval : $uint<32> weightx_x0x_x3x_xval : $uint<32> weightx_x0x_x4x_xval : $uint<32> height : $uint<32> )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    // compare instruction
    iNsTr_0 := ( ($bitcast ( $int<32>) weightx_x0x_x2x_xval) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    // compare instruction
    iNsTr_1 := ( ($bitcast ( $int<32>) height) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    $if iNsTr_0 $then  $place [bb_0_xx_xpreheader11x_xi] $else $place [bb_0_xx_xpreheader2x_xi] $endif 
    //begin: basic-block xx_xpreheader11x_xi
    $merge bb_0_xx_xpreheader11x_xi
    $endmerge
    $if iNsTr_1 $then  $place [xx_xpreheader11x_xi_bbx_xnph16x_xi] $else $place [xx_xpreheader11x_xi_mc_weightx_xexit] $endif 
    //begin: basic-block xx_xpreheader2x_xi
    $merge bb_0_xx_xpreheader2x_xi
    $endmerge
    $if iNsTr_1 $then  $place [xx_xpreheader2x_xi_bbx_xnphx_xusx_xix_xpreheader] $else $place [xx_xpreheader2x_xi_mc_weightx_xexit] $endif 
    //begin: basic-block bbx_xnphx_xusx_xix_xpreheader
    $merge xx_xpreheader2x_xi_bbx_xnphx_xusx_xix_xpreheader
    $endmerge
    $place [bbx_xnphx_xusx_xix_xpreheader_bbx_xnphx_xusx_xi]
    //begin: basic-block bbx_xnph16x_xi
    $merge xx_xpreheader11x_xi_bbx_xnph16x_xi
    $endmerge
    iNsTr_5 := (weightx_x0x_x2x_xval + ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) )
    iNsTr_6 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  << iNsTr_5)
    $place [bbx_xnph16x_xi_bbx_xnph9x_xusx_xi]
    //begin: basic-block x264_clip_pixelx_xexitx_xusx_xi
    $merge bb_6_x264_clip_pixelx_xexitx_xusx_xi bbx_xnph9x_xusx_xi_x264_clip_pixelx_xexitx_xusx_xi
    $phi iNsTr_28 :=  ( $cast ($uint<32>) iNsTr_26) $on bb_6_x264_clip_pixelx_xexitx_xusx_xi ( $cast ($uint<32>) iNsTr_15) $on bbx_xnph9x_xusx_xi_x264_clip_pixelx_xexitx_xusx_xi 
    $endmerge
    iNsTr_29 := ($cast ($uint<8>) iNsTr_28)
    ->(scevgep20x_xi) := iNsTr_29
    // load 
    iNsTr_31 := ->(scevgepx_xix_x1) 
    iNsTr_32 := ($cast ($uint<32>) iNsTr_31)
    iNsTr_33 := (iNsTr_32 * weightx_x0x_x3x_xval)
    iNsTr_34 := (iNsTr_33 + iNsTr_6)
    iNsTr_35 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_34) >>  ($bitcast ( $int<32>) weightx_x0x_x2x_xval )))
    iNsTr_36 := (iNsTr_35 + weightx_x0x_x4x_xval)
    // compare instruction
    iNsTr_37 := (iNsTr_36 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_37 $then  $place [x264_clip_pixelx_xexitx_xusx_xi_bb_29] $else $place [x264_clip_pixelx_xexitx_xusx_xi_x264_clip_pixelx_xexitx_xusx_xix_x1] $endif 
    //begin: basic-block bb_6
    $merge bbx_xnph9x_xusx_xi_bb_6
    $endmerge
    iNsTr_24 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_15)
    iNsTr_25 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_24) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_26 := (iNsTr_25 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_6_x264_clip_pixelx_xexitx_xusx_xi]
    //begin: basic-block bbx_xnph9x_xusx_xi
    $merge bbx_xnph16x_xi_bbx_xnph9x_xusx_xi x264_clip_pixelx_xexitx_xusx_xix_x7_bbx_xnph9x_xusx_xi
    $phi yx_x013x_xusx_xi :=  ( $cast ($uint<32>) iNsTr_227) $on x264_clip_pixelx_xexitx_xusx_xix_x7_bbx_xnph9x_xusx_xi ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph16x_xi_bbx_xnph9x_xusx_xi 
    $endmerge
    tmp50 := (i_src_stride * yx_x013x_xusx_xi)
    scevgepx_xi := src[tmp50]
    tmp51 := (tmp50 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgepx_xix_x1 := src[tmp51]
    tmp52 := (tmp50 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgepx_xix_x2 := src[tmp52]
    tmp53 := (tmp50 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgepx_xix_x3 := src[tmp53]
    tmp54 := (tmp50 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    scevgepx_xix_x4 := src[tmp54]
    tmp55 := (tmp50 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) )
    scevgepx_xix_x5 := src[tmp55]
    tmp56 := (tmp50 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    scevgepx_xix_x6 := src[tmp56]
    tmp57 := (tmp50 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    scevgepx_xix_x7 := src[tmp57]
    tmp58 := (i_dst_stride * yx_x013x_xusx_xi)
    scevgep20x_xi := dst[tmp58]
    tmp59 := (tmp58 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep20x_xix_x1 := dst[tmp59]
    tmp60 := (tmp58 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep20x_xix_x2 := dst[tmp60]
    tmp61 := (tmp58 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep20x_xix_x3 := dst[tmp61]
    tmp62 := (tmp58 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    scevgep20x_xix_x4 := dst[tmp62]
    tmp63 := (tmp58 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) )
    scevgep20x_xix_x5 := dst[tmp63]
    tmp64 := (tmp58 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    scevgep20x_xix_x6 := dst[tmp64]
    tmp65 := (tmp58 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    scevgep20x_xix_x7 := dst[tmp65]
    // load 
    iNsTr_10 := ->(scevgepx_xi) 
    iNsTr_11 := ($cast ($uint<32>) iNsTr_10)
    iNsTr_12 := (iNsTr_11 * weightx_x0x_x3x_xval)
    iNsTr_13 := (iNsTr_12 + iNsTr_6)
    iNsTr_14 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_13) >>  ($bitcast ( $int<32>) weightx_x0x_x2x_xval )))
    iNsTr_15 := (iNsTr_14 + weightx_x0x_x4x_xval)
    // compare instruction
    iNsTr_16 := (iNsTr_15 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_16 $then  $place [bbx_xnph9x_xusx_xi_bb_6] $else $place [bbx_xnph9x_xusx_xi_x264_clip_pixelx_xexitx_xusx_xi] $endif 
    //begin: basic-block x264_clip_pixelx_xexit5x_xusx_xi
    $merge bb_9_x264_clip_pixelx_xexit5x_xusx_xi bbx_xnphx_xusx_xi_x264_clip_pixelx_xexit5x_xusx_xi
    $phi iNsTr_43 :=  ( $cast ($uint<32>) iNsTr_41) $on bb_9_x264_clip_pixelx_xexit5x_xusx_xi ( $cast ($uint<32>) iNsTr_21) $on bbx_xnphx_xusx_xi_x264_clip_pixelx_xexit5x_xusx_xi 
    $endmerge
    iNsTr_44 := ($cast ($uint<8>) iNsTr_43)
    ->(scevgep33x_xi) := iNsTr_44
    // load 
    iNsTr_46 := ->(scevgep30x_xix_x1) 
    iNsTr_47 := ($cast ($uint<32>) iNsTr_46)
    iNsTr_48 := (iNsTr_47 * weightx_x0x_x3x_xval)
    iNsTr_49 := (iNsTr_48 + weightx_x0x_x4x_xval)
    // compare instruction
    iNsTr_50 := (iNsTr_49 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_50 $then  $place [x264_clip_pixelx_xexit5x_xusx_xi_bb_15] $else $place [x264_clip_pixelx_xexit5x_xusx_xi_x264_clip_pixelx_xexit5x_xusx_xix_x1] $endif 
    //begin: basic-block bb_9
    $merge bbx_xnphx_xusx_xi_bb_9
    $endmerge
    iNsTr_39 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_21)
    iNsTr_40 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_39) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_41 := (iNsTr_40 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_9_x264_clip_pixelx_xexit5x_xusx_xi]
    //begin: basic-block bbx_xnphx_xusx_xi
    $merge bbx_xnphx_xusx_xix_xpreheader_bbx_xnphx_xusx_xi x264_clip_pixelx_xexit5x_xusx_xix_x7_bbx_xnphx_xusx_xi
    $phi y1x_x03x_xusx_xi :=  ( $cast ($uint<32>) iNsTr_236) $on x264_clip_pixelx_xexit5x_xusx_xix_x7_bbx_xnphx_xusx_xi ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xusx_xix_xpreheader_bbx_xnphx_xusx_xi 
    $endmerge
    tmp := (i_src_stride * y1x_x03x_xusx_xi)
    scevgep30x_xi := src[tmp]
    tmp2 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep30x_xix_x1 := src[tmp2]
    tmp3 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep30x_xix_x2 := src[tmp3]
    tmp4 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep30x_xix_x3 := src[tmp4]
    tmp5 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    scevgep30x_xix_x4 := src[tmp5]
    tmp6 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) )
    scevgep30x_xix_x5 := src[tmp6]
    tmp23 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    scevgep30x_xix_x6 := src[tmp23]
    tmp24 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    scevgep30x_xix_x7 := src[tmp24]
    tmp25 := (i_dst_stride * y1x_x03x_xusx_xi)
    scevgep33x_xi := dst[tmp25]
    tmp26 := (tmp25 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep33x_xix_x1 := dst[tmp26]
    tmp27 := (tmp25 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep33x_xix_x2 := dst[tmp27]
    tmp44 := (tmp25 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep33x_xix_x3 := dst[tmp44]
    tmp45 := (tmp25 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    scevgep33x_xix_x4 := dst[tmp45]
    tmp46 := (tmp25 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) )
    scevgep33x_xix_x5 := dst[tmp46]
    tmp47 := (tmp25 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    scevgep33x_xix_x6 := dst[tmp47]
    tmp48 := (tmp25 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    scevgep33x_xix_x7 := dst[tmp48]
    // load 
    iNsTr_18 := ->(scevgep30x_xi) 
    iNsTr_19 := ($cast ($uint<32>) iNsTr_18)
    iNsTr_20 := (iNsTr_19 * weightx_x0x_x3x_xval)
    iNsTr_21 := (iNsTr_20 + weightx_x0x_x4x_xval)
    // compare instruction
    iNsTr_22 := (iNsTr_21 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_22 $then  $place [bbx_xnphx_xusx_xi_bb_9] $else $place [bbx_xnphx_xusx_xi_x264_clip_pixelx_xexit5x_xusx_xi] $endif 
    //begin: basic-block mc_weightx_xexitx_xloopexit
    $merge x264_clip_pixelx_xexit5x_xusx_xix_x7_mc_weightx_xexitx_xloopexit
    $endmerge
    $place [mc_weightx_xexitx_xloopexit_mc_weightx_xexit]
    //begin: basic-block mc_weightx_xexitx_xloopexit49
    $merge x264_clip_pixelx_xexitx_xusx_xix_x7_mc_weightx_xexitx_xloopexit49
    $endmerge
    $place [mc_weightx_xexitx_xloopexit49_mc_weightx_xexit]
    //begin: basic-block mc_weightx_xexit
    $merge mc_weightx_xexitx_xloopexit_mc_weightx_xexit mc_weightx_xexitx_xloopexit49_mc_weightx_xexit xx_xpreheader11x_xi_mc_weightx_xexit xx_xpreheader2x_xi_mc_weightx_xexit
    $endmerge
    $place [return__]
    //begin: basic-block x264_clip_pixelx_xexit5x_xusx_xix_x1
    $merge bb_15_x264_clip_pixelx_xexit5x_xusx_xix_x1 x264_clip_pixelx_xexit5x_xusx_xi_x264_clip_pixelx_xexit5x_xusx_xix_x1
    $phi iNsTr_71 :=  ( $cast ($uint<32>) iNsTr_69) $on bb_15_x264_clip_pixelx_xexit5x_xusx_xix_x1 ( $cast ($uint<32>) iNsTr_49) $on x264_clip_pixelx_xexit5x_xusx_xi_x264_clip_pixelx_xexit5x_xusx_xix_x1 
    $endmerge
    iNsTr_72 := ($cast ($uint<8>) iNsTr_71)
    ->(scevgep33x_xix_x1) := iNsTr_72
    // load 
    iNsTr_74 := ->(scevgep30x_xix_x2) 
    iNsTr_75 := ($cast ($uint<32>) iNsTr_74)
    iNsTr_76 := (iNsTr_75 * weightx_x0x_x3x_xval)
    iNsTr_77 := (iNsTr_76 + weightx_x0x_x4x_xval)
    // compare instruction
    iNsTr_78 := (iNsTr_77 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_78 $then  $place [x264_clip_pixelx_xexit5x_xusx_xix_x1_bb_17] $else $place [x264_clip_pixelx_xexit5x_xusx_xix_x1_x264_clip_pixelx_xexit5x_xusx_xix_x2] $endif 
    //begin: basic-block bb_15
    $merge x264_clip_pixelx_xexit5x_xusx_xi_bb_15
    $endmerge
    iNsTr_67 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_49)
    iNsTr_68 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_67) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_69 := (iNsTr_68 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_15_x264_clip_pixelx_xexit5x_xusx_xix_x1]
    //begin: basic-block x264_clip_pixelx_xexit5x_xusx_xix_x2
    $merge bb_17_x264_clip_pixelx_xexit5x_xusx_xix_x2 x264_clip_pixelx_xexit5x_xusx_xix_x1_x264_clip_pixelx_xexit5x_xusx_xix_x2
    $phi iNsTr_99 :=  ( $cast ($uint<32>) iNsTr_97) $on bb_17_x264_clip_pixelx_xexit5x_xusx_xix_x2 ( $cast ($uint<32>) iNsTr_77) $on x264_clip_pixelx_xexit5x_xusx_xix_x1_x264_clip_pixelx_xexit5x_xusx_xix_x2 
    $endmerge
    iNsTr_100 := ($cast ($uint<8>) iNsTr_99)
    ->(scevgep33x_xix_x2) := iNsTr_100
    // load 
    iNsTr_102 := ->(scevgep30x_xix_x3) 
    iNsTr_103 := ($cast ($uint<32>) iNsTr_102)
    iNsTr_104 := (iNsTr_103 * weightx_x0x_x3x_xval)
    iNsTr_105 := (iNsTr_104 + weightx_x0x_x4x_xval)
    // compare instruction
    iNsTr_106 := (iNsTr_105 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_106 $then  $place [x264_clip_pixelx_xexit5x_xusx_xix_x2_bb_19] $else $place [x264_clip_pixelx_xexit5x_xusx_xix_x2_x264_clip_pixelx_xexit5x_xusx_xix_x3] $endif 
    //begin: basic-block bb_17
    $merge x264_clip_pixelx_xexit5x_xusx_xix_x1_bb_17
    $endmerge
    iNsTr_95 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_77)
    iNsTr_96 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_95) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_97 := (iNsTr_96 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_17_x264_clip_pixelx_xexit5x_xusx_xix_x2]
    //begin: basic-block x264_clip_pixelx_xexit5x_xusx_xix_x3
    $merge bb_19_x264_clip_pixelx_xexit5x_xusx_xix_x3 x264_clip_pixelx_xexit5x_xusx_xix_x2_x264_clip_pixelx_xexit5x_xusx_xix_x3
    $phi iNsTr_127 :=  ( $cast ($uint<32>) iNsTr_125) $on bb_19_x264_clip_pixelx_xexit5x_xusx_xix_x3 ( $cast ($uint<32>) iNsTr_105) $on x264_clip_pixelx_xexit5x_xusx_xix_x2_x264_clip_pixelx_xexit5x_xusx_xix_x3 
    $endmerge
    iNsTr_128 := ($cast ($uint<8>) iNsTr_127)
    ->(scevgep33x_xix_x3) := iNsTr_128
    // load 
    iNsTr_130 := ->(scevgep30x_xix_x4) 
    iNsTr_131 := ($cast ($uint<32>) iNsTr_130)
    iNsTr_132 := (iNsTr_131 * weightx_x0x_x3x_xval)
    iNsTr_133 := (iNsTr_132 + weightx_x0x_x4x_xval)
    // compare instruction
    iNsTr_134 := (iNsTr_133 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_134 $then  $place [x264_clip_pixelx_xexit5x_xusx_xix_x3_bb_21] $else $place [x264_clip_pixelx_xexit5x_xusx_xix_x3_x264_clip_pixelx_xexit5x_xusx_xix_x4] $endif 
    //begin: basic-block bb_19
    $merge x264_clip_pixelx_xexit5x_xusx_xix_x2_bb_19
    $endmerge
    iNsTr_123 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_105)
    iNsTr_124 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_123) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_125 := (iNsTr_124 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_19_x264_clip_pixelx_xexit5x_xusx_xix_x3]
    //begin: basic-block x264_clip_pixelx_xexit5x_xusx_xix_x4
    $merge bb_21_x264_clip_pixelx_xexit5x_xusx_xix_x4 x264_clip_pixelx_xexit5x_xusx_xix_x3_x264_clip_pixelx_xexit5x_xusx_xix_x4
    $phi iNsTr_155 :=  ( $cast ($uint<32>) iNsTr_153) $on bb_21_x264_clip_pixelx_xexit5x_xusx_xix_x4 ( $cast ($uint<32>) iNsTr_133) $on x264_clip_pixelx_xexit5x_xusx_xix_x3_x264_clip_pixelx_xexit5x_xusx_xix_x4 
    $endmerge
    iNsTr_156 := ($cast ($uint<8>) iNsTr_155)
    ->(scevgep33x_xix_x4) := iNsTr_156
    // load 
    iNsTr_158 := ->(scevgep30x_xix_x5) 
    iNsTr_159 := ($cast ($uint<32>) iNsTr_158)
    iNsTr_160 := (iNsTr_159 * weightx_x0x_x3x_xval)
    iNsTr_161 := (iNsTr_160 + weightx_x0x_x4x_xval)
    // compare instruction
    iNsTr_162 := (iNsTr_161 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_162 $then  $place [x264_clip_pixelx_xexit5x_xusx_xix_x4_bb_23] $else $place [x264_clip_pixelx_xexit5x_xusx_xix_x4_x264_clip_pixelx_xexit5x_xusx_xix_x5] $endif 
    //begin: basic-block bb_21
    $merge x264_clip_pixelx_xexit5x_xusx_xix_x3_bb_21
    $endmerge
    iNsTr_151 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_133)
    iNsTr_152 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_151) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_153 := (iNsTr_152 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_21_x264_clip_pixelx_xexit5x_xusx_xix_x4]
    //begin: basic-block x264_clip_pixelx_xexit5x_xusx_xix_x5
    $merge bb_23_x264_clip_pixelx_xexit5x_xusx_xix_x5 x264_clip_pixelx_xexit5x_xusx_xix_x4_x264_clip_pixelx_xexit5x_xusx_xix_x5
    $phi iNsTr_183 :=  ( $cast ($uint<32>) iNsTr_181) $on bb_23_x264_clip_pixelx_xexit5x_xusx_xix_x5 ( $cast ($uint<32>) iNsTr_161) $on x264_clip_pixelx_xexit5x_xusx_xix_x4_x264_clip_pixelx_xexit5x_xusx_xix_x5 
    $endmerge
    iNsTr_184 := ($cast ($uint<8>) iNsTr_183)
    ->(scevgep33x_xix_x5) := iNsTr_184
    // load 
    iNsTr_186 := ->(scevgep30x_xix_x6) 
    iNsTr_187 := ($cast ($uint<32>) iNsTr_186)
    iNsTr_188 := (iNsTr_187 * weightx_x0x_x3x_xval)
    iNsTr_189 := (iNsTr_188 + weightx_x0x_x4x_xval)
    // compare instruction
    iNsTr_190 := (iNsTr_189 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_190 $then  $place [x264_clip_pixelx_xexit5x_xusx_xix_x5_bb_25] $else $place [x264_clip_pixelx_xexit5x_xusx_xix_x5_x264_clip_pixelx_xexit5x_xusx_xix_x6] $endif 
    //begin: basic-block bb_23
    $merge x264_clip_pixelx_xexit5x_xusx_xix_x4_bb_23
    $endmerge
    iNsTr_179 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_161)
    iNsTr_180 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_179) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_181 := (iNsTr_180 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_23_x264_clip_pixelx_xexit5x_xusx_xix_x5]
    //begin: basic-block x264_clip_pixelx_xexit5x_xusx_xix_x6
    $merge bb_25_x264_clip_pixelx_xexit5x_xusx_xix_x6 x264_clip_pixelx_xexit5x_xusx_xix_x5_x264_clip_pixelx_xexit5x_xusx_xix_x6
    $phi iNsTr_211 :=  ( $cast ($uint<32>) iNsTr_209) $on bb_25_x264_clip_pixelx_xexit5x_xusx_xix_x6 ( $cast ($uint<32>) iNsTr_189) $on x264_clip_pixelx_xexit5x_xusx_xix_x5_x264_clip_pixelx_xexit5x_xusx_xix_x6 
    $endmerge
    iNsTr_212 := ($cast ($uint<8>) iNsTr_211)
    ->(scevgep33x_xix_x6) := iNsTr_212
    // load 
    iNsTr_214 := ->(scevgep30x_xix_x7) 
    iNsTr_215 := ($cast ($uint<32>) iNsTr_214)
    iNsTr_216 := (iNsTr_215 * weightx_x0x_x3x_xval)
    iNsTr_217 := (iNsTr_216 + weightx_x0x_x4x_xval)
    // compare instruction
    iNsTr_218 := (iNsTr_217 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_218 $then  $place [x264_clip_pixelx_xexit5x_xusx_xix_x6_bb_27] $else $place [x264_clip_pixelx_xexit5x_xusx_xix_x6_x264_clip_pixelx_xexit5x_xusx_xix_x7] $endif 
    //begin: basic-block bb_25
    $merge x264_clip_pixelx_xexit5x_xusx_xix_x5_bb_25
    $endmerge
    iNsTr_207 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_189)
    iNsTr_208 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_207) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_209 := (iNsTr_208 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_25_x264_clip_pixelx_xexit5x_xusx_xix_x6]
    //begin: basic-block x264_clip_pixelx_xexit5x_xusx_xix_x7
    $merge bb_27_x264_clip_pixelx_xexit5x_xusx_xix_x7 x264_clip_pixelx_xexit5x_xusx_xix_x6_x264_clip_pixelx_xexit5x_xusx_xix_x7
    $phi iNsTr_233 :=  ( $cast ($uint<32>) iNsTr_231) $on bb_27_x264_clip_pixelx_xexit5x_xusx_xix_x7 ( $cast ($uint<32>) iNsTr_217) $on x264_clip_pixelx_xexit5x_xusx_xix_x6_x264_clip_pixelx_xexit5x_xusx_xix_x7 
    $endmerge
    iNsTr_234 := ($cast ($uint<8>) iNsTr_233)
    ->(scevgep33x_xix_x7) := iNsTr_234
    iNsTr_236 := (y1x_x03x_xusx_xi + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (iNsTr_236 == height )
    $if exitcond1 $then  $place [x264_clip_pixelx_xexit5x_xusx_xix_x7_mc_weightx_xexitx_xloopexit] $else $place [x264_clip_pixelx_xexit5x_xusx_xix_x7_bbx_xnphx_xusx_xi] $endif 
    //begin: basic-block bb_27
    $merge x264_clip_pixelx_xexit5x_xusx_xix_x6_bb_27
    $endmerge
    iNsTr_229 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_217)
    iNsTr_230 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_229) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_231 := (iNsTr_230 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_27_x264_clip_pixelx_xexit5x_xusx_xix_x7]
    //begin: basic-block x264_clip_pixelx_xexitx_xusx_xix_x1
    $merge bb_29_x264_clip_pixelx_xexitx_xusx_xix_x1 x264_clip_pixelx_xexitx_xusx_xi_x264_clip_pixelx_xexitx_xusx_xix_x1
    $phi iNsTr_56 :=  ( $cast ($uint<32>) iNsTr_54) $on bb_29_x264_clip_pixelx_xexitx_xusx_xix_x1 ( $cast ($uint<32>) iNsTr_36) $on x264_clip_pixelx_xexitx_xusx_xi_x264_clip_pixelx_xexitx_xusx_xix_x1 
    $endmerge
    iNsTr_57 := ($cast ($uint<8>) iNsTr_56)
    ->(scevgep20x_xix_x1) := iNsTr_57
    // load 
    iNsTr_59 := ->(scevgepx_xix_x2) 
    iNsTr_60 := ($cast ($uint<32>) iNsTr_59)
    iNsTr_61 := (iNsTr_60 * weightx_x0x_x3x_xval)
    iNsTr_62 := (iNsTr_61 + iNsTr_6)
    iNsTr_63 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_62) >>  ($bitcast ( $int<32>) weightx_x0x_x2x_xval )))
    iNsTr_64 := (iNsTr_63 + weightx_x0x_x4x_xval)
    // compare instruction
    iNsTr_65 := (iNsTr_64 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_65 $then  $place [x264_clip_pixelx_xexitx_xusx_xix_x1_bb_31] $else $place [x264_clip_pixelx_xexitx_xusx_xix_x1_x264_clip_pixelx_xexitx_xusx_xix_x2] $endif 
    //begin: basic-block bb_29
    $merge x264_clip_pixelx_xexitx_xusx_xi_bb_29
    $endmerge
    iNsTr_52 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_36)
    iNsTr_53 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_52) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_54 := (iNsTr_53 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_29_x264_clip_pixelx_xexitx_xusx_xix_x1]
    //begin: basic-block x264_clip_pixelx_xexitx_xusx_xix_x2
    $merge bb_31_x264_clip_pixelx_xexitx_xusx_xix_x2 x264_clip_pixelx_xexitx_xusx_xix_x1_x264_clip_pixelx_xexitx_xusx_xix_x2
    $phi iNsTr_84 :=  ( $cast ($uint<32>) iNsTr_82) $on bb_31_x264_clip_pixelx_xexitx_xusx_xix_x2 ( $cast ($uint<32>) iNsTr_64) $on x264_clip_pixelx_xexitx_xusx_xix_x1_x264_clip_pixelx_xexitx_xusx_xix_x2 
    $endmerge
    iNsTr_85 := ($cast ($uint<8>) iNsTr_84)
    ->(scevgep20x_xix_x2) := iNsTr_85
    // load 
    iNsTr_87 := ->(scevgepx_xix_x3) 
    iNsTr_88 := ($cast ($uint<32>) iNsTr_87)
    iNsTr_89 := (iNsTr_88 * weightx_x0x_x3x_xval)
    iNsTr_90 := (iNsTr_89 + iNsTr_6)
    iNsTr_91 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_90) >>  ($bitcast ( $int<32>) weightx_x0x_x2x_xval )))
    iNsTr_92 := (iNsTr_91 + weightx_x0x_x4x_xval)
    // compare instruction
    iNsTr_93 := (iNsTr_92 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_93 $then  $place [x264_clip_pixelx_xexitx_xusx_xix_x2_bb_33] $else $place [x264_clip_pixelx_xexitx_xusx_xix_x2_x264_clip_pixelx_xexitx_xusx_xix_x3] $endif 
    //begin: basic-block bb_31
    $merge x264_clip_pixelx_xexitx_xusx_xix_x1_bb_31
    $endmerge
    iNsTr_80 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_64)
    iNsTr_81 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_80) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_82 := (iNsTr_81 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_31_x264_clip_pixelx_xexitx_xusx_xix_x2]
    //begin: basic-block x264_clip_pixelx_xexitx_xusx_xix_x3
    $merge bb_33_x264_clip_pixelx_xexitx_xusx_xix_x3 x264_clip_pixelx_xexitx_xusx_xix_x2_x264_clip_pixelx_xexitx_xusx_xix_x3
    $phi iNsTr_112 :=  ( $cast ($uint<32>) iNsTr_110) $on bb_33_x264_clip_pixelx_xexitx_xusx_xix_x3 ( $cast ($uint<32>) iNsTr_92) $on x264_clip_pixelx_xexitx_xusx_xix_x2_x264_clip_pixelx_xexitx_xusx_xix_x3 
    $endmerge
    iNsTr_113 := ($cast ($uint<8>) iNsTr_112)
    ->(scevgep20x_xix_x3) := iNsTr_113
    // load 
    iNsTr_115 := ->(scevgepx_xix_x4) 
    iNsTr_116 := ($cast ($uint<32>) iNsTr_115)
    iNsTr_117 := (iNsTr_116 * weightx_x0x_x3x_xval)
    iNsTr_118 := (iNsTr_117 + iNsTr_6)
    iNsTr_119 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_118) >>  ($bitcast ( $int<32>) weightx_x0x_x2x_xval )))
    iNsTr_120 := (iNsTr_119 + weightx_x0x_x4x_xval)
    // compare instruction
    iNsTr_121 := (iNsTr_120 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_121 $then  $place [x264_clip_pixelx_xexitx_xusx_xix_x3_bb_35] $else $place [x264_clip_pixelx_xexitx_xusx_xix_x3_x264_clip_pixelx_xexitx_xusx_xix_x4] $endif 
    //begin: basic-block bb_33
    $merge x264_clip_pixelx_xexitx_xusx_xix_x2_bb_33
    $endmerge
    iNsTr_108 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_92)
    iNsTr_109 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_108) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_110 := (iNsTr_109 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_33_x264_clip_pixelx_xexitx_xusx_xix_x3]
    //begin: basic-block x264_clip_pixelx_xexitx_xusx_xix_x4
    $merge bb_35_x264_clip_pixelx_xexitx_xusx_xix_x4 x264_clip_pixelx_xexitx_xusx_xix_x3_x264_clip_pixelx_xexitx_xusx_xix_x4
    $phi iNsTr_140 :=  ( $cast ($uint<32>) iNsTr_138) $on bb_35_x264_clip_pixelx_xexitx_xusx_xix_x4 ( $cast ($uint<32>) iNsTr_120) $on x264_clip_pixelx_xexitx_xusx_xix_x3_x264_clip_pixelx_xexitx_xusx_xix_x4 
    $endmerge
    iNsTr_141 := ($cast ($uint<8>) iNsTr_140)
    ->(scevgep20x_xix_x4) := iNsTr_141
    // load 
    iNsTr_143 := ->(scevgepx_xix_x5) 
    iNsTr_144 := ($cast ($uint<32>) iNsTr_143)
    iNsTr_145 := (iNsTr_144 * weightx_x0x_x3x_xval)
    iNsTr_146 := (iNsTr_145 + iNsTr_6)
    iNsTr_147 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_146) >>  ($bitcast ( $int<32>) weightx_x0x_x2x_xval )))
    iNsTr_148 := (iNsTr_147 + weightx_x0x_x4x_xval)
    // compare instruction
    iNsTr_149 := (iNsTr_148 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_149 $then  $place [x264_clip_pixelx_xexitx_xusx_xix_x4_bb_37] $else $place [x264_clip_pixelx_xexitx_xusx_xix_x4_x264_clip_pixelx_xexitx_xusx_xix_x5] $endif 
    //begin: basic-block bb_35
    $merge x264_clip_pixelx_xexitx_xusx_xix_x3_bb_35
    $endmerge
    iNsTr_136 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_120)
    iNsTr_137 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_136) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_138 := (iNsTr_137 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_35_x264_clip_pixelx_xexitx_xusx_xix_x4]
    //begin: basic-block x264_clip_pixelx_xexitx_xusx_xix_x5
    $merge bb_37_x264_clip_pixelx_xexitx_xusx_xix_x5 x264_clip_pixelx_xexitx_xusx_xix_x4_x264_clip_pixelx_xexitx_xusx_xix_x5
    $phi iNsTr_168 :=  ( $cast ($uint<32>) iNsTr_166) $on bb_37_x264_clip_pixelx_xexitx_xusx_xix_x5 ( $cast ($uint<32>) iNsTr_148) $on x264_clip_pixelx_xexitx_xusx_xix_x4_x264_clip_pixelx_xexitx_xusx_xix_x5 
    $endmerge
    iNsTr_169 := ($cast ($uint<8>) iNsTr_168)
    ->(scevgep20x_xix_x5) := iNsTr_169
    // load 
    iNsTr_171 := ->(scevgepx_xix_x6) 
    iNsTr_172 := ($cast ($uint<32>) iNsTr_171)
    iNsTr_173 := (iNsTr_172 * weightx_x0x_x3x_xval)
    iNsTr_174 := (iNsTr_173 + iNsTr_6)
    iNsTr_175 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_174) >>  ($bitcast ( $int<32>) weightx_x0x_x2x_xval )))
    iNsTr_176 := (iNsTr_175 + weightx_x0x_x4x_xval)
    // compare instruction
    iNsTr_177 := (iNsTr_176 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_177 $then  $place [x264_clip_pixelx_xexitx_xusx_xix_x5_bb_39] $else $place [x264_clip_pixelx_xexitx_xusx_xix_x5_x264_clip_pixelx_xexitx_xusx_xix_x6] $endif 
    //begin: basic-block bb_37
    $merge x264_clip_pixelx_xexitx_xusx_xix_x4_bb_37
    $endmerge
    iNsTr_164 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_148)
    iNsTr_165 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_164) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_166 := (iNsTr_165 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_37_x264_clip_pixelx_xexitx_xusx_xix_x5]
    //begin: basic-block x264_clip_pixelx_xexitx_xusx_xix_x6
    $merge bb_39_x264_clip_pixelx_xexitx_xusx_xix_x6 x264_clip_pixelx_xexitx_xusx_xix_x5_x264_clip_pixelx_xexitx_xusx_xix_x6
    $phi iNsTr_196 :=  ( $cast ($uint<32>) iNsTr_194) $on bb_39_x264_clip_pixelx_xexitx_xusx_xix_x6 ( $cast ($uint<32>) iNsTr_176) $on x264_clip_pixelx_xexitx_xusx_xix_x5_x264_clip_pixelx_xexitx_xusx_xix_x6 
    $endmerge
    iNsTr_197 := ($cast ($uint<8>) iNsTr_196)
    ->(scevgep20x_xix_x6) := iNsTr_197
    // load 
    iNsTr_199 := ->(scevgepx_xix_x7) 
    iNsTr_200 := ($cast ($uint<32>) iNsTr_199)
    iNsTr_201 := (iNsTr_200 * weightx_x0x_x3x_xval)
    iNsTr_202 := (iNsTr_201 + iNsTr_6)
    iNsTr_203 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_202) >>  ($bitcast ( $int<32>) weightx_x0x_x2x_xval )))
    iNsTr_204 := (iNsTr_203 + weightx_x0x_x4x_xval)
    // compare instruction
    iNsTr_205 := (iNsTr_204 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_205 $then  $place [x264_clip_pixelx_xexitx_xusx_xix_x6_bb_41] $else $place [x264_clip_pixelx_xexitx_xusx_xix_x6_x264_clip_pixelx_xexitx_xusx_xix_x7] $endif 
    //begin: basic-block bb_39
    $merge x264_clip_pixelx_xexitx_xusx_xix_x5_bb_39
    $endmerge
    iNsTr_192 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_176)
    iNsTr_193 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_192) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_194 := (iNsTr_193 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_39_x264_clip_pixelx_xexitx_xusx_xix_x6]
    //begin: basic-block x264_clip_pixelx_xexitx_xusx_xix_x7
    $merge bb_41_x264_clip_pixelx_xexitx_xusx_xix_x7 x264_clip_pixelx_xexitx_xusx_xix_x6_x264_clip_pixelx_xexitx_xusx_xix_x7
    $phi iNsTr_224 :=  ( $cast ($uint<32>) iNsTr_222) $on bb_41_x264_clip_pixelx_xexitx_xusx_xix_x7 ( $cast ($uint<32>) iNsTr_204) $on x264_clip_pixelx_xexitx_xusx_xix_x6_x264_clip_pixelx_xexitx_xusx_xix_x7 
    $endmerge
    iNsTr_225 := ($cast ($uint<8>) iNsTr_224)
    ->(scevgep20x_xix_x7) := iNsTr_225
    iNsTr_227 := (yx_x013x_xusx_xi + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond := (iNsTr_227 == height )
    $if exitcond $then  $place [x264_clip_pixelx_xexitx_xusx_xix_x7_mc_weightx_xexitx_xloopexit49] $else $place [x264_clip_pixelx_xexitx_xusx_xix_x7_bbx_xnph9x_xusx_xi] $endif 
    //begin: basic-block bb_41
    $merge x264_clip_pixelx_xexitx_xusx_xix_x6_bb_41
    $endmerge
    iNsTr_220 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_204)
    iNsTr_221 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_220) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_222 := (iNsTr_221 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_41_x264_clip_pixelx_xexitx_xusx_xix_x7]
    $merge return__ $endmerge
  }
}
$module [mc_weight_w4] 
$in (dst : $pointer< $uint<8> > i_dst_stride : $uint<32> src : $pointer< $uint<8> > i_src_stride : $uint<32> weightx_x0x_x2x_xval : $uint<32> weightx_x0x_x3x_xval : $uint<32> weightx_x0x_x4x_xval : $uint<32> height : $uint<32> )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    // compare instruction
    iNsTr_0 := ( ($bitcast ( $int<32>) weightx_x0x_x2x_xval) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    // compare instruction
    iNsTr_1 := ( ($bitcast ( $int<32>) height) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    $if iNsTr_0 $then  $place [bb_0_xx_xpreheader11x_xi] $else $place [bb_0_xx_xpreheader2x_xi] $endif 
    //begin: basic-block xx_xpreheader11x_xi
    $merge bb_0_xx_xpreheader11x_xi
    $endmerge
    $if iNsTr_1 $then  $place [xx_xpreheader11x_xi_bbx_xnph16x_xi] $else $place [xx_xpreheader11x_xi_mc_weightx_xexit] $endif 
    //begin: basic-block xx_xpreheader2x_xi
    $merge bb_0_xx_xpreheader2x_xi
    $endmerge
    $if iNsTr_1 $then  $place [xx_xpreheader2x_xi_bbx_xnphx_xusx_xix_xpreheader] $else $place [xx_xpreheader2x_xi_mc_weightx_xexit] $endif 
    //begin: basic-block bbx_xnphx_xusx_xix_xpreheader
    $merge xx_xpreheader2x_xi_bbx_xnphx_xusx_xix_xpreheader
    $endmerge
    $place [bbx_xnphx_xusx_xix_xpreheader_bbx_xnphx_xusx_xi]
    //begin: basic-block bbx_xnph16x_xi
    $merge xx_xpreheader11x_xi_bbx_xnph16x_xi
    $endmerge
    iNsTr_5 := (weightx_x0x_x2x_xval + ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) )
    iNsTr_6 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  << iNsTr_5)
    $place [bbx_xnph16x_xi_bbx_xnph9x_xusx_xi]
    //begin: basic-block x264_clip_pixelx_xexitx_xusx_xi
    $merge bb_6_x264_clip_pixelx_xexitx_xusx_xi bbx_xnph9x_xusx_xi_x264_clip_pixelx_xexitx_xusx_xi
    $phi iNsTr_28 :=  ( $cast ($uint<32>) iNsTr_26) $on bb_6_x264_clip_pixelx_xexitx_xusx_xi ( $cast ($uint<32>) iNsTr_15) $on bbx_xnph9x_xusx_xi_x264_clip_pixelx_xexitx_xusx_xi 
    $endmerge
    iNsTr_29 := ($cast ($uint<8>) iNsTr_28)
    ->(scevgep20x_xi) := iNsTr_29
    // load 
    iNsTr_31 := ->(scevgepx_xix_x1) 
    iNsTr_32 := ($cast ($uint<32>) iNsTr_31)
    iNsTr_33 := (iNsTr_32 * weightx_x0x_x3x_xval)
    iNsTr_34 := (iNsTr_33 + iNsTr_6)
    iNsTr_35 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_34) >>  ($bitcast ( $int<32>) weightx_x0x_x2x_xval )))
    iNsTr_36 := (iNsTr_35 + weightx_x0x_x4x_xval)
    // compare instruction
    iNsTr_37 := (iNsTr_36 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_37 $then  $place [x264_clip_pixelx_xexitx_xusx_xi_bb_21] $else $place [x264_clip_pixelx_xexitx_xusx_xi_x264_clip_pixelx_xexitx_xusx_xix_x1] $endif 
    //begin: basic-block bb_6
    $merge bbx_xnph9x_xusx_xi_bb_6
    $endmerge
    iNsTr_24 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_15)
    iNsTr_25 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_24) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_26 := (iNsTr_25 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_6_x264_clip_pixelx_xexitx_xusx_xi]
    //begin: basic-block bbx_xnph9x_xusx_xi
    $merge bbx_xnph16x_xi_bbx_xnph9x_xusx_xi x264_clip_pixelx_xexitx_xusx_xix_x3_bbx_xnph9x_xusx_xi
    $phi yx_x013x_xusx_xi :=  ( $cast ($uint<32>) iNsTr_115) $on x264_clip_pixelx_xexitx_xusx_xix_x3_bbx_xnph9x_xusx_xi ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph16x_xi_bbx_xnph9x_xusx_xi 
    $endmerge
    tmp18 := (i_src_stride * yx_x013x_xusx_xi)
    scevgepx_xi := src[tmp18]
    tmp19 := (tmp18 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgepx_xix_x1 := src[tmp19]
    tmp28 := (tmp18 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgepx_xix_x2 := src[tmp28]
    tmp29 := (tmp18 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgepx_xix_x3 := src[tmp29]
    tmp30 := (i_dst_stride * yx_x013x_xusx_xi)
    scevgep20x_xi := dst[tmp30]
    tmp31 := (tmp30 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep20x_xix_x1 := dst[tmp31]
    tmp32 := (tmp30 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep20x_xix_x2 := dst[tmp32]
    tmp33 := (tmp30 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep20x_xix_x3 := dst[tmp33]
    // load 
    iNsTr_10 := ->(scevgepx_xi) 
    iNsTr_11 := ($cast ($uint<32>) iNsTr_10)
    iNsTr_12 := (iNsTr_11 * weightx_x0x_x3x_xval)
    iNsTr_13 := (iNsTr_12 + iNsTr_6)
    iNsTr_14 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_13) >>  ($bitcast ( $int<32>) weightx_x0x_x2x_xval )))
    iNsTr_15 := (iNsTr_14 + weightx_x0x_x4x_xval)
    // compare instruction
    iNsTr_16 := (iNsTr_15 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_16 $then  $place [bbx_xnph9x_xusx_xi_bb_6] $else $place [bbx_xnph9x_xusx_xi_x264_clip_pixelx_xexitx_xusx_xi] $endif 
    //begin: basic-block x264_clip_pixelx_xexit5x_xusx_xi
    $merge bb_9_x264_clip_pixelx_xexit5x_xusx_xi bbx_xnphx_xusx_xi_x264_clip_pixelx_xexit5x_xusx_xi
    $phi iNsTr_43 :=  ( $cast ($uint<32>) iNsTr_41) $on bb_9_x264_clip_pixelx_xexit5x_xusx_xi ( $cast ($uint<32>) iNsTr_21) $on bbx_xnphx_xusx_xi_x264_clip_pixelx_xexit5x_xusx_xi 
    $endmerge
    iNsTr_44 := ($cast ($uint<8>) iNsTr_43)
    ->(scevgep33x_xi) := iNsTr_44
    // load 
    iNsTr_46 := ->(scevgep30x_xix_x1) 
    iNsTr_47 := ($cast ($uint<32>) iNsTr_46)
    iNsTr_48 := (iNsTr_47 * weightx_x0x_x3x_xval)
    iNsTr_49 := (iNsTr_48 + weightx_x0x_x4x_xval)
    // compare instruction
    iNsTr_50 := (iNsTr_49 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_50 $then  $place [x264_clip_pixelx_xexit5x_xusx_xi_bb_15] $else $place [x264_clip_pixelx_xexit5x_xusx_xi_x264_clip_pixelx_xexit5x_xusx_xix_x1] $endif 
    //begin: basic-block bb_9
    $merge bbx_xnphx_xusx_xi_bb_9
    $endmerge
    iNsTr_39 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_21)
    iNsTr_40 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_39) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_41 := (iNsTr_40 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_9_x264_clip_pixelx_xexit5x_xusx_xi]
    //begin: basic-block bbx_xnphx_xusx_xi
    $merge bbx_xnphx_xusx_xix_xpreheader_bbx_xnphx_xusx_xi x264_clip_pixelx_xexit5x_xusx_xix_x3_bbx_xnphx_xusx_xi
    $phi y1x_x03x_xusx_xi :=  ( $cast ($uint<32>) iNsTr_124) $on x264_clip_pixelx_xexit5x_xusx_xix_x3_bbx_xnphx_xusx_xi ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xusx_xix_xpreheader_bbx_xnphx_xusx_xi 
    $endmerge
    tmp := (i_src_stride * y1x_x03x_xusx_xi)
    scevgep30x_xi := src[tmp]
    tmp2 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep30x_xix_x1 := src[tmp2]
    tmp3 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep30x_xix_x2 := src[tmp3]
    tmp4 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep30x_xix_x3 := src[tmp4]
    tmp5 := (i_dst_stride * y1x_x03x_xusx_xi)
    scevgep33x_xi := dst[tmp5]
    tmp6 := (tmp5 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep33x_xix_x1 := dst[tmp6]
    tmp15 := (tmp5 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep33x_xix_x2 := dst[tmp15]
    tmp16 := (tmp5 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep33x_xix_x3 := dst[tmp16]
    // load 
    iNsTr_18 := ->(scevgep30x_xi) 
    iNsTr_19 := ($cast ($uint<32>) iNsTr_18)
    iNsTr_20 := (iNsTr_19 * weightx_x0x_x3x_xval)
    iNsTr_21 := (iNsTr_20 + weightx_x0x_x4x_xval)
    // compare instruction
    iNsTr_22 := (iNsTr_21 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_22 $then  $place [bbx_xnphx_xusx_xi_bb_9] $else $place [bbx_xnphx_xusx_xi_x264_clip_pixelx_xexit5x_xusx_xi] $endif 
    //begin: basic-block mc_weightx_xexitx_xloopexit
    $merge x264_clip_pixelx_xexit5x_xusx_xix_x3_mc_weightx_xexitx_xloopexit
    $endmerge
    $place [mc_weightx_xexitx_xloopexit_mc_weightx_xexit]
    //begin: basic-block mc_weightx_xexitx_xloopexit17
    $merge x264_clip_pixelx_xexitx_xusx_xix_x3_mc_weightx_xexitx_xloopexit17
    $endmerge
    $place [mc_weightx_xexitx_xloopexit17_mc_weightx_xexit]
    //begin: basic-block mc_weightx_xexit
    $merge mc_weightx_xexitx_xloopexit_mc_weightx_xexit mc_weightx_xexitx_xloopexit17_mc_weightx_xexit xx_xpreheader11x_xi_mc_weightx_xexit xx_xpreheader2x_xi_mc_weightx_xexit
    $endmerge
    $place [return__]
    //begin: basic-block x264_clip_pixelx_xexit5x_xusx_xix_x1
    $merge bb_15_x264_clip_pixelx_xexit5x_xusx_xix_x1 x264_clip_pixelx_xexit5x_xusx_xi_x264_clip_pixelx_xexit5x_xusx_xix_x1
    $phi iNsTr_71 :=  ( $cast ($uint<32>) iNsTr_69) $on bb_15_x264_clip_pixelx_xexit5x_xusx_xix_x1 ( $cast ($uint<32>) iNsTr_49) $on x264_clip_pixelx_xexit5x_xusx_xi_x264_clip_pixelx_xexit5x_xusx_xix_x1 
    $endmerge
    iNsTr_72 := ($cast ($uint<8>) iNsTr_71)
    ->(scevgep33x_xix_x1) := iNsTr_72
    // load 
    iNsTr_74 := ->(scevgep30x_xix_x2) 
    iNsTr_75 := ($cast ($uint<32>) iNsTr_74)
    iNsTr_76 := (iNsTr_75 * weightx_x0x_x3x_xval)
    iNsTr_77 := (iNsTr_76 + weightx_x0x_x4x_xval)
    // compare instruction
    iNsTr_78 := (iNsTr_77 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_78 $then  $place [x264_clip_pixelx_xexit5x_xusx_xix_x1_bb_17] $else $place [x264_clip_pixelx_xexit5x_xusx_xix_x1_x264_clip_pixelx_xexit5x_xusx_xix_x2] $endif 
    //begin: basic-block bb_15
    $merge x264_clip_pixelx_xexit5x_xusx_xi_bb_15
    $endmerge
    iNsTr_67 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_49)
    iNsTr_68 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_67) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_69 := (iNsTr_68 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_15_x264_clip_pixelx_xexit5x_xusx_xix_x1]
    //begin: basic-block x264_clip_pixelx_xexit5x_xusx_xix_x2
    $merge bb_17_x264_clip_pixelx_xexit5x_xusx_xix_x2 x264_clip_pixelx_xexit5x_xusx_xix_x1_x264_clip_pixelx_xexit5x_xusx_xix_x2
    $phi iNsTr_99 :=  ( $cast ($uint<32>) iNsTr_97) $on bb_17_x264_clip_pixelx_xexit5x_xusx_xix_x2 ( $cast ($uint<32>) iNsTr_77) $on x264_clip_pixelx_xexit5x_xusx_xix_x1_x264_clip_pixelx_xexit5x_xusx_xix_x2 
    $endmerge
    iNsTr_100 := ($cast ($uint<8>) iNsTr_99)
    ->(scevgep33x_xix_x2) := iNsTr_100
    // load 
    iNsTr_102 := ->(scevgep30x_xix_x3) 
    iNsTr_103 := ($cast ($uint<32>) iNsTr_102)
    iNsTr_104 := (iNsTr_103 * weightx_x0x_x3x_xval)
    iNsTr_105 := (iNsTr_104 + weightx_x0x_x4x_xval)
    // compare instruction
    iNsTr_106 := (iNsTr_105 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_106 $then  $place [x264_clip_pixelx_xexit5x_xusx_xix_x2_bb_19] $else $place [x264_clip_pixelx_xexit5x_xusx_xix_x2_x264_clip_pixelx_xexit5x_xusx_xix_x3] $endif 
    //begin: basic-block bb_17
    $merge x264_clip_pixelx_xexit5x_xusx_xix_x1_bb_17
    $endmerge
    iNsTr_95 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_77)
    iNsTr_96 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_95) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_97 := (iNsTr_96 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_17_x264_clip_pixelx_xexit5x_xusx_xix_x2]
    //begin: basic-block x264_clip_pixelx_xexit5x_xusx_xix_x3
    $merge bb_19_x264_clip_pixelx_xexit5x_xusx_xix_x3 x264_clip_pixelx_xexit5x_xusx_xix_x2_x264_clip_pixelx_xexit5x_xusx_xix_x3
    $phi iNsTr_121 :=  ( $cast ($uint<32>) iNsTr_119) $on bb_19_x264_clip_pixelx_xexit5x_xusx_xix_x3 ( $cast ($uint<32>) iNsTr_105) $on x264_clip_pixelx_xexit5x_xusx_xix_x2_x264_clip_pixelx_xexit5x_xusx_xix_x3 
    $endmerge
    iNsTr_122 := ($cast ($uint<8>) iNsTr_121)
    ->(scevgep33x_xix_x3) := iNsTr_122
    iNsTr_124 := (y1x_x03x_xusx_xi + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (iNsTr_124 == height )
    $if exitcond1 $then  $place [x264_clip_pixelx_xexit5x_xusx_xix_x3_mc_weightx_xexitx_xloopexit] $else $place [x264_clip_pixelx_xexit5x_xusx_xix_x3_bbx_xnphx_xusx_xi] $endif 
    //begin: basic-block bb_19
    $merge x264_clip_pixelx_xexit5x_xusx_xix_x2_bb_19
    $endmerge
    iNsTr_117 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_105)
    iNsTr_118 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_117) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_119 := (iNsTr_118 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_19_x264_clip_pixelx_xexit5x_xusx_xix_x3]
    //begin: basic-block x264_clip_pixelx_xexitx_xusx_xix_x1
    $merge bb_21_x264_clip_pixelx_xexitx_xusx_xix_x1 x264_clip_pixelx_xexitx_xusx_xi_x264_clip_pixelx_xexitx_xusx_xix_x1
    $phi iNsTr_56 :=  ( $cast ($uint<32>) iNsTr_54) $on bb_21_x264_clip_pixelx_xexitx_xusx_xix_x1 ( $cast ($uint<32>) iNsTr_36) $on x264_clip_pixelx_xexitx_xusx_xi_x264_clip_pixelx_xexitx_xusx_xix_x1 
    $endmerge
    iNsTr_57 := ($cast ($uint<8>) iNsTr_56)
    ->(scevgep20x_xix_x1) := iNsTr_57
    // load 
    iNsTr_59 := ->(scevgepx_xix_x2) 
    iNsTr_60 := ($cast ($uint<32>) iNsTr_59)
    iNsTr_61 := (iNsTr_60 * weightx_x0x_x3x_xval)
    iNsTr_62 := (iNsTr_61 + iNsTr_6)
    iNsTr_63 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_62) >>  ($bitcast ( $int<32>) weightx_x0x_x2x_xval )))
    iNsTr_64 := (iNsTr_63 + weightx_x0x_x4x_xval)
    // compare instruction
    iNsTr_65 := (iNsTr_64 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_65 $then  $place [x264_clip_pixelx_xexitx_xusx_xix_x1_bb_23] $else $place [x264_clip_pixelx_xexitx_xusx_xix_x1_x264_clip_pixelx_xexitx_xusx_xix_x2] $endif 
    //begin: basic-block bb_21
    $merge x264_clip_pixelx_xexitx_xusx_xi_bb_21
    $endmerge
    iNsTr_52 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_36)
    iNsTr_53 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_52) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_54 := (iNsTr_53 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_21_x264_clip_pixelx_xexitx_xusx_xix_x1]
    //begin: basic-block x264_clip_pixelx_xexitx_xusx_xix_x2
    $merge bb_23_x264_clip_pixelx_xexitx_xusx_xix_x2 x264_clip_pixelx_xexitx_xusx_xix_x1_x264_clip_pixelx_xexitx_xusx_xix_x2
    $phi iNsTr_84 :=  ( $cast ($uint<32>) iNsTr_82) $on bb_23_x264_clip_pixelx_xexitx_xusx_xix_x2 ( $cast ($uint<32>) iNsTr_64) $on x264_clip_pixelx_xexitx_xusx_xix_x1_x264_clip_pixelx_xexitx_xusx_xix_x2 
    $endmerge
    iNsTr_85 := ($cast ($uint<8>) iNsTr_84)
    ->(scevgep20x_xix_x2) := iNsTr_85
    // load 
    iNsTr_87 := ->(scevgepx_xix_x3) 
    iNsTr_88 := ($cast ($uint<32>) iNsTr_87)
    iNsTr_89 := (iNsTr_88 * weightx_x0x_x3x_xval)
    iNsTr_90 := (iNsTr_89 + iNsTr_6)
    iNsTr_91 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_90) >>  ($bitcast ( $int<32>) weightx_x0x_x2x_xval )))
    iNsTr_92 := (iNsTr_91 + weightx_x0x_x4x_xval)
    // compare instruction
    iNsTr_93 := (iNsTr_92 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_93 $then  $place [x264_clip_pixelx_xexitx_xusx_xix_x2_bb_25] $else $place [x264_clip_pixelx_xexitx_xusx_xix_x2_x264_clip_pixelx_xexitx_xusx_xix_x3] $endif 
    //begin: basic-block bb_23
    $merge x264_clip_pixelx_xexitx_xusx_xix_x1_bb_23
    $endmerge
    iNsTr_80 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_64)
    iNsTr_81 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_80) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_82 := (iNsTr_81 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_23_x264_clip_pixelx_xexitx_xusx_xix_x2]
    //begin: basic-block x264_clip_pixelx_xexitx_xusx_xix_x3
    $merge bb_25_x264_clip_pixelx_xexitx_xusx_xix_x3 x264_clip_pixelx_xexitx_xusx_xix_x2_x264_clip_pixelx_xexitx_xusx_xix_x3
    $phi iNsTr_112 :=  ( $cast ($uint<32>) iNsTr_110) $on bb_25_x264_clip_pixelx_xexitx_xusx_xix_x3 ( $cast ($uint<32>) iNsTr_92) $on x264_clip_pixelx_xexitx_xusx_xix_x2_x264_clip_pixelx_xexitx_xusx_xix_x3 
    $endmerge
    iNsTr_113 := ($cast ($uint<8>) iNsTr_112)
    ->(scevgep20x_xix_x3) := iNsTr_113
    iNsTr_115 := (yx_x013x_xusx_xi + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond := (iNsTr_115 == height )
    $if exitcond $then  $place [x264_clip_pixelx_xexitx_xusx_xix_x3_mc_weightx_xexitx_xloopexit17] $else $place [x264_clip_pixelx_xexitx_xusx_xix_x3_bbx_xnph9x_xusx_xi] $endif 
    //begin: basic-block bb_25
    $merge x264_clip_pixelx_xexitx_xusx_xix_x2_bb_25
    $endmerge
    iNsTr_108 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_92)
    iNsTr_109 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_108) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_110 := (iNsTr_109 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_25_x264_clip_pixelx_xexitx_xusx_xix_x3]
    $merge return__ $endmerge
  }
}
$module [mc_weight_w2] 
$in (dst : $pointer< $uint<8> > i_dst_stride : $uint<32> src : $pointer< $uint<8> > i_src_stride : $uint<32> weightx_x0x_x2x_xval : $uint<32> weightx_x0x_x3x_xval : $uint<32> weightx_x0x_x4x_xval : $uint<32> height : $uint<32> )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    // compare instruction
    iNsTr_0 := ( ($bitcast ( $int<32>) weightx_x0x_x2x_xval) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    // compare instruction
    iNsTr_1 := ( ($bitcast ( $int<32>) height) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    $if iNsTr_0 $then  $place [bb_0_xx_xpreheader11x_xi] $else $place [bb_0_xx_xpreheader2x_xi] $endif 
    //begin: basic-block xx_xpreheader11x_xi
    $merge bb_0_xx_xpreheader11x_xi
    $endmerge
    $if iNsTr_1 $then  $place [xx_xpreheader11x_xi_bbx_xnph16x_xi] $else $place [xx_xpreheader11x_xi_mc_weightx_xexit] $endif 
    //begin: basic-block xx_xpreheader2x_xi
    $merge bb_0_xx_xpreheader2x_xi
    $endmerge
    $if iNsTr_1 $then  $place [xx_xpreheader2x_xi_bbx_xnphx_xusx_xix_xpreheader] $else $place [xx_xpreheader2x_xi_mc_weightx_xexit] $endif 
    //begin: basic-block bbx_xnphx_xusx_xix_xpreheader
    $merge xx_xpreheader2x_xi_bbx_xnphx_xusx_xix_xpreheader
    $endmerge
    $place [bbx_xnphx_xusx_xix_xpreheader_bbx_xnphx_xusx_xi]
    //begin: basic-block bbx_xnph16x_xi
    $merge xx_xpreheader11x_xi_bbx_xnph16x_xi
    $endmerge
    iNsTr_5 := (weightx_x0x_x2x_xval + ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) )
    iNsTr_6 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  << iNsTr_5)
    $place [bbx_xnph16x_xi_bbx_xnph9x_xusx_xi]
    //begin: basic-block x264_clip_pixelx_xexitx_xusx_xi
    $merge bb_6_x264_clip_pixelx_xexitx_xusx_xi bbx_xnph9x_xusx_xi_x264_clip_pixelx_xexitx_xusx_xi
    $phi iNsTr_28 :=  ( $cast ($uint<32>) iNsTr_26) $on bb_6_x264_clip_pixelx_xexitx_xusx_xi ( $cast ($uint<32>) iNsTr_15) $on bbx_xnph9x_xusx_xi_x264_clip_pixelx_xexitx_xusx_xi 
    $endmerge
    iNsTr_29 := ($cast ($uint<8>) iNsTr_28)
    ->(scevgep20x_xi) := iNsTr_29
    // load 
    iNsTr_31 := ->(scevgepx_xix_x1) 
    iNsTr_32 := ($cast ($uint<32>) iNsTr_31)
    iNsTr_33 := (iNsTr_32 * weightx_x0x_x3x_xval)
    iNsTr_34 := (iNsTr_33 + iNsTr_6)
    iNsTr_35 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_34) >>  ($bitcast ( $int<32>) weightx_x0x_x2x_xval )))
    iNsTr_36 := (iNsTr_35 + weightx_x0x_x4x_xval)
    // compare instruction
    iNsTr_37 := (iNsTr_36 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_37 $then  $place [x264_clip_pixelx_xexitx_xusx_xi_bb_17] $else $place [x264_clip_pixelx_xexitx_xusx_xi_x264_clip_pixelx_xexitx_xusx_xix_x1] $endif 
    //begin: basic-block bb_6
    $merge bbx_xnph9x_xusx_xi_bb_6
    $endmerge
    iNsTr_24 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_15)
    iNsTr_25 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_24) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_26 := (iNsTr_25 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_6_x264_clip_pixelx_xexitx_xusx_xi]
    //begin: basic-block bbx_xnph9x_xusx_xi
    $merge bbx_xnph16x_xi_bbx_xnph9x_xusx_xi x264_clip_pixelx_xexitx_xusx_xix_x1_bbx_xnph9x_xusx_xi
    $phi yx_x013x_xusx_xi :=  ( $cast ($uint<32>) iNsTr_59) $on x264_clip_pixelx_xexitx_xusx_xix_x1_bbx_xnph9x_xusx_xi ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph16x_xi_bbx_xnph9x_xusx_xi 
    $endmerge
    tmp6 := (i_src_stride * yx_x013x_xusx_xi)
    scevgepx_xi := src[tmp6]
    tmp7 := (tmp6 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgepx_xix_x1 := src[tmp7]
    tmp8 := (i_dst_stride * yx_x013x_xusx_xi)
    scevgep20x_xi := dst[tmp8]
    tmp9 := (tmp8 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep20x_xix_x1 := dst[tmp9]
    // load 
    iNsTr_10 := ->(scevgepx_xi) 
    iNsTr_11 := ($cast ($uint<32>) iNsTr_10)
    iNsTr_12 := (iNsTr_11 * weightx_x0x_x3x_xval)
    iNsTr_13 := (iNsTr_12 + iNsTr_6)
    iNsTr_14 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_13) >>  ($bitcast ( $int<32>) weightx_x0x_x2x_xval )))
    iNsTr_15 := (iNsTr_14 + weightx_x0x_x4x_xval)
    // compare instruction
    iNsTr_16 := (iNsTr_15 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_16 $then  $place [bbx_xnph9x_xusx_xi_bb_6] $else $place [bbx_xnph9x_xusx_xi_x264_clip_pixelx_xexitx_xusx_xi] $endif 
    //begin: basic-block x264_clip_pixelx_xexit5x_xusx_xi
    $merge bb_9_x264_clip_pixelx_xexit5x_xusx_xi bbx_xnphx_xusx_xi_x264_clip_pixelx_xexit5x_xusx_xi
    $phi iNsTr_43 :=  ( $cast ($uint<32>) iNsTr_41) $on bb_9_x264_clip_pixelx_xexit5x_xusx_xi ( $cast ($uint<32>) iNsTr_21) $on bbx_xnphx_xusx_xi_x264_clip_pixelx_xexit5x_xusx_xi 
    $endmerge
    iNsTr_44 := ($cast ($uint<8>) iNsTr_43)
    ->(scevgep33x_xi) := iNsTr_44
    // load 
    iNsTr_46 := ->(scevgep30x_xix_x1) 
    iNsTr_47 := ($cast ($uint<32>) iNsTr_46)
    iNsTr_48 := (iNsTr_47 * weightx_x0x_x3x_xval)
    iNsTr_49 := (iNsTr_48 + weightx_x0x_x4x_xval)
    // compare instruction
    iNsTr_50 := (iNsTr_49 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_50 $then  $place [x264_clip_pixelx_xexit5x_xusx_xi_bb_15] $else $place [x264_clip_pixelx_xexit5x_xusx_xi_x264_clip_pixelx_xexit5x_xusx_xix_x1] $endif 
    //begin: basic-block bb_9
    $merge bbx_xnphx_xusx_xi_bb_9
    $endmerge
    iNsTr_39 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_21)
    iNsTr_40 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_39) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_41 := (iNsTr_40 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_9_x264_clip_pixelx_xexit5x_xusx_xi]
    //begin: basic-block bbx_xnphx_xusx_xi
    $merge bbx_xnphx_xusx_xix_xpreheader_bbx_xnphx_xusx_xi x264_clip_pixelx_xexit5x_xusx_xix_x1_bbx_xnphx_xusx_xi
    $phi y1x_x03x_xusx_xi :=  ( $cast ($uint<32>) iNsTr_68) $on x264_clip_pixelx_xexit5x_xusx_xix_x1_bbx_xnphx_xusx_xi ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xusx_xix_xpreheader_bbx_xnphx_xusx_xi 
    $endmerge
    tmp := (i_src_stride * y1x_x03x_xusx_xi)
    scevgep30x_xi := src[tmp]
    tmp2 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep30x_xix_x1 := src[tmp2]
    tmp3 := (i_dst_stride * y1x_x03x_xusx_xi)
    scevgep33x_xi := dst[tmp3]
    tmp4 := (tmp3 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep33x_xix_x1 := dst[tmp4]
    // load 
    iNsTr_18 := ->(scevgep30x_xi) 
    iNsTr_19 := ($cast ($uint<32>) iNsTr_18)
    iNsTr_20 := (iNsTr_19 * weightx_x0x_x3x_xval)
    iNsTr_21 := (iNsTr_20 + weightx_x0x_x4x_xval)
    // compare instruction
    iNsTr_22 := (iNsTr_21 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_22 $then  $place [bbx_xnphx_xusx_xi_bb_9] $else $place [bbx_xnphx_xusx_xi_x264_clip_pixelx_xexit5x_xusx_xi] $endif 
    //begin: basic-block mc_weightx_xexitx_xloopexit
    $merge x264_clip_pixelx_xexit5x_xusx_xix_x1_mc_weightx_xexitx_xloopexit
    $endmerge
    $place [mc_weightx_xexitx_xloopexit_mc_weightx_xexit]
    //begin: basic-block mc_weightx_xexitx_xloopexit5
    $merge x264_clip_pixelx_xexitx_xusx_xix_x1_mc_weightx_xexitx_xloopexit5
    $endmerge
    $place [mc_weightx_xexitx_xloopexit5_mc_weightx_xexit]
    //begin: basic-block mc_weightx_xexit
    $merge mc_weightx_xexitx_xloopexit_mc_weightx_xexit mc_weightx_xexitx_xloopexit5_mc_weightx_xexit xx_xpreheader11x_xi_mc_weightx_xexit xx_xpreheader2x_xi_mc_weightx_xexit
    $endmerge
    $place [return__]
    //begin: basic-block x264_clip_pixelx_xexit5x_xusx_xix_x1
    $merge bb_15_x264_clip_pixelx_xexit5x_xusx_xix_x1 x264_clip_pixelx_xexit5x_xusx_xi_x264_clip_pixelx_xexit5x_xusx_xix_x1
    $phi iNsTr_65 :=  ( $cast ($uint<32>) iNsTr_63) $on bb_15_x264_clip_pixelx_xexit5x_xusx_xix_x1 ( $cast ($uint<32>) iNsTr_49) $on x264_clip_pixelx_xexit5x_xusx_xi_x264_clip_pixelx_xexit5x_xusx_xix_x1 
    $endmerge
    iNsTr_66 := ($cast ($uint<8>) iNsTr_65)
    ->(scevgep33x_xix_x1) := iNsTr_66
    iNsTr_68 := (y1x_x03x_xusx_xi + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (iNsTr_68 == height )
    $if exitcond1 $then  $place [x264_clip_pixelx_xexit5x_xusx_xix_x1_mc_weightx_xexitx_xloopexit] $else $place [x264_clip_pixelx_xexit5x_xusx_xix_x1_bbx_xnphx_xusx_xi] $endif 
    //begin: basic-block bb_15
    $merge x264_clip_pixelx_xexit5x_xusx_xi_bb_15
    $endmerge
    iNsTr_61 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_49)
    iNsTr_62 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_61) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_63 := (iNsTr_62 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_15_x264_clip_pixelx_xexit5x_xusx_xix_x1]
    //begin: basic-block x264_clip_pixelx_xexitx_xusx_xix_x1
    $merge bb_17_x264_clip_pixelx_xexitx_xusx_xix_x1 x264_clip_pixelx_xexitx_xusx_xi_x264_clip_pixelx_xexitx_xusx_xix_x1
    $phi iNsTr_56 :=  ( $cast ($uint<32>) iNsTr_54) $on bb_17_x264_clip_pixelx_xexitx_xusx_xix_x1 ( $cast ($uint<32>) iNsTr_36) $on x264_clip_pixelx_xexitx_xusx_xi_x264_clip_pixelx_xexitx_xusx_xix_x1 
    $endmerge
    iNsTr_57 := ($cast ($uint<8>) iNsTr_56)
    ->(scevgep20x_xix_x1) := iNsTr_57
    iNsTr_59 := (yx_x013x_xusx_xi + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond := (iNsTr_59 == height )
    $if exitcond $then  $place [x264_clip_pixelx_xexitx_xusx_xix_x1_mc_weightx_xexitx_xloopexit5] $else $place [x264_clip_pixelx_xexitx_xusx_xix_x1_bbx_xnph9x_xusx_xi] $endif 
    //begin: basic-block bb_17
    $merge x264_clip_pixelx_xexitx_xusx_xi_bb_17
    $endmerge
    iNsTr_52 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_36)
    iNsTr_53 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_52) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_54 := (iNsTr_53 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_17_x264_clip_pixelx_xexitx_xusx_xix_x1]
    $merge return__ $endmerge
  }
}
$module [hpel_filter] 
$in (dsth : $pointer< $uint<8> > dstv : $pointer< $uint<8> > dstc : $pointer< $uint<8> > src : $pointer< $uint<8> > stride : $uint<32> width : $uint<32> height : $uint<32> buf : $pointer< $uint<16> > )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    // compare instruction
    iNsTr_0 := ( ($bitcast ( $int<32>) height) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    $if iNsTr_0 $then  $place [bb_0_bbx_xnph25] $else $place [bb_0_xx_x_crit_edge26] $endif 
    //begin: basic-block bbx_xnph25
    $merge bb_0_bbx_xnph25
    $endmerge
    iNsTr_2 := (width + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    // compare instruction
    iNsTr_3 := ( ($bitcast ( $int<32>) iNsTr_2) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111110 )  ) )
    // compare instruction
    iNsTr_4 := ( ($bitcast ( $int<32>) width) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    tmp37 := (width + ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) )
    tmp42 := (stride * ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    tmp43 := (( $bitcast ($uint<32> ) _b11111111111111111111111111111110 )  - tmp42)
    tmp56 := (stride * ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    tmp57 := (tmp56 + ( $bitcast ($uint<32> ) _b11111111111111111111111111111110 ) )
    tmp62 := (tmp42 + ( $bitcast ($uint<32> ) _b11111111111111111111111111111110 ) )
    tmp66 := (stride + ( $bitcast ($uint<32> ) _b11111111111111111111111111111110 ) )
    tmp85 := (( $bitcast ($uint<32> ) _b11111111111111111111111111111110 )  - stride)
    $place [bbx_xnph25_xx_xpreheader]
    //begin: basic-block xx_xpreheader
    $merge bbx_xnph25_xx_xpreheader xx_x_crit_edge_xx_xpreheader
    $phi yx_x020 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph25_xx_xpreheader ( $cast ($uint<32>) iNsTr_34) $on xx_x_crit_edge_xx_xpreheader 
    $endmerge
    tmp70 := (stride * yx_x020)
    tmp71 := (tmp66 + tmp70)
    tmp75 := (tmp62 + tmp70)
    tmp78 := (tmp57 + tmp70)
    tmp81 := (tmp70 + ( $bitcast ($uint<32> ) _b11111111111111111111111111111110 ) )
    tmp86 := (tmp85 + tmp70)
    tmp90 := (tmp43 + tmp70)
    tmp95 := (tmp70 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    tmp98 := (tmp70 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    tmp101 := (tmp70 + ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) )
    tmp104 := (tmp70 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    $if iNsTr_3 $then  $place [xx_xpreheader_bbx_xnphx_xpreheader] $else $place [xx_xpreheader_xx_xloopexit] $endif 
    //begin: basic-block bbx_xnphx_xpreheader
    $merge xx_xpreheader_bbx_xnphx_xpreheader
    $endmerge
    $place [bbx_xnphx_xpreheader_bbx_xnph]
    //begin: basic-block bbx_xnph
    $merge bbx_xnphx_xpreheader_bbx_xnph x264_clip_pixelx_xexit_bbx_xnph
    $phi indvar :=  ( $cast ($uint<32>) indvarx_xnext) $on x264_clip_pixelx_xexit_bbx_xnph ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xpreheader_bbx_xnph 
    $endmerge
    tmp72 := (tmp71 + indvar)
    scevgep52 := src[tmp72]
    tmp76 := (tmp75 + indvar)
    scevgep48 := src[tmp76]
    tmp79 := (tmp78 + indvar)
    scevgep44 := src[tmp79]
    tmp82 := (tmp81 + indvar)
    scevgep39 := dstv[tmp82]
    scevgep38 := src[tmp82]
    tmp87 := (tmp86 + indvar)
    scevgep35 := src[tmp87]
    tmp91 := (tmp90 + indvar)
    scevgep := src[tmp91]
    scevgep53 := buf[indvar]
    // load 
    iNsTr_10 := ->(scevgep) 
    iNsTr_11 := ($cast ($uint<32>) iNsTr_10)
    // load 
    iNsTr_12 := ->(scevgep44) 
    iNsTr_13 := ($cast ($uint<32>) iNsTr_12)
    // load 
    iNsTr_14 := ->(scevgep35) 
    iNsTr_15 := ($cast ($uint<32>) iNsTr_14)
    // load 
    iNsTr_16 := ->(scevgep48) 
    iNsTr_17 := ($cast ($uint<32>) iNsTr_16)
    iNsTr_18 := (iNsTr_17 + iNsTr_15)
    iNsTr_19 := (iNsTr_18 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) )
    // load 
    iNsTr_20 := ->(scevgep38) 
    iNsTr_21 := ($cast ($uint<32>) iNsTr_20)
    // load 
    iNsTr_22 := ->(scevgep52) 
    iNsTr_23 := ($cast ($uint<32>) iNsTr_22)
    iNsTr_24 := (iNsTr_23 + iNsTr_21)
    iNsTr_25 := (iNsTr_24 * ( $bitcast ($uint<32> ) _b00000000000000000000000000010100 ) )
    iNsTr_26 := (iNsTr_13 + iNsTr_11)
    iNsTr_27 := (iNsTr_26 - iNsTr_19)
    iNsTr_28 := (iNsTr_27 + iNsTr_25)
    iNsTr_29 := (iNsTr_28 + ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    iNsTr_30 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_29) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 )  )))
    // compare instruction
    iNsTr_31 := (iNsTr_30 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_31 $then  $place [bbx_xnph_bb_5] $else $place [bbx_xnph_x264_clip_pixelx_xexit] $endif 
    //begin: basic-block bb_5
    $merge bbx_xnph_bb_5
    $endmerge
    iNsTr_36 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_30)
    iNsTr_37 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_36) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_38 := (iNsTr_37 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_5_x264_clip_pixelx_xexit]
    //begin: basic-block x264_clip_pixelx_xexit
    $merge bb_5_x264_clip_pixelx_xexit bbx_xnph_x264_clip_pixelx_xexit
    $phi iNsTr_40 :=  ( $cast ($uint<32>) iNsTr_38) $on bb_5_x264_clip_pixelx_xexit ( $cast ($uint<32>) iNsTr_30) $on bbx_xnph_x264_clip_pixelx_xexit 
    $endmerge
    iNsTr_41 := ($cast ($uint<8>) iNsTr_40)
    ->(scevgep39) := iNsTr_41
    iNsTr_43 := ($cast ($uint<16>) iNsTr_28)
    ->(scevgep53) := iNsTr_43
    indvarx_xnext := (indvar + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond38 := (indvarx_xnext == tmp37 )
    $if exitcond38 $then  $place [x264_clip_pixelx_xexit_xx_xloopexitx_xloopexit] $else $place [x264_clip_pixelx_xexit_bbx_xnph] $endif 
    //begin: basic-block xx_xloopexitx_xloopexit
    $merge x264_clip_pixelx_xexit_xx_xloopexitx_xloopexit
    $endmerge
    $place [xx_xloopexitx_xloopexit_xx_xloopexit]
    //begin: basic-block xx_xloopexit
    $merge xx_xloopexitx_xloopexit_xx_xloopexit xx_xpreheader_xx_xloopexit
    $endmerge
    $if iNsTr_4 $then  $place [xx_xloopexit_bbx_xnph17x_xpreheader] $else $place [xx_xloopexit_xx_x_crit_edge] $endif 
    //begin: basic-block bbx_xnph17x_xpreheader
    $merge xx_xloopexit_bbx_xnph17x_xpreheader
    $endmerge
    $place [bbx_xnph17x_xpreheader_bbx_xnph17]
    //begin: basic-block bbx_xnph17
    $merge bbx_xnph17x_xpreheader_bbx_xnph17 x264_clip_pixelx_xexit11_bbx_xnph17
    $phi x1x_x016 :=  ( $cast ($uint<32>) tmp61) $on x264_clip_pixelx_xexit11_bbx_xnph17 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph17x_xpreheader_bbx_xnph17 
    $endmerge
    tmp93 := (tmp70 + x1x_x016)
    scevgep57 := dstc[tmp93]
    tmp22 := (x1x_x016 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep68 := buf[tmp22]
    tmp24 := (x1x_x016 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep66 := buf[tmp24]
    tmp26 := (x1x_x016 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    scevgep64 := buf[tmp26]
    tmp28 := (x1x_x016 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep62 := buf[tmp28]
    tmp30 := (x1x_x016 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) )
    scevgep60 := buf[tmp30]
    scevgep58 := buf[x1x_x016]
    tmp61 := (x1x_x016 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // load 
    iNsTr_46 := ->(scevgep58) 
    iNsTr_47 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_46) )
    // load 
    iNsTr_48 := ->(scevgep60) 
    iNsTr_49 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_48) )
    // load 
    iNsTr_50 := ->(scevgep62) 
    iNsTr_51 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_50) )
    // load 
    iNsTr_52 := ->(scevgep64) 
    iNsTr_53 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_52) )
    iNsTr_54 := (iNsTr_53 + iNsTr_51)
    iNsTr_55 := (iNsTr_54 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) )
    // load 
    iNsTr_56 := ->(scevgep66) 
    iNsTr_57 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_56) )
    // load 
    iNsTr_58 := ->(scevgep68) 
    iNsTr_59 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_58) )
    iNsTr_60 := (iNsTr_59 + iNsTr_57)
    iNsTr_61 := (iNsTr_60 * ( $bitcast ($uint<32> ) _b00000000000000000000000000010100 ) )
    iNsTr_62 := (iNsTr_47 + ( $bitcast ($uint<32> ) _b00000000000000000000001000000000 ) )
    iNsTr_63 := (iNsTr_62 + iNsTr_49)
    iNsTr_64 := (iNsTr_63 - iNsTr_55)
    iNsTr_65 := (iNsTr_64 + iNsTr_61)
    iNsTr_66 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_65) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000001010 )  )))
    // compare instruction
    iNsTr_67 := (iNsTr_66 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_67 $then  $place [bbx_xnph17_bb_11] $else $place [bbx_xnph17_x264_clip_pixelx_xexit11] $endif 
    //begin: basic-block bb_11
    $merge bbx_xnph17_bb_11
    $endmerge
    iNsTr_71 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_66)
    iNsTr_72 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_71) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_73 := (iNsTr_72 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_11_x264_clip_pixelx_xexit11]
    //begin: basic-block x264_clip_pixelx_xexit11
    $merge bb_11_x264_clip_pixelx_xexit11 bbx_xnph17_x264_clip_pixelx_xexit11
    $phi iNsTr_75 :=  ( $cast ($uint<32>) iNsTr_73) $on bb_11_x264_clip_pixelx_xexit11 ( $cast ($uint<32>) iNsTr_66) $on bbx_xnph17_x264_clip_pixelx_xexit11 
    $endmerge
    iNsTr_76 := ($cast ($uint<8>) iNsTr_75)
    ->(scevgep57) := iNsTr_76
    // compare instruction
    exitcond21 := (tmp61 == width )
    $if exitcond21 $then  $place [x264_clip_pixelx_xexit11_xx_xloopexit15] $else $place [x264_clip_pixelx_xexit11_bbx_xnph17] $endif 
    //begin: basic-block xx_xloopexit15
    $merge x264_clip_pixelx_xexit11_xx_xloopexit15
    $endmerge
    $if iNsTr_4 $then  $place [xx_xloopexit15_bbx_xnph19x_xpreheader] $else $place [xx_xloopexit15_xx_x_crit_edge] $endif 
    //begin: basic-block bbx_xnph19x_xpreheader
    $merge xx_xloopexit15_bbx_xnph19x_xpreheader
    $endmerge
    $place [bbx_xnph19x_xpreheader_bbx_xnph19]
    //begin: basic-block bbx_xnph19
    $merge bbx_xnph19x_xpreheader_bbx_xnph19 x264_clip_pixelx_xexit10_bbx_xnph19
    $phi x2x_x018 :=  ( $cast ($uint<32>) iNsTr_111) $on x264_clip_pixelx_xexit10_bbx_xnph19 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph19x_xpreheader_bbx_xnph19 
    $endmerge
    tmp96 := (tmp95 + x2x_x018)
    scevgep88 := src[tmp96]
    tmp99 := (tmp98 + x2x_x018)
    scevgep85 := src[tmp99]
    tmp102 := (tmp101 + x2x_x018)
    scevgep82 := src[tmp102]
    tmp105 := (tmp104 + x2x_x018)
    scevgep79 := src[tmp105]
    tmp107 := (tmp81 + x2x_x018)
    scevgep76 := src[tmp107]
    tmp109 := (tmp70 + x2x_x018)
    scevgep73 := dsth[tmp109]
    scevgep72 := src[tmp109]
    // load 
    iNsTr_81 := ->(scevgep76) 
    iNsTr_82 := ($cast ($uint<32>) iNsTr_81)
    // load 
    iNsTr_83 := ->(scevgep79) 
    iNsTr_84 := ($cast ($uint<32>) iNsTr_83)
    // load 
    iNsTr_85 := ->(scevgep82) 
    iNsTr_86 := ($cast ($uint<32>) iNsTr_85)
    // load 
    iNsTr_87 := ->(scevgep85) 
    iNsTr_88 := ($cast ($uint<32>) iNsTr_87)
    iNsTr_89 := (iNsTr_88 + iNsTr_86)
    iNsTr_90 := (iNsTr_89 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) )
    // load 
    iNsTr_91 := ->(scevgep72) 
    iNsTr_92 := ($cast ($uint<32>) iNsTr_91)
    // load 
    iNsTr_93 := ->(scevgep88) 
    iNsTr_94 := ($cast ($uint<32>) iNsTr_93)
    iNsTr_95 := (iNsTr_94 + iNsTr_92)
    iNsTr_96 := (iNsTr_95 * ( $bitcast ($uint<32> ) _b00000000000000000000000000010100 ) )
    iNsTr_97 := (iNsTr_82 + ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    iNsTr_98 := (iNsTr_97 + iNsTr_84)
    iNsTr_99 := (iNsTr_98 - iNsTr_90)
    iNsTr_100 := (iNsTr_99 + iNsTr_96)
    iNsTr_101 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_100) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 )  )))
    // compare instruction
    iNsTr_102 := (iNsTr_101 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_102 $then  $place [bbx_xnph19_bb_16] $else $place [bbx_xnph19_x264_clip_pixelx_xexit10] $endif 
    //begin: basic-block bb_16
    $merge bbx_xnph19_bb_16
    $endmerge
    iNsTr_104 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_101)
    iNsTr_105 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_104) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_106 := (iNsTr_105 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_16_x264_clip_pixelx_xexit10]
    //begin: basic-block x264_clip_pixelx_xexit10
    $merge bb_16_x264_clip_pixelx_xexit10 bbx_xnph19_x264_clip_pixelx_xexit10
    $phi iNsTr_108 :=  ( $cast ($uint<32>) iNsTr_106) $on bb_16_x264_clip_pixelx_xexit10 ( $cast ($uint<32>) iNsTr_101) $on bbx_xnph19_x264_clip_pixelx_xexit10 
    $endmerge
    iNsTr_109 := ($cast ($uint<8>) iNsTr_108)
    ->(scevgep73) := iNsTr_109
    iNsTr_111 := (x2x_x018 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (iNsTr_111 == width )
    $if exitcond1 $then  $place [x264_clip_pixelx_xexit10_xx_x_crit_edgex_xloopexit] $else $place [x264_clip_pixelx_xexit10_bbx_xnph19] $endif 
    //begin: basic-block xx_x_crit_edgex_xloopexit
    $merge x264_clip_pixelx_xexit10_xx_x_crit_edgex_xloopexit
    $endmerge
    $place [xx_x_crit_edgex_xloopexit_xx_x_crit_edge]
    //begin: basic-block xx_x_crit_edge
    $merge xx_x_crit_edgex_xloopexit_xx_x_crit_edge xx_xloopexit_xx_x_crit_edge xx_xloopexit15_xx_x_crit_edge
    $endmerge
    iNsTr_34 := (yx_x020 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond := (iNsTr_34 == height )
    $if exitcond $then  $place [xx_x_crit_edge_xx_x_crit_edge26x_xloopexit] $else $place [xx_x_crit_edge_xx_xpreheader] $endif 
    //begin: basic-block xx_x_crit_edge26x_xloopexit
    $merge xx_x_crit_edge_xx_x_crit_edge26x_xloopexit
    $endmerge
    $place [xx_x_crit_edge26x_xloopexit_xx_x_crit_edge26]
    //begin: basic-block xx_x_crit_edge26
    $merge bb_0_xx_x_crit_edge26 xx_x_crit_edge26x_xloopexit_xx_x_crit_edge26
    $endmerge
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [mc_luma] 
$in (dst : $pointer< $uint<8> > i_dst_stride : $uint<32> src : $pointer< $pointer< $uint<8> > > i_src_stride : $uint<32> mvx : $uint<32> mvy : $uint<32> i_width : $uint<32> i_height : $uint<32> weight : $pointer< structx_xx264_weight_t > )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    iNsTr_0 := (mvy << ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_1 := (iNsTr_0 & ( $bitcast ($uint<32> ) _b00000000000000000000000000001100 ) )
    iNsTr_2 := (mvx & ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    iNsTr_3 := (iNsTr_1 | iNsTr_2)
    iNsTr_4 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) mvy) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )))
    iNsTr_5 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) mvx) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )))
    iNsTr_6 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_hpel_ref0[iNsTr_3])
    // load 
    iNsTr_7 := ->(iNsTr_6) 
    iNsTr_8 := ($cast ($uint<32>) iNsTr_7)
    iNsTr_9 := src[iNsTr_8]
    // load 
    iNsTr_10 := ->(iNsTr_9) 
    iNsTr_11 := (mvy & ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    // compare instruction
    iNsTr_12 := (iNsTr_11 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 )  )
    tmp :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_12) )
    iNsTr_13 := (tmp & i_src_stride)
    iNsTr_14 := (iNsTr_3 & ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) )
    // compare instruction
    iNsTr_15 := (iNsTr_14 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if iNsTr_15 $then  $place [bb_0_bb_30] $else $place [bb_0_bb_1] $endif 
    //begin: basic-block bb_1
    $merge bb_0_bb_1
    $endmerge
    iNsTr_21 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_hpel_ref1[iNsTr_3])
    // load 
    iNsTr_22 := ->(iNsTr_21) 
    iNsTr_23 := ($cast ($uint<32>) iNsTr_22)
    iNsTr_24 := src[iNsTr_23]
    // load 
    iNsTr_25 := ->(iNsTr_24) 
    // compare instruction
    iNsTr_26 := ( ($bitcast ( $int<32>) i_height) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    // compare instruction
    iNsTr_27 := ( ($bitcast ( $int<32>) i_width) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    orx_xcondx_xi := (iNsTr_26 & iNsTr_27)
    $if orx_xcondx_xi $then  $place [bb_1_bbx_xnphx_xusx_xix_xpreheader] $else $place [bb_1_pixel_avgx_xexit] $endif 
    //begin: basic-block bbx_xnphx_xusx_xix_xpreheader
    $merge bb_1_bbx_xnphx_xusx_xix_xpreheader
    $endmerge
    // compare instruction
    iNsTr_34 := (iNsTr_2 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 )  )
    tmp67 := (iNsTr_4 * i_src_stride)
    tmp68 := (iNsTr_5 + tmp67)
    tmp73 := (iNsTr_13 + iNsTr_5)
    tmp74 := (tmp73 + tmp67)
    tmp27 := ($cast ($uint<32>) iNsTr_34)
    tmp28 := (tmp68 + tmp27)
    $place [bbx_xnphx_xusx_xix_xpreheader_bbx_xnphx_xusx_xi]
    //begin: basic-block bb_3
    $merge bb_4_bb_3
    $endmerge
    iNsTr_72 := (yx_x05x_xusx_xi + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond23 := (iNsTr_72 == i_height )
    $if exitcond23 $then  $place [bb_3_pixel_avgx_xexitx_xloopexit] $else $place [bb_3_bbx_xnphx_xusx_xi] $endif 
    //begin: basic-block bb_4
    $merge bb_4_bb_4 bbx_xnphx_xusx_xi_bb_4
    $phi xx_x03x_xusx_xi :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xusx_xi_bb_4 ( $cast ($uint<32>) iNsTr_65) $on bb_4_bb_4 
    $endmerge
    tmp26 := (tmp25 + xx_x03x_xusx_xi)
    scevgep16x_xi := iNsTr_10[tmp26]
    tmp30 := (tmp29 + xx_x03x_xusx_xi)
    scevgep13x_xi := iNsTr_25[tmp30]
    tmp32 := (tmp31 + xx_x03x_xusx_xi)
    scevgepx_xi := dst[tmp32]
    // load 
    iNsTr_56 := ->(scevgep16x_xi) 
    iNsTr_57 := ($cast ($uint<32>) iNsTr_56)
    // load 
    iNsTr_58 := ->(scevgep13x_xi) 
    iNsTr_59 := ($cast ($uint<32>) iNsTr_58)
    iNsTr_60 := (iNsTr_57 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_61 := (iNsTr_60 + iNsTr_59)
    iNsTr_62 := (iNsTr_61 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_63 := ($cast ($uint<8>) iNsTr_62)
    ->(scevgepx_xi) := iNsTr_63
    iNsTr_65 := (xx_x03x_xusx_xi + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond13 := (iNsTr_65 == i_width )
    $if exitcond13 $then  $place [bb_4_bb_3] $else $place [bb_4_bb_4] $endif 
    //begin: basic-block bbx_xnphx_xusx_xi
    $merge bb_3_bbx_xnphx_xusx_xi bbx_xnphx_xusx_xix_xpreheader_bbx_xnphx_xusx_xi
    $phi yx_x05x_xusx_xi :=  ( $cast ($uint<32>) iNsTr_72) $on bb_3_bbx_xnphx_xusx_xi ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xusx_xix_xpreheader_bbx_xnphx_xusx_xi 
    $endmerge
    tmp24 := (i_src_stride * yx_x05x_xusx_xi)
    tmp25 := (tmp74 + tmp24)
    tmp29 := (tmp28 + tmp24)
    tmp31 := (i_dst_stride * yx_x05x_xusx_xi)
    $place [bbx_xnphx_xusx_xi_bb_4]
    //begin: basic-block pixel_avgx_xexitx_xloopexit
    $merge bb_3_pixel_avgx_xexitx_xloopexit
    $endmerge
    $place [pixel_avgx_xexitx_xloopexit_pixel_avgx_xexit]
    //begin: basic-block pixel_avgx_xexit
    $merge bb_1_pixel_avgx_xexit pixel_avgx_xexitx_xloopexit_pixel_avgx_xexit
    $endmerge
    iNsTr_36 := weight[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) ]
    // load 
    iNsTr_37 := ->(iNsTr_36) 
    // compare instruction
    iNsTr_38 := (iNsTr_37 == ( $bitcast ($pointer< $pointer< $pointer < $void >  > > ) _b1111111111111111111111111111111111111111111111111111111111111111 )  )
    $if iNsTr_38 $then  $place [pixel_avgx_xexit_mc_weightx_xexit] $else $place [pixel_avgx_xexit_bb_8] $endif 
    //begin: basic-block bb_8
    $merge pixel_avgx_xexit_bb_8
    $endmerge
    weightx_xidx4 := weight[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    weightx_xidx4x_xval := ->(weightx_xidx4) 
    weightx_xidx5 := weight[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    weightx_xidx5x_xval := ->(weightx_xidx5) 
    weightx_xidx6 := weight[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ]
    // load 
    weightx_xidx6x_xval := ->(weightx_xidx6) 
    // compare instruction
    iNsTr_46 := ( ($bitcast ( $int<32>) weightx_xidx4x_xval) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    $if iNsTr_46 $then  $place [bb_8_xx_xpreheader11x_xi] $else $place [bb_8_xx_xpreheader2x_xi] $endif 
    //begin: basic-block xx_xpreheader11x_xi
    $merge bb_8_xx_xpreheader11x_xi
    $endmerge
    $if iNsTr_26 $then  $place [xx_xpreheader11x_xi_bbx_xnph16x_xi] $else $place [xx_xpreheader11x_xi_mc_weightx_xexit] $endif 
    //begin: basic-block xx_xpreheader2x_xi
    $merge bb_8_xx_xpreheader2x_xi
    $endmerge
    $if orx_xcondx_xi $then  $place [xx_xpreheader2x_xi_bbx_xnphx_xusx_xi13x_xpreheader] $else $place [xx_xpreheader2x_xi_mc_weightx_xexit] $endif 
    //begin: basic-block bbx_xnphx_xusx_xi13x_xpreheader
    $merge xx_xpreheader2x_xi_bbx_xnphx_xusx_xi13x_xpreheader
    $endmerge
    $place [bbx_xnphx_xusx_xi13x_xpreheader_bbx_xnphx_xusx_xi13]
    //begin: basic-block bbx_xnph16x_xi
    $merge xx_xpreheader11x_xi_bbx_xnph16x_xi
    $endmerge
    iNsTr_74 := (weightx_xidx4x_xval + ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) )
    iNsTr_75 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  << iNsTr_74)
    $if iNsTr_27 $then  $place [bbx_xnph16x_xi_bbx_xnph9x_xusx_xix_xpreheader] $else $place [bbx_xnph16x_xi_mc_weightx_xexit] $endif 
    //begin: basic-block bbx_xnph9x_xusx_xix_xpreheader
    $merge bbx_xnph16x_xi_bbx_xnph9x_xusx_xix_xpreheader
    $endmerge
    $place [bbx_xnph9x_xusx_xix_xpreheader_bbx_xnph9x_xusx_xi]
    //begin: basic-block bb_14
    $merge x264_clip_pixelx_xexitx_xusx_xi_bb_14
    $endmerge
    iNsTr_155 := (yx_x013x_xusx_xi + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond10 := (iNsTr_155 == i_height )
    $if exitcond10 $then  $place [bb_14_mc_weightx_xexitx_xloopexit9] $else $place [bb_14_bbx_xnph9x_xusx_xi] $endif 
    //begin: basic-block x264_clip_pixelx_xexitx_xusx_xi
    $merge bb_16_x264_clip_pixelx_xexitx_xusx_xi bb_17_x264_clip_pixelx_xexitx_xusx_xi
    $phi iNsTr_147 :=  ( $cast ($uint<32>) iNsTr_145) $on bb_16_x264_clip_pixelx_xexitx_xusx_xi ( $cast ($uint<32>) iNsTr_128) $on bb_17_x264_clip_pixelx_xexitx_xusx_xi 
    $endmerge
    iNsTr_148 := ($cast ($uint<8>) iNsTr_147)
    ->(scevgep20x_xi) := iNsTr_148
    iNsTr_150 := (xx_x08x_xusx_xi + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond6 := (iNsTr_150 == i_width )
    $if exitcond6 $then  $place [x264_clip_pixelx_xexitx_xusx_xi_bb_14] $else $place [x264_clip_pixelx_xexitx_xusx_xi_bb_17] $endif 
    //begin: basic-block bb_16
    $merge bb_17_bb_16
    $endmerge
    iNsTr_143 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_128)
    iNsTr_144 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_143) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_145 := (iNsTr_144 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_16_x264_clip_pixelx_xexitx_xusx_xi]
    //begin: basic-block bb_17
    $merge bbx_xnph9x_xusx_xi_bb_17 x264_clip_pixelx_xexitx_xusx_xi_bb_17
    $phi xx_x08x_xusx_xi :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph9x_xusx_xi_bb_17 ( $cast ($uint<32>) iNsTr_150) $on x264_clip_pixelx_xexitx_xusx_xi_bb_17 
    $endmerge
    tmp12 := (tmp11 + xx_x08x_xusx_xi)
    scevgep20x_xi := dst[tmp12]
    // load 
    iNsTr_123 := ->(scevgep20x_xi) 
    iNsTr_124 := ($cast ($uint<32>) iNsTr_123)
    iNsTr_125 := (iNsTr_124 * weightx_xidx5x_xval)
    iNsTr_126 := (iNsTr_125 + iNsTr_75)
    iNsTr_127 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_126) >>  ($bitcast ( $int<32>) weightx_xidx4x_xval )))
    iNsTr_128 := (iNsTr_127 + weightx_xidx6x_xval)
    // compare instruction
    iNsTr_129 := (iNsTr_128 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_129 $then  $place [bb_17_bb_16] $else $place [bb_17_x264_clip_pixelx_xexitx_xusx_xi] $endif 
    //begin: basic-block bbx_xnph9x_xusx_xi
    $merge bb_14_bbx_xnph9x_xusx_xi bbx_xnph9x_xusx_xix_xpreheader_bbx_xnph9x_xusx_xi
    $phi yx_x013x_xusx_xi :=  ( $cast ($uint<32>) iNsTr_155) $on bb_14_bbx_xnph9x_xusx_xi ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph9x_xusx_xix_xpreheader_bbx_xnph9x_xusx_xi 
    $endmerge
    tmp11 := (i_dst_stride * yx_x013x_xusx_xi)
    $place [bbx_xnph9x_xusx_xi_bb_17]
    //begin: basic-block bb_19
    $merge x264_clip_pixelx_xexit5x_xusx_xi_bb_19
    $endmerge
    iNsTr_152 := (y1x_x03x_xusx_xi + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond := (iNsTr_152 == i_height )
    $if exitcond $then  $place [bb_19_mc_weightx_xexitx_xloopexit] $else $place [bb_19_bbx_xnphx_xusx_xi13] $endif 
    //begin: basic-block x264_clip_pixelx_xexit5x_xusx_xi
    $merge bb_21_x264_clip_pixelx_xexit5x_xusx_xi bb_22_x264_clip_pixelx_xexit5x_xusx_xi
    $phi iNsTr_135 :=  ( $cast ($uint<32>) iNsTr_133) $on bb_21_x264_clip_pixelx_xexit5x_xusx_xi ( $cast ($uint<32>) iNsTr_109) $on bb_22_x264_clip_pixelx_xexit5x_xusx_xi 
    $endmerge
    iNsTr_136 := ($cast ($uint<8>) iNsTr_135)
    ->(scevgep33x_xi) := iNsTr_136
    iNsTr_138 := (x2x_x01x_xusx_xi + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (iNsTr_138 == i_width )
    $if exitcond1 $then  $place [x264_clip_pixelx_xexit5x_xusx_xi_bb_19] $else $place [x264_clip_pixelx_xexit5x_xusx_xi_bb_22] $endif 
    //begin: basic-block bb_21
    $merge bb_22_bb_21
    $endmerge
    iNsTr_131 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_109)
    iNsTr_132 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_131) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_133 := (iNsTr_132 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_21_x264_clip_pixelx_xexit5x_xusx_xi]
    //begin: basic-block bb_22
    $merge bbx_xnphx_xusx_xi13_bb_22 x264_clip_pixelx_xexit5x_xusx_xi_bb_22
    $phi x2x_x01x_xusx_xi :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xusx_xi13_bb_22 ( $cast ($uint<32>) iNsTr_138) $on x264_clip_pixelx_xexit5x_xusx_xi_bb_22 
    $endmerge
    tmp5 := (tmp4 + x2x_x01x_xusx_xi)
    scevgep33x_xi := dst[tmp5]
    // load 
    iNsTr_106 := ->(scevgep33x_xi) 
    iNsTr_107 := ($cast ($uint<32>) iNsTr_106)
    iNsTr_108 := (iNsTr_107 * weightx_xidx5x_xval)
    iNsTr_109 := (iNsTr_108 + weightx_xidx6x_xval)
    // compare instruction
    iNsTr_110 := (iNsTr_109 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_110 $then  $place [bb_22_bb_21] $else $place [bb_22_x264_clip_pixelx_xexit5x_xusx_xi] $endif 
    //begin: basic-block bbx_xnphx_xusx_xi13
    $merge bb_19_bbx_xnphx_xusx_xi13 bbx_xnphx_xusx_xi13x_xpreheader_bbx_xnphx_xusx_xi13
    $phi y1x_x03x_xusx_xi :=  ( $cast ($uint<32>) iNsTr_152) $on bb_19_bbx_xnphx_xusx_xi13 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xusx_xi13x_xpreheader_bbx_xnphx_xusx_xi13 
    $endmerge
    tmp4 := (i_dst_stride * y1x_x03x_xusx_xi)
    $place [bbx_xnphx_xusx_xi13_bb_22]
    //begin: basic-block mc_weightx_xexitx_xloopexit
    $merge bb_19_mc_weightx_xexitx_xloopexit
    $endmerge
    $place [mc_weightx_xexitx_xloopexit_mc_weightx_xexit]
    //begin: basic-block mc_weightx_xexitx_xloopexit9
    $merge bb_14_mc_weightx_xexitx_xloopexit9
    $endmerge
    $place [mc_weightx_xexitx_xloopexit9_mc_weightx_xexit]
    //begin: basic-block mc_weightx_xexitx_xloopexit39
    $merge bb_42_mc_weightx_xexitx_xloopexit39
    $endmerge
    $place [mc_weightx_xexitx_xloopexit39_mc_weightx_xexit]
    //begin: basic-block mc_weightx_xexitx_xloopexit52
    $merge bb_37_mc_weightx_xexitx_xloopexit52
    $endmerge
    $place [mc_weightx_xexitx_xloopexit52_mc_weightx_xexit]
    //begin: basic-block mc_weightx_xexitx_xloopexit59
    $merge bbx_xnphx_xi_mc_weightx_xexitx_xloopexit59
    $endmerge
    $place [mc_weightx_xexitx_xloopexit59_mc_weightx_xexit]
    //begin: basic-block mc_weightx_xexit
    $merge bb_47_mc_weightx_xexit bbx_xnph16x_xi_mc_weightx_xexit bbx_xnph16x_xi17_mc_weightx_xexit mc_weightx_xexitx_xloopexit_mc_weightx_xexit mc_weightx_xexitx_xloopexit39_mc_weightx_xexit mc_weightx_xexitx_xloopexit52_mc_weightx_xexit mc_weightx_xexitx_xloopexit59_mc_weightx_xexit mc_weightx_xexitx_xloopexit9_mc_weightx_xexit pixel_avgx_xexit_mc_weightx_xexit xx_xpreheader11x_xi_mc_weightx_xexit xx_xpreheader11x_xi14_mc_weightx_xexit xx_xpreheader2x_xi_mc_weightx_xexit xx_xpreheader2x_xi16_mc_weightx_xexit
    $endmerge
    $place [return__]
    //begin: basic-block bb_30
    $merge bb_0_bb_30
    $endmerge
    iNsTr_17 := weight[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) ]
    // load 
    iNsTr_18 := ->(iNsTr_17) 
    // compare instruction
    iNsTr_19 := (iNsTr_18 == ( $bitcast ($pointer< $pointer< $pointer < $void >  > > ) _b1111111111111111111111111111111111111111111111111111111111111111 )  )
    $if iNsTr_19 $then  $place [bb_30_bb_47] $else $place [bb_30_bb_31] $endif 
    //begin: basic-block bb_31
    $merge bb_30_bb_31
    $endmerge
    weightx_xidx := weight[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    weightx_xidxx_xval := ->(weightx_xidx) 
    weightx_xidx2 := weight[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    weightx_xidx2x_xval := ->(weightx_xidx2) 
    weightx_xidx3 := weight[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ]
    // load 
    weightx_xidx3x_xval := ->(weightx_xidx3) 
    // compare instruction
    iNsTr_31 := ( ($bitcast ( $int<32>) weightx_xidxx_xval) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    // compare instruction
    iNsTr_32 := ( ($bitcast ( $int<32>) i_height) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    $if iNsTr_31 $then  $place [bb_31_xx_xpreheader11x_xi14] $else $place [bb_31_xx_xpreheader2x_xi16] $endif 
    //begin: basic-block xx_xpreheader11x_xi14
    $merge bb_31_xx_xpreheader11x_xi14
    $endmerge
    $if iNsTr_32 $then  $place [xx_xpreheader11x_xi14_bbx_xnph16x_xi17] $else $place [xx_xpreheader11x_xi14_mc_weightx_xexit] $endif 
    //begin: basic-block xx_xpreheader2x_xi16
    $merge bb_31_xx_xpreheader2x_xi16
    $endmerge
    // compare instruction
    iNsTr_43 := ( ($bitcast ( $int<32>) i_width) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    orx_xcondx_xi15 := (iNsTr_32 & iNsTr_43)
    $if orx_xcondx_xi15 $then  $place [xx_xpreheader2x_xi16_bbx_xnphx_xusx_xi41x_xpreheader] $else $place [xx_xpreheader2x_xi16_mc_weightx_xexit] $endif 
    //begin: basic-block bbx_xnphx_xusx_xi41x_xpreheader
    $merge xx_xpreheader2x_xi16_bbx_xnphx_xusx_xi41x_xpreheader
    $endmerge
    tmp89 := (iNsTr_13 + iNsTr_5)
    tmp90 := (iNsTr_4 * i_src_stride)
    tmp91 := (tmp89 + tmp90)
    $place [bbx_xnphx_xusx_xi41x_xpreheader_bbx_xnphx_xusx_xi41]
    //begin: basic-block bbx_xnph16x_xi17
    $merge xx_xpreheader11x_xi14_bbx_xnph16x_xi17
    $endmerge
    // compare instruction
    iNsTr_51 := ( ($bitcast ( $int<32>) i_width) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    iNsTr_52 := (weightx_xidxx_xval + ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) )
    iNsTr_53 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  << iNsTr_52)
    $if iNsTr_51 $then  $place [bbx_xnph16x_xi17_bbx_xnph9x_xusx_xi29x_xpreheader] $else $place [bbx_xnph16x_xi17_mc_weightx_xexit] $endif 
    //begin: basic-block bbx_xnph9x_xusx_xi29x_xpreheader
    $merge bbx_xnph16x_xi17_bbx_xnph9x_xusx_xi29x_xpreheader
    $endmerge
    tmp104 := (iNsTr_13 + iNsTr_5)
    tmp105 := (iNsTr_4 * i_src_stride)
    tmp106 := (tmp104 + tmp105)
    $place [bbx_xnph9x_xusx_xi29x_xpreheader_bbx_xnph9x_xusx_xi29]
    //begin: basic-block bb_37
    $merge x264_clip_pixelx_xexitx_xusx_xi20_bb_37
    $endmerge
    iNsTr_140 := (yx_x013x_xusx_xi26 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond53 := (iNsTr_140 == i_height )
    $if exitcond53 $then  $place [bb_37_mc_weightx_xexitx_xloopexit52] $else $place [bb_37_bbx_xnph9x_xusx_xi29] $endif 
    //begin: basic-block x264_clip_pixelx_xexitx_xusx_xi20
    $merge bb_39_x264_clip_pixelx_xexitx_xusx_xi20 bb_40_x264_clip_pixelx_xexitx_xusx_xi20
    $phi iNsTr_116 :=  ( $cast ($uint<32>) iNsTr_114) $on bb_39_x264_clip_pixelx_xexitx_xusx_xi20 ( $cast ($uint<32>) iNsTr_93) $on bb_40_x264_clip_pixelx_xexitx_xusx_xi20 
    $endmerge
    iNsTr_117 := ($cast ($uint<8>) iNsTr_116)
    ->(scevgep20x_xi23) := iNsTr_117
    iNsTr_119 := (xx_x08x_xusx_xi21 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond46 := (iNsTr_119 == i_width )
    $if exitcond46 $then  $place [x264_clip_pixelx_xexitx_xusx_xi20_bb_37] $else $place [x264_clip_pixelx_xexitx_xusx_xi20_bb_40] $endif 
    //begin: basic-block bb_39
    $merge bb_40_bb_39
    $endmerge
    iNsTr_112 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_93)
    iNsTr_113 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_112) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_114 := (iNsTr_113 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_39_x264_clip_pixelx_xexitx_xusx_xi20]
    //begin: basic-block bb_40
    $merge bbx_xnph9x_xusx_xi29_bb_40 x264_clip_pixelx_xexitx_xusx_xi20_bb_40
    $phi xx_x08x_xusx_xi21 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph9x_xusx_xi29_bb_40 ( $cast ($uint<32>) iNsTr_119) $on x264_clip_pixelx_xexitx_xusx_xi20_bb_40 
    $endmerge
    tmp55 := (tmp54 + xx_x08x_xusx_xi21)
    scevgep20x_xi23 := dst[tmp55]
    tmp58 := (tmp57 + xx_x08x_xusx_xi21)
    scevgepx_xi25 := iNsTr_10[tmp58]
    // load 
    iNsTr_88 := ->(scevgepx_xi25) 
    iNsTr_89 := ($cast ($uint<32>) iNsTr_88)
    iNsTr_90 := (iNsTr_89 * weightx_xidx2x_xval)
    iNsTr_91 := (iNsTr_90 + iNsTr_53)
    iNsTr_92 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_91) >>  ($bitcast ( $int<32>) weightx_xidxx_xval )))
    iNsTr_93 := (iNsTr_92 + weightx_xidx3x_xval)
    // compare instruction
    iNsTr_94 := (iNsTr_93 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_94 $then  $place [bb_40_bb_39] $else $place [bb_40_x264_clip_pixelx_xexitx_xusx_xi20] $endif 
    //begin: basic-block bbx_xnph9x_xusx_xi29
    $merge bb_37_bbx_xnph9x_xusx_xi29 bbx_xnph9x_xusx_xi29x_xpreheader_bbx_xnph9x_xusx_xi29
    $phi yx_x013x_xusx_xi26 :=  ( $cast ($uint<32>) iNsTr_140) $on bb_37_bbx_xnph9x_xusx_xi29 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph9x_xusx_xi29x_xpreheader_bbx_xnph9x_xusx_xi29 
    $endmerge
    tmp54 := (i_dst_stride * yx_x013x_xusx_xi26)
    tmp56 := (i_src_stride * yx_x013x_xusx_xi26)
    tmp57 := (tmp106 + tmp56)
    $place [bbx_xnph9x_xusx_xi29_bb_40]
    //begin: basic-block bb_42
    $merge x264_clip_pixelx_xexit5x_xusx_xi32_bb_42
    $endmerge
    iNsTr_121 := (y1x_x03x_xusx_xi38 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond40 := (iNsTr_121 == i_height )
    $if exitcond40 $then  $place [bb_42_mc_weightx_xexitx_xloopexit39] $else $place [bb_42_bbx_xnphx_xusx_xi41] $endif 
    //begin: basic-block x264_clip_pixelx_xexit5x_xusx_xi32
    $merge bb_44_x264_clip_pixelx_xexit5x_xusx_xi32 bb_45_x264_clip_pixelx_xexit5x_xusx_xi32
    $phi iNsTr_100 :=  ( $cast ($uint<32>) iNsTr_98) $on bb_44_x264_clip_pixelx_xexit5x_xusx_xi32 ( $cast ($uint<32>) iNsTr_82) $on bb_45_x264_clip_pixelx_xexit5x_xusx_xi32 
    $endmerge
    iNsTr_101 := ($cast ($uint<8>) iNsTr_100)
    ->(scevgep33x_xi35) := iNsTr_101
    iNsTr_103 := (x2x_x01x_xusx_xi33 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond33 := (iNsTr_103 == i_width )
    $if exitcond33 $then  $place [x264_clip_pixelx_xexit5x_xusx_xi32_bb_42] $else $place [x264_clip_pixelx_xexit5x_xusx_xi32_bb_45] $endif 
    //begin: basic-block bb_44
    $merge bb_45_bb_44
    $endmerge
    iNsTr_96 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_82)
    iNsTr_97 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_96) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_98 := (iNsTr_97 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_44_x264_clip_pixelx_xexit5x_xusx_xi32]
    //begin: basic-block bb_45
    $merge bbx_xnphx_xusx_xi41_bb_45 x264_clip_pixelx_xexit5x_xusx_xi32_bb_45
    $phi x2x_x01x_xusx_xi33 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xusx_xi41_bb_45 ( $cast ($uint<32>) iNsTr_103) $on x264_clip_pixelx_xexit5x_xusx_xi32_bb_45 
    $endmerge
    tmp42 := (tmp41 + x2x_x01x_xusx_xi33)
    scevgep33x_xi35 := dst[tmp42]
    tmp45 := (tmp44 + x2x_x01x_xusx_xi33)
    scevgep30x_xi37 := iNsTr_10[tmp45]
    // load 
    iNsTr_79 := ->(scevgep30x_xi37) 
    iNsTr_80 := ($cast ($uint<32>) iNsTr_79)
    iNsTr_81 := (iNsTr_80 * weightx_xidx2x_xval)
    iNsTr_82 := (iNsTr_81 + weightx_xidx3x_xval)
    // compare instruction
    iNsTr_83 := (iNsTr_82 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_83 $then  $place [bb_45_bb_44] $else $place [bb_45_x264_clip_pixelx_xexit5x_xusx_xi32] $endif 
    //begin: basic-block bbx_xnphx_xusx_xi41
    $merge bb_42_bbx_xnphx_xusx_xi41 bbx_xnphx_xusx_xi41x_xpreheader_bbx_xnphx_xusx_xi41
    $phi y1x_x03x_xusx_xi38 :=  ( $cast ($uint<32>) iNsTr_121) $on bb_42_bbx_xnphx_xusx_xi41 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xusx_xi41x_xpreheader_bbx_xnphx_xusx_xi41 
    $endmerge
    tmp41 := (i_dst_stride * y1x_x03x_xusx_xi38)
    tmp43 := (i_src_stride * y1x_x03x_xusx_xi38)
    tmp44 := (tmp91 + tmp43)
    $place [bbx_xnphx_xusx_xi41_bb_45]
    //begin: basic-block bb_47
    $merge bb_30_bb_47
    $endmerge
    // compare instruction
    iNsTr_29 := ( ($bitcast ( $int<32>) i_height) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    $if iNsTr_29 $then  $place [bb_47_bbx_xnphx_xix_xpreheader] $else $place [bb_47_mc_weightx_xexit] $endif 
    //begin: basic-block bbx_xnphx_xix_xpreheader
    $merge bb_47_bbx_xnphx_xix_xpreheader
    $endmerge
    tmp120 := (iNsTr_13 + iNsTr_5)
    tmp121 := (iNsTr_4 * i_src_stride)
    tmp122 := (tmp120 + tmp121)
    $place [bbx_xnphx_xix_xpreheader_bbx_xnphx_xi]
    //begin: basic-block bbx_xnphx_xi
    $merge bbx_xnphx_xi_bbx_xnphx_xi bbx_xnphx_xix_xpreheader_bbx_xnphx_xi
    $phi yx_x03x_xi :=  ( $cast ($uint<32>) iNsTr_49) $on bbx_xnphx_xi_bbx_xnphx_xi ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xix_xpreheader_bbx_xnphx_xi 
    $endmerge
    tmp61 := (i_src_stride * yx_x03x_xi)
    tmp62 := (tmp122 + tmp61)
    xx_x04x_xi := iNsTr_10[tmp62]
    tmp63 := (i_dst_stride * yx_x03x_xi)
    xx_x012x_xi := dst[tmp63]
    $call llvm_memcpy_u8 ( xx_x012x_xi xx_x04x_xi ($bitcast ($uint<32>) i_width)) () 
    iNsTr_49 := (yx_x03x_xi + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond60 := (iNsTr_49 == i_height )
    $if exitcond60 $then  $place [bbx_xnphx_xi_mc_weightx_xexitx_xloopexit59] $else $place [bbx_xnphx_xi_bbx_xnphx_xi] $endif 
    $merge return__ $endmerge
  }
}
$module [get_ref] 
$in (dst : $pointer< $uint<8> > i_dst_stride : $pointer< $uint<32> > src : $pointer< $pointer< $uint<8> > > i_src_stride : $uint<32> mvx : $uint<32> mvy : $uint<32> i_width : $uint<32> i_height : $uint<32> weight : $pointer< structx_xx264_weight_t > )
$out (ret_val__ : $pointer< $uint<8> >)
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    iNsTr_0 := (mvy << ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_1 := (iNsTr_0 & ( $bitcast ($uint<32> ) _b00000000000000000000000000001100 ) )
    iNsTr_2 := (mvx & ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    iNsTr_3 := (iNsTr_1 | iNsTr_2)
    iNsTr_4 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) mvy) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )))
    iNsTr_5 := (iNsTr_4 * i_src_stride)
    iNsTr_6 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) mvx) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )))
    iNsTr_7 := (iNsTr_5 + iNsTr_6)
    iNsTr_8 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_hpel_ref0[iNsTr_3])
    // load 
    iNsTr_9 := ->(iNsTr_8) 
    iNsTr_10 := ($cast ($uint<32>) iNsTr_9)
    iNsTr_11 := src[iNsTr_10]
    // load 
    iNsTr_12 := ->(iNsTr_11) 
    iNsTr_13 := (mvy & ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    // compare instruction
    iNsTr_14 := (iNsTr_13 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 )  )
    tmp :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_14) )
    iNsTr_15 := (tmp & i_src_stride)
    xx_xsum := (iNsTr_15 + iNsTr_7)
    iNsTr_16 := iNsTr_12[xx_xsum]
    iNsTr_17 := (iNsTr_3 & ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) )
    // compare instruction
    iNsTr_18 := (iNsTr_17 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if iNsTr_18 $then  $place [bb_0_bb_29] $else $place [bb_0_bb_1] $endif 
    //begin: basic-block bb_1
    $merge bb_0_bb_1
    $endmerge
    iNsTr_24 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_hpel_ref1[iNsTr_3])
    // load 
    iNsTr_25 := ->(iNsTr_24) 
    iNsTr_26 := ($cast ($uint<32>) iNsTr_25)
    iNsTr_27 := src[iNsTr_26]
    // load 
    iNsTr_28 := ->(iNsTr_27) 
    // load 
    iNsTr_29 := ->(i_dst_stride) 
    // compare instruction
    iNsTr_30 := ( ($bitcast ( $int<32>) i_height) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    // compare instruction
    iNsTr_31 := ( ($bitcast ( $int<32>) i_width) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    orx_xcondx_xi := (iNsTr_30 & iNsTr_31)
    $if orx_xcondx_xi $then  $place [bb_1_bbx_xnphx_xusx_xix_xpreheader] $else $place [bb_1_pixel_avgx_xexit] $endif 
    //begin: basic-block bbx_xnphx_xusx_xix_xpreheader
    $merge bb_1_bbx_xnphx_xusx_xix_xpreheader
    $endmerge
    // compare instruction
    iNsTr_39 := (iNsTr_2 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 )  )
    tmp17 := (iNsTr_4 * i_src_stride)
    tmp18 := (iNsTr_6 + tmp17)
    tmp23 := (iNsTr_15 + iNsTr_6)
    tmp24 := (tmp23 + tmp17)
    tmp31 := ($cast ($uint<32>) iNsTr_39)
    tmp32 := (tmp18 + tmp31)
    $place [bbx_xnphx_xusx_xix_xpreheader_bbx_xnphx_xusx_xi]
    //begin: basic-block bb_3
    $merge bb_4_bb_3
    $endmerge
    iNsTr_74 := (yx_x05x_xusx_xi + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond27 := (iNsTr_74 == i_height )
    $if exitcond27 $then  $place [bb_3_pixel_avgx_xexitx_xloopexit] $else $place [bb_3_bbx_xnphx_xusx_xi] $endif 
    //begin: basic-block bb_4
    $merge bb_4_bb_4 bbx_xnphx_xusx_xi_bb_4
    $phi xx_x03x_xusx_xi :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xusx_xi_bb_4 ( $cast ($uint<32>) iNsTr_68) $on bb_4_bb_4 
    $endmerge
    tmp30 := (tmp29 + xx_x03x_xusx_xi)
    scevgep16x_xi := iNsTr_12[tmp30]
    tmp34 := (tmp33 + xx_x03x_xusx_xi)
    scevgep13x_xi := iNsTr_28[tmp34]
    tmp36 := (tmp35 + xx_x03x_xusx_xi)
    scevgepx_xi := dst[tmp36]
    // load 
    iNsTr_59 := ->(scevgep16x_xi) 
    iNsTr_60 := ($cast ($uint<32>) iNsTr_59)
    // load 
    iNsTr_61 := ->(scevgep13x_xi) 
    iNsTr_62 := ($cast ($uint<32>) iNsTr_61)
    iNsTr_63 := (iNsTr_60 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_64 := (iNsTr_63 + iNsTr_62)
    iNsTr_65 := (iNsTr_64 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_66 := ($cast ($uint<8>) iNsTr_65)
    ->(scevgepx_xi) := iNsTr_66
    iNsTr_68 := (xx_x03x_xusx_xi + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond13 := (iNsTr_68 == i_width )
    $if exitcond13 $then  $place [bb_4_bb_3] $else $place [bb_4_bb_4] $endif 
    //begin: basic-block bbx_xnphx_xusx_xi
    $merge bb_3_bbx_xnphx_xusx_xi bbx_xnphx_xusx_xix_xpreheader_bbx_xnphx_xusx_xi
    $phi yx_x05x_xusx_xi :=  ( $cast ($uint<32>) iNsTr_74) $on bb_3_bbx_xnphx_xusx_xi ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xusx_xix_xpreheader_bbx_xnphx_xusx_xi 
    $endmerge
    tmp28 := (i_src_stride * yx_x05x_xusx_xi)
    tmp29 := (tmp24 + tmp28)
    tmp33 := (tmp32 + tmp28)
    tmp35 := (iNsTr_29 * yx_x05x_xusx_xi)
    $place [bbx_xnphx_xusx_xi_bb_4]
    //begin: basic-block pixel_avgx_xexitx_xloopexit
    $merge bb_3_pixel_avgx_xexitx_xloopexit
    $endmerge
    $place [pixel_avgx_xexitx_xloopexit_pixel_avgx_xexit]
    //begin: basic-block pixel_avgx_xexit
    $merge bb_1_pixel_avgx_xexit pixel_avgx_xexitx_xloopexit_pixel_avgx_xexit
    $endmerge
    iNsTr_41 := weight[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) ]
    // load 
    iNsTr_42 := ->(iNsTr_41) 
    // compare instruction
    iNsTr_43 := (iNsTr_42 == ( $bitcast ($pointer< $pointer< $pointer < $void >  > > ) _b1111111111111111111111111111111111111111111111111111111111111111 )  )
    $if iNsTr_43 $then  $place [pixel_avgx_xexit_mc_weightx_xexit41] $else $place [pixel_avgx_xexit_bb_8] $endif 
    //begin: basic-block bb_8
    $merge pixel_avgx_xexit_bb_8
    $endmerge
    // load 
    iNsTr_51 := ->(i_dst_stride) 
    weightx_xidx4 := weight[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    weightx_xidx4x_xval := ->(weightx_xidx4) 
    weightx_xidx5 := weight[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    weightx_xidx5x_xval := ->(weightx_xidx5) 
    weightx_xidx6 := weight[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ]
    // load 
    weightx_xidx6x_xval := ->(weightx_xidx6) 
    // compare instruction
    iNsTr_52 := ( ($bitcast ( $int<32>) weightx_xidx4x_xval) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    $if iNsTr_52 $then  $place [bb_8_xx_xpreheader11x_xi13] $else $place [bb_8_xx_xpreheader2x_xi15] $endif 
    //begin: basic-block xx_xpreheader11x_xi13
    $merge bb_8_xx_xpreheader11x_xi13
    $endmerge
    $if iNsTr_30 $then  $place [xx_xpreheader11x_xi13_bbx_xnph16x_xi16] $else $place [xx_xpreheader11x_xi13_mc_weightx_xexit41] $endif 
    //begin: basic-block xx_xpreheader2x_xi15
    $merge bb_8_xx_xpreheader2x_xi15
    $endmerge
    $if orx_xcondx_xi $then  $place [xx_xpreheader2x_xi15_bbx_xnphx_xusx_xi40x_xpreheader] $else $place [xx_xpreheader2x_xi15_mc_weightx_xexit41] $endif 
    //begin: basic-block bbx_xnphx_xusx_xi40x_xpreheader
    $merge xx_xpreheader2x_xi15_bbx_xnphx_xusx_xi40x_xpreheader
    $endmerge
    $place [bbx_xnphx_xusx_xi40x_xpreheader_bbx_xnphx_xusx_xi40]
    //begin: basic-block bbx_xnph16x_xi16
    $merge xx_xpreheader11x_xi13_bbx_xnph16x_xi16
    $endmerge
    iNsTr_76 := (weightx_xidx4x_xval + ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) )
    iNsTr_77 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  << iNsTr_76)
    $if iNsTr_31 $then  $place [bbx_xnph16x_xi16_bbx_xnph9x_xusx_xi28x_xpreheader] $else $place [bbx_xnph16x_xi16_mc_weightx_xexit41] $endif 
    //begin: basic-block bbx_xnph9x_xusx_xi28x_xpreheader
    $merge bbx_xnph16x_xi16_bbx_xnph9x_xusx_xi28x_xpreheader
    $endmerge
    $place [bbx_xnph9x_xusx_xi28x_xpreheader_bbx_xnph9x_xusx_xi28]
    //begin: basic-block bb_14
    $merge x264_clip_pixelx_xexitx_xusx_xi19_bb_14
    $endmerge
    iNsTr_157 := (yx_x013x_xusx_xi25 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond10 := (iNsTr_157 == i_height )
    $if exitcond10 $then  $place [bb_14_mc_weightx_xexit41x_xloopexit9] $else $place [bb_14_bbx_xnph9x_xusx_xi28] $endif 
    //begin: basic-block x264_clip_pixelx_xexitx_xusx_xi19
    $merge bb_16_x264_clip_pixelx_xexitx_xusx_xi19 bb_17_x264_clip_pixelx_xexitx_xusx_xi19
    $phi iNsTr_149 :=  ( $cast ($uint<32>) iNsTr_147) $on bb_16_x264_clip_pixelx_xexitx_xusx_xi19 ( $cast ($uint<32>) iNsTr_130) $on bb_17_x264_clip_pixelx_xexitx_xusx_xi19 
    $endmerge
    iNsTr_150 := ($cast ($uint<8>) iNsTr_149)
    ->(scevgep20x_xi22) := iNsTr_150
    iNsTr_152 := (xx_x08x_xusx_xi20 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond6 := (iNsTr_152 == i_width )
    $if exitcond6 $then  $place [x264_clip_pixelx_xexitx_xusx_xi19_bb_14] $else $place [x264_clip_pixelx_xexitx_xusx_xi19_bb_17] $endif 
    //begin: basic-block bb_16
    $merge bb_17_bb_16
    $endmerge
    iNsTr_145 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_130)
    iNsTr_146 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_145) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_147 := (iNsTr_146 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_16_x264_clip_pixelx_xexitx_xusx_xi19]
    //begin: basic-block bb_17
    $merge bbx_xnph9x_xusx_xi28_bb_17 x264_clip_pixelx_xexitx_xusx_xi19_bb_17
    $phi xx_x08x_xusx_xi20 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph9x_xusx_xi28_bb_17 ( $cast ($uint<32>) iNsTr_152) $on x264_clip_pixelx_xexitx_xusx_xi19_bb_17 
    $endmerge
    tmp12 := (tmp11 + xx_x08x_xusx_xi20)
    scevgep20x_xi22 := dst[tmp12]
    // load 
    iNsTr_125 := ->(scevgep20x_xi22) 
    iNsTr_126 := ($cast ($uint<32>) iNsTr_125)
    iNsTr_127 := (iNsTr_126 * weightx_xidx5x_xval)
    iNsTr_128 := (iNsTr_127 + iNsTr_77)
    iNsTr_129 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_128) >>  ($bitcast ( $int<32>) weightx_xidx4x_xval )))
    iNsTr_130 := (iNsTr_129 + weightx_xidx6x_xval)
    // compare instruction
    iNsTr_131 := (iNsTr_130 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_131 $then  $place [bb_17_bb_16] $else $place [bb_17_x264_clip_pixelx_xexitx_xusx_xi19] $endif 
    //begin: basic-block bbx_xnph9x_xusx_xi28
    $merge bb_14_bbx_xnph9x_xusx_xi28 bbx_xnph9x_xusx_xi28x_xpreheader_bbx_xnph9x_xusx_xi28
    $phi yx_x013x_xusx_xi25 :=  ( $cast ($uint<32>) iNsTr_157) $on bb_14_bbx_xnph9x_xusx_xi28 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph9x_xusx_xi28x_xpreheader_bbx_xnph9x_xusx_xi28 
    $endmerge
    tmp11 := (iNsTr_51 * yx_x013x_xusx_xi25)
    $place [bbx_xnph9x_xusx_xi28_bb_17]
    //begin: basic-block bb_19
    $merge x264_clip_pixelx_xexit5x_xusx_xi31_bb_19
    $endmerge
    iNsTr_154 := (y1x_x03x_xusx_xi37 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond := (iNsTr_154 == i_height )
    $if exitcond $then  $place [bb_19_mc_weightx_xexit41x_xloopexit] $else $place [bb_19_bbx_xnphx_xusx_xi40] $endif 
    //begin: basic-block x264_clip_pixelx_xexit5x_xusx_xi31
    $merge bb_21_x264_clip_pixelx_xexit5x_xusx_xi31 bb_22_x264_clip_pixelx_xexit5x_xusx_xi31
    $phi iNsTr_137 :=  ( $cast ($uint<32>) iNsTr_135) $on bb_21_x264_clip_pixelx_xexit5x_xusx_xi31 ( $cast ($uint<32>) iNsTr_111) $on bb_22_x264_clip_pixelx_xexit5x_xusx_xi31 
    $endmerge
    iNsTr_138 := ($cast ($uint<8>) iNsTr_137)
    ->(scevgep33x_xi34) := iNsTr_138
    iNsTr_140 := (x2x_x01x_xusx_xi32 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (iNsTr_140 == i_width )
    $if exitcond1 $then  $place [x264_clip_pixelx_xexit5x_xusx_xi31_bb_19] $else $place [x264_clip_pixelx_xexit5x_xusx_xi31_bb_22] $endif 
    //begin: basic-block bb_21
    $merge bb_22_bb_21
    $endmerge
    iNsTr_133 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_111)
    iNsTr_134 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_133) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_135 := (iNsTr_134 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_21_x264_clip_pixelx_xexit5x_xusx_xi31]
    //begin: basic-block bb_22
    $merge bbx_xnphx_xusx_xi40_bb_22 x264_clip_pixelx_xexit5x_xusx_xi31_bb_22
    $phi x2x_x01x_xusx_xi32 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xusx_xi40_bb_22 ( $cast ($uint<32>) iNsTr_140) $on x264_clip_pixelx_xexit5x_xusx_xi31_bb_22 
    $endmerge
    tmp5 := (tmp4 + x2x_x01x_xusx_xi32)
    scevgep33x_xi34 := dst[tmp5]
    // load 
    iNsTr_108 := ->(scevgep33x_xi34) 
    iNsTr_109 := ($cast ($uint<32>) iNsTr_108)
    iNsTr_110 := (iNsTr_109 * weightx_xidx5x_xval)
    iNsTr_111 := (iNsTr_110 + weightx_xidx6x_xval)
    // compare instruction
    iNsTr_112 := (iNsTr_111 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_112 $then  $place [bb_22_bb_21] $else $place [bb_22_x264_clip_pixelx_xexit5x_xusx_xi31] $endif 
    //begin: basic-block bbx_xnphx_xusx_xi40
    $merge bb_19_bbx_xnphx_xusx_xi40 bbx_xnphx_xusx_xi40x_xpreheader_bbx_xnphx_xusx_xi40
    $phi y1x_x03x_xusx_xi37 :=  ( $cast ($uint<32>) iNsTr_154) $on bb_19_bbx_xnphx_xusx_xi40 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xusx_xi40x_xpreheader_bbx_xnphx_xusx_xi40 
    $endmerge
    tmp4 := (iNsTr_51 * y1x_x03x_xusx_xi37)
    $place [bbx_xnphx_xusx_xi40_bb_22]
    //begin: basic-block mc_weightx_xexit41x_xloopexit
    $merge bb_19_mc_weightx_xexit41x_xloopexit
    $endmerge
    $place [mc_weightx_xexit41x_xloopexit_mc_weightx_xexit41]
    //begin: basic-block mc_weightx_xexit41x_xloopexit9
    $merge bb_14_mc_weightx_xexit41x_xloopexit9
    $endmerge
    $place [mc_weightx_xexit41x_xloopexit9_mc_weightx_xexit41]
    //begin: basic-block mc_weightx_xexit41x_xloopexit45
    $merge bb_41_mc_weightx_xexit41x_xloopexit45
    $endmerge
    $place [mc_weightx_xexit41x_xloopexit45_mc_weightx_xexit41]
    //begin: basic-block mc_weightx_xexit41x_xloopexit60
    $merge bb_36_mc_weightx_xexit41x_xloopexit60
    $endmerge
    $place [mc_weightx_xexit41x_xloopexit60_mc_weightx_xexit41]
    //begin: basic-block mc_weightx_xexit41
    $merge bbx_xnph16x_xi_mc_weightx_xexit41 bbx_xnph16x_xi16_mc_weightx_xexit41 mc_weightx_xexit41x_xloopexit_mc_weightx_xexit41 mc_weightx_xexit41x_xloopexit45_mc_weightx_xexit41 mc_weightx_xexit41x_xloopexit60_mc_weightx_xexit41 mc_weightx_xexit41x_xloopexit9_mc_weightx_xexit41 pixel_avgx_xexit_mc_weightx_xexit41 xx_xpreheader11x_xi_mc_weightx_xexit41 xx_xpreheader11x_xi13_mc_weightx_xexit41 xx_xpreheader2x_xi_mc_weightx_xexit41 xx_xpreheader2x_xi15_mc_weightx_xexit41
    $endmerge
    $place [mc_weightx_xexit41_UnifiedReturnBlock]
    //begin: basic-block bb_29
    $merge bb_0_bb_29
    $endmerge
    iNsTr_20 := weight[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) ]
    // load 
    iNsTr_21 := ->(iNsTr_20) 
    // compare instruction
    iNsTr_22 := (iNsTr_21 == ( $bitcast ($pointer< $pointer< $pointer < $void >  > > ) _b1111111111111111111111111111111111111111111111111111111111111111 )  )
    $if iNsTr_22 $then  $place [bb_29_bb_46] $else $place [bb_29_bb_30] $endif 
    //begin: basic-block bb_30
    $merge bb_29_bb_30
    $endmerge
    // load 
    iNsTr_35 := ->(i_dst_stride) 
    weightx_xidx := weight[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    weightx_xidxx_xval := ->(weightx_xidx) 
    weightx_xidx2 := weight[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    weightx_xidx2x_xval := ->(weightx_xidx2) 
    weightx_xidx3 := weight[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ]
    // load 
    weightx_xidx3x_xval := ->(weightx_xidx3) 
    // compare instruction
    iNsTr_36 := ( ($bitcast ( $int<32>) weightx_xidxx_xval) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    // compare instruction
    iNsTr_37 := ( ($bitcast ( $int<32>) i_height) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    $if iNsTr_36 $then  $place [bb_30_xx_xpreheader11x_xi] $else $place [bb_30_xx_xpreheader2x_xi] $endif 
    //begin: basic-block xx_xpreheader11x_xi
    $merge bb_30_xx_xpreheader11x_xi
    $endmerge
    $if iNsTr_37 $then  $place [xx_xpreheader11x_xi_bbx_xnph16x_xi] $else $place [xx_xpreheader11x_xi_mc_weightx_xexit41] $endif 
    //begin: basic-block xx_xpreheader2x_xi
    $merge bb_30_xx_xpreheader2x_xi
    $endmerge
    // compare instruction
    iNsTr_47 := ( ($bitcast ( $int<32>) i_width) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    orx_xcondx_xi7 := (iNsTr_37 & iNsTr_47)
    $if orx_xcondx_xi7 $then  $place [xx_xpreheader2x_xi_bbx_xnphx_xusx_xi12x_xpreheader] $else $place [xx_xpreheader2x_xi_mc_weightx_xexit41] $endif 
    //begin: basic-block bbx_xnphx_xusx_xi12x_xpreheader
    $merge xx_xpreheader2x_xi_bbx_xnphx_xusx_xi12x_xpreheader
    $endmerge
    tmp86 := (iNsTr_15 + iNsTr_6)
    tmp39 := (iNsTr_4 * i_src_stride)
    tmp40 := (tmp86 + tmp39)
    $place [bbx_xnphx_xusx_xi12x_xpreheader_bbx_xnphx_xusx_xi12]
    //begin: basic-block bbx_xnph16x_xi
    $merge xx_xpreheader11x_xi_bbx_xnph16x_xi
    $endmerge
    // compare instruction
    iNsTr_54 := ( ($bitcast ( $int<32>) i_width) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    iNsTr_55 := (weightx_xidxx_xval + ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) )
    iNsTr_56 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  << iNsTr_55)
    $if iNsTr_54 $then  $place [bbx_xnph16x_xi_bbx_xnph9x_xusx_xix_xpreheader] $else $place [bbx_xnph16x_xi_mc_weightx_xexit41] $endif 
    //begin: basic-block bbx_xnph9x_xusx_xix_xpreheader
    $merge bbx_xnph16x_xi_bbx_xnph9x_xusx_xix_xpreheader
    $endmerge
    tmp101 := (iNsTr_15 + iNsTr_6)
    tmp54 := (iNsTr_4 * i_src_stride)
    tmp55 := (tmp101 + tmp54)
    $place [bbx_xnph9x_xusx_xix_xpreheader_bbx_xnph9x_xusx_xi]
    //begin: basic-block bb_36
    $merge x264_clip_pixelx_xexitx_xusx_xi_bb_36
    $endmerge
    iNsTr_142 := (yx_x013x_xusx_xi + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond61 := (iNsTr_142 == i_height )
    $if exitcond61 $then  $place [bb_36_mc_weightx_xexit41x_xloopexit60] $else $place [bb_36_bbx_xnph9x_xusx_xi] $endif 
    //begin: basic-block x264_clip_pixelx_xexitx_xusx_xi
    $merge bb_38_x264_clip_pixelx_xexitx_xusx_xi bb_39_x264_clip_pixelx_xexitx_xusx_xi
    $phi iNsTr_118 :=  ( $cast ($uint<32>) iNsTr_116) $on bb_38_x264_clip_pixelx_xexitx_xusx_xi ( $cast ($uint<32>) iNsTr_95) $on bb_39_x264_clip_pixelx_xexitx_xusx_xi 
    $endmerge
    iNsTr_119 := ($cast ($uint<8>) iNsTr_118)
    ->(scevgep20x_xi) := iNsTr_119
    iNsTr_121 := (xx_x08x_xusx_xi + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond52 := (iNsTr_121 == i_width )
    $if exitcond52 $then  $place [x264_clip_pixelx_xexitx_xusx_xi_bb_36] $else $place [x264_clip_pixelx_xexitx_xusx_xi_bb_39] $endif 
    //begin: basic-block bb_38
    $merge bb_39_bb_38
    $endmerge
    iNsTr_114 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_95)
    iNsTr_115 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_114) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_116 := (iNsTr_115 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_38_x264_clip_pixelx_xexitx_xusx_xi]
    //begin: basic-block bb_39
    $merge bbx_xnph9x_xusx_xi_bb_39 x264_clip_pixelx_xexitx_xusx_xi_bb_39
    $phi xx_x08x_xusx_xi :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph9x_xusx_xi_bb_39 ( $cast ($uint<32>) iNsTr_121) $on x264_clip_pixelx_xexitx_xusx_xi_bb_39 
    $endmerge
    tmp63 := (tmp62 + xx_x08x_xusx_xi)
    scevgep20x_xi := dst[tmp63]
    tmp66 := (tmp65 + xx_x08x_xusx_xi)
    scevgepx_xi9 := iNsTr_12[tmp66]
    // load 
    iNsTr_90 := ->(scevgepx_xi9) 
    iNsTr_91 := ($cast ($uint<32>) iNsTr_90)
    iNsTr_92 := (iNsTr_91 * weightx_xidx2x_xval)
    iNsTr_93 := (iNsTr_92 + iNsTr_56)
    iNsTr_94 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_93) >>  ($bitcast ( $int<32>) weightx_xidxx_xval )))
    iNsTr_95 := (iNsTr_94 + weightx_xidx3x_xval)
    // compare instruction
    iNsTr_96 := (iNsTr_95 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_96 $then  $place [bb_39_bb_38] $else $place [bb_39_x264_clip_pixelx_xexitx_xusx_xi] $endif 
    //begin: basic-block bbx_xnph9x_xusx_xi
    $merge bb_36_bbx_xnph9x_xusx_xi bbx_xnph9x_xusx_xix_xpreheader_bbx_xnph9x_xusx_xi
    $phi yx_x013x_xusx_xi :=  ( $cast ($uint<32>) iNsTr_142) $on bb_36_bbx_xnph9x_xusx_xi ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph9x_xusx_xix_xpreheader_bbx_xnph9x_xusx_xi 
    $endmerge
    tmp62 := (iNsTr_35 * yx_x013x_xusx_xi)
    tmp64 := (i_src_stride * yx_x013x_xusx_xi)
    tmp65 := (tmp55 + tmp64)
    $place [bbx_xnph9x_xusx_xi_bb_39]
    //begin: basic-block bb_41
    $merge x264_clip_pixelx_xexit5x_xusx_xi_bb_41
    $endmerge
    iNsTr_123 := (y1x_x03x_xusx_xi + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond46 := (iNsTr_123 == i_height )
    $if exitcond46 $then  $place [bb_41_mc_weightx_xexit41x_xloopexit45] $else $place [bb_41_bbx_xnphx_xusx_xi12] $endif 
    //begin: basic-block x264_clip_pixelx_xexit5x_xusx_xi
    $merge bb_43_x264_clip_pixelx_xexit5x_xusx_xi bb_44_x264_clip_pixelx_xexit5x_xusx_xi
    $phi iNsTr_102 :=  ( $cast ($uint<32>) iNsTr_100) $on bb_43_x264_clip_pixelx_xexit5x_xusx_xi ( $cast ($uint<32>) iNsTr_84) $on bb_44_x264_clip_pixelx_xexit5x_xusx_xi 
    $endmerge
    iNsTr_103 := ($cast ($uint<8>) iNsTr_102)
    ->(scevgep33x_xi) := iNsTr_103
    iNsTr_105 := (x2x_x01x_xusx_xi + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond37 := (iNsTr_105 == i_width )
    $if exitcond37 $then  $place [x264_clip_pixelx_xexit5x_xusx_xi_bb_41] $else $place [x264_clip_pixelx_xexit5x_xusx_xi_bb_44] $endif 
    //begin: basic-block bb_43
    $merge bb_44_bb_43
    $endmerge
    iNsTr_98 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_84)
    iNsTr_99 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_98) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_100 := (iNsTr_99 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_43_x264_clip_pixelx_xexit5x_xusx_xi]
    //begin: basic-block bb_44
    $merge bbx_xnphx_xusx_xi12_bb_44 x264_clip_pixelx_xexit5x_xusx_xi_bb_44
    $phi x2x_x01x_xusx_xi :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xusx_xi12_bb_44 ( $cast ($uint<32>) iNsTr_105) $on x264_clip_pixelx_xexit5x_xusx_xi_bb_44 
    $endmerge
    tmp48 := (tmp47 + x2x_x01x_xusx_xi)
    scevgep33x_xi := dst[tmp48]
    tmp51 := (tmp50 + x2x_x01x_xusx_xi)
    scevgep30x_xi := iNsTr_12[tmp51]
    // load 
    iNsTr_81 := ->(scevgep30x_xi) 
    iNsTr_82 := ($cast ($uint<32>) iNsTr_81)
    iNsTr_83 := (iNsTr_82 * weightx_xidx2x_xval)
    iNsTr_84 := (iNsTr_83 + weightx_xidx3x_xval)
    // compare instruction
    iNsTr_85 := (iNsTr_84 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_85 $then  $place [bb_44_bb_43] $else $place [bb_44_x264_clip_pixelx_xexit5x_xusx_xi] $endif 
    //begin: basic-block bbx_xnphx_xusx_xi12
    $merge bb_41_bbx_xnphx_xusx_xi12 bbx_xnphx_xusx_xi12x_xpreheader_bbx_xnphx_xusx_xi12
    $phi y1x_x03x_xusx_xi :=  ( $cast ($uint<32>) iNsTr_123) $on bb_41_bbx_xnphx_xusx_xi12 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xusx_xi12x_xpreheader_bbx_xnphx_xusx_xi12 
    $endmerge
    tmp47 := (iNsTr_35 * y1x_x03x_xusx_xi)
    tmp49 := (i_src_stride * y1x_x03x_xusx_xi)
    tmp50 := (tmp40 + tmp49)
    $place [bbx_xnphx_xusx_xi12_bb_44]
    //begin: basic-block bb_46
    $merge bb_29_bb_46
    $endmerge
    ->(i_dst_stride) := i_src_stride
    $place [bb_46_UnifiedReturnBlock]
    //begin: basic-block UnifiedReturnBlock
    $merge bb_46_UnifiedReturnBlock mc_weightx_xexit41_UnifiedReturnBlock
    $phi ret_val__ :=  ( $cast ($pointer< $uint<8> >) dst) $on mc_weightx_xexit41_UnifiedReturnBlock ( $cast ($pointer< $uint<8> >) iNsTr_16) $on bb_46_UnifiedReturnBlock 
    $endmerge
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [mc_chroma] 
$in (dstu : $pointer< $uint<8> > dstv : $pointer< $uint<8> > i_dst_stride : $uint<32> src : $pointer< $uint<8> > i_src_stride : $uint<32> mvx : $uint<32> mvy : $uint<32> i_width : $uint<32> i_height : $uint<32> )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    iNsTr_0 := (mvx & ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    iNsTr_1 := (mvy & ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    iNsTr_2 := (( $bitcast ($uint<32> ) _b00000000000000000000000000001000 )  - iNsTr_0)
    iNsTr_3 := (( $bitcast ($uint<32> ) _b00000000000000000000000000001000 )  - iNsTr_1)
    iNsTr_4 := (iNsTr_3 * iNsTr_2)
    iNsTr_5 := (iNsTr_3 * iNsTr_0)
    iNsTr_6 := (iNsTr_2 * iNsTr_1)
    iNsTr_7 := (iNsTr_1 * iNsTr_0)
    iNsTr_8 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) mvy) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 )  )))
    iNsTr_9 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) mvx) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )))
    iNsTr_10 := (iNsTr_9 & ( $bitcast ($uint<32> ) _b11111111111111111111111111111110 ) )
    // compare instruction
    iNsTr_11 := ( ($bitcast ( $int<32>) i_height) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    $if iNsTr_11 $then  $place [bb_0_bbx_xnph9] $else $place [bb_0_xx_x_crit_edge10] $endif 
    //begin: basic-block bbx_xnph9
    $merge bb_0_bbx_xnph9
    $endmerge
    // compare instruction
    iNsTr_13 := ( ($bitcast ( $int<32>) i_width) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    tmp51 := (iNsTr_8 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    tmp52 := (i_src_stride * tmp51)
    tmp53 := (iNsTr_10 + tmp52)
    tmp54 := (tmp53 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    tmp58 := (iNsTr_8 * i_src_stride)
    tmp59 := (iNsTr_10 + tmp58)
    tmp60 := (tmp59 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    tmp70 := (tmp59 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    tmp74 := (tmp53 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    tmp78 := (tmp59 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    tmp82 := (iNsTr_10 + tmp52)
    tmp83 := (tmp82 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    $place [bbx_xnph9_xx_xpreheader]
    //begin: basic-block xx_xpreheader
    $merge bbx_xnph9_xx_xpreheader xx_x_crit_edge_xx_xpreheader
    $phi yx_x05 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph9_xx_xpreheader ( $cast ($uint<32>) iNsTr_18) $on xx_x_crit_edge_xx_xpreheader 
    $endmerge
    tmp45 := (i_dst_stride * yx_x05)
    tmp50 := (i_src_stride * yx_x05)
    tmp55 := (tmp54 + tmp50)
    tmp61 := (tmp60 + tmp50)
    tmp64 := (tmp53 + tmp50)
    tmp67 := (tmp59 + tmp50)
    tmp71 := (tmp70 + tmp50)
    tmp75 := (tmp74 + tmp50)
    tmp79 := (tmp78 + tmp50)
    tmp84 := (tmp83 + tmp50)
    $if iNsTr_13 $then  $place [xx_xpreheader_bbx_xnphx_xpreheader] $else $place [xx_xpreheader_xx_x_crit_edge] $endif 
    //begin: basic-block bbx_xnphx_xpreheader
    $merge xx_xpreheader_bbx_xnphx_xpreheader
    $endmerge
    $place [bbx_xnphx_xpreheader_bbx_xnph]
    //begin: basic-block bbx_xnph
    $merge bbx_xnph_bbx_xnph bbx_xnphx_xpreheader_bbx_xnph
    $phi xx_x03 :=  ( $cast ($uint<32>) iNsTr_58) $on bbx_xnph_bbx_xnph ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xpreheader_bbx_xnph 
    $endmerge
    tmp46 := (tmp45 + xx_x03)
    scevgep35 := dstv[tmp46]
    scevgep34 := dstu[tmp46]
    tmp49 := (xx_x03 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    tmp56 := (tmp55 + tmp49)
    scevgep50 := src[tmp56]
    tmp62 := (tmp61 + tmp49)
    scevgep46 := src[tmp62]
    tmp65 := (tmp64 + tmp49)
    scevgep42 := src[tmp65]
    tmp68 := (tmp67 + tmp49)
    scevgep38 := src[tmp68]
    tmp72 := (tmp71 + tmp49)
    scevgep31 := src[tmp72]
    tmp76 := (tmp75 + tmp49)
    scevgep27 := src[tmp76]
    tmp80 := (tmp79 + tmp49)
    scevgep23 := src[tmp80]
    tmp85 := (tmp84 + tmp49)
    scevgep := src[tmp85]
    // load 
    iNsTr_20 := ->(scevgep38) 
    iNsTr_21 := ($cast ($uint<32>) iNsTr_20)
    iNsTr_22 := (iNsTr_21 * iNsTr_4)
    // load 
    iNsTr_23 := ->(scevgep31) 
    iNsTr_24 := ($cast ($uint<32>) iNsTr_23)
    iNsTr_25 := (iNsTr_24 * iNsTr_5)
    // load 
    iNsTr_26 := ->(scevgep42) 
    iNsTr_27 := ($cast ($uint<32>) iNsTr_26)
    iNsTr_28 := (iNsTr_27 * iNsTr_6)
    // load 
    iNsTr_29 := ->(scevgep27) 
    iNsTr_30 := ($cast ($uint<32>) iNsTr_29)
    iNsTr_31 := (iNsTr_30 * iNsTr_7)
    iNsTr_32 := (iNsTr_22 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    iNsTr_33 := (iNsTr_32 + iNsTr_25)
    iNsTr_34 := (iNsTr_33 + iNsTr_28)
    iNsTr_35 := (iNsTr_34 + iNsTr_31)
    iNsTr_36 := (iNsTr_35 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    iNsTr_37 := ($cast ($uint<8>) iNsTr_36)
    ->(scevgep34) := iNsTr_37
    // load 
    iNsTr_39 := ->(scevgep46) 
    iNsTr_40 := ($cast ($uint<32>) iNsTr_39)
    iNsTr_41 := (iNsTr_40 * iNsTr_4)
    // load 
    iNsTr_42 := ->(scevgep23) 
    iNsTr_43 := ($cast ($uint<32>) iNsTr_42)
    iNsTr_44 := (iNsTr_43 * iNsTr_5)
    // load 
    iNsTr_45 := ->(scevgep50) 
    iNsTr_46 := ($cast ($uint<32>) iNsTr_45)
    iNsTr_47 := (iNsTr_46 * iNsTr_6)
    // load 
    iNsTr_48 := ->(scevgep) 
    iNsTr_49 := ($cast ($uint<32>) iNsTr_48)
    iNsTr_50 := (iNsTr_49 * iNsTr_7)
    iNsTr_51 := (iNsTr_41 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    iNsTr_52 := (iNsTr_51 + iNsTr_44)
    iNsTr_53 := (iNsTr_52 + iNsTr_47)
    iNsTr_54 := (iNsTr_53 + iNsTr_50)
    iNsTr_55 := (iNsTr_54 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    iNsTr_56 := ($cast ($uint<8>) iNsTr_55)
    ->(scevgep35) := iNsTr_56
    iNsTr_58 := (xx_x03 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (iNsTr_58 == i_width )
    $if exitcond1 $then  $place [bbx_xnph_xx_x_crit_edgex_xloopexit] $else $place [bbx_xnph_bbx_xnph] $endif 
    //begin: basic-block xx_x_crit_edgex_xloopexit
    $merge bbx_xnph_xx_x_crit_edgex_xloopexit
    $endmerge
    $place [xx_x_crit_edgex_xloopexit_xx_x_crit_edge]
    //begin: basic-block xx_x_crit_edge
    $merge xx_x_crit_edgex_xloopexit_xx_x_crit_edge xx_xpreheader_xx_x_crit_edge
    $endmerge
    iNsTr_18 := (yx_x05 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond := (iNsTr_18 == i_height )
    $if exitcond $then  $place [xx_x_crit_edge_xx_x_crit_edge10x_xloopexit] $else $place [xx_x_crit_edge_xx_xpreheader] $endif 
    //begin: basic-block xx_x_crit_edge10x_xloopexit
    $merge xx_x_crit_edge_xx_x_crit_edge10x_xloopexit
    $endmerge
    $place [xx_x_crit_edge10x_xloopexit_xx_x_crit_edge10]
    //begin: basic-block xx_x_crit_edge10
    $merge bb_0_xx_x_crit_edge10 xx_x_crit_edge10x_xloopexit_xx_x_crit_edge10
    $endmerge
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [store_interleave_chroma] 
$in (dst : $pointer< $uint<8> > i_dst : $uint<32> srcu : $pointer< $uint<8> > srcv : $pointer< $uint<8> > height : $uint<32> )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    // compare instruction
    iNsTr_0 := ( ($bitcast ( $int<32>) height) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    $if iNsTr_0 $then  $place [bb_0_xx_xpreheaderx_xpreheader] $else $place [bb_0_xx_x_crit_edge9] $endif 
    //begin: basic-block xx_xpreheaderx_xpreheader
    $merge bb_0_xx_xpreheaderx_xpreheader
    $endmerge
    $place [xx_xpreheaderx_xpreheader_xx_xpreheader]
    //begin: basic-block xx_xpreheader
    $merge xx_xpreheader_xx_xpreheader xx_xpreheaderx_xpreheader_xx_xpreheader
    $phi yx_x04 :=  ( $cast ($uint<32>) iNsTr_36) $on xx_xpreheader_xx_xpreheader ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on xx_xpreheaderx_xpreheader_xx_xpreheader 
    $endmerge
    tmp := (yx_x04 * ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    scevgep11 := srcv[tmp]
    scevgep := srcu[tmp]
    tmp4 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep11x_x1 := srcv[tmp4]
    scevgepx_x1 := srcu[tmp4]
    tmp7 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep11x_x2 := srcv[tmp7]
    scevgepx_x2 := srcu[tmp7]
    tmp10 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep11x_x3 := srcv[tmp10]
    scevgepx_x3 := srcu[tmp10]
    tmp14 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    scevgep11x_x4 := srcv[tmp14]
    scevgepx_x4 := srcu[tmp14]
    tmp18 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) )
    scevgep11x_x5 := srcv[tmp18]
    scevgepx_x5 := srcu[tmp18]
    tmp21 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    scevgep11x_x6 := srcv[tmp21]
    scevgepx_x6 := srcu[tmp21]
    tmp25 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    scevgep11x_x7 := srcv[tmp25]
    scevgepx_x7 := srcu[tmp25]
    tmp29 := (i_dst * yx_x04)
    scevgep15 := dst[tmp29]
    tmp31 := (tmp29 + ( $bitcast ($uint<32> ) _b00000000000000000000000000001110 ) )
    scevgep15x_x7 := dst[tmp31]
    tmp33 := (tmp29 + ( $bitcast ($uint<32> ) _b00000000000000000000000000001100 ) )
    scevgep15x_x6 := dst[tmp33]
    tmp35 := (tmp29 + ( $bitcast ($uint<32> ) _b00000000000000000000000000001010 ) )
    scevgep15x_x5 := dst[tmp35]
    tmp37 := (tmp29 + ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) )
    scevgep15x_x4 := dst[tmp37]
    tmp39 := (tmp29 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    scevgep15x_x3 := dst[tmp39]
    tmp41 := (tmp29 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    scevgep15x_x2 := dst[tmp41]
    tmp43 := (tmp29 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep15x_x1 := dst[tmp43]
    tmp45 := (tmp29 + ( $bitcast ($uint<32> ) _b00000000000000000000000000001111 ) )
    scevgep18x_x7 := dst[tmp45]
    tmp47 := (tmp29 + ( $bitcast ($uint<32> ) _b00000000000000000000000000001101 ) )
    scevgep18x_x6 := dst[tmp47]
    tmp49 := (tmp29 + ( $bitcast ($uint<32> ) _b00000000000000000000000000001011 ) )
    scevgep18x_x5 := dst[tmp49]
    tmp52 := (tmp29 + ( $bitcast ($uint<32> ) _b00000000000000000000000000001001 ) )
    scevgep18x_x4 := dst[tmp52]
    tmp54 := (tmp29 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    scevgep18x_x3 := dst[tmp54]
    tmp56 := (tmp29 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) )
    scevgep18x_x2 := dst[tmp56]
    tmp58 := (tmp29 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep18x_x1 := dst[tmp58]
    tmp60 := (tmp29 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep18 := dst[tmp60]
    // load 
    iNsTr_4 := ->(scevgep) 
    ->(scevgep15) := iNsTr_4
    // load 
    iNsTr_6 := ->(scevgep11) 
    ->(scevgep18) := iNsTr_6
    // load 
    iNsTr_8 := ->(scevgepx_x1) 
    ->(scevgep15x_x1) := iNsTr_8
    // load 
    iNsTr_10 := ->(scevgep11x_x1) 
    ->(scevgep18x_x1) := iNsTr_10
    // load 
    iNsTr_12 := ->(scevgepx_x2) 
    ->(scevgep15x_x2) := iNsTr_12
    // load 
    iNsTr_14 := ->(scevgep11x_x2) 
    ->(scevgep18x_x2) := iNsTr_14
    // load 
    iNsTr_16 := ->(scevgepx_x3) 
    ->(scevgep15x_x3) := iNsTr_16
    // load 
    iNsTr_18 := ->(scevgep11x_x3) 
    ->(scevgep18x_x3) := iNsTr_18
    // load 
    iNsTr_20 := ->(scevgepx_x4) 
    ->(scevgep15x_x4) := iNsTr_20
    // load 
    iNsTr_22 := ->(scevgep11x_x4) 
    ->(scevgep18x_x4) := iNsTr_22
    // load 
    iNsTr_24 := ->(scevgepx_x5) 
    ->(scevgep15x_x5) := iNsTr_24
    // load 
    iNsTr_26 := ->(scevgep11x_x5) 
    ->(scevgep18x_x5) := iNsTr_26
    // load 
    iNsTr_28 := ->(scevgepx_x6) 
    ->(scevgep15x_x6) := iNsTr_28
    // load 
    iNsTr_30 := ->(scevgep11x_x6) 
    ->(scevgep18x_x6) := iNsTr_30
    // load 
    iNsTr_32 := ->(scevgepx_x7) 
    ->(scevgep15x_x7) := iNsTr_32
    // load 
    iNsTr_34 := ->(scevgep11x_x7) 
    ->(scevgep18x_x7) := iNsTr_34
    iNsTr_36 := (yx_x04 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (iNsTr_36 == height )
    $if exitcond1 $then  $place [xx_xpreheader_xx_x_crit_edge9x_xloopexit] $else $place [xx_xpreheader_xx_xpreheader] $endif 
    //begin: basic-block xx_x_crit_edge9x_xloopexit
    $merge xx_xpreheader_xx_x_crit_edge9x_xloopexit
    $endmerge
    $place [xx_x_crit_edge9x_xloopexit_xx_x_crit_edge9]
    //begin: basic-block xx_x_crit_edge9
    $merge bb_0_xx_x_crit_edge9 xx_x_crit_edge9x_xloopexit_xx_x_crit_edge9
    $endmerge
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [x264_plane_copy_deinterleave_c] 
$in (dstu : $pointer< $uint<8> > i_dstu : $uint<32> dstv : $pointer< $uint<8> > i_dstv : $uint<32> src : $pointer< $uint<8> > i_src : $uint<32> h : $uint<32> )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    // compare instruction
    iNsTr_0 := ( ($bitcast ( $int<32>) h) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    $if iNsTr_0 $then  $place [bb_0_xx_xpreheaderx_xpreheader] $else $place [bb_0_xx_x_crit_edge7] $endif 
    //begin: basic-block xx_xpreheaderx_xpreheader
    $merge bb_0_xx_xpreheaderx_xpreheader
    $endmerge
    $place [xx_xpreheaderx_xpreheader_xx_xpreheader]
    //begin: basic-block xx_xpreheader
    $merge xx_xpreheader_xx_xpreheader xx_xpreheaderx_xpreheader_xx_xpreheader
    $phi yx_x03 :=  ( $cast ($uint<32>) iNsTr_36) $on xx_xpreheader_xx_xpreheader ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on xx_xpreheaderx_xpreheader_xx_xpreheader 
    $endmerge
    tmp := (i_dstu * yx_x03)
    scevgep := dstu[tmp]
    tmp3 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    scevgepx_x7 := dstu[tmp3]
    tmp5 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    scevgepx_x6 := dstu[tmp5]
    tmp7 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) )
    scevgepx_x5 := dstu[tmp7]
    tmp9 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    scevgepx_x4 := dstu[tmp9]
    tmp11 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgepx_x3 := dstu[tmp11]
    tmp13 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgepx_x2 := dstu[tmp13]
    tmp15 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgepx_x1 := dstu[tmp15]
    tmp17 := (i_dstv * yx_x03)
    scevgep11 := dstv[tmp17]
    tmp21 := (tmp17 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    scevgep11x_x7 := dstv[tmp21]
    tmp23 := (tmp17 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    scevgep11x_x6 := dstv[tmp23]
    tmp25 := (tmp17 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) )
    scevgep11x_x5 := dstv[tmp25]
    tmp27 := (tmp17 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    scevgep11x_x4 := dstv[tmp27]
    tmp29 := (tmp17 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep11x_x3 := dstv[tmp29]
    tmp31 := (tmp17 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep11x_x2 := dstv[tmp31]
    tmp33 := (tmp17 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep11x_x1 := dstv[tmp33]
    tmp35 := (i_src * yx_x03)
    scevgep15 := src[tmp35]
    tmp37 := (tmp35 + ( $bitcast ($uint<32> ) _b00000000000000000000000000001110 ) )
    scevgep15x_x7 := src[tmp37]
    tmp39 := (tmp35 + ( $bitcast ($uint<32> ) _b00000000000000000000000000001100 ) )
    scevgep15x_x6 := src[tmp39]
    tmp41 := (tmp35 + ( $bitcast ($uint<32> ) _b00000000000000000000000000001010 ) )
    scevgep15x_x5 := src[tmp41]
    tmp43 := (tmp35 + ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) )
    scevgep15x_x4 := src[tmp43]
    tmp45 := (tmp35 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    scevgep15x_x3 := src[tmp45]
    tmp47 := (tmp35 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    scevgep15x_x2 := src[tmp47]
    tmp49 := (tmp35 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep15x_x1 := src[tmp49]
    tmp53 := (tmp35 + ( $bitcast ($uint<32> ) _b00000000000000000000000000001111 ) )
    scevgep18x_x7 := src[tmp53]
    tmp55 := (tmp35 + ( $bitcast ($uint<32> ) _b00000000000000000000000000001101 ) )
    scevgep18x_x6 := src[tmp55]
    tmp57 := (tmp35 + ( $bitcast ($uint<32> ) _b00000000000000000000000000001011 ) )
    scevgep18x_x5 := src[tmp57]
    tmp59 := (tmp35 + ( $bitcast ($uint<32> ) _b00000000000000000000000000001001 ) )
    scevgep18x_x4 := src[tmp59]
    tmp61 := (tmp35 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    scevgep18x_x3 := src[tmp61]
    tmp63 := (tmp35 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) )
    scevgep18x_x2 := src[tmp63]
    tmp65 := (tmp35 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep18x_x1 := src[tmp65]
    tmp69 := (tmp35 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep18 := src[tmp69]
    // load 
    iNsTr_4 := ->(scevgep15) 
    ->(scevgep) := iNsTr_4
    // load 
    iNsTr_6 := ->(scevgep18) 
    ->(scevgep11) := iNsTr_6
    // load 
    iNsTr_8 := ->(scevgep15x_x1) 
    ->(scevgepx_x1) := iNsTr_8
    // load 
    iNsTr_10 := ->(scevgep18x_x1) 
    ->(scevgep11x_x1) := iNsTr_10
    // load 
    iNsTr_12 := ->(scevgep15x_x2) 
    ->(scevgepx_x2) := iNsTr_12
    // load 
    iNsTr_14 := ->(scevgep18x_x2) 
    ->(scevgep11x_x2) := iNsTr_14
    // load 
    iNsTr_16 := ->(scevgep15x_x3) 
    ->(scevgepx_x3) := iNsTr_16
    // load 
    iNsTr_18 := ->(scevgep18x_x3) 
    ->(scevgep11x_x3) := iNsTr_18
    // load 
    iNsTr_20 := ->(scevgep15x_x4) 
    ->(scevgepx_x4) := iNsTr_20
    // load 
    iNsTr_22 := ->(scevgep18x_x4) 
    ->(scevgep11x_x4) := iNsTr_22
    // load 
    iNsTr_24 := ->(scevgep15x_x5) 
    ->(scevgepx_x5) := iNsTr_24
    // load 
    iNsTr_26 := ->(scevgep18x_x5) 
    ->(scevgep11x_x5) := iNsTr_26
    // load 
    iNsTr_28 := ->(scevgep15x_x6) 
    ->(scevgepx_x6) := iNsTr_28
    // load 
    iNsTr_30 := ->(scevgep18x_x6) 
    ->(scevgep11x_x6) := iNsTr_30
    // load 
    iNsTr_32 := ->(scevgep15x_x7) 
    ->(scevgepx_x7) := iNsTr_32
    // load 
    iNsTr_34 := ->(scevgep18x_x7) 
    ->(scevgep11x_x7) := iNsTr_34
    iNsTr_36 := (yx_x03 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (iNsTr_36 == h )
    $if exitcond1 $then  $place [xx_xpreheader_xx_x_crit_edge7x_xloopexit] $else $place [xx_xpreheader_xx_xpreheader] $endif 
    //begin: basic-block xx_x_crit_edge7x_xloopexit
    $merge xx_xpreheader_xx_x_crit_edge7x_xloopexit
    $endmerge
    $place [xx_x_crit_edge7x_xloopexit_xx_x_crit_edge7]
    //begin: basic-block xx_x_crit_edge7
    $merge bb_0_xx_x_crit_edge7 xx_x_crit_edge7x_xloopexit_xx_x_crit_edge7
    $endmerge
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [x264_predict_16x16_dc_left_c] 
$in (src : $pointer< $uint<8> > )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bbx_xnph
    scevgep23x_x1 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000011111 ) ]
    scevgep23 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) ]
    // load 
    iNsTr_0 := ->(scevgep23x_x1) 
    // load 
    iNsTr_1 := ->(scevgep23) 
    scevgep23x_x2 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000111111 ) ]
    scevgep23x_x3 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001011111 ) ]
    iNsTr_2 := ($cast ($uint<32>) iNsTr_0)
    iNsTr_3 := ($cast ($uint<32>) iNsTr_1)
    // load 
    iNsTr_4 := ->(scevgep23x_x2) 
    // load 
    iNsTr_5 := ->(scevgep23x_x3) 
    iNsTr_6 := (iNsTr_2 + iNsTr_3)
    iNsTr_7 := ($cast ($uint<32>) iNsTr_4)
    scevgep23x_x4 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001111111 ) ]
    scevgep23x_x5 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010011111 ) ]
    iNsTr_8 := ($cast ($uint<32>) iNsTr_5)
    iNsTr_9 := (iNsTr_7 + iNsTr_6)
    // load 
    iNsTr_10 := ->(scevgep23x_x4) 
    // load 
    iNsTr_11 := ->(scevgep23x_x5) 
    iNsTr_12 := (iNsTr_8 + iNsTr_9)
    iNsTr_13 := ($cast ($uint<32>) iNsTr_10)
    scevgep23x_x6 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010111111 ) ]
    scevgep23x_x7 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011011111 ) ]
    iNsTr_14 := ($cast ($uint<32>) iNsTr_11)
    iNsTr_15 := (iNsTr_13 + iNsTr_12)
    // load 
    iNsTr_16 := ->(scevgep23x_x6) 
    // load 
    iNsTr_17 := ->(scevgep23x_x7) 
    iNsTr_18 := (iNsTr_14 + iNsTr_15)
    iNsTr_19 := ($cast ($uint<32>) iNsTr_16)
    scevgep23x_x8 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) ]
    scevgep23x_x9 := src[( $bitcast ($uint<32> ) _b00000000000000000000000100011111 ) ]
    iNsTr_20 := ($cast ($uint<32>) iNsTr_17)
    iNsTr_21 := (iNsTr_19 + iNsTr_18)
    // load 
    iNsTr_22 := ->(scevgep23x_x8) 
    // load 
    iNsTr_23 := ->(scevgep23x_x9) 
    iNsTr_24 := (iNsTr_20 + iNsTr_21)
    iNsTr_25 := ($cast ($uint<32>) iNsTr_22)
    scevgep23x_x10 := src[( $bitcast ($uint<32> ) _b00000000000000000000000100111111 ) ]
    scevgep23x_x11 := src[( $bitcast ($uint<32> ) _b00000000000000000000000101011111 ) ]
    iNsTr_26 := ($cast ($uint<32>) iNsTr_23)
    iNsTr_27 := (iNsTr_25 + iNsTr_24)
    // load 
    iNsTr_28 := ->(scevgep23x_x10) 
    // load 
    iNsTr_29 := ->(scevgep23x_x11) 
    iNsTr_30 := (iNsTr_26 + iNsTr_27)
    iNsTr_31 := ($cast ($uint<32>) iNsTr_28)
    scevgep23x_x12 := src[( $bitcast ($uint<32> ) _b00000000000000000000000101111111 ) ]
    scevgep23x_x13 := src[( $bitcast ($uint<32> ) _b00000000000000000000000110011111 ) ]
    iNsTr_32 := ($cast ($uint<32>) iNsTr_29)
    iNsTr_33 := (iNsTr_31 + iNsTr_30)
    // load 
    iNsTr_34 := ->(scevgep23x_x12) 
    // load 
    iNsTr_35 := ->(scevgep23x_x13) 
    iNsTr_36 := (iNsTr_32 + iNsTr_33)
    iNsTr_37 := ($cast ($uint<32>) iNsTr_34)
    scevgep23x_x14 := src[( $bitcast ($uint<32> ) _b00000000000000000000000110111111 ) ]
    scevgep23x_x15 := src[( $bitcast ($uint<32> ) _b00000000000000000000000111011111 ) ]
    iNsTr_38 := ($cast ($uint<32>) iNsTr_35)
    iNsTr_39 := (iNsTr_37 + iNsTr_36)
    // load 
    iNsTr_40 := ->(scevgep23x_x14) 
    // load 
    iNsTr_41 := ->(scevgep23x_x15) 
    iNsTr_42 := (iNsTr_38 + iNsTr_39)
    iNsTr_43 := ($cast ($uint<32>) iNsTr_40)
    iNsTr_44 := ($cast ($uint<32>) iNsTr_41)
    iNsTr_45 := (iNsTr_43 + iNsTr_42)
    iNsTr_46 := (iNsTr_44 + iNsTr_45)
    phitmp := (iNsTr_46 + ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) )
    phitmp8 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) phitmp) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 )  )))
    phitmp9 := (phitmp8 * ( $bitcast ($uint<32> ) _b00000001000000010000000100000001 ) )
    $place [bbx_xnph_bb_1]
    //begin: basic-block bb_1
    $merge bb_1_bb_1 bbx_xnph_bb_1
    $phi i1x_x02 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph_bb_1 ( $cast ($uint<32>) iNsTr_52) $on bb_1_bb_1 
    $endmerge
    tmp2 := (i1x_x02 * ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    scevgep3 := src[tmp2]
    scevgep1819 := ($bitcast ($pointer< $uint<32> >) scevgep3)
    tmp5 := (tmp2 + ( $bitcast ($uint<32> ) _b00000000000000000000000000001100 ) )
    scevgep6 := src[tmp5]
    scevgep1617 := ($bitcast ($pointer< $uint<32> >) scevgep6)
    tmp8 := (tmp2 + ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) )
    scevgep9 := src[tmp8]
    scevgep1314 := ($bitcast ($pointer< $uint<32> >) scevgep9)
    tmp11 := (tmp2 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    scevgep12 := src[tmp11]
    scevgep11 := ($bitcast ($pointer< $uint<32> >) scevgep12)
    ->(scevgep1819) := phitmp9
    ->(scevgep11) := phitmp9
    ->(scevgep1314) := phitmp9
    ->(scevgep1617) := phitmp9
    iNsTr_52 := (i1x_x02 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (iNsTr_52 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond1 $then  $place [bb_1_xx_x_crit_edge] $else $place [bb_1_bb_1] $endif 
    //begin: basic-block xx_x_crit_edge
    $merge bb_1_xx_x_crit_edge
    $endmerge
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [x264_predict_16x16_dc_top_c] 
$in (src : $pointer< $uint<8> > )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bbx_xnph
    scevgep22x_x1 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111100001 ) ]
    scevgep22 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111100000 ) ]
    // load 
    iNsTr_0 := ->(scevgep22x_x1) 
    // load 
    iNsTr_1 := ->(scevgep22) 
    scevgep22x_x2 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111100010 ) ]
    scevgep22x_x3 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111100011 ) ]
    iNsTr_2 := ($cast ($uint<32>) iNsTr_0)
    iNsTr_3 := ($cast ($uint<32>) iNsTr_1)
    // load 
    iNsTr_4 := ->(scevgep22x_x2) 
    // load 
    iNsTr_5 := ->(scevgep22x_x3) 
    iNsTr_6 := (iNsTr_2 + iNsTr_3)
    iNsTr_7 := ($cast ($uint<32>) iNsTr_4)
    scevgep22x_x4 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111100100 ) ]
    scevgep22x_x5 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111100101 ) ]
    iNsTr_8 := ($cast ($uint<32>) iNsTr_5)
    iNsTr_9 := (iNsTr_7 + iNsTr_6)
    // load 
    iNsTr_10 := ->(scevgep22x_x4) 
    // load 
    iNsTr_11 := ->(scevgep22x_x5) 
    iNsTr_12 := (iNsTr_8 + iNsTr_9)
    iNsTr_13 := ($cast ($uint<32>) iNsTr_10)
    scevgep22x_x6 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111100110 ) ]
    scevgep22x_x7 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111100111 ) ]
    iNsTr_14 := ($cast ($uint<32>) iNsTr_11)
    iNsTr_15 := (iNsTr_13 + iNsTr_12)
    // load 
    iNsTr_16 := ->(scevgep22x_x6) 
    // load 
    iNsTr_17 := ->(scevgep22x_x7) 
    iNsTr_18 := (iNsTr_14 + iNsTr_15)
    iNsTr_19 := ($cast ($uint<32>) iNsTr_16)
    scevgep22x_x8 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111101000 ) ]
    scevgep22x_x9 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111101001 ) ]
    iNsTr_20 := ($cast ($uint<32>) iNsTr_17)
    iNsTr_21 := (iNsTr_19 + iNsTr_18)
    // load 
    iNsTr_22 := ->(scevgep22x_x8) 
    // load 
    iNsTr_23 := ->(scevgep22x_x9) 
    iNsTr_24 := (iNsTr_20 + iNsTr_21)
    iNsTr_25 := ($cast ($uint<32>) iNsTr_22)
    scevgep22x_x10 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111101010 ) ]
    scevgep22x_x11 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111101011 ) ]
    iNsTr_26 := ($cast ($uint<32>) iNsTr_23)
    iNsTr_27 := (iNsTr_25 + iNsTr_24)
    // load 
    iNsTr_28 := ->(scevgep22x_x10) 
    // load 
    iNsTr_29 := ->(scevgep22x_x11) 
    iNsTr_30 := (iNsTr_26 + iNsTr_27)
    iNsTr_31 := ($cast ($uint<32>) iNsTr_28)
    scevgep22x_x12 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111101100 ) ]
    scevgep22x_x13 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111101101 ) ]
    iNsTr_32 := ($cast ($uint<32>) iNsTr_29)
    iNsTr_33 := (iNsTr_31 + iNsTr_30)
    // load 
    iNsTr_34 := ->(scevgep22x_x12) 
    // load 
    iNsTr_35 := ->(scevgep22x_x13) 
    iNsTr_36 := (iNsTr_32 + iNsTr_33)
    iNsTr_37 := ($cast ($uint<32>) iNsTr_34)
    scevgep22x_x14 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111101110 ) ]
    scevgep22x_x15 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111101111 ) ]
    iNsTr_38 := ($cast ($uint<32>) iNsTr_35)
    iNsTr_39 := (iNsTr_37 + iNsTr_36)
    // load 
    iNsTr_40 := ->(scevgep22x_x14) 
    // load 
    iNsTr_41 := ->(scevgep22x_x15) 
    iNsTr_42 := (iNsTr_38 + iNsTr_39)
    iNsTr_43 := ($cast ($uint<32>) iNsTr_40)
    iNsTr_44 := ($cast ($uint<32>) iNsTr_41)
    iNsTr_45 := (iNsTr_43 + iNsTr_42)
    iNsTr_46 := (iNsTr_44 + iNsTr_45)
    phitmp := (iNsTr_46 + ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) )
    phitmp8 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) phitmp) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 )  )))
    phitmp9 := (phitmp8 * ( $bitcast ($uint<32> ) _b00000001000000010000000100000001 ) )
    $place [bbx_xnph_bb_1]
    //begin: basic-block bb_1
    $merge bb_1_bb_1 bbx_xnph_bb_1
    $phi i1x_x02 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph_bb_1 ( $cast ($uint<32>) iNsTr_52) $on bb_1_bb_1 
    $endmerge
    tmp2 := (i1x_x02 * ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    scevgep3 := src[tmp2]
    scevgep1819 := ($bitcast ($pointer< $uint<32> >) scevgep3)
    tmp5 := (tmp2 + ( $bitcast ($uint<32> ) _b00000000000000000000000000001100 ) )
    scevgep6 := src[tmp5]
    scevgep1617 := ($bitcast ($pointer< $uint<32> >) scevgep6)
    tmp8 := (tmp2 + ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) )
    scevgep9 := src[tmp8]
    scevgep1314 := ($bitcast ($pointer< $uint<32> >) scevgep9)
    tmp11 := (tmp2 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    scevgep12 := src[tmp11]
    scevgep11 := ($bitcast ($pointer< $uint<32> >) scevgep12)
    ->(scevgep1819) := phitmp9
    ->(scevgep11) := phitmp9
    ->(scevgep1314) := phitmp9
    ->(scevgep1617) := phitmp9
    iNsTr_52 := (i1x_x02 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (iNsTr_52 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond1 $then  $place [bb_1_xx_x_crit_edge] $else $place [bb_1_bb_1] $endif 
    //begin: basic-block xx_x_crit_edge
    $merge bb_1_xx_x_crit_edge
    $endmerge
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [x264_predict_16x16_p_c] 
$in (src : $pointer< $uint<8> > )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bbx_xnph12
    $place [bbx_xnph12_bb_1]
    //begin: basic-block bb_1
    $merge bb_1_bb_1 bbx_xnph12_bb_1
    $phi Hx_x011 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph12_bb_1 ( $cast ($uint<32>) iNsTr_8) $on bb_1_bb_1 
    $phi Vx_x010 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph12_bb_1 ( $cast ($uint<32>) iNsTr_15) $on bb_1_bb_1 
    $phi ix_x09 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph12_bb_1 ( $cast ($uint<32>) iNsTr_1) $on bb_1_bb_1 
    $endmerge
    tmp36 := (ix_x09 + ( $bitcast ($uint<32> ) _b11111111111111111111111111101000 ) )
    scevgep63 := src[tmp36]
    tmp61 := (ix_x09 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    tmp39 := (ix_x09 * ( $bitcast ($uint<32> ) _b11111111111111111111111111100000 ) )
    tmp40 := (tmp39 + ( $bitcast ($uint<32> ) _b00000000000000000000000010111111 ) )
    scevgep60 := src[tmp40]
    tmp42 := (ix_x09 * ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) )
    tmp43 := (tmp42 + ( $bitcast ($uint<32> ) _b11111111111111111111111111100110 ) )
    scevgep57 := src[tmp43]
    tmp45 := (ix_x09 * ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    tmp46 := (tmp45 + ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    scevgep54 := src[tmp46]
    iNsTr_1 := (ix_x09 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // load 
    iNsTr_2 := ->(scevgep63) 
    iNsTr_3 := ($cast ($uint<32>) iNsTr_2)
    // load 
    iNsTr_4 := ->(scevgep57) 
    iNsTr_5 := ($cast ($uint<32>) iNsTr_4)
    iNsTr_6 := (iNsTr_3 - iNsTr_5)
    iNsTr_7 := (iNsTr_6 * tmp61)
    iNsTr_8 := (iNsTr_7 + Hx_x011)
    // load 
    iNsTr_9 := ->(scevgep54) 
    iNsTr_10 := ($cast ($uint<32>) iNsTr_9)
    // load 
    iNsTr_11 := ->(scevgep60) 
    iNsTr_12 := ($cast ($uint<32>) iNsTr_11)
    iNsTr_13 := (iNsTr_10 - iNsTr_12)
    iNsTr_14 := (iNsTr_13 * tmp61)
    iNsTr_15 := (iNsTr_14 + Vx_x010)
    // compare instruction
    exitcond35 := (iNsTr_1 == ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 )  )
    $if exitcond35 $then  $place [bb_1_bbx_xnph7] $else $place [bb_1_bb_1] $endif 
    //begin: basic-block bbx_xnph7
    $merge bb_1_bbx_xnph7
    $phi xx_xlcssa34 :=  ( $cast ($uint<32>) iNsTr_15) $on bb_1_bbx_xnph7 
    $phi xx_xlcssa :=  ( $cast ($uint<32>) iNsTr_8) $on bb_1_bbx_xnph7 
    $endmerge
    phitmp := (xx_xlcssa * ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) )
    phitmp15 := (phitmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    phitmp16 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) phitmp15) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 )  )))
    phitmp17 := (xx_xlcssa34 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) )
    phitmp18 := (phitmp17 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    phitmp19 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) phitmp18) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 )  )))
    iNsTr_17 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111101111 ) ]
    iNsTr_18 := src[( $bitcast ($uint<32> ) _b00000000000000000000000111011111 ) ]
    // load 
    iNsTr_19 := ->(iNsTr_17) 
    // load 
    iNsTr_20 := ->(iNsTr_18) 
    tmp20 := ($cast ($uint<32>) iNsTr_19)
    tmp21 := ($cast ($uint<32>) iNsTr_20)
    tmp22 := (tmp20 + tmp21)
    tmp23 := (tmp22 * ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    tmp24 := (tmp23 + ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    tmp25 := (phitmp19 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    tmp26 := (tmp24 - tmp25)
    tmp27 := (phitmp16 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    tmp28 := (tmp26 - tmp27)
    $place [bbx_xnph7_bbx_xnph]
    //begin: basic-block bbx_xnph
    $merge bbx_xnph7_bbx_xnph xx_x_crit_edge_bbx_xnph
    $phi yx_x05 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph7_bbx_xnph ( $cast ($uint<32>) iNsTr_35) $on xx_x_crit_edge_bbx_xnph 
    $endmerge
    tmp19 := (phitmp19 * yx_x05)
    tmp29 := (tmp28 + tmp19)
    tmp31 := (yx_x05 * ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    $place [bbx_xnph_bb_4]
    //begin: basic-block bb_4
    $merge bbx_xnph_bb_4 x264_clip_pixelx_xexit_bb_4
    $phi xx_x03 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph_bb_4 ( $cast ($uint<32>) iNsTr_33) $on x264_clip_pixelx_xexit_bb_4 
    $endmerge
    tmp18 := (phitmp16 * xx_x03)
    pixx_x02 := (tmp29 + tmp18)
    tmp32 := (tmp31 + xx_x03)
    scevgep := src[tmp32]
    iNsTr_23 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) pixx_x02) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 )  )))
    // compare instruction
    iNsTr_24 := (iNsTr_23 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_24 $then  $place [bb_4_bb_5] $else $place [bb_4_x264_clip_pixelx_xexit] $endif 
    //begin: basic-block bb_5
    $merge bb_4_bb_5
    $endmerge
    iNsTr_26 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_23)
    iNsTr_27 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_26) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_28 := (iNsTr_27 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_5_x264_clip_pixelx_xexit]
    //begin: basic-block x264_clip_pixelx_xexit
    $merge bb_4_x264_clip_pixelx_xexit bb_5_x264_clip_pixelx_xexit
    $phi iNsTr_30 :=  ( $cast ($uint<32>) iNsTr_28) $on bb_5_x264_clip_pixelx_xexit ( $cast ($uint<32>) iNsTr_23) $on bb_4_x264_clip_pixelx_xexit 
    $endmerge
    iNsTr_31 := ($cast ($uint<8>) iNsTr_30)
    ->(scevgep) := iNsTr_31
    iNsTr_33 := (xx_x03 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (iNsTr_33 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond1 $then  $place [x264_clip_pixelx_xexit_xx_x_crit_edge] $else $place [x264_clip_pixelx_xexit_bb_4] $endif 
    //begin: basic-block xx_x_crit_edge
    $merge x264_clip_pixelx_xexit_xx_x_crit_edge
    $endmerge
    iNsTr_35 := (yx_x05 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond := (iNsTr_35 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond $then  $place [xx_x_crit_edge_xx_x_crit_edge8] $else $place [xx_x_crit_edge_bbx_xnph] $endif 
    //begin: basic-block xx_x_crit_edge8
    $merge xx_x_crit_edge_xx_x_crit_edge8
    $endmerge
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [x264_predict_8x8c_dc_c] 
$in (src : $pointer< $uint<8> > )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    scevgep38x_x1 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111100101 ) ]
    scevgep36x_x1 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111100001 ) ]
    scevgep34x_x1 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000011111 ) ]
    scevgep32x_x1 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010011111 ) ]
    scevgep32 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001111111 ) ]
    scevgep34 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) ]
    scevgep36 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111100000 ) ]
    scevgep38 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111100100 ) ]
    // load 
    iNsTr_0 := ->(scevgep32x_x1) 
    // load 
    iNsTr_1 := ->(scevgep34x_x1) 
    // load 
    iNsTr_2 := ->(scevgep38x_x1) 
    // load 
    iNsTr_3 := ->(scevgep36x_x1) 
    // load 
    iNsTr_4 := ->(scevgep36) 
    // load 
    iNsTr_5 := ->(scevgep38) 
    // load 
    iNsTr_6 := ->(scevgep34) 
    // load 
    iNsTr_7 := ->(scevgep32) 
    scevgep32x_x2 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010111111 ) ]
    scevgep34x_x2 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000111111 ) ]
    scevgep36x_x2 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111100010 ) ]
    scevgep38x_x2 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111100110 ) ]
    scevgep38x_x3 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111100111 ) ]
    scevgep36x_x3 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111100011 ) ]
    scevgep34x_x3 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001011111 ) ]
    scevgep32x_x3 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011011111 ) ]
    iNsTr_8 := ($cast ($uint<32>) iNsTr_0)
    iNsTr_9 := ($cast ($uint<32>) iNsTr_1)
    iNsTr_10 := ($cast ($uint<32>) iNsTr_2)
    iNsTr_11 := ($cast ($uint<32>) iNsTr_3)
    iNsTr_12 := ($cast ($uint<32>) iNsTr_4)
    iNsTr_13 := ($cast ($uint<32>) iNsTr_5)
    iNsTr_14 := ($cast ($uint<32>) iNsTr_6)
    iNsTr_15 := ($cast ($uint<32>) iNsTr_7)
    // load 
    iNsTr_16 := ->(scevgep36x_x2) 
    // load 
    iNsTr_17 := ->(scevgep38x_x2) 
    // load 
    iNsTr_18 := ->(scevgep34x_x2) 
    // load 
    iNsTr_19 := ->(scevgep32x_x2) 
    // load 
    iNsTr_20 := ->(scevgep32x_x3) 
    // load 
    iNsTr_21 := ->(scevgep34x_x3) 
    // load 
    iNsTr_22 := ->(scevgep38x_x3) 
    // load 
    iNsTr_23 := ->(scevgep36x_x3) 
    iNsTr_24 := (iNsTr_8 + iNsTr_15)
    iNsTr_25 := (iNsTr_9 + iNsTr_14)
    iNsTr_26 := (iNsTr_10 + iNsTr_13)
    iNsTr_27 := (iNsTr_11 + iNsTr_12)
    iNsTr_28 := ($cast ($uint<32>) iNsTr_16)
    iNsTr_29 := ($cast ($uint<32>) iNsTr_17)
    iNsTr_30 := ($cast ($uint<32>) iNsTr_18)
    iNsTr_31 := ($cast ($uint<32>) iNsTr_19)
    iNsTr_32 := ($cast ($uint<32>) iNsTr_20)
    iNsTr_33 := ($cast ($uint<32>) iNsTr_21)
    iNsTr_34 := ($cast ($uint<32>) iNsTr_22)
    iNsTr_35 := ($cast ($uint<32>) iNsTr_23)
    iNsTr_36 := (iNsTr_28 + iNsTr_27)
    iNsTr_37 := (iNsTr_29 + iNsTr_26)
    iNsTr_38 := (iNsTr_30 + iNsTr_25)
    iNsTr_39 := (iNsTr_31 + iNsTr_24)
    iNsTr_40 := (iNsTr_32 + iNsTr_39)
    iNsTr_41 := (iNsTr_33 + iNsTr_38)
    iNsTr_42 := (iNsTr_34 + iNsTr_37)
    iNsTr_43 := (iNsTr_35 + iNsTr_36)
    phitmp := (iNsTr_41 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    iNsTr_44 := (phitmp + iNsTr_43)
    iNsTr_45 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_44) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 )  )))
    iNsTr_46 := (iNsTr_45 * ( $bitcast ($uint<32> ) _b00000001000000010000000100000001 ) )
    iNsTr_47 := (iNsTr_42 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_48 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_47) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )))
    iNsTr_49 := (iNsTr_48 * ( $bitcast ($uint<32> ) _b00000001000000010000000100000001 ) )
    iNsTr_50 := (iNsTr_40 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_51 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_50) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )))
    iNsTr_52 := (iNsTr_51 * ( $bitcast ($uint<32> ) _b00000001000000010000000100000001 ) )
    iNsTr_53 := (iNsTr_40 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    iNsTr_54 := (iNsTr_53 + iNsTr_42)
    iNsTr_55 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_54) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 )  )))
    iNsTr_56 := (iNsTr_55 * ( $bitcast ($uint<32> ) _b00000001000000010000000100000001 ) )
    scevgep24 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ]
    scevgep2425 := ($bitcast ($pointer< $uint<32> >) scevgep24)
    scevgep2627 := ($bitcast ($pointer< $uint<32> >) src)
    ->(scevgep2627) := iNsTr_46
    ->(scevgep2425) := iNsTr_49
    scevgep24x_x1 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000100100 ) ]
    scevgep2425x_x1 := ($bitcast ($pointer< $uint<32> >) scevgep24x_x1)
    scevgep26x_x1 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) ]
    scevgep2627x_x1 := ($bitcast ($pointer< $uint<32> >) scevgep26x_x1)
    ->(scevgep2627x_x1) := iNsTr_46
    ->(scevgep2425x_x1) := iNsTr_49
    scevgep24x_x2 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001000100 ) ]
    scevgep2425x_x2 := ($bitcast ($pointer< $uint<32> >) scevgep24x_x2)
    scevgep26x_x2 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001000000 ) ]
    scevgep2627x_x2 := ($bitcast ($pointer< $uint<32> >) scevgep26x_x2)
    ->(scevgep2627x_x2) := iNsTr_46
    ->(scevgep2425x_x2) := iNsTr_49
    scevgep24x_x3 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001100100 ) ]
    scevgep2425x_x3 := ($bitcast ($pointer< $uint<32> >) scevgep24x_x3)
    scevgep26x_x3 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001100000 ) ]
    scevgep2627x_x3 := ($bitcast ($pointer< $uint<32> >) scevgep26x_x3)
    ->(scevgep2627x_x3) := iNsTr_46
    ->(scevgep2425x_x3) := iNsTr_49
    scevgep22 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010000000 ) ]
    scevgep := src[( $bitcast ($uint<32> ) _b00000000000000000000000010000100 ) ]
    scevgep19 := ($bitcast ($pointer< $uint<32> >) scevgep)
    scevgep2021 := ($bitcast ($pointer< $uint<32> >) scevgep22)
    ->(scevgep2021) := iNsTr_52
    ->(scevgep19) := iNsTr_56
    scevgepx_x1 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010100100 ) ]
    scevgep19x_x1 := ($bitcast ($pointer< $uint<32> >) scevgepx_x1)
    scevgep20x_x1 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010100000 ) ]
    scevgep2021x_x1 := ($bitcast ($pointer< $uint<32> >) scevgep20x_x1)
    ->(scevgep2021x_x1) := iNsTr_52
    ->(scevgep19x_x1) := iNsTr_56
    scevgepx_x2 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011000100 ) ]
    scevgep19x_x2 := ($bitcast ($pointer< $uint<32> >) scevgepx_x2)
    scevgep20x_x2 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011000000 ) ]
    scevgep2021x_x2 := ($bitcast ($pointer< $uint<32> >) scevgep20x_x2)
    ->(scevgep2021x_x2) := iNsTr_52
    ->(scevgep19x_x2) := iNsTr_56
    scevgepx_x3 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011100100 ) ]
    scevgep19x_x3 := ($bitcast ($pointer< $uint<32> >) scevgepx_x3)
    scevgep20x_x3 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011100000 ) ]
    scevgep2021x_x3 := ($bitcast ($pointer< $uint<32> >) scevgep20x_x3)
    ->(scevgep2021x_x3) := iNsTr_52
    ->(scevgep19x_x3) := iNsTr_56
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [x264_predict_8x8c_p_c] 
$in (src : $pointer< $uint<8> > )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bbx_xnph7
    scevgep92x_x3 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111011111 ) ]
    // load 
    iNsTr_0 := ->(scevgep92x_x3) 
    scevgep98x_x1 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111100101 ) ]
    scevgep95x_x1 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000011111 ) ]
    scevgep92x_x1 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111100001 ) ]
    scevgep89x_x1 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010011111 ) ]
    // load 
    iNsTr_1 := ->(scevgep95x_x1) 
    // load 
    iNsTr_2 := ->(scevgep89x_x1) 
    // load 
    iNsTr_3 := ->(scevgep92x_x1) 
    // load 
    iNsTr_4 := ->(scevgep98x_x1) 
    scevgep89 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001111111 ) ]
    scevgep92 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111100010 ) ]
    scevgep95 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000111111 ) ]
    scevgep98 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111100100 ) ]
    scevgep89x_x2 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010111111 ) ]
    scevgep92x_x2 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111100000 ) ]
    scevgep95x_x2 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) ]
    scevgep98x_x2 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111100110 ) ]
    scevgep98x_x3 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111100111 ) ]
    scevgep89x_x3 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011011111 ) ]
    iNsTr_5 := ($cast ($uint<32>) iNsTr_1)
    iNsTr_6 := ($cast ($uint<32>) iNsTr_2)
    iNsTr_7 := ($cast ($uint<32>) iNsTr_3)
    iNsTr_8 := ($cast ($uint<32>) iNsTr_4)
    // load 
    iNsTr_9 := ->(scevgep98) 
    // load 
    iNsTr_10 := ->(scevgep92) 
    // load 
    iNsTr_11 := ->(scevgep89) 
    // load 
    iNsTr_12 := ->(scevgep95) 
    // load 
    iNsTr_13 := ->(scevgep98x_x2) 
    // load 
    iNsTr_14 := ->(scevgep92x_x2) 
    // load 
    iNsTr_15 := ->(scevgep89x_x2) 
    // load 
    iNsTr_16 := ->(scevgep95x_x2) 
    // load 
    iNsTr_17 := ->(scevgep89x_x3) 
    // load 
    iNsTr_18 := ->(scevgep98x_x3) 
    iNsTr_19 := (iNsTr_6 - iNsTr_5)
    iNsTr_20 := (iNsTr_8 - iNsTr_7)
    iNsTr_21 := ($cast ($uint<32>) iNsTr_9)
    iNsTr_22 := ($cast ($uint<32>) iNsTr_10)
    iNsTr_23 := ($cast ($uint<32>) iNsTr_11)
    iNsTr_24 := ($cast ($uint<32>) iNsTr_12)
    iNsTr_25 := ($cast ($uint<32>) iNsTr_13)
    iNsTr_26 := ($cast ($uint<32>) iNsTr_14)
    iNsTr_27 := ($cast ($uint<32>) iNsTr_15)
    iNsTr_28 := ($cast ($uint<32>) iNsTr_16)
    iNsTr_29 := ($cast ($uint<32>) iNsTr_0)
    iNsTr_30 := ($cast ($uint<32>) iNsTr_17)
    iNsTr_31 := ($cast ($uint<32>) iNsTr_18)
    iNsTr_32 := (iNsTr_19 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_33 := (iNsTr_20 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_34 := (iNsTr_21 - iNsTr_22)
    iNsTr_35 := (iNsTr_23 - iNsTr_24)
    iNsTr_36 := (iNsTr_25 - iNsTr_26)
    iNsTr_37 := (iNsTr_27 - iNsTr_28)
    iNsTr_38 := (iNsTr_30 - iNsTr_29)
    iNsTr_39 := (iNsTr_31 - iNsTr_29)
    iNsTr_40 := (iNsTr_32 + iNsTr_35)
    iNsTr_41 := (iNsTr_33 + iNsTr_34)
    iNsTr_42 := (iNsTr_36 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    iNsTr_43 := (iNsTr_37 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    iNsTr_44 := (iNsTr_38 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_45 := (iNsTr_39 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_46 := (iNsTr_42 + iNsTr_41)
    iNsTr_47 := (iNsTr_43 + iNsTr_40)
    iNsTr_48 := (iNsTr_44 + iNsTr_47)
    iNsTr_49 := (iNsTr_45 + iNsTr_46)
    phitmp := (iNsTr_49 * ( $bitcast ($uint<32> ) _b00000000000000000000000000010001 ) )
    phitmp15 := (phitmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    phitmp16 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) phitmp15) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 )  )))
    phitmp17 := (iNsTr_48 * ( $bitcast ($uint<32> ) _b00000000000000000000000000010001 ) )
    phitmp18 := (phitmp17 + ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    phitmp19 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) phitmp18) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 )  )))
    iNsTr_50 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) phitmp15) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 )  )))
    tmp39 := (iNsTr_50 & ( $bitcast ($uint<32> ) _b11111111111111111111111111111100 ) )
    iNsTr_51 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) phitmp15) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 )  )))
    tmp50 := (iNsTr_51 & ( $bitcast ($uint<32> ) _b11111111111111111111111111111110 ) )
    tmp18 := ($cast ($uint<32>) iNsTr_18)
    tmp19 := ($cast ($uint<32>) iNsTr_17)
    tmp20 := (tmp18 + tmp19)
    tmp21 := (tmp20 * ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    tmp22 := (tmp21 + ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    tmp23 := (phitmp19 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    tmp24 := (tmp22 - tmp23)
    tmp25 := (phitmp16 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    tmp26 := (tmp24 - tmp25)
    tmp28 := (tmp22 - tmp50)
    tmp29 := (tmp28 - tmp23)
    tmp31 := (tmp21 + ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    tmp32 := (tmp31 - phitmp16)
    tmp33 := (tmp32 - tmp23)
    tmp36 := (tmp31 - tmp23)
    tmp49 := (phitmp16 + tmp21)
    tmp54 := (tmp49 + ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    tmp58 := (tmp54 - tmp23)
    tmp64 := (tmp50 + tmp21)
    tmp67 := (tmp64 + ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    tmp69 := (tmp67 - tmp23)
    tmp72 := (tmp21 + tmp25)
    tmp73 := (tmp72 + ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    tmp74 := (tmp73 - tmp23)
    tmp76 := (tmp39 + tmp21)
    tmp77 := (tmp76 + ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    tmp78 := (tmp77 - tmp23)
    $place [bbx_xnph7_bbx_xnph]
    //begin: basic-block bbx_xnph
    $merge bb_4_bbx_xnph bbx_xnph7_bbx_xnph
    $phi yx_x05 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph7_bbx_xnph ( $cast ($uint<32>) iNsTr_133) $on bb_4_bbx_xnph 
    $endmerge
    tmp := (yx_x05 * ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    scevgep := src[tmp]
    tmp3 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgepx_x1 := src[tmp3]
    tmp5 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgepx_x2 := src[tmp5]
    tmp7 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgepx_x3 := src[tmp7]
    tmp9 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    scevgepx_x4 := src[tmp9]
    tmp11 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) )
    scevgepx_x5 := src[tmp11]
    tmp13 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    scevgepx_x6 := src[tmp13]
    tmp15 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    scevgepx_x7 := src[tmp15]
    tmp17 := (phitmp19 * yx_x05)
    pixx_x02 := (tmp26 + tmp17)
    pixx_x02x_x1 := (tmp29 + tmp17)
    pixx_x02x_x2 := (tmp33 + tmp17)
    pixx_x02x_x3 := (tmp36 + tmp17)
    pixx_x02x_x4 := (tmp58 + tmp17)
    pixx_x02x_x5 := (tmp69 + tmp17)
    pixx_x02x_x6 := (tmp74 + tmp17)
    pixx_x02x_x7 := (tmp78 + tmp17)
    iNsTr_53 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) pixx_x02) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 )  )))
    // compare instruction
    iNsTr_54 := (iNsTr_53 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_54 $then  $place [bbx_xnph_bb_2] $else $place [bbx_xnph_x264_clip_pixelx_xexit] $endif 
    //begin: basic-block bb_2
    $merge bbx_xnph_bb_2
    $endmerge
    iNsTr_56 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_53)
    iNsTr_57 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_56) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_58 := (iNsTr_57 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_2_x264_clip_pixelx_xexit]
    //begin: basic-block x264_clip_pixelx_xexit
    $merge bb_2_x264_clip_pixelx_xexit bbx_xnph_x264_clip_pixelx_xexit
    $phi iNsTr_60 :=  ( $cast ($uint<32>) iNsTr_58) $on bb_2_x264_clip_pixelx_xexit ( $cast ($uint<32>) iNsTr_53) $on bbx_xnph_x264_clip_pixelx_xexit 
    $endmerge
    iNsTr_61 := ($cast ($uint<8>) iNsTr_60)
    ->(scevgep) := iNsTr_61
    iNsTr_63 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) pixx_x02x_x1) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 )  )))
    // compare instruction
    iNsTr_64 := (iNsTr_63 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_64 $then  $place [x264_clip_pixelx_xexit_bb_7] $else $place [x264_clip_pixelx_xexit_x264_clip_pixelx_xexitx_x1] $endif 
    //begin: basic-block bb_4
    $merge bb_18_bb_4 x264_clip_pixelx_xexitx_x6_bb_4
    $phi iNsTr_130 :=  ( $cast ($uint<32>) iNsTr_128) $on bb_18_bb_4 ( $cast ($uint<32>) iNsTr_123) $on x264_clip_pixelx_xexitx_x6_bb_4 
    $endmerge
    iNsTr_131 := ($cast ($uint<8>) iNsTr_130)
    ->(scevgepx_x7) := iNsTr_131
    iNsTr_133 := (yx_x05 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (iNsTr_133 == ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 )  )
    $if exitcond1 $then  $place [bb_4_xx_x_crit_edge8] $else $place [bb_4_bbx_xnph] $endif 
    //begin: basic-block xx_x_crit_edge8
    $merge bb_4_xx_x_crit_edge8
    $endmerge
    $place [return__]
    //begin: basic-block x264_clip_pixelx_xexitx_x1
    $merge bb_7_x264_clip_pixelx_xexitx_x1 x264_clip_pixelx_xexit_x264_clip_pixelx_xexitx_x1
    $phi iNsTr_70 :=  ( $cast ($uint<32>) iNsTr_68) $on bb_7_x264_clip_pixelx_xexitx_x1 ( $cast ($uint<32>) iNsTr_63) $on x264_clip_pixelx_xexit_x264_clip_pixelx_xexitx_x1 
    $endmerge
    iNsTr_71 := ($cast ($uint<8>) iNsTr_70)
    ->(scevgepx_x1) := iNsTr_71
    iNsTr_73 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) pixx_x02x_x2) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 )  )))
    // compare instruction
    iNsTr_74 := (iNsTr_73 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_74 $then  $place [x264_clip_pixelx_xexitx_x1_bb_9] $else $place [x264_clip_pixelx_xexitx_x1_x264_clip_pixelx_xexitx_x2] $endif 
    //begin: basic-block bb_7
    $merge x264_clip_pixelx_xexit_bb_7
    $endmerge
    iNsTr_66 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_63)
    iNsTr_67 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_66) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_68 := (iNsTr_67 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_7_x264_clip_pixelx_xexitx_x1]
    //begin: basic-block x264_clip_pixelx_xexitx_x2
    $merge bb_9_x264_clip_pixelx_xexitx_x2 x264_clip_pixelx_xexitx_x1_x264_clip_pixelx_xexitx_x2
    $phi iNsTr_80 :=  ( $cast ($uint<32>) iNsTr_78) $on bb_9_x264_clip_pixelx_xexitx_x2 ( $cast ($uint<32>) iNsTr_73) $on x264_clip_pixelx_xexitx_x1_x264_clip_pixelx_xexitx_x2 
    $endmerge
    iNsTr_81 := ($cast ($uint<8>) iNsTr_80)
    ->(scevgepx_x2) := iNsTr_81
    iNsTr_83 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) pixx_x02x_x3) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 )  )))
    // compare instruction
    iNsTr_84 := (iNsTr_83 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_84 $then  $place [x264_clip_pixelx_xexitx_x2_bb_11] $else $place [x264_clip_pixelx_xexitx_x2_x264_clip_pixelx_xexitx_x3] $endif 
    //begin: basic-block bb_9
    $merge x264_clip_pixelx_xexitx_x1_bb_9
    $endmerge
    iNsTr_76 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_73)
    iNsTr_77 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_76) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_78 := (iNsTr_77 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_9_x264_clip_pixelx_xexitx_x2]
    //begin: basic-block x264_clip_pixelx_xexitx_x3
    $merge bb_11_x264_clip_pixelx_xexitx_x3 x264_clip_pixelx_xexitx_x2_x264_clip_pixelx_xexitx_x3
    $phi iNsTr_90 :=  ( $cast ($uint<32>) iNsTr_88) $on bb_11_x264_clip_pixelx_xexitx_x3 ( $cast ($uint<32>) iNsTr_83) $on x264_clip_pixelx_xexitx_x2_x264_clip_pixelx_xexitx_x3 
    $endmerge
    iNsTr_91 := ($cast ($uint<8>) iNsTr_90)
    ->(scevgepx_x3) := iNsTr_91
    iNsTr_93 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) pixx_x02x_x4) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 )  )))
    // compare instruction
    iNsTr_94 := (iNsTr_93 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_94 $then  $place [x264_clip_pixelx_xexitx_x3_bb_13] $else $place [x264_clip_pixelx_xexitx_x3_x264_clip_pixelx_xexitx_x4] $endif 
    //begin: basic-block bb_11
    $merge x264_clip_pixelx_xexitx_x2_bb_11
    $endmerge
    iNsTr_86 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_83)
    iNsTr_87 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_86) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_88 := (iNsTr_87 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_11_x264_clip_pixelx_xexitx_x3]
    //begin: basic-block x264_clip_pixelx_xexitx_x4
    $merge bb_13_x264_clip_pixelx_xexitx_x4 x264_clip_pixelx_xexitx_x3_x264_clip_pixelx_xexitx_x4
    $phi iNsTr_100 :=  ( $cast ($uint<32>) iNsTr_98) $on bb_13_x264_clip_pixelx_xexitx_x4 ( $cast ($uint<32>) iNsTr_93) $on x264_clip_pixelx_xexitx_x3_x264_clip_pixelx_xexitx_x4 
    $endmerge
    iNsTr_101 := ($cast ($uint<8>) iNsTr_100)
    ->(scevgepx_x4) := iNsTr_101
    iNsTr_103 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) pixx_x02x_x5) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 )  )))
    // compare instruction
    iNsTr_104 := (iNsTr_103 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_104 $then  $place [x264_clip_pixelx_xexitx_x4_bb_15] $else $place [x264_clip_pixelx_xexitx_x4_x264_clip_pixelx_xexitx_x5] $endif 
    //begin: basic-block bb_13
    $merge x264_clip_pixelx_xexitx_x3_bb_13
    $endmerge
    iNsTr_96 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_93)
    iNsTr_97 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_96) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_98 := (iNsTr_97 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_13_x264_clip_pixelx_xexitx_x4]
    //begin: basic-block x264_clip_pixelx_xexitx_x5
    $merge bb_15_x264_clip_pixelx_xexitx_x5 x264_clip_pixelx_xexitx_x4_x264_clip_pixelx_xexitx_x5
    $phi iNsTr_110 :=  ( $cast ($uint<32>) iNsTr_108) $on bb_15_x264_clip_pixelx_xexitx_x5 ( $cast ($uint<32>) iNsTr_103) $on x264_clip_pixelx_xexitx_x4_x264_clip_pixelx_xexitx_x5 
    $endmerge
    iNsTr_111 := ($cast ($uint<8>) iNsTr_110)
    ->(scevgepx_x5) := iNsTr_111
    iNsTr_113 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) pixx_x02x_x6) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 )  )))
    // compare instruction
    iNsTr_114 := (iNsTr_113 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_114 $then  $place [x264_clip_pixelx_xexitx_x5_bb_17] $else $place [x264_clip_pixelx_xexitx_x5_x264_clip_pixelx_xexitx_x6] $endif 
    //begin: basic-block bb_15
    $merge x264_clip_pixelx_xexitx_x4_bb_15
    $endmerge
    iNsTr_106 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_103)
    iNsTr_107 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_106) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_108 := (iNsTr_107 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_15_x264_clip_pixelx_xexitx_x5]
    //begin: basic-block x264_clip_pixelx_xexitx_x6
    $merge bb_17_x264_clip_pixelx_xexitx_x6 x264_clip_pixelx_xexitx_x5_x264_clip_pixelx_xexitx_x6
    $phi iNsTr_120 :=  ( $cast ($uint<32>) iNsTr_118) $on bb_17_x264_clip_pixelx_xexitx_x6 ( $cast ($uint<32>) iNsTr_113) $on x264_clip_pixelx_xexitx_x5_x264_clip_pixelx_xexitx_x6 
    $endmerge
    iNsTr_121 := ($cast ($uint<8>) iNsTr_120)
    ->(scevgepx_x6) := iNsTr_121
    iNsTr_123 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) pixx_x02x_x7) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 )  )))
    // compare instruction
    iNsTr_124 := (iNsTr_123 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_124 $then  $place [x264_clip_pixelx_xexitx_x6_bb_18] $else $place [x264_clip_pixelx_xexitx_x6_bb_4] $endif 
    //begin: basic-block bb_17
    $merge x264_clip_pixelx_xexitx_x5_bb_17
    $endmerge
    iNsTr_116 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_113)
    iNsTr_117 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_116) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_118 := (iNsTr_117 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_17_x264_clip_pixelx_xexitx_x6]
    //begin: basic-block bb_18
    $merge x264_clip_pixelx_xexitx_x6_bb_18
    $endmerge
    iNsTr_126 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_123)
    iNsTr_127 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_126) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_128 := (iNsTr_127 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_18_bb_4]
    $merge return__ $endmerge
  }
}
$module [x264_predict_4x4_ddl_c] 
$in (src : $pointer< $uint<8> > )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    iNsTr_0 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111100000 ) ]
    // load 
    iNsTr_1 := ->(iNsTr_0) 
    iNsTr_2 := ($cast ($uint<32>) iNsTr_1)
    iNsTr_3 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111100001 ) ]
    // load 
    iNsTr_4 := ->(iNsTr_3) 
    iNsTr_5 := ($cast ($uint<32>) iNsTr_4)
    iNsTr_6 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111100010 ) ]
    // load 
    iNsTr_7 := ->(iNsTr_6) 
    iNsTr_8 := ($cast ($uint<32>) iNsTr_7)
    iNsTr_9 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111100011 ) ]
    // load 
    iNsTr_10 := ->(iNsTr_9) 
    iNsTr_11 := ($cast ($uint<32>) iNsTr_10)
    iNsTr_12 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111100100 ) ]
    // load 
    iNsTr_13 := ->(iNsTr_12) 
    iNsTr_14 := ($cast ($uint<32>) iNsTr_13)
    iNsTr_15 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111100101 ) ]
    // load 
    iNsTr_16 := ->(iNsTr_15) 
    iNsTr_17 := ($cast ($uint<32>) iNsTr_16)
    iNsTr_18 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111100110 ) ]
    // load 
    iNsTr_19 := ->(iNsTr_18) 
    iNsTr_20 := ($cast ($uint<32>) iNsTr_19)
    iNsTr_21 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111100111 ) ]
    // load 
    iNsTr_22 := ->(iNsTr_21) 
    iNsTr_23 := ($cast ($uint<32>) iNsTr_22)
    iNsTr_24 := (iNsTr_5 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_25 := (iNsTr_2 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_26 := (iNsTr_25 + iNsTr_8)
    iNsTr_27 := (iNsTr_26 + iNsTr_24)
    iNsTr_28 := (iNsTr_27 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_29 := ($cast ($uint<8>) iNsTr_28)
    ->(src) := iNsTr_29
    iNsTr_31 := (iNsTr_8 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_32 := (iNsTr_5 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_33 := (iNsTr_32 + iNsTr_11)
    iNsTr_34 := (iNsTr_33 + iNsTr_31)
    iNsTr_35 := (iNsTr_34 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_36 := ($cast ($uint<8>) iNsTr_35)
    iNsTr_37 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) ]
    ->(iNsTr_37) := iNsTr_36
    iNsTr_39 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    ->(iNsTr_39) := iNsTr_36
    iNsTr_41 := (iNsTr_11 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_42 := (iNsTr_8 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_43 := (iNsTr_42 + iNsTr_14)
    iNsTr_44 := (iNsTr_43 + iNsTr_41)
    iNsTr_45 := (iNsTr_44 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_46 := ($cast ($uint<8>) iNsTr_45)
    iNsTr_47 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001000000 ) ]
    ->(iNsTr_47) := iNsTr_46
    iNsTr_49 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000100001 ) ]
    ->(iNsTr_49) := iNsTr_46
    iNsTr_51 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    ->(iNsTr_51) := iNsTr_46
    iNsTr_53 := (iNsTr_14 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_54 := (iNsTr_11 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_55 := (iNsTr_54 + iNsTr_17)
    iNsTr_56 := (iNsTr_55 + iNsTr_53)
    iNsTr_57 := (iNsTr_56 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_58 := ($cast ($uint<8>) iNsTr_57)
    iNsTr_59 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001100000 ) ]
    ->(iNsTr_59) := iNsTr_58
    iNsTr_61 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001000001 ) ]
    ->(iNsTr_61) := iNsTr_58
    iNsTr_63 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000100010 ) ]
    ->(iNsTr_63) := iNsTr_58
    iNsTr_65 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    ->(iNsTr_65) := iNsTr_58
    iNsTr_67 := (iNsTr_17 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_68 := (iNsTr_14 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_69 := (iNsTr_68 + iNsTr_20)
    iNsTr_70 := (iNsTr_69 + iNsTr_67)
    iNsTr_71 := (iNsTr_70 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_72 := ($cast ($uint<8>) iNsTr_71)
    iNsTr_73 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001100001 ) ]
    ->(iNsTr_73) := iNsTr_72
    iNsTr_75 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001000010 ) ]
    ->(iNsTr_75) := iNsTr_72
    iNsTr_77 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000100011 ) ]
    ->(iNsTr_77) := iNsTr_72
    iNsTr_79 := (iNsTr_20 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_80 := (iNsTr_17 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_81 := (iNsTr_80 + iNsTr_23)
    iNsTr_82 := (iNsTr_81 + iNsTr_79)
    iNsTr_83 := (iNsTr_82 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_84 := ($cast ($uint<8>) iNsTr_83)
    iNsTr_85 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001100010 ) ]
    ->(iNsTr_85) := iNsTr_84
    iNsTr_87 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001000011 ) ]
    ->(iNsTr_87) := iNsTr_84
    iNsTr_89 := (iNsTr_23 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_90 := (iNsTr_20 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_91 := (iNsTr_90 + iNsTr_23)
    iNsTr_92 := (iNsTr_91 + iNsTr_89)
    iNsTr_93 := (iNsTr_92 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_94 := ($cast ($uint<8>) iNsTr_93)
    iNsTr_95 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001100011 ) ]
    ->(iNsTr_95) := iNsTr_94
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [x264_predict_4x4_ddr_c] 
$in (src : $pointer< $uint<8> > )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    iNsTr_0 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111011111 ) ]
    // load 
    iNsTr_1 := ->(iNsTr_0) 
    iNsTr_2 := ($cast ($uint<32>) iNsTr_1)
    iNsTr_3 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) ]
    // load 
    iNsTr_4 := ->(iNsTr_3) 
    iNsTr_5 := ($cast ($uint<32>) iNsTr_4)
    iNsTr_6 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000011111 ) ]
    // load 
    iNsTr_7 := ->(iNsTr_6) 
    iNsTr_8 := ($cast ($uint<32>) iNsTr_7)
    iNsTr_9 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000111111 ) ]
    // load 
    iNsTr_10 := ->(iNsTr_9) 
    iNsTr_11 := ($cast ($uint<32>) iNsTr_10)
    iNsTr_12 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001011111 ) ]
    // load 
    iNsTr_13 := ->(iNsTr_12) 
    iNsTr_14 := ($cast ($uint<32>) iNsTr_13)
    iNsTr_15 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111100000 ) ]
    // load 
    iNsTr_16 := ->(iNsTr_15) 
    iNsTr_17 := ($cast ($uint<32>) iNsTr_16)
    iNsTr_18 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111100001 ) ]
    // load 
    iNsTr_19 := ->(iNsTr_18) 
    iNsTr_20 := ($cast ($uint<32>) iNsTr_19)
    iNsTr_21 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111100010 ) ]
    // load 
    iNsTr_22 := ->(iNsTr_21) 
    iNsTr_23 := ($cast ($uint<32>) iNsTr_22)
    iNsTr_24 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111100011 ) ]
    // load 
    iNsTr_25 := ->(iNsTr_24) 
    iNsTr_26 := ($cast ($uint<32>) iNsTr_25)
    iNsTr_27 := (iNsTr_23 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_28 := (iNsTr_20 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_29 := (iNsTr_28 + iNsTr_27)
    iNsTr_30 := (iNsTr_29 + iNsTr_26)
    iNsTr_31 := (iNsTr_30 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_32 := ($cast ($uint<8>) iNsTr_31)
    iNsTr_33 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    ->(iNsTr_33) := iNsTr_32
    iNsTr_35 := (iNsTr_20 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_36 := (iNsTr_17 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_37 := (iNsTr_36 + iNsTr_35)
    iNsTr_38 := (iNsTr_37 + iNsTr_23)
    iNsTr_39 := (iNsTr_38 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_40 := ($cast ($uint<8>) iNsTr_39)
    iNsTr_41 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000100011 ) ]
    ->(iNsTr_41) := iNsTr_40
    iNsTr_43 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    ->(iNsTr_43) := iNsTr_40
    iNsTr_45 := (iNsTr_17 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_46 := (iNsTr_2 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_47 := (iNsTr_46 + iNsTr_45)
    iNsTr_48 := (iNsTr_47 + iNsTr_20)
    iNsTr_49 := (iNsTr_48 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_50 := ($cast ($uint<8>) iNsTr_49)
    iNsTr_51 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001000011 ) ]
    ->(iNsTr_51) := iNsTr_50
    iNsTr_53 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000100010 ) ]
    ->(iNsTr_53) := iNsTr_50
    iNsTr_55 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    ->(iNsTr_55) := iNsTr_50
    iNsTr_57 := (iNsTr_2 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_58 := (iNsTr_5 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_59 := (iNsTr_58 + iNsTr_57)
    iNsTr_60 := (iNsTr_59 + iNsTr_17)
    iNsTr_61 := (iNsTr_60 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_62 := ($cast ($uint<8>) iNsTr_61)
    iNsTr_63 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001100011 ) ]
    ->(iNsTr_63) := iNsTr_62
    iNsTr_65 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001000010 ) ]
    ->(iNsTr_65) := iNsTr_62
    iNsTr_67 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000100001 ) ]
    ->(iNsTr_67) := iNsTr_62
    ->(src) := iNsTr_62
    iNsTr_70 := (iNsTr_5 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_71 := (iNsTr_46 + iNsTr_8)
    iNsTr_72 := (iNsTr_71 + iNsTr_70)
    iNsTr_73 := (iNsTr_72 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_74 := ($cast ($uint<8>) iNsTr_73)
    iNsTr_75 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001100010 ) ]
    ->(iNsTr_75) := iNsTr_74
    iNsTr_77 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001000001 ) ]
    ->(iNsTr_77) := iNsTr_74
    iNsTr_79 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) ]
    ->(iNsTr_79) := iNsTr_74
    iNsTr_81 := (iNsTr_8 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_82 := (iNsTr_58 + iNsTr_11)
    iNsTr_83 := (iNsTr_82 + iNsTr_81)
    iNsTr_84 := (iNsTr_83 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_85 := ($cast ($uint<8>) iNsTr_84)
    iNsTr_86 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001100001 ) ]
    ->(iNsTr_86) := iNsTr_85
    iNsTr_88 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001000000 ) ]
    ->(iNsTr_88) := iNsTr_85
    iNsTr_90 := (iNsTr_11 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_91 := (iNsTr_8 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_92 := (iNsTr_91 + iNsTr_14)
    iNsTr_93 := (iNsTr_92 + iNsTr_90)
    iNsTr_94 := (iNsTr_93 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_95 := ($cast ($uint<8>) iNsTr_94)
    iNsTr_96 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001100000 ) ]
    ->(iNsTr_96) := iNsTr_95
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [x264_predict_4x4_vr_c] 
$in (src : $pointer< $uint<8> > )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    iNsTr_0 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111011111 ) ]
    // load 
    iNsTr_1 := ->(iNsTr_0) 
    iNsTr_2 := ($cast ($uint<32>) iNsTr_1)
    iNsTr_3 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) ]
    // load 
    iNsTr_4 := ->(iNsTr_3) 
    iNsTr_5 := ($cast ($uint<32>) iNsTr_4)
    iNsTr_6 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000011111 ) ]
    // load 
    iNsTr_7 := ->(iNsTr_6) 
    iNsTr_8 := ($cast ($uint<32>) iNsTr_7)
    iNsTr_9 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000111111 ) ]
    // load 
    iNsTr_10 := ->(iNsTr_9) 
    iNsTr_11 := ($cast ($uint<32>) iNsTr_10)
    iNsTr_12 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111100000 ) ]
    // load 
    iNsTr_13 := ->(iNsTr_12) 
    iNsTr_14 := ($cast ($uint<32>) iNsTr_13)
    iNsTr_15 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111100001 ) ]
    // load 
    iNsTr_16 := ->(iNsTr_15) 
    iNsTr_17 := ($cast ($uint<32>) iNsTr_16)
    iNsTr_18 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111100010 ) ]
    // load 
    iNsTr_19 := ->(iNsTr_18) 
    iNsTr_20 := ($cast ($uint<32>) iNsTr_19)
    iNsTr_21 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111100011 ) ]
    // load 
    iNsTr_22 := ->(iNsTr_21) 
    iNsTr_23 := ($cast ($uint<32>) iNsTr_22)
    iNsTr_24 := (iNsTr_8 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_25 := (iNsTr_5 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_26 := (iNsTr_25 + iNsTr_24)
    iNsTr_27 := (iNsTr_26 + iNsTr_11)
    iNsTr_28 := (iNsTr_27 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_29 := ($cast ($uint<8>) iNsTr_28)
    iNsTr_30 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001100000 ) ]
    ->(iNsTr_30) := iNsTr_29
    iNsTr_32 := (iNsTr_5 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_33 := (iNsTr_2 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_34 := (iNsTr_33 + iNsTr_32)
    iNsTr_35 := (iNsTr_34 + iNsTr_8)
    iNsTr_36 := (iNsTr_35 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_37 := ($cast ($uint<8>) iNsTr_36)
    iNsTr_38 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001000000 ) ]
    ->(iNsTr_38) := iNsTr_37
    iNsTr_40 := (iNsTr_2 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_41 := (iNsTr_40 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_42 := (iNsTr_41 + iNsTr_5)
    iNsTr_43 := (iNsTr_42 + iNsTr_14)
    iNsTr_44 := (iNsTr_43 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_45 := ($cast ($uint<8>) iNsTr_44)
    iNsTr_46 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001100001 ) ]
    ->(iNsTr_46) := iNsTr_45
    iNsTr_48 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) ]
    ->(iNsTr_48) := iNsTr_45
    iNsTr_50 := (iNsTr_2 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_51 := (iNsTr_50 + iNsTr_14)
    iNsTr_52 := (iNsTr_51 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_53 := ($cast ($uint<8>) iNsTr_52)
    iNsTr_54 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001000001 ) ]
    ->(iNsTr_54) := iNsTr_53
    ->(src) := iNsTr_53
    iNsTr_57 := (iNsTr_14 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_58 := (iNsTr_33 + iNsTr_17)
    iNsTr_59 := (iNsTr_58 + iNsTr_57)
    iNsTr_60 := (iNsTr_59 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_61 := ($cast ($uint<8>) iNsTr_60)
    iNsTr_62 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001100010 ) ]
    ->(iNsTr_62) := iNsTr_61
    iNsTr_64 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000100001 ) ]
    ->(iNsTr_64) := iNsTr_61
    iNsTr_66 := (iNsTr_14 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_67 := (iNsTr_66 + iNsTr_17)
    iNsTr_68 := (iNsTr_67 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_69 := ($cast ($uint<8>) iNsTr_68)
    iNsTr_70 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001000010 ) ]
    ->(iNsTr_70) := iNsTr_69
    iNsTr_72 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    ->(iNsTr_72) := iNsTr_69
    iNsTr_74 := (iNsTr_17 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_75 := (iNsTr_14 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_76 := (iNsTr_75 + iNsTr_20)
    iNsTr_77 := (iNsTr_76 + iNsTr_74)
    iNsTr_78 := (iNsTr_77 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_79 := ($cast ($uint<8>) iNsTr_78)
    iNsTr_80 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001100011 ) ]
    ->(iNsTr_80) := iNsTr_79
    iNsTr_82 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000100010 ) ]
    ->(iNsTr_82) := iNsTr_79
    iNsTr_84 := (iNsTr_17 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_85 := (iNsTr_84 + iNsTr_20)
    iNsTr_86 := (iNsTr_85 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_87 := ($cast ($uint<8>) iNsTr_86)
    iNsTr_88 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001000011 ) ]
    ->(iNsTr_88) := iNsTr_87
    iNsTr_90 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    ->(iNsTr_90) := iNsTr_87
    iNsTr_92 := (iNsTr_20 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_93 := (iNsTr_17 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_94 := (iNsTr_93 + iNsTr_23)
    iNsTr_95 := (iNsTr_94 + iNsTr_92)
    iNsTr_96 := (iNsTr_95 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_97 := ($cast ($uint<8>) iNsTr_96)
    iNsTr_98 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000100011 ) ]
    ->(iNsTr_98) := iNsTr_97
    iNsTr_100 := (iNsTr_20 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_101 := (iNsTr_100 + iNsTr_23)
    iNsTr_102 := (iNsTr_101 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_103 := ($cast ($uint<8>) iNsTr_102)
    iNsTr_104 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    ->(iNsTr_104) := iNsTr_103
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [x264_predict_4x4_hd_c] 
$in (src : $pointer< $uint<8> > )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    iNsTr_0 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111011111 ) ]
    // load 
    iNsTr_1 := ->(iNsTr_0) 
    iNsTr_2 := ($cast ($uint<32>) iNsTr_1)
    iNsTr_3 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) ]
    // load 
    iNsTr_4 := ->(iNsTr_3) 
    iNsTr_5 := ($cast ($uint<32>) iNsTr_4)
    iNsTr_6 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000011111 ) ]
    // load 
    iNsTr_7 := ->(iNsTr_6) 
    iNsTr_8 := ($cast ($uint<32>) iNsTr_7)
    iNsTr_9 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000111111 ) ]
    // load 
    iNsTr_10 := ->(iNsTr_9) 
    iNsTr_11 := ($cast ($uint<32>) iNsTr_10)
    iNsTr_12 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001011111 ) ]
    // load 
    iNsTr_13 := ->(iNsTr_12) 
    iNsTr_14 := ($cast ($uint<32>) iNsTr_13)
    iNsTr_15 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111100000 ) ]
    // load 
    iNsTr_16 := ->(iNsTr_15) 
    iNsTr_17 := ($cast ($uint<32>) iNsTr_16)
    iNsTr_18 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111100001 ) ]
    // load 
    iNsTr_19 := ->(iNsTr_18) 
    iNsTr_20 := ($cast ($uint<32>) iNsTr_19)
    iNsTr_21 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111100010 ) ]
    // load 
    iNsTr_22 := ->(iNsTr_21) 
    iNsTr_23 := ($cast ($uint<32>) iNsTr_22)
    iNsTr_24 := (iNsTr_11 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_25 := (iNsTr_24 + iNsTr_14)
    iNsTr_26 := (iNsTr_25 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_27 := ($cast ($uint<8>) iNsTr_26)
    iNsTr_28 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001100000 ) ]
    ->(iNsTr_28) := iNsTr_27
    iNsTr_30 := (iNsTr_11 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_31 := (iNsTr_8 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_32 := (iNsTr_31 + iNsTr_14)
    iNsTr_33 := (iNsTr_32 + iNsTr_30)
    iNsTr_34 := (iNsTr_33 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_35 := ($cast ($uint<8>) iNsTr_34)
    iNsTr_36 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001100001 ) ]
    ->(iNsTr_36) := iNsTr_35
    iNsTr_38 := (iNsTr_8 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_39 := (iNsTr_38 + iNsTr_11)
    iNsTr_40 := (iNsTr_39 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_41 := ($cast ($uint<8>) iNsTr_40)
    iNsTr_42 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001100010 ) ]
    ->(iNsTr_42) := iNsTr_41
    iNsTr_44 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001000000 ) ]
    ->(iNsTr_44) := iNsTr_41
    iNsTr_46 := (iNsTr_8 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_47 := (iNsTr_5 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_48 := (iNsTr_47 + iNsTr_11)
    iNsTr_49 := (iNsTr_48 + iNsTr_46)
    iNsTr_50 := (iNsTr_49 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_51 := ($cast ($uint<8>) iNsTr_50)
    iNsTr_52 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001100011 ) ]
    ->(iNsTr_52) := iNsTr_51
    iNsTr_54 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001000001 ) ]
    ->(iNsTr_54) := iNsTr_51
    iNsTr_56 := (iNsTr_5 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_57 := (iNsTr_56 + iNsTr_8)
    iNsTr_58 := (iNsTr_57 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_59 := ($cast ($uint<8>) iNsTr_58)
    iNsTr_60 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001000010 ) ]
    ->(iNsTr_60) := iNsTr_59
    iNsTr_62 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) ]
    ->(iNsTr_62) := iNsTr_59
    iNsTr_64 := (iNsTr_5 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_65 := (iNsTr_2 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_66 := (iNsTr_65 + iNsTr_8)
    iNsTr_67 := (iNsTr_66 + iNsTr_64)
    iNsTr_68 := (iNsTr_67 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_69 := ($cast ($uint<8>) iNsTr_68)
    iNsTr_70 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001000011 ) ]
    ->(iNsTr_70) := iNsTr_69
    iNsTr_72 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000100001 ) ]
    ->(iNsTr_72) := iNsTr_69
    iNsTr_74 := (iNsTr_2 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_75 := (iNsTr_74 + iNsTr_5)
    iNsTr_76 := (iNsTr_75 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_77 := ($cast ($uint<8>) iNsTr_76)
    iNsTr_78 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000100010 ) ]
    ->(iNsTr_78) := iNsTr_77
    ->(src) := iNsTr_77
    iNsTr_81 := (iNsTr_2 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_82 := (iNsTr_47 + iNsTr_81)
    iNsTr_83 := (iNsTr_82 + iNsTr_17)
    iNsTr_84 := (iNsTr_83 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_85 := ($cast ($uint<8>) iNsTr_84)
    iNsTr_86 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000100011 ) ]
    ->(iNsTr_86) := iNsTr_85
    iNsTr_88 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    ->(iNsTr_88) := iNsTr_85
    iNsTr_90 := (iNsTr_17 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_91 := (iNsTr_65 + iNsTr_90)
    iNsTr_92 := (iNsTr_91 + iNsTr_20)
    iNsTr_93 := (iNsTr_92 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_94 := ($cast ($uint<8>) iNsTr_93)
    iNsTr_95 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    ->(iNsTr_95) := iNsTr_94
    iNsTr_97 := (iNsTr_20 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_98 := (iNsTr_17 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_99 := (iNsTr_98 + iNsTr_97)
    iNsTr_100 := (iNsTr_99 + iNsTr_23)
    iNsTr_101 := (iNsTr_100 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_102 := ($cast ($uint<8>) iNsTr_101)
    iNsTr_103 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    ->(iNsTr_103) := iNsTr_102
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [x264_predict_4x4_vl_c] 
$in (src : $pointer< $uint<8> > )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    iNsTr_0 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111100000 ) ]
    // load 
    iNsTr_1 := ->(iNsTr_0) 
    iNsTr_2 := ($cast ($uint<32>) iNsTr_1)
    iNsTr_3 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111100001 ) ]
    // load 
    iNsTr_4 := ->(iNsTr_3) 
    iNsTr_5 := ($cast ($uint<32>) iNsTr_4)
    iNsTr_6 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111100010 ) ]
    // load 
    iNsTr_7 := ->(iNsTr_6) 
    iNsTr_8 := ($cast ($uint<32>) iNsTr_7)
    iNsTr_9 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111100011 ) ]
    // load 
    iNsTr_10 := ->(iNsTr_9) 
    iNsTr_11 := ($cast ($uint<32>) iNsTr_10)
    iNsTr_12 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111100100 ) ]
    // load 
    iNsTr_13 := ->(iNsTr_12) 
    iNsTr_14 := ($cast ($uint<32>) iNsTr_13)
    iNsTr_15 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111100101 ) ]
    // load 
    iNsTr_16 := ->(iNsTr_15) 
    iNsTr_17 := ($cast ($uint<32>) iNsTr_16)
    iNsTr_18 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111100110 ) ]
    // load 
    iNsTr_19 := ->(iNsTr_18) 
    iNsTr_20 := ($cast ($uint<32>) iNsTr_19)
    iNsTr_21 := (iNsTr_2 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_22 := (iNsTr_21 + iNsTr_5)
    iNsTr_23 := (iNsTr_22 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_24 := ($cast ($uint<8>) iNsTr_23)
    ->(src) := iNsTr_24
    iNsTr_26 := (iNsTr_5 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_27 := (iNsTr_2 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_28 := (iNsTr_27 + iNsTr_8)
    iNsTr_29 := (iNsTr_28 + iNsTr_26)
    iNsTr_30 := (iNsTr_29 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_31 := ($cast ($uint<8>) iNsTr_30)
    iNsTr_32 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) ]
    ->(iNsTr_32) := iNsTr_31
    iNsTr_34 := (iNsTr_5 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_35 := (iNsTr_34 + iNsTr_8)
    iNsTr_36 := (iNsTr_35 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_37 := ($cast ($uint<8>) iNsTr_36)
    iNsTr_38 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001000000 ) ]
    ->(iNsTr_38) := iNsTr_37
    iNsTr_40 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    ->(iNsTr_40) := iNsTr_37
    iNsTr_42 := (iNsTr_8 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_43 := (iNsTr_5 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_44 := (iNsTr_43 + iNsTr_11)
    iNsTr_45 := (iNsTr_44 + iNsTr_42)
    iNsTr_46 := (iNsTr_45 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_47 := ($cast ($uint<8>) iNsTr_46)
    iNsTr_48 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001100000 ) ]
    ->(iNsTr_48) := iNsTr_47
    iNsTr_50 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000100001 ) ]
    ->(iNsTr_50) := iNsTr_47
    iNsTr_52 := (iNsTr_8 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_53 := (iNsTr_52 + iNsTr_11)
    iNsTr_54 := (iNsTr_53 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_55 := ($cast ($uint<8>) iNsTr_54)
    iNsTr_56 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001000001 ) ]
    ->(iNsTr_56) := iNsTr_55
    iNsTr_58 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    ->(iNsTr_58) := iNsTr_55
    iNsTr_60 := (iNsTr_11 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_61 := (iNsTr_8 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_62 := (iNsTr_61 + iNsTr_14)
    iNsTr_63 := (iNsTr_62 + iNsTr_60)
    iNsTr_64 := (iNsTr_63 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_65 := ($cast ($uint<8>) iNsTr_64)
    iNsTr_66 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001100001 ) ]
    ->(iNsTr_66) := iNsTr_65
    iNsTr_68 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000100010 ) ]
    ->(iNsTr_68) := iNsTr_65
    iNsTr_70 := (iNsTr_11 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_71 := (iNsTr_70 + iNsTr_14)
    iNsTr_72 := (iNsTr_71 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_73 := ($cast ($uint<8>) iNsTr_72)
    iNsTr_74 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001000010 ) ]
    ->(iNsTr_74) := iNsTr_73
    iNsTr_76 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    ->(iNsTr_76) := iNsTr_73
    iNsTr_78 := (iNsTr_14 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_79 := (iNsTr_11 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_80 := (iNsTr_79 + iNsTr_17)
    iNsTr_81 := (iNsTr_80 + iNsTr_78)
    iNsTr_82 := (iNsTr_81 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_83 := ($cast ($uint<8>) iNsTr_82)
    iNsTr_84 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001100010 ) ]
    ->(iNsTr_84) := iNsTr_83
    iNsTr_86 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000100011 ) ]
    ->(iNsTr_86) := iNsTr_83
    iNsTr_88 := (iNsTr_14 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_89 := (iNsTr_88 + iNsTr_17)
    iNsTr_90 := (iNsTr_89 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_91 := ($cast ($uint<8>) iNsTr_90)
    iNsTr_92 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001000011 ) ]
    ->(iNsTr_92) := iNsTr_91
    iNsTr_94 := (iNsTr_17 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_95 := (iNsTr_14 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_96 := (iNsTr_95 + iNsTr_20)
    iNsTr_97 := (iNsTr_96 + iNsTr_94)
    iNsTr_98 := (iNsTr_97 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_99 := ($cast ($uint<8>) iNsTr_98)
    iNsTr_100 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001100011 ) ]
    ->(iNsTr_100) := iNsTr_99
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [x264_predict_8x8_filter_c] 
$in (src : $pointer< $uint<8> > edge : $pointer< $uint<8> > i_neighbor : $uint<32> i_filters : $uint<32> )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    iNsTr_0 := (i_neighbor & ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) )
    iNsTr_1 := (i_filters & ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    iNsTr_2 := (iNsTr_1 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if iNsTr_2 $then  $place [bb_0_bb_2] $else $place [bb_0_bb_1] $endif 
    //begin: basic-block bb_1
    $merge bb_0_bb_1
    $endmerge
    iNsTr_7 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111100000 ) ]
    // load 
    iNsTr_8 := ->(iNsTr_7) 
    iNsTr_9 := ($cast ($uint<32>) iNsTr_8)
    iNsTr_10 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111011111 ) ]
    // load 
    iNsTr_11 := ->(iNsTr_10) 
    iNsTr_12 := ($cast ($uint<32>) iNsTr_11)
    iNsTr_13 := (iNsTr_12 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_14 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) ]
    // load 
    iNsTr_15 := ->(iNsTr_14) 
    iNsTr_16 := ($cast ($uint<32>) iNsTr_15)
    iNsTr_17 := (iNsTr_9 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_18 := (iNsTr_17 + iNsTr_16)
    iNsTr_19 := (iNsTr_18 + iNsTr_13)
    iNsTr_20 := (iNsTr_19 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_21 := ($cast ($uint<8>) iNsTr_20)
    iNsTr_22 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000001111 ) ]
    ->(iNsTr_22) := iNsTr_21
    // compare instruction
    iNsTr_24 := (iNsTr_0 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    // load 
    xx_xval := ->(iNsTr_14) 
    // load 
    xx_xval1 := ->(iNsTr_10) 
    xx_xin2 := ( $mux iNsTr_24 xx_xval xx_xval1)
    iNsTr_25 := ($cast ($uint<32>) xx_xin2)
    iNsTr_26 := ($cast ($uint<32>) xx_xval)
    iNsTr_27 := (iNsTr_26 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_28 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000011111 ) ]
    // load 
    iNsTr_29 := ->(iNsTr_28) 
    iNsTr_30 := ($cast ($uint<32>) iNsTr_29)
    iNsTr_31 := (iNsTr_25 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_32 := (iNsTr_31 + iNsTr_30)
    iNsTr_33 := (iNsTr_32 + iNsTr_27)
    iNsTr_34 := (iNsTr_33 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_35 := ($cast ($uint<8>) iNsTr_34)
    iNsTr_36 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000001110 ) ]
    ->(iNsTr_36) := iNsTr_35
    // load 
    iNsTr_38 := ->(iNsTr_14) 
    iNsTr_39 := ($cast ($uint<32>) iNsTr_38)
    // load 
    iNsTr_40 := ->(iNsTr_28) 
    iNsTr_41 := ($cast ($uint<32>) iNsTr_40)
    iNsTr_42 := (iNsTr_41 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_43 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000111111 ) ]
    // load 
    iNsTr_44 := ->(iNsTr_43) 
    iNsTr_45 := ($cast ($uint<32>) iNsTr_44)
    iNsTr_46 := (iNsTr_39 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_47 := (iNsTr_46 + iNsTr_45)
    iNsTr_48 := (iNsTr_47 + iNsTr_42)
    iNsTr_49 := (iNsTr_48 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_50 := ($cast ($uint<8>) iNsTr_49)
    iNsTr_51 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000001101 ) ]
    ->(iNsTr_51) := iNsTr_50
    // load 
    iNsTr_53 := ->(iNsTr_28) 
    iNsTr_54 := ($cast ($uint<32>) iNsTr_53)
    // load 
    iNsTr_55 := ->(iNsTr_43) 
    iNsTr_56 := ($cast ($uint<32>) iNsTr_55)
    iNsTr_57 := (iNsTr_56 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_58 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001011111 ) ]
    // load 
    iNsTr_59 := ->(iNsTr_58) 
    iNsTr_60 := ($cast ($uint<32>) iNsTr_59)
    iNsTr_61 := (iNsTr_54 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_62 := (iNsTr_61 + iNsTr_60)
    iNsTr_63 := (iNsTr_62 + iNsTr_57)
    iNsTr_64 := (iNsTr_63 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_65 := ($cast ($uint<8>) iNsTr_64)
    iNsTr_66 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000001100 ) ]
    ->(iNsTr_66) := iNsTr_65
    // load 
    iNsTr_68 := ->(iNsTr_43) 
    iNsTr_69 := ($cast ($uint<32>) iNsTr_68)
    // load 
    iNsTr_70 := ->(iNsTr_58) 
    iNsTr_71 := ($cast ($uint<32>) iNsTr_70)
    iNsTr_72 := (iNsTr_71 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_73 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001111111 ) ]
    // load 
    iNsTr_74 := ->(iNsTr_73) 
    iNsTr_75 := ($cast ($uint<32>) iNsTr_74)
    iNsTr_76 := (iNsTr_69 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_77 := (iNsTr_76 + iNsTr_75)
    iNsTr_78 := (iNsTr_77 + iNsTr_72)
    iNsTr_79 := (iNsTr_78 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_80 := ($cast ($uint<8>) iNsTr_79)
    iNsTr_81 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000001011 ) ]
    ->(iNsTr_81) := iNsTr_80
    // load 
    iNsTr_83 := ->(iNsTr_58) 
    iNsTr_84 := ($cast ($uint<32>) iNsTr_83)
    // load 
    iNsTr_85 := ->(iNsTr_73) 
    iNsTr_86 := ($cast ($uint<32>) iNsTr_85)
    iNsTr_87 := (iNsTr_86 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_88 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010011111 ) ]
    // load 
    iNsTr_89 := ->(iNsTr_88) 
    iNsTr_90 := ($cast ($uint<32>) iNsTr_89)
    iNsTr_91 := (iNsTr_84 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_92 := (iNsTr_91 + iNsTr_90)
    iNsTr_93 := (iNsTr_92 + iNsTr_87)
    iNsTr_94 := (iNsTr_93 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_95 := ($cast ($uint<8>) iNsTr_94)
    iNsTr_96 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000001010 ) ]
    ->(iNsTr_96) := iNsTr_95
    // load 
    iNsTr_98 := ->(iNsTr_73) 
    iNsTr_99 := ($cast ($uint<32>) iNsTr_98)
    // load 
    iNsTr_100 := ->(iNsTr_88) 
    iNsTr_101 := ($cast ($uint<32>) iNsTr_100)
    iNsTr_102 := (iNsTr_101 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_103 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010111111 ) ]
    // load 
    iNsTr_104 := ->(iNsTr_103) 
    iNsTr_105 := ($cast ($uint<32>) iNsTr_104)
    iNsTr_106 := (iNsTr_99 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_107 := (iNsTr_106 + iNsTr_105)
    iNsTr_108 := (iNsTr_107 + iNsTr_102)
    iNsTr_109 := (iNsTr_108 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_110 := ($cast ($uint<8>) iNsTr_109)
    iNsTr_111 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000001001 ) ]
    ->(iNsTr_111) := iNsTr_110
    // load 
    iNsTr_113 := ->(iNsTr_88) 
    iNsTr_114 := ($cast ($uint<32>) iNsTr_113)
    // load 
    iNsTr_115 := ->(iNsTr_103) 
    iNsTr_116 := ($cast ($uint<32>) iNsTr_115)
    iNsTr_117 := (iNsTr_116 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_118 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011011111 ) ]
    // load 
    iNsTr_119 := ->(iNsTr_118) 
    iNsTr_120 := ($cast ($uint<32>) iNsTr_119)
    iNsTr_121 := (iNsTr_114 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_122 := (iNsTr_121 + iNsTr_120)
    iNsTr_123 := (iNsTr_122 + iNsTr_117)
    iNsTr_124 := (iNsTr_123 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_125 := ($cast ($uint<8>) iNsTr_124)
    iNsTr_126 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) ]
    ->(iNsTr_126) := iNsTr_125
    // load 
    iNsTr_128 := ->(iNsTr_103) 
    iNsTr_129 := ($cast ($uint<32>) iNsTr_128)
    // load 
    iNsTr_130 := ->(iNsTr_118) 
    iNsTr_131 := ($cast ($uint<32>) iNsTr_130)
    iNsTr_132 := (iNsTr_131 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    iNsTr_133 := (iNsTr_129 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_134 := (iNsTr_133 + iNsTr_132)
    iNsTr_135 := (iNsTr_134 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_136 := ($cast ($uint<8>) iNsTr_135)
    iNsTr_137 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) ]
    ->(iNsTr_137) := iNsTr_136
    iNsTr_139 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) ]
    ->(iNsTr_139) := iNsTr_136
    $place [bb_1_bb_2]
    //begin: basic-block bb_2
    $merge bb_0_bb_2 bb_1_bb_2
    $endmerge
    iNsTr_4 := (i_filters & ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    // compare instruction
    iNsTr_5 := (iNsTr_4 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if iNsTr_5 $then  $place [bb_2_bb_12] $else $place [bb_2_bb_3] $endif 
    //begin: basic-block bb_3
    $merge bb_2_bb_3
    $endmerge
    iNsTr_143 := (i_neighbor & ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    // compare instruction
    iNsTr_144 := (iNsTr_0 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if iNsTr_144 $then  $place [bb_3_bb_5] $else $place [bb_3_bb_4] $endif 
    //begin: basic-block bb_4
    $merge bb_3_bb_4
    $endmerge
    iNsTr_149 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111011111 ) ]
    xx_xpre := src[( $bitcast ($uint<32> ) _b11111111111111111111111111100000 ) ]
    $place [bb_4_bb_6]
    //begin: basic-block bb_5
    $merge bb_3_bb_5
    $endmerge
    iNsTr_147 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111100000 ) ]
    $place [bb_5_bb_6]
    //begin: basic-block bb_6
    $merge bb_4_bb_6 bb_5_bb_6
    $phi xx_xprex_xphi :=  ( $cast ($pointer< $uint<8> >) iNsTr_147) $on bb_5_bb_6 ( $cast ($pointer< $uint<8> >) xx_xpre) $on bb_4_bb_6 
    $phi xx_xinx_xin :=  ( $cast ($pointer< $uint<8> >) iNsTr_147) $on bb_5_bb_6 ( $cast ($pointer< $uint<8> >) iNsTr_149) $on bb_4_bb_6 
    $endmerge
    // load 
    xx_xin := ->(xx_xinx_xin) 
    iNsTr_151 := ($cast ($uint<32>) xx_xin)
    // load 
    iNsTr_152 := ->(xx_xprex_xphi) 
    iNsTr_153 := ($cast ($uint<32>) iNsTr_152)
    iNsTr_154 := (iNsTr_153 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_155 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111100001 ) ]
    // load 
    iNsTr_156 := ->(iNsTr_155) 
    iNsTr_157 := ($cast ($uint<32>) iNsTr_156)
    iNsTr_158 := (iNsTr_151 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_159 := (iNsTr_158 + iNsTr_157)
    iNsTr_160 := (iNsTr_159 + iNsTr_154)
    iNsTr_161 := (iNsTr_160 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_162 := ($cast ($uint<8>) iNsTr_161)
    iNsTr_163 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) ]
    ->(iNsTr_163) := iNsTr_162
    // load 
    iNsTr_165 := ->(xx_xprex_xphi) 
    iNsTr_166 := ($cast ($uint<32>) iNsTr_165)
    // load 
    iNsTr_167 := ->(iNsTr_155) 
    iNsTr_168 := ($cast ($uint<32>) iNsTr_167)
    iNsTr_169 := (iNsTr_168 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_170 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111100010 ) ]
    // load 
    iNsTr_171 := ->(iNsTr_170) 
    iNsTr_172 := ($cast ($uint<32>) iNsTr_171)
    iNsTr_173 := (iNsTr_166 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_174 := (iNsTr_173 + iNsTr_172)
    iNsTr_175 := (iNsTr_174 + iNsTr_169)
    iNsTr_176 := (iNsTr_175 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_177 := ($cast ($uint<8>) iNsTr_176)
    iNsTr_178 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000010001 ) ]
    ->(iNsTr_178) := iNsTr_177
    // load 
    iNsTr_180 := ->(iNsTr_155) 
    iNsTr_181 := ($cast ($uint<32>) iNsTr_180)
    // load 
    iNsTr_182 := ->(iNsTr_170) 
    iNsTr_183 := ($cast ($uint<32>) iNsTr_182)
    iNsTr_184 := (iNsTr_183 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_185 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111100011 ) ]
    // load 
    iNsTr_186 := ->(iNsTr_185) 
    iNsTr_187 := ($cast ($uint<32>) iNsTr_186)
    iNsTr_188 := (iNsTr_181 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_189 := (iNsTr_188 + iNsTr_187)
    iNsTr_190 := (iNsTr_189 + iNsTr_184)
    iNsTr_191 := (iNsTr_190 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_192 := ($cast ($uint<8>) iNsTr_191)
    iNsTr_193 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000010010 ) ]
    ->(iNsTr_193) := iNsTr_192
    // load 
    iNsTr_195 := ->(iNsTr_170) 
    iNsTr_196 := ($cast ($uint<32>) iNsTr_195)
    // load 
    iNsTr_197 := ->(iNsTr_185) 
    iNsTr_198 := ($cast ($uint<32>) iNsTr_197)
    iNsTr_199 := (iNsTr_198 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_200 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111100100 ) ]
    // load 
    iNsTr_201 := ->(iNsTr_200) 
    iNsTr_202 := ($cast ($uint<32>) iNsTr_201)
    iNsTr_203 := (iNsTr_196 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_204 := (iNsTr_203 + iNsTr_202)
    iNsTr_205 := (iNsTr_204 + iNsTr_199)
    iNsTr_206 := (iNsTr_205 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_207 := ($cast ($uint<8>) iNsTr_206)
    iNsTr_208 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ]
    ->(iNsTr_208) := iNsTr_207
    // load 
    iNsTr_210 := ->(iNsTr_185) 
    iNsTr_211 := ($cast ($uint<32>) iNsTr_210)
    // load 
    iNsTr_212 := ->(iNsTr_200) 
    iNsTr_213 := ($cast ($uint<32>) iNsTr_212)
    iNsTr_214 := (iNsTr_213 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_215 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111100101 ) ]
    // load 
    iNsTr_216 := ->(iNsTr_215) 
    iNsTr_217 := ($cast ($uint<32>) iNsTr_216)
    iNsTr_218 := (iNsTr_211 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_219 := (iNsTr_218 + iNsTr_217)
    iNsTr_220 := (iNsTr_219 + iNsTr_214)
    iNsTr_221 := (iNsTr_220 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_222 := ($cast ($uint<8>) iNsTr_221)
    iNsTr_223 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000010100 ) ]
    ->(iNsTr_223) := iNsTr_222
    // load 
    iNsTr_225 := ->(iNsTr_200) 
    iNsTr_226 := ($cast ($uint<32>) iNsTr_225)
    // load 
    iNsTr_227 := ->(iNsTr_215) 
    iNsTr_228 := ($cast ($uint<32>) iNsTr_227)
    iNsTr_229 := (iNsTr_228 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_230 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111100110 ) ]
    // load 
    iNsTr_231 := ->(iNsTr_230) 
    iNsTr_232 := ($cast ($uint<32>) iNsTr_231)
    iNsTr_233 := (iNsTr_226 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_234 := (iNsTr_233 + iNsTr_232)
    iNsTr_235 := (iNsTr_234 + iNsTr_229)
    iNsTr_236 := (iNsTr_235 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_237 := ($cast ($uint<8>) iNsTr_236)
    iNsTr_238 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000010101 ) ]
    ->(iNsTr_238) := iNsTr_237
    // load 
    iNsTr_240 := ->(iNsTr_215) 
    iNsTr_241 := ($cast ($uint<32>) iNsTr_240)
    // load 
    iNsTr_242 := ->(iNsTr_230) 
    iNsTr_243 := ($cast ($uint<32>) iNsTr_242)
    iNsTr_244 := (iNsTr_243 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_245 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111100111 ) ]
    // load 
    iNsTr_246 := ->(iNsTr_245) 
    iNsTr_247 := ($cast ($uint<32>) iNsTr_246)
    iNsTr_248 := (iNsTr_241 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_249 := (iNsTr_248 + iNsTr_247)
    iNsTr_250 := (iNsTr_249 + iNsTr_244)
    iNsTr_251 := (iNsTr_250 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_252 := ($cast ($uint<8>) iNsTr_251)
    iNsTr_253 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000010110 ) ]
    ->(iNsTr_253) := iNsTr_252
    // load 
    iNsTr_255 := ->(iNsTr_230) 
    iNsTr_256 := ($cast ($uint<32>) iNsTr_255)
    // load 
    iNsTr_257 := ->(iNsTr_245) 
    iNsTr_258 := ($cast ($uint<32>) iNsTr_257)
    iNsTr_259 := (iNsTr_258 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    iNsTr_260 := (iNsTr_143 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if iNsTr_260 $then  $place [bb_6_bb_8] $else $place [bb_6_bb_7] $endif 
    //begin: basic-block bb_7
    $merge bb_6_bb_7
    $endmerge
    iNsTr_273 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111101000 ) ]
    // load 
    xx_xin1x_xpre := ->(iNsTr_273) 
    $place [bb_7_bb_8]
    //begin: basic-block bb_8
    $merge bb_6_bb_8 bb_7_bb_8
    $phi xx_xin1 :=  ( $cast ($uint<8>) xx_xin1x_xpre) $on bb_7_bb_8 ( $cast ($uint<8>) iNsTr_257) $on bb_6_bb_8 
    $endmerge
    iNsTr_262 := ($cast ($uint<32>) xx_xin1)
    iNsTr_263 := (iNsTr_256 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_264 := (iNsTr_263 + iNsTr_259)
    iNsTr_265 := (iNsTr_264 + iNsTr_262)
    iNsTr_266 := (iNsTr_265 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_267 := ($cast ($uint<8>) iNsTr_266)
    iNsTr_268 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000010111 ) ]
    ->(iNsTr_268) := iNsTr_267
    iNsTr_270 := (i_filters & ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    // compare instruction
    iNsTr_271 := (iNsTr_270 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if iNsTr_271 $then  $place [bb_8_bb_12] $else $place [bb_8_bb_9] $endif 
    //begin: basic-block bb_9
    $merge bb_8_bb_9
    $endmerge
    // load 
    iNsTr_275 := ->(iNsTr_245) 
    iNsTr_276 := ($cast ($uint<32>) iNsTr_275)
    $if iNsTr_260 $then  $place [bb_9_bb_11] $else $place [bb_9_bb_10] $endif 
    //begin: basic-block bb_10
    $merge bb_9_bb_10
    $endmerge
    iNsTr_292 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111101000 ) ]
    // load 
    iNsTr_293 := ->(iNsTr_292) 
    iNsTr_294 := ($cast ($uint<32>) iNsTr_293)
    iNsTr_295 := (iNsTr_294 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_296 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111101001 ) ]
    // load 
    iNsTr_297 := ->(iNsTr_296) 
    iNsTr_298 := ($cast ($uint<32>) iNsTr_297)
    iNsTr_299 := (iNsTr_276 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_300 := (iNsTr_299 + iNsTr_298)
    iNsTr_301 := (iNsTr_300 + iNsTr_295)
    iNsTr_302 := (iNsTr_301 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_303 := ($cast ($uint<8>) iNsTr_302)
    iNsTr_304 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) ]
    ->(iNsTr_304) := iNsTr_303
    // load 
    iNsTr_306 := ->(iNsTr_292) 
    iNsTr_307 := ($cast ($uint<32>) iNsTr_306)
    // load 
    iNsTr_308 := ->(iNsTr_296) 
    iNsTr_309 := ($cast ($uint<32>) iNsTr_308)
    iNsTr_310 := (iNsTr_309 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_311 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111101010 ) ]
    // load 
    iNsTr_312 := ->(iNsTr_311) 
    iNsTr_313 := ($cast ($uint<32>) iNsTr_312)
    iNsTr_314 := (iNsTr_307 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_315 := (iNsTr_314 + iNsTr_313)
    iNsTr_316 := (iNsTr_315 + iNsTr_310)
    iNsTr_317 := (iNsTr_316 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_318 := ($cast ($uint<8>) iNsTr_317)
    iNsTr_319 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000011001 ) ]
    ->(iNsTr_319) := iNsTr_318
    // load 
    iNsTr_321 := ->(iNsTr_296) 
    iNsTr_322 := ($cast ($uint<32>) iNsTr_321)
    // load 
    iNsTr_323 := ->(iNsTr_311) 
    iNsTr_324 := ($cast ($uint<32>) iNsTr_323)
    iNsTr_325 := (iNsTr_324 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_326 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111101011 ) ]
    // load 
    iNsTr_327 := ->(iNsTr_326) 
    iNsTr_328 := ($cast ($uint<32>) iNsTr_327)
    iNsTr_329 := (iNsTr_322 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_330 := (iNsTr_329 + iNsTr_328)
    iNsTr_331 := (iNsTr_330 + iNsTr_325)
    iNsTr_332 := (iNsTr_331 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_333 := ($cast ($uint<8>) iNsTr_332)
    iNsTr_334 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000011010 ) ]
    ->(iNsTr_334) := iNsTr_333
    // load 
    iNsTr_336 := ->(iNsTr_311) 
    iNsTr_337 := ($cast ($uint<32>) iNsTr_336)
    // load 
    iNsTr_338 := ->(iNsTr_326) 
    iNsTr_339 := ($cast ($uint<32>) iNsTr_338)
    iNsTr_340 := (iNsTr_339 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_341 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111101100 ) ]
    // load 
    iNsTr_342 := ->(iNsTr_341) 
    iNsTr_343 := ($cast ($uint<32>) iNsTr_342)
    iNsTr_344 := (iNsTr_337 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_345 := (iNsTr_344 + iNsTr_343)
    iNsTr_346 := (iNsTr_345 + iNsTr_340)
    iNsTr_347 := (iNsTr_346 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_348 := ($cast ($uint<8>) iNsTr_347)
    iNsTr_349 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000011011 ) ]
    ->(iNsTr_349) := iNsTr_348
    // load 
    iNsTr_351 := ->(iNsTr_326) 
    iNsTr_352 := ($cast ($uint<32>) iNsTr_351)
    // load 
    iNsTr_353 := ->(iNsTr_341) 
    iNsTr_354 := ($cast ($uint<32>) iNsTr_353)
    iNsTr_355 := (iNsTr_354 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_356 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111101101 ) ]
    // load 
    iNsTr_357 := ->(iNsTr_356) 
    iNsTr_358 := ($cast ($uint<32>) iNsTr_357)
    iNsTr_359 := (iNsTr_352 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_360 := (iNsTr_359 + iNsTr_358)
    iNsTr_361 := (iNsTr_360 + iNsTr_355)
    iNsTr_362 := (iNsTr_361 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_363 := ($cast ($uint<8>) iNsTr_362)
    iNsTr_364 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000011100 ) ]
    ->(iNsTr_364) := iNsTr_363
    // load 
    iNsTr_366 := ->(iNsTr_341) 
    iNsTr_367 := ($cast ($uint<32>) iNsTr_366)
    // load 
    iNsTr_368 := ->(iNsTr_356) 
    iNsTr_369 := ($cast ($uint<32>) iNsTr_368)
    iNsTr_370 := (iNsTr_369 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_371 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111101110 ) ]
    // load 
    iNsTr_372 := ->(iNsTr_371) 
    iNsTr_373 := ($cast ($uint<32>) iNsTr_372)
    iNsTr_374 := (iNsTr_367 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_375 := (iNsTr_374 + iNsTr_373)
    iNsTr_376 := (iNsTr_375 + iNsTr_370)
    iNsTr_377 := (iNsTr_376 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_378 := ($cast ($uint<8>) iNsTr_377)
    iNsTr_379 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000011101 ) ]
    ->(iNsTr_379) := iNsTr_378
    // load 
    iNsTr_381 := ->(iNsTr_356) 
    iNsTr_382 := ($cast ($uint<32>) iNsTr_381)
    // load 
    iNsTr_383 := ->(iNsTr_371) 
    iNsTr_384 := ($cast ($uint<32>) iNsTr_383)
    iNsTr_385 := (iNsTr_384 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_386 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111101111 ) ]
    // load 
    iNsTr_387 := ->(iNsTr_386) 
    iNsTr_388 := ($cast ($uint<32>) iNsTr_387)
    iNsTr_389 := (iNsTr_382 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_390 := (iNsTr_389 + iNsTr_388)
    iNsTr_391 := (iNsTr_390 + iNsTr_385)
    iNsTr_392 := (iNsTr_391 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_393 := ($cast ($uint<8>) iNsTr_392)
    iNsTr_394 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000011110 ) ]
    ->(iNsTr_394) := iNsTr_393
    // load 
    iNsTr_396 := ->(iNsTr_371) 
    iNsTr_397 := ($cast ($uint<32>) iNsTr_396)
    // load 
    iNsTr_398 := ->(iNsTr_386) 
    iNsTr_399 := ($cast ($uint<32>) iNsTr_398)
    iNsTr_400 := (iNsTr_399 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    iNsTr_401 := (iNsTr_397 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_402 := (iNsTr_401 + iNsTr_400)
    iNsTr_403 := (iNsTr_402 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_404 := ($cast ($uint<8>) iNsTr_403)
    iNsTr_405 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) ]
    ->(iNsTr_405) := iNsTr_404
    iNsTr_407 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000011111 ) ]
    ->(iNsTr_407) := iNsTr_404
    $place [bb_10_UnifiedReturnBlock]
    //begin: basic-block bb_11
    $merge bb_9_bb_11
    $endmerge
    iNsTr_278 := (iNsTr_276 * ( $bitcast ($uint<32> ) _b00000001000000010000000100000001 ) )
    iNsTr_279 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) ]
    iNsTr_280 := ($bitcast ($pointer< $uint<32> >) iNsTr_279)
    ->(iNsTr_280) := iNsTr_278
    // load 
    iNsTr_282 := ->(iNsTr_245) 
    iNsTr_283 := ($cast ($uint<32>) iNsTr_282)
    iNsTr_284 := (iNsTr_283 * ( $bitcast ($uint<32> ) _b00000001000000010000000100000001 ) )
    iNsTr_285 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000011100 ) ]
    iNsTr_286 := ($bitcast ($pointer< $uint<32> >) iNsTr_285)
    ->(iNsTr_286) := iNsTr_284
    // load 
    iNsTr_288 := ->(iNsTr_245) 
    iNsTr_289 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) ]
    ->(iNsTr_289) := iNsTr_288
    $place [bb_11_UnifiedReturnBlock]
    //begin: basic-block bb_12
    $merge bb_2_bb_12 bb_8_bb_12
    $endmerge
    $place [bb_12_UnifiedReturnBlock]
    //begin: basic-block UnifiedReturnBlock
    $merge bb_10_UnifiedReturnBlock bb_11_UnifiedReturnBlock bb_12_UnifiedReturnBlock
    $endmerge
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [x264_predict_8x8_ddl_c] 
$in (src : $pointer< $uint<8> > edge : $pointer< $uint<8> > )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    iNsTr_0 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) ]
    // load 
    iNsTr_1 := ->(iNsTr_0) 
    iNsTr_2 := ($cast ($uint<32>) iNsTr_1)
    iNsTr_3 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000010001 ) ]
    // load 
    iNsTr_4 := ->(iNsTr_3) 
    iNsTr_5 := ($cast ($uint<32>) iNsTr_4)
    iNsTr_6 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000010010 ) ]
    // load 
    iNsTr_7 := ->(iNsTr_6) 
    iNsTr_8 := ($cast ($uint<32>) iNsTr_7)
    iNsTr_9 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ]
    // load 
    iNsTr_10 := ->(iNsTr_9) 
    iNsTr_11 := ($cast ($uint<32>) iNsTr_10)
    iNsTr_12 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000010100 ) ]
    // load 
    iNsTr_13 := ->(iNsTr_12) 
    iNsTr_14 := ($cast ($uint<32>) iNsTr_13)
    iNsTr_15 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000010101 ) ]
    // load 
    iNsTr_16 := ->(iNsTr_15) 
    iNsTr_17 := ($cast ($uint<32>) iNsTr_16)
    iNsTr_18 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000010110 ) ]
    // load 
    iNsTr_19 := ->(iNsTr_18) 
    iNsTr_20 := ($cast ($uint<32>) iNsTr_19)
    iNsTr_21 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000010111 ) ]
    // load 
    iNsTr_22 := ->(iNsTr_21) 
    iNsTr_23 := ($cast ($uint<32>) iNsTr_22)
    iNsTr_24 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) ]
    // load 
    iNsTr_25 := ->(iNsTr_24) 
    iNsTr_26 := ($cast ($uint<32>) iNsTr_25)
    iNsTr_27 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000011001 ) ]
    // load 
    iNsTr_28 := ->(iNsTr_27) 
    iNsTr_29 := ($cast ($uint<32>) iNsTr_28)
    iNsTr_30 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000011010 ) ]
    // load 
    iNsTr_31 := ->(iNsTr_30) 
    iNsTr_32 := ($cast ($uint<32>) iNsTr_31)
    iNsTr_33 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000011011 ) ]
    // load 
    iNsTr_34 := ->(iNsTr_33) 
    iNsTr_35 := ($cast ($uint<32>) iNsTr_34)
    iNsTr_36 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000011100 ) ]
    // load 
    iNsTr_37 := ->(iNsTr_36) 
    iNsTr_38 := ($cast ($uint<32>) iNsTr_37)
    iNsTr_39 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000011101 ) ]
    // load 
    iNsTr_40 := ->(iNsTr_39) 
    iNsTr_41 := ($cast ($uint<32>) iNsTr_40)
    iNsTr_42 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000011110 ) ]
    // load 
    iNsTr_43 := ->(iNsTr_42) 
    iNsTr_44 := ($cast ($uint<32>) iNsTr_43)
    iNsTr_45 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000011111 ) ]
    // load 
    iNsTr_46 := ->(iNsTr_45) 
    iNsTr_47 := ($cast ($uint<32>) iNsTr_46)
    iNsTr_48 := (iNsTr_5 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_49 := (iNsTr_2 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_50 := (iNsTr_49 + iNsTr_8)
    iNsTr_51 := (iNsTr_50 + iNsTr_48)
    iNsTr_52 := (iNsTr_51 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_53 := ($cast ($uint<8>) iNsTr_52)
    ->(src) := iNsTr_53
    iNsTr_55 := (iNsTr_8 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_56 := (iNsTr_5 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_57 := (iNsTr_56 + iNsTr_11)
    iNsTr_58 := (iNsTr_57 + iNsTr_55)
    iNsTr_59 := (iNsTr_58 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_60 := ($cast ($uint<8>) iNsTr_59)
    iNsTr_61 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    ->(iNsTr_61) := iNsTr_60
    iNsTr_63 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) ]
    ->(iNsTr_63) := iNsTr_60
    iNsTr_65 := (iNsTr_11 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_66 := (iNsTr_8 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_67 := (iNsTr_66 + iNsTr_14)
    iNsTr_68 := (iNsTr_67 + iNsTr_65)
    iNsTr_69 := (iNsTr_68 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_70 := ($cast ($uint<8>) iNsTr_69)
    iNsTr_71 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    ->(iNsTr_71) := iNsTr_70
    iNsTr_73 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000100001 ) ]
    ->(iNsTr_73) := iNsTr_70
    iNsTr_75 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001000000 ) ]
    ->(iNsTr_75) := iNsTr_70
    iNsTr_77 := (iNsTr_14 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_78 := (iNsTr_11 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_79 := (iNsTr_78 + iNsTr_17)
    iNsTr_80 := (iNsTr_79 + iNsTr_77)
    iNsTr_81 := (iNsTr_80 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_82 := ($cast ($uint<8>) iNsTr_81)
    iNsTr_83 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    ->(iNsTr_83) := iNsTr_82
    iNsTr_85 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000100010 ) ]
    ->(iNsTr_85) := iNsTr_82
    iNsTr_87 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001000001 ) ]
    ->(iNsTr_87) := iNsTr_82
    iNsTr_89 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001100000 ) ]
    ->(iNsTr_89) := iNsTr_82
    iNsTr_91 := (iNsTr_17 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_92 := (iNsTr_14 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_93 := (iNsTr_92 + iNsTr_20)
    iNsTr_94 := (iNsTr_93 + iNsTr_91)
    iNsTr_95 := (iNsTr_94 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_96 := ($cast ($uint<8>) iNsTr_95)
    iNsTr_97 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ]
    ->(iNsTr_97) := iNsTr_96
    iNsTr_99 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000100011 ) ]
    ->(iNsTr_99) := iNsTr_96
    iNsTr_101 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001000010 ) ]
    ->(iNsTr_101) := iNsTr_96
    iNsTr_103 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001100001 ) ]
    ->(iNsTr_103) := iNsTr_96
    iNsTr_105 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010000000 ) ]
    ->(iNsTr_105) := iNsTr_96
    iNsTr_107 := (iNsTr_20 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_108 := (iNsTr_17 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_109 := (iNsTr_108 + iNsTr_23)
    iNsTr_110 := (iNsTr_109 + iNsTr_107)
    iNsTr_111 := (iNsTr_110 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_112 := ($cast ($uint<8>) iNsTr_111)
    iNsTr_113 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) ]
    ->(iNsTr_113) := iNsTr_112
    iNsTr_115 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000100100 ) ]
    ->(iNsTr_115) := iNsTr_112
    iNsTr_117 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001000011 ) ]
    ->(iNsTr_117) := iNsTr_112
    iNsTr_119 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001100010 ) ]
    ->(iNsTr_119) := iNsTr_112
    iNsTr_121 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010000001 ) ]
    ->(iNsTr_121) := iNsTr_112
    iNsTr_123 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010100000 ) ]
    ->(iNsTr_123) := iNsTr_112
    iNsTr_125 := (iNsTr_23 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_126 := (iNsTr_20 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_127 := (iNsTr_126 + iNsTr_26)
    iNsTr_128 := (iNsTr_127 + iNsTr_125)
    iNsTr_129 := (iNsTr_128 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_130 := ($cast ($uint<8>) iNsTr_129)
    iNsTr_131 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) ]
    ->(iNsTr_131) := iNsTr_130
    iNsTr_133 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000100101 ) ]
    ->(iNsTr_133) := iNsTr_130
    iNsTr_135 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001000100 ) ]
    ->(iNsTr_135) := iNsTr_130
    iNsTr_137 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001100011 ) ]
    ->(iNsTr_137) := iNsTr_130
    iNsTr_139 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010000010 ) ]
    ->(iNsTr_139) := iNsTr_130
    iNsTr_141 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010100001 ) ]
    ->(iNsTr_141) := iNsTr_130
    iNsTr_143 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011000000 ) ]
    ->(iNsTr_143) := iNsTr_130
    iNsTr_145 := (iNsTr_26 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_146 := (iNsTr_23 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_147 := (iNsTr_146 + iNsTr_29)
    iNsTr_148 := (iNsTr_147 + iNsTr_145)
    iNsTr_149 := (iNsTr_148 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_150 := ($cast ($uint<8>) iNsTr_149)
    iNsTr_151 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) ]
    ->(iNsTr_151) := iNsTr_150
    iNsTr_153 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000100110 ) ]
    ->(iNsTr_153) := iNsTr_150
    iNsTr_155 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ]
    ->(iNsTr_155) := iNsTr_150
    iNsTr_157 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001100100 ) ]
    ->(iNsTr_157) := iNsTr_150
    iNsTr_159 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010000011 ) ]
    ->(iNsTr_159) := iNsTr_150
    iNsTr_161 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010100010 ) ]
    ->(iNsTr_161) := iNsTr_150
    iNsTr_163 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011000001 ) ]
    ->(iNsTr_163) := iNsTr_150
    iNsTr_165 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011100000 ) ]
    ->(iNsTr_165) := iNsTr_150
    iNsTr_167 := (iNsTr_29 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_168 := (iNsTr_26 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_169 := (iNsTr_168 + iNsTr_32)
    iNsTr_170 := (iNsTr_169 + iNsTr_167)
    iNsTr_171 := (iNsTr_170 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_172 := ($cast ($uint<8>) iNsTr_171)
    iNsTr_173 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000100111 ) ]
    ->(iNsTr_173) := iNsTr_172
    iNsTr_175 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001000110 ) ]
    ->(iNsTr_175) := iNsTr_172
    iNsTr_177 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001100101 ) ]
    ->(iNsTr_177) := iNsTr_172
    iNsTr_179 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010000100 ) ]
    ->(iNsTr_179) := iNsTr_172
    iNsTr_181 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010100011 ) ]
    ->(iNsTr_181) := iNsTr_172
    iNsTr_183 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011000010 ) ]
    ->(iNsTr_183) := iNsTr_172
    iNsTr_185 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011100001 ) ]
    ->(iNsTr_185) := iNsTr_172
    iNsTr_187 := (iNsTr_32 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_188 := (iNsTr_29 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_189 := (iNsTr_188 + iNsTr_35)
    iNsTr_190 := (iNsTr_189 + iNsTr_187)
    iNsTr_191 := (iNsTr_190 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_192 := ($cast ($uint<8>) iNsTr_191)
    iNsTr_193 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001000111 ) ]
    ->(iNsTr_193) := iNsTr_192
    iNsTr_195 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001100110 ) ]
    ->(iNsTr_195) := iNsTr_192
    iNsTr_197 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010000101 ) ]
    ->(iNsTr_197) := iNsTr_192
    iNsTr_199 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010100100 ) ]
    ->(iNsTr_199) := iNsTr_192
    iNsTr_201 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011000011 ) ]
    ->(iNsTr_201) := iNsTr_192
    iNsTr_203 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011100010 ) ]
    ->(iNsTr_203) := iNsTr_192
    iNsTr_205 := (iNsTr_35 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_206 := (iNsTr_32 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_207 := (iNsTr_206 + iNsTr_38)
    iNsTr_208 := (iNsTr_207 + iNsTr_205)
    iNsTr_209 := (iNsTr_208 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_210 := ($cast ($uint<8>) iNsTr_209)
    iNsTr_211 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001100111 ) ]
    ->(iNsTr_211) := iNsTr_210
    iNsTr_213 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010000110 ) ]
    ->(iNsTr_213) := iNsTr_210
    iNsTr_215 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010100101 ) ]
    ->(iNsTr_215) := iNsTr_210
    iNsTr_217 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011000100 ) ]
    ->(iNsTr_217) := iNsTr_210
    iNsTr_219 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011100011 ) ]
    ->(iNsTr_219) := iNsTr_210
    iNsTr_221 := (iNsTr_38 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_222 := (iNsTr_35 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_223 := (iNsTr_222 + iNsTr_41)
    iNsTr_224 := (iNsTr_223 + iNsTr_221)
    iNsTr_225 := (iNsTr_224 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_226 := ($cast ($uint<8>) iNsTr_225)
    iNsTr_227 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010000111 ) ]
    ->(iNsTr_227) := iNsTr_226
    iNsTr_229 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010100110 ) ]
    ->(iNsTr_229) := iNsTr_226
    iNsTr_231 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011000101 ) ]
    ->(iNsTr_231) := iNsTr_226
    iNsTr_233 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011100100 ) ]
    ->(iNsTr_233) := iNsTr_226
    iNsTr_235 := (iNsTr_41 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_236 := (iNsTr_38 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_237 := (iNsTr_236 + iNsTr_44)
    iNsTr_238 := (iNsTr_237 + iNsTr_235)
    iNsTr_239 := (iNsTr_238 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_240 := ($cast ($uint<8>) iNsTr_239)
    iNsTr_241 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010100111 ) ]
    ->(iNsTr_241) := iNsTr_240
    iNsTr_243 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011000110 ) ]
    ->(iNsTr_243) := iNsTr_240
    iNsTr_245 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011100101 ) ]
    ->(iNsTr_245) := iNsTr_240
    iNsTr_247 := (iNsTr_44 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_248 := (iNsTr_41 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_249 := (iNsTr_248 + iNsTr_47)
    iNsTr_250 := (iNsTr_249 + iNsTr_247)
    iNsTr_251 := (iNsTr_250 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_252 := ($cast ($uint<8>) iNsTr_251)
    iNsTr_253 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011000111 ) ]
    ->(iNsTr_253) := iNsTr_252
    iNsTr_255 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011100110 ) ]
    ->(iNsTr_255) := iNsTr_252
    iNsTr_257 := (iNsTr_47 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_258 := (iNsTr_44 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_259 := (iNsTr_258 + iNsTr_47)
    iNsTr_260 := (iNsTr_259 + iNsTr_257)
    iNsTr_261 := (iNsTr_260 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_262 := ($cast ($uint<8>) iNsTr_261)
    iNsTr_263 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011100111 ) ]
    ->(iNsTr_263) := iNsTr_262
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [x264_predict_8x8_ddr_c] 
$in (src : $pointer< $uint<8> > edge : $pointer< $uint<8> > )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    iNsTr_0 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) ]
    // load 
    iNsTr_1 := ->(iNsTr_0) 
    iNsTr_2 := ($cast ($uint<32>) iNsTr_1)
    iNsTr_3 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000010001 ) ]
    // load 
    iNsTr_4 := ->(iNsTr_3) 
    iNsTr_5 := ($cast ($uint<32>) iNsTr_4)
    iNsTr_6 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000010010 ) ]
    // load 
    iNsTr_7 := ->(iNsTr_6) 
    iNsTr_8 := ($cast ($uint<32>) iNsTr_7)
    iNsTr_9 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ]
    // load 
    iNsTr_10 := ->(iNsTr_9) 
    iNsTr_11 := ($cast ($uint<32>) iNsTr_10)
    iNsTr_12 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000010100 ) ]
    // load 
    iNsTr_13 := ->(iNsTr_12) 
    iNsTr_14 := ($cast ($uint<32>) iNsTr_13)
    iNsTr_15 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000010101 ) ]
    // load 
    iNsTr_16 := ->(iNsTr_15) 
    iNsTr_17 := ($cast ($uint<32>) iNsTr_16)
    iNsTr_18 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000010110 ) ]
    // load 
    iNsTr_19 := ->(iNsTr_18) 
    iNsTr_20 := ($cast ($uint<32>) iNsTr_19)
    iNsTr_21 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000010111 ) ]
    // load 
    iNsTr_22 := ->(iNsTr_21) 
    iNsTr_23 := ($cast ($uint<32>) iNsTr_22)
    iNsTr_24 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000001110 ) ]
    // load 
    iNsTr_25 := ->(iNsTr_24) 
    iNsTr_26 := ($cast ($uint<32>) iNsTr_25)
    iNsTr_27 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000001101 ) ]
    // load 
    iNsTr_28 := ->(iNsTr_27) 
    iNsTr_29 := ($cast ($uint<32>) iNsTr_28)
    iNsTr_30 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000001100 ) ]
    // load 
    iNsTr_31 := ->(iNsTr_30) 
    iNsTr_32 := ($cast ($uint<32>) iNsTr_31)
    iNsTr_33 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000001011 ) ]
    // load 
    iNsTr_34 := ->(iNsTr_33) 
    iNsTr_35 := ($cast ($uint<32>) iNsTr_34)
    iNsTr_36 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000001010 ) ]
    // load 
    iNsTr_37 := ->(iNsTr_36) 
    iNsTr_38 := ($cast ($uint<32>) iNsTr_37)
    iNsTr_39 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000001001 ) ]
    // load 
    iNsTr_40 := ->(iNsTr_39) 
    iNsTr_41 := ($cast ($uint<32>) iNsTr_40)
    iNsTr_42 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) ]
    // load 
    iNsTr_43 := ->(iNsTr_42) 
    iNsTr_44 := ($cast ($uint<32>) iNsTr_43)
    iNsTr_45 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) ]
    // load 
    iNsTr_46 := ->(iNsTr_45) 
    iNsTr_47 := ($cast ($uint<32>) iNsTr_46)
    iNsTr_48 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000001111 ) ]
    // load 
    iNsTr_49 := ->(iNsTr_48) 
    iNsTr_50 := ($cast ($uint<32>) iNsTr_49)
    iNsTr_51 := (iNsTr_44 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_52 := (iNsTr_41 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_53 := (iNsTr_52 + iNsTr_51)
    iNsTr_54 := (iNsTr_53 + iNsTr_47)
    iNsTr_55 := (iNsTr_54 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_56 := ($cast ($uint<8>) iNsTr_55)
    iNsTr_57 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011100000 ) ]
    ->(iNsTr_57) := iNsTr_56
    iNsTr_59 := (iNsTr_41 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_60 := (iNsTr_38 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_61 := (iNsTr_60 + iNsTr_59)
    iNsTr_62 := (iNsTr_61 + iNsTr_44)
    iNsTr_63 := (iNsTr_62 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_64 := ($cast ($uint<8>) iNsTr_63)
    iNsTr_65 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011100001 ) ]
    ->(iNsTr_65) := iNsTr_64
    iNsTr_67 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011000000 ) ]
    ->(iNsTr_67) := iNsTr_64
    iNsTr_69 := (iNsTr_38 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_70 := (iNsTr_35 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_71 := (iNsTr_70 + iNsTr_69)
    iNsTr_72 := (iNsTr_71 + iNsTr_41)
    iNsTr_73 := (iNsTr_72 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_74 := ($cast ($uint<8>) iNsTr_73)
    iNsTr_75 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011100010 ) ]
    ->(iNsTr_75) := iNsTr_74
    iNsTr_77 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011000001 ) ]
    ->(iNsTr_77) := iNsTr_74
    iNsTr_79 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010100000 ) ]
    ->(iNsTr_79) := iNsTr_74
    iNsTr_81 := (iNsTr_35 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_82 := (iNsTr_32 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_83 := (iNsTr_82 + iNsTr_81)
    iNsTr_84 := (iNsTr_83 + iNsTr_38)
    iNsTr_85 := (iNsTr_84 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_86 := ($cast ($uint<8>) iNsTr_85)
    iNsTr_87 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011100011 ) ]
    ->(iNsTr_87) := iNsTr_86
    iNsTr_89 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011000010 ) ]
    ->(iNsTr_89) := iNsTr_86
    iNsTr_91 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010100001 ) ]
    ->(iNsTr_91) := iNsTr_86
    iNsTr_93 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010000000 ) ]
    ->(iNsTr_93) := iNsTr_86
    iNsTr_95 := (iNsTr_32 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_96 := (iNsTr_29 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_97 := (iNsTr_96 + iNsTr_95)
    iNsTr_98 := (iNsTr_97 + iNsTr_35)
    iNsTr_99 := (iNsTr_98 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_100 := ($cast ($uint<8>) iNsTr_99)
    iNsTr_101 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011100100 ) ]
    ->(iNsTr_101) := iNsTr_100
    iNsTr_103 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011000011 ) ]
    ->(iNsTr_103) := iNsTr_100
    iNsTr_105 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010100010 ) ]
    ->(iNsTr_105) := iNsTr_100
    iNsTr_107 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010000001 ) ]
    ->(iNsTr_107) := iNsTr_100
    iNsTr_109 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001100000 ) ]
    ->(iNsTr_109) := iNsTr_100
    iNsTr_111 := (iNsTr_29 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_112 := (iNsTr_26 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_113 := (iNsTr_112 + iNsTr_111)
    iNsTr_114 := (iNsTr_113 + iNsTr_32)
    iNsTr_115 := (iNsTr_114 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_116 := ($cast ($uint<8>) iNsTr_115)
    iNsTr_117 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011100101 ) ]
    ->(iNsTr_117) := iNsTr_116
    iNsTr_119 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011000100 ) ]
    ->(iNsTr_119) := iNsTr_116
    iNsTr_121 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010100011 ) ]
    ->(iNsTr_121) := iNsTr_116
    iNsTr_123 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010000010 ) ]
    ->(iNsTr_123) := iNsTr_116
    iNsTr_125 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001100001 ) ]
    ->(iNsTr_125) := iNsTr_116
    iNsTr_127 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001000000 ) ]
    ->(iNsTr_127) := iNsTr_116
    iNsTr_129 := (iNsTr_26 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_130 := (iNsTr_129 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_131 := (iNsTr_130 + iNsTr_29)
    iNsTr_132 := (iNsTr_131 + iNsTr_50)
    iNsTr_133 := (iNsTr_132 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_134 := ($cast ($uint<8>) iNsTr_133)
    iNsTr_135 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011100110 ) ]
    ->(iNsTr_135) := iNsTr_134
    iNsTr_137 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011000101 ) ]
    ->(iNsTr_137) := iNsTr_134
    iNsTr_139 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010100100 ) ]
    ->(iNsTr_139) := iNsTr_134
    iNsTr_141 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010000011 ) ]
    ->(iNsTr_141) := iNsTr_134
    iNsTr_143 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001100010 ) ]
    ->(iNsTr_143) := iNsTr_134
    iNsTr_145 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001000001 ) ]
    ->(iNsTr_145) := iNsTr_134
    iNsTr_147 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) ]
    ->(iNsTr_147) := iNsTr_134
    iNsTr_149 := (iNsTr_50 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_150 := (iNsTr_2 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_151 := (iNsTr_150 + iNsTr_26)
    iNsTr_152 := (iNsTr_151 + iNsTr_149)
    iNsTr_153 := (iNsTr_152 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_154 := ($cast ($uint<8>) iNsTr_153)
    iNsTr_155 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011100111 ) ]
    ->(iNsTr_155) := iNsTr_154
    iNsTr_157 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011000110 ) ]
    ->(iNsTr_157) := iNsTr_154
    iNsTr_159 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010100101 ) ]
    ->(iNsTr_159) := iNsTr_154
    iNsTr_161 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010000100 ) ]
    ->(iNsTr_161) := iNsTr_154
    iNsTr_163 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001100011 ) ]
    ->(iNsTr_163) := iNsTr_154
    iNsTr_165 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001000010 ) ]
    ->(iNsTr_165) := iNsTr_154
    iNsTr_167 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000100001 ) ]
    ->(iNsTr_167) := iNsTr_154
    ->(src) := iNsTr_154
    iNsTr_170 := (iNsTr_2 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_171 := (iNsTr_5 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_172 := (iNsTr_171 + iNsTr_170)
    iNsTr_173 := (iNsTr_172 + iNsTr_50)
    iNsTr_174 := (iNsTr_173 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_175 := ($cast ($uint<8>) iNsTr_174)
    iNsTr_176 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011000111 ) ]
    ->(iNsTr_176) := iNsTr_175
    iNsTr_178 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010100110 ) ]
    ->(iNsTr_178) := iNsTr_175
    iNsTr_180 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010000101 ) ]
    ->(iNsTr_180) := iNsTr_175
    iNsTr_182 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001100100 ) ]
    ->(iNsTr_182) := iNsTr_175
    iNsTr_184 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001000011 ) ]
    ->(iNsTr_184) := iNsTr_175
    iNsTr_186 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000100010 ) ]
    ->(iNsTr_186) := iNsTr_175
    iNsTr_188 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    ->(iNsTr_188) := iNsTr_175
    iNsTr_190 := (iNsTr_5 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_191 := (iNsTr_150 + iNsTr_8)
    iNsTr_192 := (iNsTr_191 + iNsTr_190)
    iNsTr_193 := (iNsTr_192 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_194 := ($cast ($uint<8>) iNsTr_193)
    iNsTr_195 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010100111 ) ]
    ->(iNsTr_195) := iNsTr_194
    iNsTr_197 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010000110 ) ]
    ->(iNsTr_197) := iNsTr_194
    iNsTr_199 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001100101 ) ]
    ->(iNsTr_199) := iNsTr_194
    iNsTr_201 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001000100 ) ]
    ->(iNsTr_201) := iNsTr_194
    iNsTr_203 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000100011 ) ]
    ->(iNsTr_203) := iNsTr_194
    iNsTr_205 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    ->(iNsTr_205) := iNsTr_194
    iNsTr_207 := (iNsTr_8 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_208 := (iNsTr_171 + iNsTr_11)
    iNsTr_209 := (iNsTr_208 + iNsTr_207)
    iNsTr_210 := (iNsTr_209 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_211 := ($cast ($uint<8>) iNsTr_210)
    iNsTr_212 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010000111 ) ]
    ->(iNsTr_212) := iNsTr_211
    iNsTr_214 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001100110 ) ]
    ->(iNsTr_214) := iNsTr_211
    iNsTr_216 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ]
    ->(iNsTr_216) := iNsTr_211
    iNsTr_218 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000100100 ) ]
    ->(iNsTr_218) := iNsTr_211
    iNsTr_220 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    ->(iNsTr_220) := iNsTr_211
    iNsTr_222 := (iNsTr_11 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_223 := (iNsTr_8 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_224 := (iNsTr_223 + iNsTr_14)
    iNsTr_225 := (iNsTr_224 + iNsTr_222)
    iNsTr_226 := (iNsTr_225 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_227 := ($cast ($uint<8>) iNsTr_226)
    iNsTr_228 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001100111 ) ]
    ->(iNsTr_228) := iNsTr_227
    iNsTr_230 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001000110 ) ]
    ->(iNsTr_230) := iNsTr_227
    iNsTr_232 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000100101 ) ]
    ->(iNsTr_232) := iNsTr_227
    iNsTr_234 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ]
    ->(iNsTr_234) := iNsTr_227
    iNsTr_236 := (iNsTr_14 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_237 := (iNsTr_11 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_238 := (iNsTr_237 + iNsTr_17)
    iNsTr_239 := (iNsTr_238 + iNsTr_236)
    iNsTr_240 := (iNsTr_239 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_241 := ($cast ($uint<8>) iNsTr_240)
    iNsTr_242 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001000111 ) ]
    ->(iNsTr_242) := iNsTr_241
    iNsTr_244 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000100110 ) ]
    ->(iNsTr_244) := iNsTr_241
    iNsTr_246 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) ]
    ->(iNsTr_246) := iNsTr_241
    iNsTr_248 := (iNsTr_17 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_249 := (iNsTr_14 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_250 := (iNsTr_249 + iNsTr_20)
    iNsTr_251 := (iNsTr_250 + iNsTr_248)
    iNsTr_252 := (iNsTr_251 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_253 := ($cast ($uint<8>) iNsTr_252)
    iNsTr_254 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000100111 ) ]
    ->(iNsTr_254) := iNsTr_253
    iNsTr_256 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) ]
    ->(iNsTr_256) := iNsTr_253
    iNsTr_258 := (iNsTr_20 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_259 := (iNsTr_17 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_260 := (iNsTr_259 + iNsTr_23)
    iNsTr_261 := (iNsTr_260 + iNsTr_258)
    iNsTr_262 := (iNsTr_261 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_263 := ($cast ($uint<8>) iNsTr_262)
    iNsTr_264 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) ]
    ->(iNsTr_264) := iNsTr_263
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [x264_predict_8x8_vr_c] 
$in (src : $pointer< $uint<8> > edge : $pointer< $uint<8> > )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    iNsTr_0 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) ]
    // load 
    iNsTr_1 := ->(iNsTr_0) 
    iNsTr_2 := ($cast ($uint<32>) iNsTr_1)
    iNsTr_3 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000010001 ) ]
    // load 
    iNsTr_4 := ->(iNsTr_3) 
    iNsTr_5 := ($cast ($uint<32>) iNsTr_4)
    iNsTr_6 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000010010 ) ]
    // load 
    iNsTr_7 := ->(iNsTr_6) 
    iNsTr_8 := ($cast ($uint<32>) iNsTr_7)
    iNsTr_9 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ]
    // load 
    iNsTr_10 := ->(iNsTr_9) 
    iNsTr_11 := ($cast ($uint<32>) iNsTr_10)
    iNsTr_12 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000010100 ) ]
    // load 
    iNsTr_13 := ->(iNsTr_12) 
    iNsTr_14 := ($cast ($uint<32>) iNsTr_13)
    iNsTr_15 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000010101 ) ]
    // load 
    iNsTr_16 := ->(iNsTr_15) 
    iNsTr_17 := ($cast ($uint<32>) iNsTr_16)
    iNsTr_18 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000010110 ) ]
    // load 
    iNsTr_19 := ->(iNsTr_18) 
    iNsTr_20 := ($cast ($uint<32>) iNsTr_19)
    iNsTr_21 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000010111 ) ]
    // load 
    iNsTr_22 := ->(iNsTr_21) 
    iNsTr_23 := ($cast ($uint<32>) iNsTr_22)
    iNsTr_24 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000001110 ) ]
    // load 
    iNsTr_25 := ->(iNsTr_24) 
    iNsTr_26 := ($cast ($uint<32>) iNsTr_25)
    iNsTr_27 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000001101 ) ]
    // load 
    iNsTr_28 := ->(iNsTr_27) 
    iNsTr_29 := ($cast ($uint<32>) iNsTr_28)
    iNsTr_30 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000001100 ) ]
    // load 
    iNsTr_31 := ->(iNsTr_30) 
    iNsTr_32 := ($cast ($uint<32>) iNsTr_31)
    iNsTr_33 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000001011 ) ]
    // load 
    iNsTr_34 := ->(iNsTr_33) 
    iNsTr_35 := ($cast ($uint<32>) iNsTr_34)
    iNsTr_36 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000001010 ) ]
    // load 
    iNsTr_37 := ->(iNsTr_36) 
    iNsTr_38 := ($cast ($uint<32>) iNsTr_37)
    iNsTr_39 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000001001 ) ]
    // load 
    iNsTr_40 := ->(iNsTr_39) 
    iNsTr_41 := ($cast ($uint<32>) iNsTr_40)
    iNsTr_42 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) ]
    // load 
    iNsTr_43 := ->(iNsTr_42) 
    iNsTr_44 := ($cast ($uint<32>) iNsTr_43)
    iNsTr_45 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000001111 ) ]
    // load 
    iNsTr_46 := ->(iNsTr_45) 
    iNsTr_47 := ($cast ($uint<32>) iNsTr_46)
    iNsTr_48 := (iNsTr_38 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_49 := (iNsTr_35 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_50 := (iNsTr_49 + iNsTr_48)
    iNsTr_51 := (iNsTr_50 + iNsTr_41)
    iNsTr_52 := (iNsTr_51 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_53 := ($cast ($uint<8>) iNsTr_52)
    iNsTr_54 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011000000 ) ]
    ->(iNsTr_54) := iNsTr_53
    iNsTr_56 := (iNsTr_41 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_57 := (iNsTr_38 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_58 := (iNsTr_57 + iNsTr_56)
    iNsTr_59 := (iNsTr_58 + iNsTr_44)
    iNsTr_60 := (iNsTr_59 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_61 := ($cast ($uint<8>) iNsTr_60)
    iNsTr_62 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011100000 ) ]
    ->(iNsTr_62) := iNsTr_61
    iNsTr_64 := (iNsTr_32 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_65 := (iNsTr_29 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_66 := (iNsTr_65 + iNsTr_64)
    iNsTr_67 := (iNsTr_66 + iNsTr_35)
    iNsTr_68 := (iNsTr_67 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_69 := ($cast ($uint<8>) iNsTr_68)
    iNsTr_70 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011000001 ) ]
    ->(iNsTr_70) := iNsTr_69
    iNsTr_72 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010000000 ) ]
    ->(iNsTr_72) := iNsTr_69
    iNsTr_74 := (iNsTr_35 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_75 := (iNsTr_32 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_76 := (iNsTr_75 + iNsTr_74)
    iNsTr_77 := (iNsTr_76 + iNsTr_38)
    iNsTr_78 := (iNsTr_77 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_79 := ($cast ($uint<8>) iNsTr_78)
    iNsTr_80 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011100001 ) ]
    ->(iNsTr_80) := iNsTr_79
    iNsTr_82 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010100000 ) ]
    ->(iNsTr_82) := iNsTr_79
    iNsTr_84 := (iNsTr_26 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_85 := (iNsTr_84 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_86 := (iNsTr_85 + iNsTr_29)
    iNsTr_87 := (iNsTr_86 + iNsTr_47)
    iNsTr_88 := (iNsTr_87 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_89 := ($cast ($uint<8>) iNsTr_88)
    iNsTr_90 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011000010 ) ]
    ->(iNsTr_90) := iNsTr_89
    iNsTr_92 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010000001 ) ]
    ->(iNsTr_92) := iNsTr_89
    iNsTr_94 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001000000 ) ]
    ->(iNsTr_94) := iNsTr_89
    iNsTr_96 := (iNsTr_29 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_97 := (iNsTr_26 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_98 := (iNsTr_97 + iNsTr_96)
    iNsTr_99 := (iNsTr_98 + iNsTr_32)
    iNsTr_100 := (iNsTr_99 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_101 := ($cast ($uint<8>) iNsTr_100)
    iNsTr_102 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011100010 ) ]
    ->(iNsTr_102) := iNsTr_101
    iNsTr_104 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010100001 ) ]
    ->(iNsTr_104) := iNsTr_101
    iNsTr_106 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001100000 ) ]
    ->(iNsTr_106) := iNsTr_101
    iNsTr_108 := (iNsTr_47 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_109 := (iNsTr_2 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_110 := (iNsTr_109 + iNsTr_26)
    iNsTr_111 := (iNsTr_110 + iNsTr_108)
    iNsTr_112 := (iNsTr_111 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_113 := ($cast ($uint<8>) iNsTr_112)
    iNsTr_114 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011100011 ) ]
    ->(iNsTr_114) := iNsTr_113
    iNsTr_116 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010100010 ) ]
    ->(iNsTr_116) := iNsTr_113
    iNsTr_118 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001100001 ) ]
    ->(iNsTr_118) := iNsTr_113
    iNsTr_120 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) ]
    ->(iNsTr_120) := iNsTr_113
    iNsTr_122 := (iNsTr_2 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_123 := (iNsTr_122 + iNsTr_47)
    iNsTr_124 := (iNsTr_123 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_125 := ($cast ($uint<8>) iNsTr_124)
    iNsTr_126 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011000011 ) ]
    ->(iNsTr_126) := iNsTr_125
    iNsTr_128 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010000010 ) ]
    ->(iNsTr_128) := iNsTr_125
    iNsTr_130 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001000001 ) ]
    ->(iNsTr_130) := iNsTr_125
    ->(src) := iNsTr_125
    iNsTr_133 := (iNsTr_2 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_134 := (iNsTr_5 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_135 := (iNsTr_134 + iNsTr_133)
    iNsTr_136 := (iNsTr_135 + iNsTr_47)
    iNsTr_137 := (iNsTr_136 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_138 := ($cast ($uint<8>) iNsTr_137)
    iNsTr_139 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011100100 ) ]
    ->(iNsTr_139) := iNsTr_138
    iNsTr_141 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010100011 ) ]
    ->(iNsTr_141) := iNsTr_138
    iNsTr_143 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001100010 ) ]
    ->(iNsTr_143) := iNsTr_138
    iNsTr_145 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000100001 ) ]
    ->(iNsTr_145) := iNsTr_138
    iNsTr_147 := (iNsTr_122 + iNsTr_5)
    iNsTr_148 := (iNsTr_147 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_149 := ($cast ($uint<8>) iNsTr_148)
    iNsTr_150 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011000100 ) ]
    ->(iNsTr_150) := iNsTr_149
    iNsTr_152 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010000011 ) ]
    ->(iNsTr_152) := iNsTr_149
    iNsTr_154 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001000010 ) ]
    ->(iNsTr_154) := iNsTr_149
    iNsTr_156 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    ->(iNsTr_156) := iNsTr_149
    iNsTr_158 := (iNsTr_5 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_159 := (iNsTr_109 + iNsTr_8)
    iNsTr_160 := (iNsTr_159 + iNsTr_158)
    iNsTr_161 := (iNsTr_160 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_162 := ($cast ($uint<8>) iNsTr_161)
    iNsTr_163 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011100101 ) ]
    ->(iNsTr_163) := iNsTr_162
    iNsTr_165 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010100100 ) ]
    ->(iNsTr_165) := iNsTr_162
    iNsTr_167 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001100011 ) ]
    ->(iNsTr_167) := iNsTr_162
    iNsTr_169 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000100010 ) ]
    ->(iNsTr_169) := iNsTr_162
    iNsTr_171 := (iNsTr_5 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_172 := (iNsTr_171 + iNsTr_8)
    iNsTr_173 := (iNsTr_172 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_174 := ($cast ($uint<8>) iNsTr_173)
    iNsTr_175 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011000101 ) ]
    ->(iNsTr_175) := iNsTr_174
    iNsTr_177 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010000100 ) ]
    ->(iNsTr_177) := iNsTr_174
    iNsTr_179 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001000011 ) ]
    ->(iNsTr_179) := iNsTr_174
    iNsTr_181 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    ->(iNsTr_181) := iNsTr_174
    iNsTr_183 := (iNsTr_8 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_184 := (iNsTr_134 + iNsTr_11)
    iNsTr_185 := (iNsTr_184 + iNsTr_183)
    iNsTr_186 := (iNsTr_185 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_187 := ($cast ($uint<8>) iNsTr_186)
    iNsTr_188 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011100110 ) ]
    ->(iNsTr_188) := iNsTr_187
    iNsTr_190 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010100101 ) ]
    ->(iNsTr_190) := iNsTr_187
    iNsTr_192 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001100100 ) ]
    ->(iNsTr_192) := iNsTr_187
    iNsTr_194 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000100011 ) ]
    ->(iNsTr_194) := iNsTr_187
    iNsTr_196 := (iNsTr_8 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_197 := (iNsTr_196 + iNsTr_11)
    iNsTr_198 := (iNsTr_197 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_199 := ($cast ($uint<8>) iNsTr_198)
    iNsTr_200 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011000110 ) ]
    ->(iNsTr_200) := iNsTr_199
    iNsTr_202 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010000101 ) ]
    ->(iNsTr_202) := iNsTr_199
    iNsTr_204 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001000100 ) ]
    ->(iNsTr_204) := iNsTr_199
    iNsTr_206 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    ->(iNsTr_206) := iNsTr_199
    iNsTr_208 := (iNsTr_11 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_209 := (iNsTr_8 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_210 := (iNsTr_209 + iNsTr_14)
    iNsTr_211 := (iNsTr_210 + iNsTr_208)
    iNsTr_212 := (iNsTr_211 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_213 := ($cast ($uint<8>) iNsTr_212)
    iNsTr_214 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011100111 ) ]
    ->(iNsTr_214) := iNsTr_213
    iNsTr_216 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010100110 ) ]
    ->(iNsTr_216) := iNsTr_213
    iNsTr_218 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001100101 ) ]
    ->(iNsTr_218) := iNsTr_213
    iNsTr_220 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000100100 ) ]
    ->(iNsTr_220) := iNsTr_213
    iNsTr_222 := (iNsTr_11 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_223 := (iNsTr_222 + iNsTr_14)
    iNsTr_224 := (iNsTr_223 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_225 := ($cast ($uint<8>) iNsTr_224)
    iNsTr_226 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011000111 ) ]
    ->(iNsTr_226) := iNsTr_225
    iNsTr_228 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010000110 ) ]
    ->(iNsTr_228) := iNsTr_225
    iNsTr_230 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ]
    ->(iNsTr_230) := iNsTr_225
    iNsTr_232 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ]
    ->(iNsTr_232) := iNsTr_225
    iNsTr_234 := (iNsTr_14 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_235 := (iNsTr_11 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_236 := (iNsTr_235 + iNsTr_17)
    iNsTr_237 := (iNsTr_236 + iNsTr_234)
    iNsTr_238 := (iNsTr_237 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_239 := ($cast ($uint<8>) iNsTr_238)
    iNsTr_240 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010100111 ) ]
    ->(iNsTr_240) := iNsTr_239
    iNsTr_242 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001100110 ) ]
    ->(iNsTr_242) := iNsTr_239
    iNsTr_244 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000100101 ) ]
    ->(iNsTr_244) := iNsTr_239
    iNsTr_246 := (iNsTr_14 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_247 := (iNsTr_246 + iNsTr_17)
    iNsTr_248 := (iNsTr_247 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_249 := ($cast ($uint<8>) iNsTr_248)
    iNsTr_250 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010000111 ) ]
    ->(iNsTr_250) := iNsTr_249
    iNsTr_252 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001000110 ) ]
    ->(iNsTr_252) := iNsTr_249
    iNsTr_254 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) ]
    ->(iNsTr_254) := iNsTr_249
    iNsTr_256 := (iNsTr_17 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_257 := (iNsTr_14 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_258 := (iNsTr_257 + iNsTr_20)
    iNsTr_259 := (iNsTr_258 + iNsTr_256)
    iNsTr_260 := (iNsTr_259 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_261 := ($cast ($uint<8>) iNsTr_260)
    iNsTr_262 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001100111 ) ]
    ->(iNsTr_262) := iNsTr_261
    iNsTr_264 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000100110 ) ]
    ->(iNsTr_264) := iNsTr_261
    iNsTr_266 := (iNsTr_17 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_267 := (iNsTr_266 + iNsTr_20)
    iNsTr_268 := (iNsTr_267 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_269 := ($cast ($uint<8>) iNsTr_268)
    iNsTr_270 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001000111 ) ]
    ->(iNsTr_270) := iNsTr_269
    iNsTr_272 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) ]
    ->(iNsTr_272) := iNsTr_269
    iNsTr_274 := (iNsTr_20 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_275 := (iNsTr_17 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_276 := (iNsTr_275 + iNsTr_23)
    iNsTr_277 := (iNsTr_276 + iNsTr_274)
    iNsTr_278 := (iNsTr_277 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_279 := ($cast ($uint<8>) iNsTr_278)
    iNsTr_280 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000100111 ) ]
    ->(iNsTr_280) := iNsTr_279
    iNsTr_282 := (iNsTr_20 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_283 := (iNsTr_282 + iNsTr_23)
    iNsTr_284 := (iNsTr_283 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_285 := ($cast ($uint<8>) iNsTr_284)
    iNsTr_286 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) ]
    ->(iNsTr_286) := iNsTr_285
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [x264_predict_8x8_hd_c] 
$in (src : $pointer< $uint<8> > edge : $pointer< $uint<8> > )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    iNsTr_0 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) ]
    // load 
    iNsTr_1 := ->(iNsTr_0) 
    iNsTr_2 := ($cast ($uint<32>) iNsTr_1)
    iNsTr_3 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000010001 ) ]
    // load 
    iNsTr_4 := ->(iNsTr_3) 
    iNsTr_5 := ($cast ($uint<32>) iNsTr_4)
    iNsTr_6 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000010010 ) ]
    // load 
    iNsTr_7 := ->(iNsTr_6) 
    iNsTr_8 := ($cast ($uint<32>) iNsTr_7)
    iNsTr_9 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ]
    // load 
    iNsTr_10 := ->(iNsTr_9) 
    iNsTr_11 := ($cast ($uint<32>) iNsTr_10)
    iNsTr_12 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000010100 ) ]
    // load 
    iNsTr_13 := ->(iNsTr_12) 
    iNsTr_14 := ($cast ($uint<32>) iNsTr_13)
    iNsTr_15 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000010101 ) ]
    // load 
    iNsTr_16 := ->(iNsTr_15) 
    iNsTr_17 := ($cast ($uint<32>) iNsTr_16)
    iNsTr_18 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000010110 ) ]
    // load 
    iNsTr_19 := ->(iNsTr_18) 
    iNsTr_20 := ($cast ($uint<32>) iNsTr_19)
    iNsTr_21 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000001110 ) ]
    // load 
    iNsTr_22 := ->(iNsTr_21) 
    iNsTr_23 := ($cast ($uint<32>) iNsTr_22)
    iNsTr_24 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000001101 ) ]
    // load 
    iNsTr_25 := ->(iNsTr_24) 
    iNsTr_26 := ($cast ($uint<32>) iNsTr_25)
    iNsTr_27 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000001100 ) ]
    // load 
    iNsTr_28 := ->(iNsTr_27) 
    iNsTr_29 := ($cast ($uint<32>) iNsTr_28)
    iNsTr_30 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000001011 ) ]
    // load 
    iNsTr_31 := ->(iNsTr_30) 
    iNsTr_32 := ($cast ($uint<32>) iNsTr_31)
    iNsTr_33 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000001010 ) ]
    // load 
    iNsTr_34 := ->(iNsTr_33) 
    iNsTr_35 := ($cast ($uint<32>) iNsTr_34)
    iNsTr_36 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000001001 ) ]
    // load 
    iNsTr_37 := ->(iNsTr_36) 
    iNsTr_38 := ($cast ($uint<32>) iNsTr_37)
    iNsTr_39 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) ]
    // load 
    iNsTr_40 := ->(iNsTr_39) 
    iNsTr_41 := ($cast ($uint<32>) iNsTr_40)
    iNsTr_42 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) ]
    // load 
    iNsTr_43 := ->(iNsTr_42) 
    iNsTr_44 := ($cast ($uint<32>) iNsTr_43)
    iNsTr_45 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000001111 ) ]
    // load 
    iNsTr_46 := ->(iNsTr_45) 
    iNsTr_47 := ($cast ($uint<32>) iNsTr_46)
    iNsTr_48 := (iNsTr_41 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_49 := (iNsTr_48 + iNsTr_44)
    iNsTr_50 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_49) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )))
    iNsTr_51 := (iNsTr_41 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_52 := (iNsTr_44 + iNsTr_38)
    iNsTr_53 := (iNsTr_52 + iNsTr_51)
    iNsTr_54 := (iNsTr_53 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    iNsTr_55 := (iNsTr_54 + ( $bitcast ($uint<32> ) _b00000000000000000000000010000000 ) )
    iNsTr_56 := (iNsTr_55 & ( $bitcast ($uint<32> ) _b11111111111111111111111100000000 ) )
    iNsTr_57 := (iNsTr_38 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_58 := (iNsTr_57 + iNsTr_41)
    iNsTr_59 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_58) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )))
    iNsTr_60 := (iNsTr_38 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_61 := (iNsTr_41 + iNsTr_35)
    iNsTr_62 := (iNsTr_61 + iNsTr_60)
    iNsTr_63 := (iNsTr_62 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    iNsTr_64 := (iNsTr_63 + ( $bitcast ($uint<32> ) _b00000000000000000000000010000000 ) )
    iNsTr_65 := (iNsTr_64 & ( $bitcast ($uint<32> ) _b11111111111111111111111100000000 ) )
    iNsTr_66 := (iNsTr_65 + iNsTr_59)
    iNsTr_67 := (iNsTr_35 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_68 := (iNsTr_67 + iNsTr_38)
    iNsTr_69 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_68) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )))
    iNsTr_70 := (iNsTr_35 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_71 := (iNsTr_38 + iNsTr_32)
    iNsTr_72 := (iNsTr_71 + iNsTr_70)
    iNsTr_73 := (iNsTr_72 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    iNsTr_74 := (iNsTr_73 + ( $bitcast ($uint<32> ) _b00000000000000000000000010000000 ) )
    iNsTr_75 := (iNsTr_74 & ( $bitcast ($uint<32> ) _b11111111111111111111111100000000 ) )
    iNsTr_76 := (iNsTr_75 + iNsTr_69)
    iNsTr_77 := (iNsTr_32 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_78 := (iNsTr_77 + iNsTr_35)
    iNsTr_79 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_78) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )))
    iNsTr_80 := (iNsTr_32 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_81 := (iNsTr_35 + iNsTr_29)
    iNsTr_82 := (iNsTr_81 + iNsTr_80)
    iNsTr_83 := (iNsTr_82 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    iNsTr_84 := (iNsTr_83 + ( $bitcast ($uint<32> ) _b00000000000000000000000010000000 ) )
    iNsTr_85 := (iNsTr_84 & ( $bitcast ($uint<32> ) _b11111111111111111111111100000000 ) )
    iNsTr_86 := (iNsTr_85 + iNsTr_79)
    iNsTr_87 := (iNsTr_29 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_88 := (iNsTr_87 + iNsTr_32)
    iNsTr_89 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_88) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )))
    iNsTr_90 := (iNsTr_29 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_91 := (iNsTr_32 + iNsTr_26)
    iNsTr_92 := (iNsTr_91 + iNsTr_90)
    iNsTr_93 := (iNsTr_92 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    iNsTr_94 := (iNsTr_93 + ( $bitcast ($uint<32> ) _b00000000000000000000000010000000 ) )
    iNsTr_95 := (iNsTr_94 & ( $bitcast ($uint<32> ) _b11111111111111111111111100000000 ) )
    iNsTr_96 := (iNsTr_95 + iNsTr_89)
    iNsTr_97 := (iNsTr_26 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_98 := (iNsTr_97 + iNsTr_29)
    iNsTr_99 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_98) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )))
    iNsTr_100 := (iNsTr_26 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_101 := (iNsTr_29 + iNsTr_23)
    iNsTr_102 := (iNsTr_101 + iNsTr_100)
    iNsTr_103 := (iNsTr_102 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    iNsTr_104 := (iNsTr_103 + ( $bitcast ($uint<32> ) _b00000000000000000000000010000000 ) )
    iNsTr_105 := (iNsTr_104 & ( $bitcast ($uint<32> ) _b11111111111111111111111100000000 ) )
    iNsTr_106 := (iNsTr_105 + iNsTr_99)
    iNsTr_107 := (iNsTr_23 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_108 := (iNsTr_107 + iNsTr_26)
    iNsTr_109 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_108) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )))
    iNsTr_110 := (iNsTr_23 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_111 := (iNsTr_110 + iNsTr_26)
    iNsTr_112 := (iNsTr_111 + iNsTr_47)
    iNsTr_113 := (iNsTr_112 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    iNsTr_114 := (iNsTr_113 + ( $bitcast ($uint<32> ) _b00000000000000000000000010000000 ) )
    iNsTr_115 := (iNsTr_114 & ( $bitcast ($uint<32> ) _b11111111111111111111111100000000 ) )
    iNsTr_116 := (iNsTr_115 + iNsTr_109)
    iNsTr_117 := (iNsTr_107 + iNsTr_47)
    iNsTr_118 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_117) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )))
    iNsTr_119 := (iNsTr_47 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_120 := (iNsTr_23 + iNsTr_2)
    iNsTr_121 := (iNsTr_120 + iNsTr_119)
    iNsTr_122 := (iNsTr_121 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    iNsTr_123 := (iNsTr_122 + ( $bitcast ($uint<32> ) _b00000000000000000000000010000000 ) )
    iNsTr_124 := (iNsTr_123 & ( $bitcast ($uint<32> ) _b11111111111111111111111100000000 ) )
    iNsTr_125 := (iNsTr_124 + iNsTr_118)
    iNsTr_126 := (iNsTr_2 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_127 := (iNsTr_126 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_128 := (iNsTr_127 + iNsTr_5)
    iNsTr_129 := (iNsTr_128 + iNsTr_47)
    iNsTr_130 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_129) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )))
    iNsTr_131 := (iNsTr_5 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_132 := (iNsTr_131 + iNsTr_2)
    iNsTr_133 := (iNsTr_132 + iNsTr_8)
    iNsTr_134 := (iNsTr_133 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    iNsTr_135 := (iNsTr_134 + ( $bitcast ($uint<32> ) _b00000000000000000000000010000000 ) )
    iNsTr_136 := (iNsTr_135 & ( $bitcast ($uint<32> ) _b11111111111111111111111100000000 ) )
    iNsTr_137 := (iNsTr_130 + iNsTr_136)
    iNsTr_138 := (iNsTr_8 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_139 := (iNsTr_5 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_140 := (iNsTr_139 + iNsTr_138)
    iNsTr_141 := (iNsTr_140 + iNsTr_11)
    iNsTr_142 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_141) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )))
    iNsTr_143 := (iNsTr_11 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_144 := (iNsTr_143 + iNsTr_8)
    iNsTr_145 := (iNsTr_144 + iNsTr_14)
    iNsTr_146 := (iNsTr_145 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    iNsTr_147 := (iNsTr_146 + ( $bitcast ($uint<32> ) _b00000000000000000000000010000000 ) )
    iNsTr_148 := (iNsTr_147 & ( $bitcast ($uint<32> ) _b11111111111111111111111100000000 ) )
    iNsTr_149 := (iNsTr_148 + iNsTr_142)
    iNsTr_150 := (iNsTr_14 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_151 := (iNsTr_11 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_152 := (iNsTr_151 + iNsTr_150)
    iNsTr_153 := (iNsTr_152 + iNsTr_17)
    iNsTr_154 := (iNsTr_153 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_155 := (iNsTr_17 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_156 := (iNsTr_155 + iNsTr_14)
    iNsTr_157 := (iNsTr_156 + iNsTr_20)
    iNsTr_158 := (iNsTr_157 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    iNsTr_159 := (iNsTr_158 + ( $bitcast ($uint<32> ) _b00000000000000000000000010000000 ) )
    iNsTr_160 := (iNsTr_159 & ( $bitcast ($uint<32> ) _b00000000000000001111111100000000 ) )
    iNsTr_161 := (iNsTr_160 + iNsTr_154)
    iNsTr_162 := (iNsTr_66 << ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    iNsTr_163 := (iNsTr_56 + iNsTr_50)
    iNsTr_164 := (iNsTr_163 + iNsTr_162)
    iNsTr_165 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011100000 ) ]
    iNsTr_166 := ($bitcast ($pointer< $uint<32> >) iNsTr_165)
    ->(iNsTr_166) := iNsTr_164
    iNsTr_168 := (iNsTr_76 << ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    iNsTr_169 := (iNsTr_168 + iNsTr_66)
    iNsTr_170 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011000000 ) ]
    iNsTr_171 := ($bitcast ($pointer< $uint<32> >) iNsTr_170)
    ->(iNsTr_171) := iNsTr_169
    iNsTr_173 := (iNsTr_86 << ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    iNsTr_174 := (iNsTr_173 + iNsTr_76)
    iNsTr_175 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010100000 ) ]
    iNsTr_176 := ($bitcast ($pointer< $uint<32> >) iNsTr_175)
    ->(iNsTr_176) := iNsTr_174
    iNsTr_178 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011100100 ) ]
    iNsTr_179 := ($bitcast ($pointer< $uint<32> >) iNsTr_178)
    ->(iNsTr_179) := iNsTr_174
    iNsTr_181 := (iNsTr_96 << ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    iNsTr_182 := (iNsTr_181 + iNsTr_86)
    iNsTr_183 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010000000 ) ]
    iNsTr_184 := ($bitcast ($pointer< $uint<32> >) iNsTr_183)
    ->(iNsTr_184) := iNsTr_182
    iNsTr_186 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011000100 ) ]
    iNsTr_187 := ($bitcast ($pointer< $uint<32> >) iNsTr_186)
    ->(iNsTr_187) := iNsTr_182
    iNsTr_189 := (iNsTr_106 << ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    iNsTr_190 := (iNsTr_189 + iNsTr_96)
    iNsTr_191 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001100000 ) ]
    iNsTr_192 := ($bitcast ($pointer< $uint<32> >) iNsTr_191)
    ->(iNsTr_192) := iNsTr_190
    iNsTr_194 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010100100 ) ]
    iNsTr_195 := ($bitcast ($pointer< $uint<32> >) iNsTr_194)
    ->(iNsTr_195) := iNsTr_190
    iNsTr_197 := (iNsTr_116 << ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    iNsTr_198 := (iNsTr_197 + iNsTr_106)
    iNsTr_199 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001000000 ) ]
    iNsTr_200 := ($bitcast ($pointer< $uint<32> >) iNsTr_199)
    ->(iNsTr_200) := iNsTr_198
    iNsTr_202 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010000100 ) ]
    iNsTr_203 := ($bitcast ($pointer< $uint<32> >) iNsTr_202)
    ->(iNsTr_203) := iNsTr_198
    iNsTr_205 := (iNsTr_125 << ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    iNsTr_206 := (iNsTr_205 + iNsTr_116)
    iNsTr_207 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) ]
    iNsTr_208 := ($bitcast ($pointer< $uint<32> >) iNsTr_207)
    ->(iNsTr_208) := iNsTr_206
    iNsTr_210 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001100100 ) ]
    iNsTr_211 := ($bitcast ($pointer< $uint<32> >) iNsTr_210)
    ->(iNsTr_211) := iNsTr_206
    iNsTr_213 := (iNsTr_137 << ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    iNsTr_214 := (iNsTr_125 + iNsTr_213)
    iNsTr_215 := ($bitcast ($pointer< $uint<32> >) src)
    ->(iNsTr_215) := iNsTr_214
    iNsTr_217 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001000100 ) ]
    iNsTr_218 := ($bitcast ($pointer< $uint<32> >) iNsTr_217)
    ->(iNsTr_218) := iNsTr_214
    iNsTr_220 := (iNsTr_149 << ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    iNsTr_221 := (iNsTr_137 + iNsTr_220)
    iNsTr_222 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000100100 ) ]
    iNsTr_223 := ($bitcast ($pointer< $uint<32> >) iNsTr_222)
    ->(iNsTr_223) := iNsTr_221
    iNsTr_225 := (iNsTr_161 << ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    iNsTr_226 := (iNsTr_225 + iNsTr_149)
    iNsTr_227 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ]
    iNsTr_228 := ($bitcast ($pointer< $uint<32> >) iNsTr_227)
    ->(iNsTr_228) := iNsTr_226
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [x264_predict_8x8_vl_c] 
$in (src : $pointer< $uint<8> > edge : $pointer< $uint<8> > )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    iNsTr_0 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) ]
    // load 
    iNsTr_1 := ->(iNsTr_0) 
    iNsTr_2 := ($cast ($uint<32>) iNsTr_1)
    iNsTr_3 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000010001 ) ]
    // load 
    iNsTr_4 := ->(iNsTr_3) 
    iNsTr_5 := ($cast ($uint<32>) iNsTr_4)
    iNsTr_6 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000010010 ) ]
    // load 
    iNsTr_7 := ->(iNsTr_6) 
    iNsTr_8 := ($cast ($uint<32>) iNsTr_7)
    iNsTr_9 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ]
    // load 
    iNsTr_10 := ->(iNsTr_9) 
    iNsTr_11 := ($cast ($uint<32>) iNsTr_10)
    iNsTr_12 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000010100 ) ]
    // load 
    iNsTr_13 := ->(iNsTr_12) 
    iNsTr_14 := ($cast ($uint<32>) iNsTr_13)
    iNsTr_15 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000010101 ) ]
    // load 
    iNsTr_16 := ->(iNsTr_15) 
    iNsTr_17 := ($cast ($uint<32>) iNsTr_16)
    iNsTr_18 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000010110 ) ]
    // load 
    iNsTr_19 := ->(iNsTr_18) 
    iNsTr_20 := ($cast ($uint<32>) iNsTr_19)
    iNsTr_21 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000010111 ) ]
    // load 
    iNsTr_22 := ->(iNsTr_21) 
    iNsTr_23 := ($cast ($uint<32>) iNsTr_22)
    iNsTr_24 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) ]
    // load 
    iNsTr_25 := ->(iNsTr_24) 
    iNsTr_26 := ($cast ($uint<32>) iNsTr_25)
    iNsTr_27 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000011001 ) ]
    // load 
    iNsTr_28 := ->(iNsTr_27) 
    iNsTr_29 := ($cast ($uint<32>) iNsTr_28)
    iNsTr_30 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000011010 ) ]
    // load 
    iNsTr_31 := ->(iNsTr_30) 
    iNsTr_32 := ($cast ($uint<32>) iNsTr_31)
    iNsTr_33 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000011011 ) ]
    // load 
    iNsTr_34 := ->(iNsTr_33) 
    iNsTr_35 := ($cast ($uint<32>) iNsTr_34)
    iNsTr_36 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000011100 ) ]
    // load 
    iNsTr_37 := ->(iNsTr_36) 
    iNsTr_38 := ($cast ($uint<32>) iNsTr_37)
    iNsTr_39 := (iNsTr_2 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_40 := (iNsTr_39 + iNsTr_5)
    iNsTr_41 := (iNsTr_40 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_42 := ($cast ($uint<8>) iNsTr_41)
    ->(src) := iNsTr_42
    iNsTr_44 := (iNsTr_5 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_45 := (iNsTr_2 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_46 := (iNsTr_45 + iNsTr_8)
    iNsTr_47 := (iNsTr_46 + iNsTr_44)
    iNsTr_48 := (iNsTr_47 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_49 := ($cast ($uint<8>) iNsTr_48)
    iNsTr_50 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) ]
    ->(iNsTr_50) := iNsTr_49
    iNsTr_52 := (iNsTr_5 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_53 := (iNsTr_52 + iNsTr_8)
    iNsTr_54 := (iNsTr_53 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_55 := ($cast ($uint<8>) iNsTr_54)
    iNsTr_56 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    ->(iNsTr_56) := iNsTr_55
    iNsTr_58 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001000000 ) ]
    ->(iNsTr_58) := iNsTr_55
    iNsTr_60 := (iNsTr_8 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_61 := (iNsTr_5 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_62 := (iNsTr_61 + iNsTr_11)
    iNsTr_63 := (iNsTr_62 + iNsTr_60)
    iNsTr_64 := (iNsTr_63 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_65 := ($cast ($uint<8>) iNsTr_64)
    iNsTr_66 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000100001 ) ]
    ->(iNsTr_66) := iNsTr_65
    iNsTr_68 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001100000 ) ]
    ->(iNsTr_68) := iNsTr_65
    iNsTr_70 := (iNsTr_8 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_71 := (iNsTr_70 + iNsTr_11)
    iNsTr_72 := (iNsTr_71 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_73 := ($cast ($uint<8>) iNsTr_72)
    iNsTr_74 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    ->(iNsTr_74) := iNsTr_73
    iNsTr_76 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001000001 ) ]
    ->(iNsTr_76) := iNsTr_73
    iNsTr_78 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010000000 ) ]
    ->(iNsTr_78) := iNsTr_73
    iNsTr_80 := (iNsTr_11 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_81 := (iNsTr_8 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_82 := (iNsTr_81 + iNsTr_14)
    iNsTr_83 := (iNsTr_82 + iNsTr_80)
    iNsTr_84 := (iNsTr_83 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_85 := ($cast ($uint<8>) iNsTr_84)
    iNsTr_86 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000100010 ) ]
    ->(iNsTr_86) := iNsTr_85
    iNsTr_88 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001100001 ) ]
    ->(iNsTr_88) := iNsTr_85
    iNsTr_90 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010100000 ) ]
    ->(iNsTr_90) := iNsTr_85
    iNsTr_92 := (iNsTr_11 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_93 := (iNsTr_92 + iNsTr_14)
    iNsTr_94 := (iNsTr_93 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_95 := ($cast ($uint<8>) iNsTr_94)
    iNsTr_96 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    ->(iNsTr_96) := iNsTr_95
    iNsTr_98 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001000010 ) ]
    ->(iNsTr_98) := iNsTr_95
    iNsTr_100 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010000001 ) ]
    ->(iNsTr_100) := iNsTr_95
    iNsTr_102 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011000000 ) ]
    ->(iNsTr_102) := iNsTr_95
    iNsTr_104 := (iNsTr_14 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_105 := (iNsTr_11 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_106 := (iNsTr_105 + iNsTr_17)
    iNsTr_107 := (iNsTr_106 + iNsTr_104)
    iNsTr_108 := (iNsTr_107 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_109 := ($cast ($uint<8>) iNsTr_108)
    iNsTr_110 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000100011 ) ]
    ->(iNsTr_110) := iNsTr_109
    iNsTr_112 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001100010 ) ]
    ->(iNsTr_112) := iNsTr_109
    iNsTr_114 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010100001 ) ]
    ->(iNsTr_114) := iNsTr_109
    iNsTr_116 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011100000 ) ]
    ->(iNsTr_116) := iNsTr_109
    iNsTr_118 := (iNsTr_14 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_119 := (iNsTr_118 + iNsTr_17)
    iNsTr_120 := (iNsTr_119 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_121 := ($cast ($uint<8>) iNsTr_120)
    iNsTr_122 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ]
    ->(iNsTr_122) := iNsTr_121
    iNsTr_124 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001000011 ) ]
    ->(iNsTr_124) := iNsTr_121
    iNsTr_126 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010000010 ) ]
    ->(iNsTr_126) := iNsTr_121
    iNsTr_128 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011000001 ) ]
    ->(iNsTr_128) := iNsTr_121
    iNsTr_130 := (iNsTr_17 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_131 := (iNsTr_14 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_132 := (iNsTr_131 + iNsTr_20)
    iNsTr_133 := (iNsTr_132 + iNsTr_130)
    iNsTr_134 := (iNsTr_133 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_135 := ($cast ($uint<8>) iNsTr_134)
    iNsTr_136 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000100100 ) ]
    ->(iNsTr_136) := iNsTr_135
    iNsTr_138 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001100011 ) ]
    ->(iNsTr_138) := iNsTr_135
    iNsTr_140 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010100010 ) ]
    ->(iNsTr_140) := iNsTr_135
    iNsTr_142 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011100001 ) ]
    ->(iNsTr_142) := iNsTr_135
    iNsTr_144 := (iNsTr_17 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_145 := (iNsTr_144 + iNsTr_20)
    iNsTr_146 := (iNsTr_145 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_147 := ($cast ($uint<8>) iNsTr_146)
    iNsTr_148 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) ]
    ->(iNsTr_148) := iNsTr_147
    iNsTr_150 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001000100 ) ]
    ->(iNsTr_150) := iNsTr_147
    iNsTr_152 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010000011 ) ]
    ->(iNsTr_152) := iNsTr_147
    iNsTr_154 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011000010 ) ]
    ->(iNsTr_154) := iNsTr_147
    iNsTr_156 := (iNsTr_20 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_157 := (iNsTr_17 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_158 := (iNsTr_157 + iNsTr_23)
    iNsTr_159 := (iNsTr_158 + iNsTr_156)
    iNsTr_160 := (iNsTr_159 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_161 := ($cast ($uint<8>) iNsTr_160)
    iNsTr_162 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000100101 ) ]
    ->(iNsTr_162) := iNsTr_161
    iNsTr_164 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001100100 ) ]
    ->(iNsTr_164) := iNsTr_161
    iNsTr_166 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010100011 ) ]
    ->(iNsTr_166) := iNsTr_161
    iNsTr_168 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011100010 ) ]
    ->(iNsTr_168) := iNsTr_161
    iNsTr_170 := (iNsTr_20 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_171 := (iNsTr_170 + iNsTr_23)
    iNsTr_172 := (iNsTr_171 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_173 := ($cast ($uint<8>) iNsTr_172)
    iNsTr_174 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) ]
    ->(iNsTr_174) := iNsTr_173
    iNsTr_176 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ]
    ->(iNsTr_176) := iNsTr_173
    iNsTr_178 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010000100 ) ]
    ->(iNsTr_178) := iNsTr_173
    iNsTr_180 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011000011 ) ]
    ->(iNsTr_180) := iNsTr_173
    iNsTr_182 := (iNsTr_23 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_183 := (iNsTr_20 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_184 := (iNsTr_183 + iNsTr_26)
    iNsTr_185 := (iNsTr_184 + iNsTr_182)
    iNsTr_186 := (iNsTr_185 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_187 := ($cast ($uint<8>) iNsTr_186)
    iNsTr_188 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000100110 ) ]
    ->(iNsTr_188) := iNsTr_187
    iNsTr_190 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001100101 ) ]
    ->(iNsTr_190) := iNsTr_187
    iNsTr_192 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010100100 ) ]
    ->(iNsTr_192) := iNsTr_187
    iNsTr_194 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011100011 ) ]
    ->(iNsTr_194) := iNsTr_187
    iNsTr_196 := (iNsTr_23 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_197 := (iNsTr_196 + iNsTr_26)
    iNsTr_198 := (iNsTr_197 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_199 := ($cast ($uint<8>) iNsTr_198)
    iNsTr_200 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) ]
    ->(iNsTr_200) := iNsTr_199
    iNsTr_202 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001000110 ) ]
    ->(iNsTr_202) := iNsTr_199
    iNsTr_204 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010000101 ) ]
    ->(iNsTr_204) := iNsTr_199
    iNsTr_206 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011000100 ) ]
    ->(iNsTr_206) := iNsTr_199
    iNsTr_208 := (iNsTr_26 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_209 := (iNsTr_23 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_210 := (iNsTr_209 + iNsTr_29)
    iNsTr_211 := (iNsTr_210 + iNsTr_208)
    iNsTr_212 := (iNsTr_211 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_213 := ($cast ($uint<8>) iNsTr_212)
    iNsTr_214 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000100111 ) ]
    ->(iNsTr_214) := iNsTr_213
    iNsTr_216 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001100110 ) ]
    ->(iNsTr_216) := iNsTr_213
    iNsTr_218 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010100101 ) ]
    ->(iNsTr_218) := iNsTr_213
    iNsTr_220 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011100100 ) ]
    ->(iNsTr_220) := iNsTr_213
    iNsTr_222 := (iNsTr_26 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_223 := (iNsTr_222 + iNsTr_29)
    iNsTr_224 := (iNsTr_223 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_225 := ($cast ($uint<8>) iNsTr_224)
    iNsTr_226 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001000111 ) ]
    ->(iNsTr_226) := iNsTr_225
    iNsTr_228 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010000110 ) ]
    ->(iNsTr_228) := iNsTr_225
    iNsTr_230 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011000101 ) ]
    ->(iNsTr_230) := iNsTr_225
    iNsTr_232 := (iNsTr_29 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_233 := (iNsTr_26 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_234 := (iNsTr_233 + iNsTr_32)
    iNsTr_235 := (iNsTr_234 + iNsTr_232)
    iNsTr_236 := (iNsTr_235 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_237 := ($cast ($uint<8>) iNsTr_236)
    iNsTr_238 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001100111 ) ]
    ->(iNsTr_238) := iNsTr_237
    iNsTr_240 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010100110 ) ]
    ->(iNsTr_240) := iNsTr_237
    iNsTr_242 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011100101 ) ]
    ->(iNsTr_242) := iNsTr_237
    iNsTr_244 := (iNsTr_29 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_245 := (iNsTr_244 + iNsTr_32)
    iNsTr_246 := (iNsTr_245 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_247 := ($cast ($uint<8>) iNsTr_246)
    iNsTr_248 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010000111 ) ]
    ->(iNsTr_248) := iNsTr_247
    iNsTr_250 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011000110 ) ]
    ->(iNsTr_250) := iNsTr_247
    iNsTr_252 := (iNsTr_32 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_253 := (iNsTr_29 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_254 := (iNsTr_253 + iNsTr_35)
    iNsTr_255 := (iNsTr_254 + iNsTr_252)
    iNsTr_256 := (iNsTr_255 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_257 := ($cast ($uint<8>) iNsTr_256)
    iNsTr_258 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010100111 ) ]
    ->(iNsTr_258) := iNsTr_257
    iNsTr_260 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011100110 ) ]
    ->(iNsTr_260) := iNsTr_257
    iNsTr_262 := (iNsTr_32 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_263 := (iNsTr_262 + iNsTr_35)
    iNsTr_264 := (iNsTr_263 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_265 := ($cast ($uint<8>) iNsTr_264)
    iNsTr_266 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011000111 ) ]
    ->(iNsTr_266) := iNsTr_265
    iNsTr_268 := (iNsTr_35 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_269 := (iNsTr_32 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_270 := (iNsTr_269 + iNsTr_38)
    iNsTr_271 := (iNsTr_270 + iNsTr_268)
    iNsTr_272 := (iNsTr_271 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_273 := ($cast ($uint<8>) iNsTr_272)
    iNsTr_274 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011100111 ) ]
    ->(iNsTr_274) := iNsTr_273
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [x264_predict_8x8_hu_c] 
$in (src : $pointer< $uint<8> > edge : $pointer< $uint<8> > )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    iNsTr_0 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000001110 ) ]
    // load 
    iNsTr_1 := ->(iNsTr_0) 
    iNsTr_2 := ($cast ($uint<32>) iNsTr_1)
    iNsTr_3 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000001101 ) ]
    // load 
    iNsTr_4 := ->(iNsTr_3) 
    iNsTr_5 := ($cast ($uint<32>) iNsTr_4)
    iNsTr_6 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000001100 ) ]
    // load 
    iNsTr_7 := ->(iNsTr_6) 
    iNsTr_8 := ($cast ($uint<32>) iNsTr_7)
    iNsTr_9 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000001011 ) ]
    // load 
    iNsTr_10 := ->(iNsTr_9) 
    iNsTr_11 := ($cast ($uint<32>) iNsTr_10)
    iNsTr_12 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000001010 ) ]
    // load 
    iNsTr_13 := ->(iNsTr_12) 
    iNsTr_14 := ($cast ($uint<32>) iNsTr_13)
    iNsTr_15 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000001001 ) ]
    // load 
    iNsTr_16 := ->(iNsTr_15) 
    iNsTr_17 := ($cast ($uint<32>) iNsTr_16)
    iNsTr_18 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) ]
    // load 
    iNsTr_19 := ->(iNsTr_18) 
    iNsTr_20 := ($cast ($uint<32>) iNsTr_19)
    iNsTr_21 := edge[( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) ]
    // load 
    iNsTr_22 := ->(iNsTr_21) 
    iNsTr_23 := ($cast ($uint<32>) iNsTr_22)
    iNsTr_24 := (iNsTr_2 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_25 := (iNsTr_24 + iNsTr_5)
    iNsTr_26 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_25) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )))
    iNsTr_27 := (iNsTr_5 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_28 := (iNsTr_8 + iNsTr_2)
    iNsTr_29 := (iNsTr_28 + iNsTr_27)
    iNsTr_30 := (iNsTr_29 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    iNsTr_31 := (iNsTr_30 + ( $bitcast ($uint<32> ) _b00000000000000000000000010000000 ) )
    iNsTr_32 := (iNsTr_31 & ( $bitcast ($uint<32> ) _b11111111111111111111111100000000 ) )
    iNsTr_33 := (iNsTr_5 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_34 := (iNsTr_33 + iNsTr_8)
    iNsTr_35 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_34) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )))
    iNsTr_36 := (iNsTr_8 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_37 := (iNsTr_11 + iNsTr_5)
    iNsTr_38 := (iNsTr_37 + iNsTr_36)
    iNsTr_39 := (iNsTr_38 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    iNsTr_40 := (iNsTr_39 + ( $bitcast ($uint<32> ) _b00000000000000000000000010000000 ) )
    iNsTr_41 := (iNsTr_40 & ( $bitcast ($uint<32> ) _b11111111111111111111111100000000 ) )
    iNsTr_42 := (iNsTr_41 + iNsTr_35)
    iNsTr_43 := (iNsTr_8 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_44 := (iNsTr_43 + iNsTr_11)
    iNsTr_45 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_44) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )))
    iNsTr_46 := (iNsTr_11 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_47 := (iNsTr_14 + iNsTr_8)
    iNsTr_48 := (iNsTr_47 + iNsTr_46)
    iNsTr_49 := (iNsTr_48 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    iNsTr_50 := (iNsTr_49 + ( $bitcast ($uint<32> ) _b00000000000000000000000010000000 ) )
    iNsTr_51 := (iNsTr_50 & ( $bitcast ($uint<32> ) _b11111111111111111111111100000000 ) )
    iNsTr_52 := (iNsTr_51 + iNsTr_45)
    iNsTr_53 := (iNsTr_11 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_54 := (iNsTr_53 + iNsTr_14)
    iNsTr_55 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_54) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )))
    iNsTr_56 := (iNsTr_14 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_57 := (iNsTr_17 + iNsTr_11)
    iNsTr_58 := (iNsTr_57 + iNsTr_56)
    iNsTr_59 := (iNsTr_58 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    iNsTr_60 := (iNsTr_59 + ( $bitcast ($uint<32> ) _b00000000000000000000000010000000 ) )
    iNsTr_61 := (iNsTr_60 & ( $bitcast ($uint<32> ) _b11111111111111111111111100000000 ) )
    iNsTr_62 := (iNsTr_61 + iNsTr_55)
    iNsTr_63 := (iNsTr_14 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_64 := (iNsTr_63 + iNsTr_17)
    iNsTr_65 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_64) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )))
    iNsTr_66 := (iNsTr_17 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_67 := (iNsTr_20 + iNsTr_14)
    iNsTr_68 := (iNsTr_67 + iNsTr_66)
    iNsTr_69 := (iNsTr_68 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    iNsTr_70 := (iNsTr_69 + ( $bitcast ($uint<32> ) _b00000000000000000000000010000000 ) )
    iNsTr_71 := (iNsTr_70 & ( $bitcast ($uint<32> ) _b11111111111111111111111100000000 ) )
    iNsTr_72 := (iNsTr_71 + iNsTr_65)
    iNsTr_73 := (iNsTr_17 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_74 := (iNsTr_73 + iNsTr_20)
    iNsTr_75 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_74) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )))
    iNsTr_76 := (iNsTr_20 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_77 := (iNsTr_23 + iNsTr_17)
    iNsTr_78 := (iNsTr_77 + iNsTr_76)
    iNsTr_79 := (iNsTr_78 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    iNsTr_80 := (iNsTr_79 + ( $bitcast ($uint<32> ) _b00000000000000000000000010000000 ) )
    iNsTr_81 := (iNsTr_80 & ( $bitcast ($uint<32> ) _b11111111111111111111111100000000 ) )
    iNsTr_82 := (iNsTr_81 + iNsTr_75)
    iNsTr_83 := (iNsTr_20 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_84 := (iNsTr_83 + iNsTr_23)
    iNsTr_85 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_84) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )))
    iNsTr_86 := (iNsTr_23 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_87 := (iNsTr_23 + iNsTr_20)
    iNsTr_88 := (iNsTr_87 + iNsTr_86)
    iNsTr_89 := (iNsTr_88 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    iNsTr_90 := (iNsTr_89 + ( $bitcast ($uint<32> ) _b00000000000000000000000010000000 ) )
    iNsTr_91 := (iNsTr_90 & ( $bitcast ($uint<32> ) _b11111111111111111111111100000000 ) )
    iNsTr_92 := (iNsTr_91 + iNsTr_85)
    iNsTr_93 := (iNsTr_42 << ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    iNsTr_94 := (iNsTr_32 + iNsTr_26)
    iNsTr_95 := (iNsTr_94 + iNsTr_93)
    iNsTr_96 := ($bitcast ($pointer< $uint<32> >) src)
    ->(iNsTr_96) := iNsTr_95
    iNsTr_98 := (iNsTr_52 << ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    iNsTr_99 := (iNsTr_98 + iNsTr_42)
    iNsTr_100 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) ]
    iNsTr_101 := ($bitcast ($pointer< $uint<32> >) iNsTr_100)
    ->(iNsTr_101) := iNsTr_99
    iNsTr_103 := (iNsTr_62 << ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    iNsTr_104 := (iNsTr_103 + iNsTr_52)
    iNsTr_105 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001000000 ) ]
    iNsTr_106 := ($bitcast ($pointer< $uint<32> >) iNsTr_105)
    ->(iNsTr_106) := iNsTr_104
    iNsTr_108 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ]
    iNsTr_109 := ($bitcast ($pointer< $uint<32> >) iNsTr_108)
    ->(iNsTr_109) := iNsTr_104
    iNsTr_111 := (iNsTr_72 << ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    iNsTr_112 := (iNsTr_111 + iNsTr_62)
    iNsTr_113 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001100000 ) ]
    iNsTr_114 := ($bitcast ($pointer< $uint<32> >) iNsTr_113)
    ->(iNsTr_114) := iNsTr_112
    iNsTr_116 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000100100 ) ]
    iNsTr_117 := ($bitcast ($pointer< $uint<32> >) iNsTr_116)
    ->(iNsTr_117) := iNsTr_112
    iNsTr_119 := (iNsTr_82 << ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    iNsTr_120 := (iNsTr_119 + iNsTr_72)
    iNsTr_121 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010000000 ) ]
    iNsTr_122 := ($bitcast ($pointer< $uint<32> >) iNsTr_121)
    ->(iNsTr_122) := iNsTr_120
    iNsTr_124 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001000100 ) ]
    iNsTr_125 := ($bitcast ($pointer< $uint<32> >) iNsTr_124)
    ->(iNsTr_125) := iNsTr_120
    iNsTr_127 := (iNsTr_92 << ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    iNsTr_128 := (iNsTr_127 + iNsTr_82)
    iNsTr_129 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010100000 ) ]
    iNsTr_130 := ($bitcast ($pointer< $uint<32> >) iNsTr_129)
    ->(iNsTr_130) := iNsTr_128
    iNsTr_132 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001100100 ) ]
    iNsTr_133 := ($bitcast ($pointer< $uint<32> >) iNsTr_132)
    ->(iNsTr_133) := iNsTr_128
    iNsTr_135 := (iNsTr_23 * ( $bitcast ($uint<32> ) _b00000001000000010000000000000000 ) )
    iNsTr_136 := (iNsTr_92 + iNsTr_135)
    iNsTr_137 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011000000 ) ]
    iNsTr_138 := ($bitcast ($pointer< $uint<32> >) iNsTr_137)
    ->(iNsTr_138) := iNsTr_136
    iNsTr_140 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010000100 ) ]
    iNsTr_141 := ($bitcast ($pointer< $uint<32> >) iNsTr_140)
    ->(iNsTr_141) := iNsTr_136
    iNsTr_143 := (iNsTr_23 * ( $bitcast ($uint<32> ) _b00000001000000010000000100000001 ) )
    iNsTr_144 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011100100 ) ]
    iNsTr_145 := ($bitcast ($pointer< $uint<32> >) iNsTr_144)
    ->(iNsTr_145) := iNsTr_143
    iNsTr_147 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011100000 ) ]
    iNsTr_148 := ($bitcast ($pointer< $uint<32> >) iNsTr_147)
    ->(iNsTr_148) := iNsTr_143
    iNsTr_150 := src[( $bitcast ($uint<32> ) _b00000000000000000000000011000100 ) ]
    iNsTr_151 := ($bitcast ($pointer< $uint<32> >) iNsTr_150)
    ->(iNsTr_151) := iNsTr_143
    iNsTr_153 := src[( $bitcast ($uint<32> ) _b00000000000000000000000010100100 ) ]
    iNsTr_154 := ($bitcast ($pointer< $uint<32> >) iNsTr_153)
    ->(iNsTr_154) := iNsTr_143
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [x264_pixel_sad_8x16] 
$in (pix1 : $pointer< $uint<8> > i_stride_pix1 : $uint<32> pix2 : $pointer< $uint<8> > i_stride_pix2 : $uint<32> )
$out (ret_val__ : $uint<32>)
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bbx_xnph8
    $place [bbx_xnph8_bb_1]
    //begin: basic-block bb_1
    $merge bb_1_bb_1 bbx_xnph8_bb_1
    $phi yx_x05 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph8_bb_1 ( $cast ($uint<32>) iNsTr_57) $on bb_1_bb_1 
    $phi i_sumx_x14 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph8_bb_1 ( $cast ($uint<32>) iNsTr_56) $on bb_1_bb_1 
    $endmerge
    tmp := (i_stride_pix1 * yx_x05)
    scevgep := pix1[tmp]
    tmp3 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    scevgepx_x7 := pix1[tmp3]
    tmp5 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    scevgepx_x6 := pix1[tmp5]
    tmp7 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) )
    scevgepx_x5 := pix1[tmp7]
    tmp9 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    scevgepx_x4 := pix1[tmp9]
    tmp11 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgepx_x3 := pix1[tmp11]
    tmp13 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgepx_x2 := pix1[tmp13]
    tmp17 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgepx_x1 := pix1[tmp17]
    tmp19 := (i_stride_pix2 * yx_x05)
    scevgep14 := pix2[tmp19]
    tmp21 := (tmp19 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    scevgep14x_x7 := pix2[tmp21]
    tmp23 := (tmp19 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    scevgep14x_x6 := pix2[tmp23]
    tmp25 := (tmp19 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) )
    scevgep14x_x5 := pix2[tmp25]
    tmp27 := (tmp19 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    scevgep14x_x4 := pix2[tmp27]
    tmp29 := (tmp19 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep14x_x3 := pix2[tmp29]
    tmp33 := (tmp19 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep14x_x2 := pix2[tmp33]
    tmp35 := (tmp19 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep14x_x1 := pix2[tmp35]
    // load 
    iNsTr_1 := ->(scevgep) 
    iNsTr_2 := ($cast ($uint<32>) iNsTr_1)
    // load 
    iNsTr_3 := ->(scevgep14) 
    iNsTr_4 := ($cast ($uint<32>) iNsTr_3)
    iNsTr_5 := (iNsTr_2 - iNsTr_4)
    // load 
    iNsTr_6 := ->(scevgepx_x1) 
    iNsTr_7 := ($cast ($uint<32>) iNsTr_6)
    // load 
    iNsTr_8 := ->(scevgep14x_x1) 
    iNsTr_9 := ($cast ($uint<32>) iNsTr_8)
    iNsTr_10 := (iNsTr_7 - iNsTr_9)
    // load 
    iNsTr_11 := ->(scevgepx_x2) 
    iNsTr_12 := ($cast ($uint<32>) iNsTr_11)
    // load 
    iNsTr_13 := ->(scevgep14x_x2) 
    iNsTr_14 := ($cast ($uint<32>) iNsTr_13)
    iNsTr_15 := (iNsTr_12 - iNsTr_14)
    // load 
    iNsTr_16 := ->(scevgepx_x3) 
    iNsTr_17 := ($cast ($uint<32>) iNsTr_16)
    // load 
    iNsTr_18 := ->(scevgep14x_x3) 
    iNsTr_19 := ($cast ($uint<32>) iNsTr_18)
    iNsTr_20 := (iNsTr_17 - iNsTr_19)
    // load 
    iNsTr_21 := ->(scevgepx_x4) 
    iNsTr_22 := ($cast ($uint<32>) iNsTr_21)
    // load 
    iNsTr_23 := ->(scevgep14x_x4) 
    iNsTr_24 := ($cast ($uint<32>) iNsTr_23)
    iNsTr_25 := (iNsTr_22 - iNsTr_24)
    // load 
    iNsTr_26 := ->(scevgepx_x5) 
    iNsTr_27 := ($cast ($uint<32>) iNsTr_26)
    // load 
    iNsTr_28 := ->(scevgep14x_x5) 
    iNsTr_29 := ($cast ($uint<32>) iNsTr_28)
    iNsTr_30 := (iNsTr_27 - iNsTr_29)
    // load 
    iNsTr_31 := ->(scevgepx_x6) 
    iNsTr_32 := ($cast ($uint<32>) iNsTr_31)
    // load 
    iNsTr_33 := ->(scevgep14x_x6) 
    iNsTr_34 := ($cast ($uint<32>) iNsTr_33)
    iNsTr_35 := (iNsTr_32 - iNsTr_34)
    // load 
    iNsTr_36 := ->(scevgepx_x7) 
    iNsTr_37 := ($cast ($uint<32>) iNsTr_36)
    // load 
    iNsTr_38 := ->(scevgep14x_x7) 
    iNsTr_39 := ($cast ($uint<32>) iNsTr_38)
    iNsTr_40 := (iNsTr_37 - iNsTr_39)
    // compare instruction
    ispos := ( ($bitcast ( $int<32>) iNsTr_5) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    neg := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_5)
    negx_x1 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_10)
    // compare instruction
    isposx_x1 := ( ($bitcast ( $int<32>) iNsTr_10) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    iNsTr_41 := ( $mux ispos iNsTr_5 neg)
    iNsTr_42 := ( $mux isposx_x1 iNsTr_10 negx_x1)
    iNsTr_43 := (iNsTr_41 + i_sumx_x14)
    // compare instruction
    isposx_x2 := ( ($bitcast ( $int<32>) iNsTr_15) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_x2 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_15)
    negx_x3 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_20)
    // compare instruction
    isposx_x3 := ( ($bitcast ( $int<32>) iNsTr_20) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    iNsTr_44 := (iNsTr_42 + iNsTr_43)
    iNsTr_45 := ( $mux isposx_x2 iNsTr_15 negx_x2)
    iNsTr_46 := ( $mux isposx_x3 iNsTr_20 negx_x3)
    iNsTr_47 := (iNsTr_45 + iNsTr_44)
    // compare instruction
    isposx_x4 := ( ($bitcast ( $int<32>) iNsTr_25) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_x4 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_25)
    negx_x5 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_30)
    // compare instruction
    isposx_x5 := ( ($bitcast ( $int<32>) iNsTr_30) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    iNsTr_48 := (iNsTr_46 + iNsTr_47)
    iNsTr_49 := ( $mux isposx_x4 iNsTr_25 negx_x4)
    iNsTr_50 := ( $mux isposx_x5 iNsTr_30 negx_x5)
    iNsTr_51 := (iNsTr_49 + iNsTr_48)
    // compare instruction
    isposx_x6 := ( ($bitcast ( $int<32>) iNsTr_35) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_x6 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_35)
    negx_x7 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_40)
    // compare instruction
    isposx_x7 := ( ($bitcast ( $int<32>) iNsTr_40) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    iNsTr_52 := (iNsTr_50 + iNsTr_51)
    iNsTr_53 := ( $mux isposx_x6 iNsTr_35 negx_x6)
    iNsTr_54 := ( $mux isposx_x7 iNsTr_40 negx_x7)
    iNsTr_55 := (iNsTr_53 + iNsTr_52)
    iNsTr_56 := (iNsTr_54 + iNsTr_55)
    iNsTr_57 := (yx_x05 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (iNsTr_57 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond1 $then  $place [bb_1_xx_x_crit_edge9] $else $place [bb_1_bb_1] $endif 
    //begin: basic-block xx_x_crit_edge9
    $merge bb_1_xx_x_crit_edge9
    $phi ret_val__ :=  ( $cast ($uint<32>) iNsTr_56) $on bb_1_xx_x_crit_edge9 
    $endmerge
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [x264_pixel_sad_8x8] 
$in (pix1 : $pointer< $uint<8> > i_stride_pix1 : $uint<32> pix2 : $pointer< $uint<8> > i_stride_pix2 : $uint<32> )
$out (ret_val__ : $uint<32>)
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bbx_xnph8
    $place [bbx_xnph8_bb_1]
    //begin: basic-block bb_1
    $merge bb_1_bb_1 bbx_xnph8_bb_1
    $phi yx_x05 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph8_bb_1 ( $cast ($uint<32>) iNsTr_57) $on bb_1_bb_1 
    $phi i_sumx_x14 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph8_bb_1 ( $cast ($uint<32>) iNsTr_56) $on bb_1_bb_1 
    $endmerge
    tmp := (i_stride_pix1 * yx_x05)
    scevgep := pix1[tmp]
    tmp3 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    scevgepx_x7 := pix1[tmp3]
    tmp5 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    scevgepx_x6 := pix1[tmp5]
    tmp7 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) )
    scevgepx_x5 := pix1[tmp7]
    tmp9 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    scevgepx_x4 := pix1[tmp9]
    tmp11 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgepx_x3 := pix1[tmp11]
    tmp13 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgepx_x2 := pix1[tmp13]
    tmp17 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgepx_x1 := pix1[tmp17]
    tmp19 := (i_stride_pix2 * yx_x05)
    scevgep14 := pix2[tmp19]
    tmp21 := (tmp19 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    scevgep14x_x7 := pix2[tmp21]
    tmp23 := (tmp19 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    scevgep14x_x6 := pix2[tmp23]
    tmp25 := (tmp19 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) )
    scevgep14x_x5 := pix2[tmp25]
    tmp27 := (tmp19 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    scevgep14x_x4 := pix2[tmp27]
    tmp29 := (tmp19 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep14x_x3 := pix2[tmp29]
    tmp33 := (tmp19 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep14x_x2 := pix2[tmp33]
    tmp35 := (tmp19 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep14x_x1 := pix2[tmp35]
    // load 
    iNsTr_1 := ->(scevgep) 
    iNsTr_2 := ($cast ($uint<32>) iNsTr_1)
    // load 
    iNsTr_3 := ->(scevgep14) 
    iNsTr_4 := ($cast ($uint<32>) iNsTr_3)
    iNsTr_5 := (iNsTr_2 - iNsTr_4)
    // load 
    iNsTr_6 := ->(scevgepx_x1) 
    iNsTr_7 := ($cast ($uint<32>) iNsTr_6)
    // load 
    iNsTr_8 := ->(scevgep14x_x1) 
    iNsTr_9 := ($cast ($uint<32>) iNsTr_8)
    iNsTr_10 := (iNsTr_7 - iNsTr_9)
    // load 
    iNsTr_11 := ->(scevgepx_x2) 
    iNsTr_12 := ($cast ($uint<32>) iNsTr_11)
    // load 
    iNsTr_13 := ->(scevgep14x_x2) 
    iNsTr_14 := ($cast ($uint<32>) iNsTr_13)
    iNsTr_15 := (iNsTr_12 - iNsTr_14)
    // load 
    iNsTr_16 := ->(scevgepx_x3) 
    iNsTr_17 := ($cast ($uint<32>) iNsTr_16)
    // load 
    iNsTr_18 := ->(scevgep14x_x3) 
    iNsTr_19 := ($cast ($uint<32>) iNsTr_18)
    iNsTr_20 := (iNsTr_17 - iNsTr_19)
    // load 
    iNsTr_21 := ->(scevgepx_x4) 
    iNsTr_22 := ($cast ($uint<32>) iNsTr_21)
    // load 
    iNsTr_23 := ->(scevgep14x_x4) 
    iNsTr_24 := ($cast ($uint<32>) iNsTr_23)
    iNsTr_25 := (iNsTr_22 - iNsTr_24)
    // load 
    iNsTr_26 := ->(scevgepx_x5) 
    iNsTr_27 := ($cast ($uint<32>) iNsTr_26)
    // load 
    iNsTr_28 := ->(scevgep14x_x5) 
    iNsTr_29 := ($cast ($uint<32>) iNsTr_28)
    iNsTr_30 := (iNsTr_27 - iNsTr_29)
    // load 
    iNsTr_31 := ->(scevgepx_x6) 
    iNsTr_32 := ($cast ($uint<32>) iNsTr_31)
    // load 
    iNsTr_33 := ->(scevgep14x_x6) 
    iNsTr_34 := ($cast ($uint<32>) iNsTr_33)
    iNsTr_35 := (iNsTr_32 - iNsTr_34)
    // load 
    iNsTr_36 := ->(scevgepx_x7) 
    iNsTr_37 := ($cast ($uint<32>) iNsTr_36)
    // load 
    iNsTr_38 := ->(scevgep14x_x7) 
    iNsTr_39 := ($cast ($uint<32>) iNsTr_38)
    iNsTr_40 := (iNsTr_37 - iNsTr_39)
    // compare instruction
    ispos := ( ($bitcast ( $int<32>) iNsTr_5) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    neg := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_5)
    negx_x1 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_10)
    // compare instruction
    isposx_x1 := ( ($bitcast ( $int<32>) iNsTr_10) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    iNsTr_41 := ( $mux ispos iNsTr_5 neg)
    iNsTr_42 := ( $mux isposx_x1 iNsTr_10 negx_x1)
    iNsTr_43 := (iNsTr_41 + i_sumx_x14)
    // compare instruction
    isposx_x2 := ( ($bitcast ( $int<32>) iNsTr_15) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_x2 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_15)
    negx_x3 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_20)
    // compare instruction
    isposx_x3 := ( ($bitcast ( $int<32>) iNsTr_20) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    iNsTr_44 := (iNsTr_42 + iNsTr_43)
    iNsTr_45 := ( $mux isposx_x2 iNsTr_15 negx_x2)
    iNsTr_46 := ( $mux isposx_x3 iNsTr_20 negx_x3)
    iNsTr_47 := (iNsTr_45 + iNsTr_44)
    // compare instruction
    isposx_x4 := ( ($bitcast ( $int<32>) iNsTr_25) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_x4 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_25)
    negx_x5 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_30)
    // compare instruction
    isposx_x5 := ( ($bitcast ( $int<32>) iNsTr_30) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    iNsTr_48 := (iNsTr_46 + iNsTr_47)
    iNsTr_49 := ( $mux isposx_x4 iNsTr_25 negx_x4)
    iNsTr_50 := ( $mux isposx_x5 iNsTr_30 negx_x5)
    iNsTr_51 := (iNsTr_49 + iNsTr_48)
    // compare instruction
    isposx_x6 := ( ($bitcast ( $int<32>) iNsTr_35) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_x6 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_35)
    negx_x7 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_40)
    // compare instruction
    isposx_x7 := ( ($bitcast ( $int<32>) iNsTr_40) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    iNsTr_52 := (iNsTr_50 + iNsTr_51)
    iNsTr_53 := ( $mux isposx_x6 iNsTr_35 negx_x6)
    iNsTr_54 := ( $mux isposx_x7 iNsTr_40 negx_x7)
    iNsTr_55 := (iNsTr_53 + iNsTr_52)
    iNsTr_56 := (iNsTr_54 + iNsTr_55)
    iNsTr_57 := (yx_x05 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (iNsTr_57 == ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 )  )
    $if exitcond1 $then  $place [bb_1_xx_x_crit_edge9] $else $place [bb_1_bb_1] $endif 
    //begin: basic-block xx_x_crit_edge9
    $merge bb_1_xx_x_crit_edge9
    $phi ret_val__ :=  ( $cast ($uint<32>) iNsTr_56) $on bb_1_xx_x_crit_edge9 
    $endmerge
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [x264_pixel_sad_8x4] 
$in (pix1 : $pointer< $uint<8> > i_stride_pix1 : $uint<32> pix2 : $pointer< $uint<8> > i_stride_pix2 : $uint<32> )
$out (ret_val__ : $uint<32>)
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bbx_xnph8
    $place [bbx_xnph8_bb_1]
    //begin: basic-block bb_1
    $merge bb_1_bb_1 bbx_xnph8_bb_1
    $phi yx_x05 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph8_bb_1 ( $cast ($uint<32>) iNsTr_57) $on bb_1_bb_1 
    $phi i_sumx_x14 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph8_bb_1 ( $cast ($uint<32>) iNsTr_56) $on bb_1_bb_1 
    $endmerge
    tmp := (i_stride_pix1 * yx_x05)
    scevgep := pix1[tmp]
    tmp3 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    scevgepx_x7 := pix1[tmp3]
    tmp5 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    scevgepx_x6 := pix1[tmp5]
    tmp7 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) )
    scevgepx_x5 := pix1[tmp7]
    tmp9 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    scevgepx_x4 := pix1[tmp9]
    tmp11 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgepx_x3 := pix1[tmp11]
    tmp13 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgepx_x2 := pix1[tmp13]
    tmp17 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgepx_x1 := pix1[tmp17]
    tmp19 := (i_stride_pix2 * yx_x05)
    scevgep14 := pix2[tmp19]
    tmp21 := (tmp19 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    scevgep14x_x7 := pix2[tmp21]
    tmp23 := (tmp19 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    scevgep14x_x6 := pix2[tmp23]
    tmp25 := (tmp19 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) )
    scevgep14x_x5 := pix2[tmp25]
    tmp27 := (tmp19 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    scevgep14x_x4 := pix2[tmp27]
    tmp29 := (tmp19 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep14x_x3 := pix2[tmp29]
    tmp33 := (tmp19 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep14x_x2 := pix2[tmp33]
    tmp35 := (tmp19 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep14x_x1 := pix2[tmp35]
    // load 
    iNsTr_1 := ->(scevgep) 
    iNsTr_2 := ($cast ($uint<32>) iNsTr_1)
    // load 
    iNsTr_3 := ->(scevgep14) 
    iNsTr_4 := ($cast ($uint<32>) iNsTr_3)
    iNsTr_5 := (iNsTr_2 - iNsTr_4)
    // load 
    iNsTr_6 := ->(scevgepx_x1) 
    iNsTr_7 := ($cast ($uint<32>) iNsTr_6)
    // load 
    iNsTr_8 := ->(scevgep14x_x1) 
    iNsTr_9 := ($cast ($uint<32>) iNsTr_8)
    iNsTr_10 := (iNsTr_7 - iNsTr_9)
    // load 
    iNsTr_11 := ->(scevgepx_x2) 
    iNsTr_12 := ($cast ($uint<32>) iNsTr_11)
    // load 
    iNsTr_13 := ->(scevgep14x_x2) 
    iNsTr_14 := ($cast ($uint<32>) iNsTr_13)
    iNsTr_15 := (iNsTr_12 - iNsTr_14)
    // load 
    iNsTr_16 := ->(scevgepx_x3) 
    iNsTr_17 := ($cast ($uint<32>) iNsTr_16)
    // load 
    iNsTr_18 := ->(scevgep14x_x3) 
    iNsTr_19 := ($cast ($uint<32>) iNsTr_18)
    iNsTr_20 := (iNsTr_17 - iNsTr_19)
    // load 
    iNsTr_21 := ->(scevgepx_x4) 
    iNsTr_22 := ($cast ($uint<32>) iNsTr_21)
    // load 
    iNsTr_23 := ->(scevgep14x_x4) 
    iNsTr_24 := ($cast ($uint<32>) iNsTr_23)
    iNsTr_25 := (iNsTr_22 - iNsTr_24)
    // load 
    iNsTr_26 := ->(scevgepx_x5) 
    iNsTr_27 := ($cast ($uint<32>) iNsTr_26)
    // load 
    iNsTr_28 := ->(scevgep14x_x5) 
    iNsTr_29 := ($cast ($uint<32>) iNsTr_28)
    iNsTr_30 := (iNsTr_27 - iNsTr_29)
    // load 
    iNsTr_31 := ->(scevgepx_x6) 
    iNsTr_32 := ($cast ($uint<32>) iNsTr_31)
    // load 
    iNsTr_33 := ->(scevgep14x_x6) 
    iNsTr_34 := ($cast ($uint<32>) iNsTr_33)
    iNsTr_35 := (iNsTr_32 - iNsTr_34)
    // load 
    iNsTr_36 := ->(scevgepx_x7) 
    iNsTr_37 := ($cast ($uint<32>) iNsTr_36)
    // load 
    iNsTr_38 := ->(scevgep14x_x7) 
    iNsTr_39 := ($cast ($uint<32>) iNsTr_38)
    iNsTr_40 := (iNsTr_37 - iNsTr_39)
    // compare instruction
    ispos := ( ($bitcast ( $int<32>) iNsTr_5) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    neg := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_5)
    negx_x1 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_10)
    // compare instruction
    isposx_x1 := ( ($bitcast ( $int<32>) iNsTr_10) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    iNsTr_41 := ( $mux ispos iNsTr_5 neg)
    iNsTr_42 := ( $mux isposx_x1 iNsTr_10 negx_x1)
    iNsTr_43 := (iNsTr_41 + i_sumx_x14)
    // compare instruction
    isposx_x2 := ( ($bitcast ( $int<32>) iNsTr_15) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_x2 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_15)
    negx_x3 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_20)
    // compare instruction
    isposx_x3 := ( ($bitcast ( $int<32>) iNsTr_20) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    iNsTr_44 := (iNsTr_42 + iNsTr_43)
    iNsTr_45 := ( $mux isposx_x2 iNsTr_15 negx_x2)
    iNsTr_46 := ( $mux isposx_x3 iNsTr_20 negx_x3)
    iNsTr_47 := (iNsTr_45 + iNsTr_44)
    // compare instruction
    isposx_x4 := ( ($bitcast ( $int<32>) iNsTr_25) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_x4 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_25)
    negx_x5 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_30)
    // compare instruction
    isposx_x5 := ( ($bitcast ( $int<32>) iNsTr_30) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    iNsTr_48 := (iNsTr_46 + iNsTr_47)
    iNsTr_49 := ( $mux isposx_x4 iNsTr_25 negx_x4)
    iNsTr_50 := ( $mux isposx_x5 iNsTr_30 negx_x5)
    iNsTr_51 := (iNsTr_49 + iNsTr_48)
    // compare instruction
    isposx_x6 := ( ($bitcast ( $int<32>) iNsTr_35) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_x6 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_35)
    negx_x7 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_40)
    // compare instruction
    isposx_x7 := ( ($bitcast ( $int<32>) iNsTr_40) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    iNsTr_52 := (iNsTr_50 + iNsTr_51)
    iNsTr_53 := ( $mux isposx_x6 iNsTr_35 negx_x6)
    iNsTr_54 := ( $mux isposx_x7 iNsTr_40 negx_x7)
    iNsTr_55 := (iNsTr_53 + iNsTr_52)
    iNsTr_56 := (iNsTr_54 + iNsTr_55)
    iNsTr_57 := (yx_x05 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (iNsTr_57 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 )  )
    $if exitcond1 $then  $place [bb_1_xx_x_crit_edge9] $else $place [bb_1_bb_1] $endif 
    //begin: basic-block xx_x_crit_edge9
    $merge bb_1_xx_x_crit_edge9
    $phi ret_val__ :=  ( $cast ($uint<32>) iNsTr_56) $on bb_1_xx_x_crit_edge9 
    $endmerge
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [x264_pixel_sad_4x16] 
$in (pix1 : $pointer< $uint<8> > i_stride_pix1 : $uint<32> pix2 : $pointer< $uint<8> > i_stride_pix2 : $uint<32> )
$out (ret_val__ : $uint<32>)
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bbx_xnph8
    $place [bbx_xnph8_bb_1]
    //begin: basic-block bb_1
    $merge bb_1_bb_1 bbx_xnph8_bb_1
    $phi yx_x05 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph8_bb_1 ( $cast ($uint<32>) iNsTr_29) $on bb_1_bb_1 
    $phi i_sumx_x14 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph8_bb_1 ( $cast ($uint<32>) iNsTr_28) $on bb_1_bb_1 
    $endmerge
    tmp := (i_stride_pix1 * yx_x05)
    scevgep := pix1[tmp]
    tmp3 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgepx_x3 := pix1[tmp3]
    tmp5 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgepx_x2 := pix1[tmp5]
    tmp7 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgepx_x1 := pix1[tmp7]
    tmp9 := (i_stride_pix2 * yx_x05)
    scevgep14 := pix2[tmp9]
    tmp11 := (tmp9 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep14x_x3 := pix2[tmp11]
    tmp13 := (tmp9 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep14x_x2 := pix2[tmp13]
    tmp17 := (tmp9 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep14x_x1 := pix2[tmp17]
    // load 
    iNsTr_1 := ->(scevgep) 
    iNsTr_2 := ($cast ($uint<32>) iNsTr_1)
    // load 
    iNsTr_3 := ->(scevgep14) 
    iNsTr_4 := ($cast ($uint<32>) iNsTr_3)
    iNsTr_5 := (iNsTr_2 - iNsTr_4)
    // load 
    iNsTr_6 := ->(scevgepx_x1) 
    iNsTr_7 := ($cast ($uint<32>) iNsTr_6)
    // load 
    iNsTr_8 := ->(scevgep14x_x1) 
    iNsTr_9 := ($cast ($uint<32>) iNsTr_8)
    iNsTr_10 := (iNsTr_7 - iNsTr_9)
    // load 
    iNsTr_11 := ->(scevgepx_x2) 
    iNsTr_12 := ($cast ($uint<32>) iNsTr_11)
    // load 
    iNsTr_13 := ->(scevgep14x_x2) 
    iNsTr_14 := ($cast ($uint<32>) iNsTr_13)
    iNsTr_15 := (iNsTr_12 - iNsTr_14)
    // load 
    iNsTr_16 := ->(scevgepx_x3) 
    iNsTr_17 := ($cast ($uint<32>) iNsTr_16)
    // load 
    iNsTr_18 := ->(scevgep14x_x3) 
    iNsTr_19 := ($cast ($uint<32>) iNsTr_18)
    iNsTr_20 := (iNsTr_17 - iNsTr_19)
    // compare instruction
    ispos := ( ($bitcast ( $int<32>) iNsTr_5) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    neg := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_5)
    negx_x1 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_10)
    // compare instruction
    isposx_x1 := ( ($bitcast ( $int<32>) iNsTr_10) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    iNsTr_21 := ( $mux ispos iNsTr_5 neg)
    iNsTr_22 := ( $mux isposx_x1 iNsTr_10 negx_x1)
    iNsTr_23 := (iNsTr_21 + i_sumx_x14)
    // compare instruction
    isposx_x2 := ( ($bitcast ( $int<32>) iNsTr_15) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_x2 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_15)
    negx_x3 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_20)
    // compare instruction
    isposx_x3 := ( ($bitcast ( $int<32>) iNsTr_20) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    iNsTr_24 := (iNsTr_22 + iNsTr_23)
    iNsTr_25 := ( $mux isposx_x2 iNsTr_15 negx_x2)
    iNsTr_26 := ( $mux isposx_x3 iNsTr_20 negx_x3)
    iNsTr_27 := (iNsTr_25 + iNsTr_24)
    iNsTr_28 := (iNsTr_26 + iNsTr_27)
    iNsTr_29 := (yx_x05 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (iNsTr_29 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond1 $then  $place [bb_1_xx_x_crit_edge9] $else $place [bb_1_bb_1] $endif 
    //begin: basic-block xx_x_crit_edge9
    $merge bb_1_xx_x_crit_edge9
    $phi ret_val__ :=  ( $cast ($uint<32>) iNsTr_28) $on bb_1_xx_x_crit_edge9 
    $endmerge
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [x264_pixel_sad_4x8] 
$in (pix1 : $pointer< $uint<8> > i_stride_pix1 : $uint<32> pix2 : $pointer< $uint<8> > i_stride_pix2 : $uint<32> )
$out (ret_val__ : $uint<32>)
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bbx_xnph8
    $place [bbx_xnph8_bb_1]
    //begin: basic-block bb_1
    $merge bb_1_bb_1 bbx_xnph8_bb_1
    $phi yx_x05 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph8_bb_1 ( $cast ($uint<32>) iNsTr_29) $on bb_1_bb_1 
    $phi i_sumx_x14 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph8_bb_1 ( $cast ($uint<32>) iNsTr_28) $on bb_1_bb_1 
    $endmerge
    tmp := (i_stride_pix1 * yx_x05)
    scevgep := pix1[tmp]
    tmp3 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgepx_x3 := pix1[tmp3]
    tmp5 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgepx_x2 := pix1[tmp5]
    tmp7 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgepx_x1 := pix1[tmp7]
    tmp9 := (i_stride_pix2 * yx_x05)
    scevgep14 := pix2[tmp9]
    tmp11 := (tmp9 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep14x_x3 := pix2[tmp11]
    tmp13 := (tmp9 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep14x_x2 := pix2[tmp13]
    tmp17 := (tmp9 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep14x_x1 := pix2[tmp17]
    // load 
    iNsTr_1 := ->(scevgep) 
    iNsTr_2 := ($cast ($uint<32>) iNsTr_1)
    // load 
    iNsTr_3 := ->(scevgep14) 
    iNsTr_4 := ($cast ($uint<32>) iNsTr_3)
    iNsTr_5 := (iNsTr_2 - iNsTr_4)
    // load 
    iNsTr_6 := ->(scevgepx_x1) 
    iNsTr_7 := ($cast ($uint<32>) iNsTr_6)
    // load 
    iNsTr_8 := ->(scevgep14x_x1) 
    iNsTr_9 := ($cast ($uint<32>) iNsTr_8)
    iNsTr_10 := (iNsTr_7 - iNsTr_9)
    // load 
    iNsTr_11 := ->(scevgepx_x2) 
    iNsTr_12 := ($cast ($uint<32>) iNsTr_11)
    // load 
    iNsTr_13 := ->(scevgep14x_x2) 
    iNsTr_14 := ($cast ($uint<32>) iNsTr_13)
    iNsTr_15 := (iNsTr_12 - iNsTr_14)
    // load 
    iNsTr_16 := ->(scevgepx_x3) 
    iNsTr_17 := ($cast ($uint<32>) iNsTr_16)
    // load 
    iNsTr_18 := ->(scevgep14x_x3) 
    iNsTr_19 := ($cast ($uint<32>) iNsTr_18)
    iNsTr_20 := (iNsTr_17 - iNsTr_19)
    // compare instruction
    ispos := ( ($bitcast ( $int<32>) iNsTr_5) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    neg := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_5)
    negx_x1 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_10)
    // compare instruction
    isposx_x1 := ( ($bitcast ( $int<32>) iNsTr_10) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    iNsTr_21 := ( $mux ispos iNsTr_5 neg)
    iNsTr_22 := ( $mux isposx_x1 iNsTr_10 negx_x1)
    iNsTr_23 := (iNsTr_21 + i_sumx_x14)
    // compare instruction
    isposx_x2 := ( ($bitcast ( $int<32>) iNsTr_15) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_x2 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_15)
    negx_x3 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_20)
    // compare instruction
    isposx_x3 := ( ($bitcast ( $int<32>) iNsTr_20) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    iNsTr_24 := (iNsTr_22 + iNsTr_23)
    iNsTr_25 := ( $mux isposx_x2 iNsTr_15 negx_x2)
    iNsTr_26 := ( $mux isposx_x3 iNsTr_20 negx_x3)
    iNsTr_27 := (iNsTr_25 + iNsTr_24)
    iNsTr_28 := (iNsTr_26 + iNsTr_27)
    iNsTr_29 := (yx_x05 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (iNsTr_29 == ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 )  )
    $if exitcond1 $then  $place [bb_1_xx_x_crit_edge9] $else $place [bb_1_bb_1] $endif 
    //begin: basic-block xx_x_crit_edge9
    $merge bb_1_xx_x_crit_edge9
    $phi ret_val__ :=  ( $cast ($uint<32>) iNsTr_28) $on bb_1_xx_x_crit_edge9 
    $endmerge
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [x264_pixel_sad_4x4] 
$in (pix1 : $pointer< $uint<8> > i_stride_pix1 : $uint<32> pix2 : $pointer< $uint<8> > i_stride_pix2 : $uint<32> )
$out (ret_val__ : $uint<32>)
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bbx_xnph8
    $place [bbx_xnph8_bb_1]
    //begin: basic-block bb_1
    $merge bb_1_bb_1 bbx_xnph8_bb_1
    $phi yx_x05 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph8_bb_1 ( $cast ($uint<32>) iNsTr_29) $on bb_1_bb_1 
    $phi i_sumx_x14 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph8_bb_1 ( $cast ($uint<32>) iNsTr_28) $on bb_1_bb_1 
    $endmerge
    tmp := (i_stride_pix1 * yx_x05)
    scevgep := pix1[tmp]
    tmp3 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgepx_x3 := pix1[tmp3]
    tmp5 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgepx_x2 := pix1[tmp5]
    tmp7 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgepx_x1 := pix1[tmp7]
    tmp9 := (i_stride_pix2 * yx_x05)
    scevgep14 := pix2[tmp9]
    tmp11 := (tmp9 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep14x_x3 := pix2[tmp11]
    tmp13 := (tmp9 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep14x_x2 := pix2[tmp13]
    tmp17 := (tmp9 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep14x_x1 := pix2[tmp17]
    // load 
    iNsTr_1 := ->(scevgep) 
    iNsTr_2 := ($cast ($uint<32>) iNsTr_1)
    // load 
    iNsTr_3 := ->(scevgep14) 
    iNsTr_4 := ($cast ($uint<32>) iNsTr_3)
    iNsTr_5 := (iNsTr_2 - iNsTr_4)
    // load 
    iNsTr_6 := ->(scevgepx_x1) 
    iNsTr_7 := ($cast ($uint<32>) iNsTr_6)
    // load 
    iNsTr_8 := ->(scevgep14x_x1) 
    iNsTr_9 := ($cast ($uint<32>) iNsTr_8)
    iNsTr_10 := (iNsTr_7 - iNsTr_9)
    // load 
    iNsTr_11 := ->(scevgepx_x2) 
    iNsTr_12 := ($cast ($uint<32>) iNsTr_11)
    // load 
    iNsTr_13 := ->(scevgep14x_x2) 
    iNsTr_14 := ($cast ($uint<32>) iNsTr_13)
    iNsTr_15 := (iNsTr_12 - iNsTr_14)
    // load 
    iNsTr_16 := ->(scevgepx_x3) 
    iNsTr_17 := ($cast ($uint<32>) iNsTr_16)
    // load 
    iNsTr_18 := ->(scevgep14x_x3) 
    iNsTr_19 := ($cast ($uint<32>) iNsTr_18)
    iNsTr_20 := (iNsTr_17 - iNsTr_19)
    // compare instruction
    ispos := ( ($bitcast ( $int<32>) iNsTr_5) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    neg := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_5)
    negx_x1 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_10)
    // compare instruction
    isposx_x1 := ( ($bitcast ( $int<32>) iNsTr_10) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    iNsTr_21 := ( $mux ispos iNsTr_5 neg)
    iNsTr_22 := ( $mux isposx_x1 iNsTr_10 negx_x1)
    iNsTr_23 := (iNsTr_21 + i_sumx_x14)
    // compare instruction
    isposx_x2 := ( ($bitcast ( $int<32>) iNsTr_15) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_x2 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_15)
    negx_x3 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_20)
    // compare instruction
    isposx_x3 := ( ($bitcast ( $int<32>) iNsTr_20) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    iNsTr_24 := (iNsTr_22 + iNsTr_23)
    iNsTr_25 := ( $mux isposx_x2 iNsTr_15 negx_x2)
    iNsTr_26 := ( $mux isposx_x3 iNsTr_20 negx_x3)
    iNsTr_27 := (iNsTr_25 + iNsTr_24)
    iNsTr_28 := (iNsTr_26 + iNsTr_27)
    iNsTr_29 := (yx_x05 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (iNsTr_29 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 )  )
    $if exitcond1 $then  $place [bb_1_xx_x_crit_edge9] $else $place [bb_1_bb_1] $endif 
    //begin: basic-block xx_x_crit_edge9
    $merge bb_1_xx_x_crit_edge9
    $phi ret_val__ :=  ( $cast ($uint<32>) iNsTr_28) $on bb_1_xx_x_crit_edge9 
    $endmerge
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [x264_pixel_ssd_16x8] 
$in (pix1 : $pointer< $uint<8> > i_stride_pix1 : $uint<32> pix2 : $pointer< $uint<8> > i_stride_pix2 : $uint<32> )
$out (ret_val__ : $uint<32>)
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bbx_xnph
    $place [bbx_xnph_bb_1]
    //begin: basic-block bb_1
    $merge bb_1_bb_1 bbx_xnph_bb_1
    $phi xx_x03 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph_bb_1 ( $cast ($uint<32>) iNsTr_8) $on bb_1_bb_1 
    $phi i_sumx_x02 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph_bb_1 ( $cast ($uint<32>) iNsTr_7) $on bb_1_bb_1 
    $endmerge
    scevgep := pix1[xx_x03]
    scevgep14 := pix2[xx_x03]
    // load 
    iNsTr_1 := ->(scevgep) 
    iNsTr_2 := ($cast ($uint<32>) iNsTr_1)
    // load 
    iNsTr_3 := ->(scevgep14) 
    iNsTr_4 := ($cast ($uint<32>) iNsTr_3)
    iNsTr_5 := (iNsTr_2 - iNsTr_4)
    iNsTr_6 := (iNsTr_5 * iNsTr_5)
    iNsTr_7 := (iNsTr_6 + i_sumx_x02)
    iNsTr_8 := (xx_x03 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond47 := (iNsTr_8 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond47 $then  $place [bb_1_bbx_xnphx_x1x_xpreheader] $else $place [bb_1_bb_1] $endif 
    //begin: basic-block bbx_xnphx_x1x_xpreheader
    $merge bb_1_bbx_xnphx_x1x_xpreheader
    $phi xx_xlcssa46 :=  ( $cast ($uint<32>) iNsTr_7) $on bb_1_bbx_xnphx_x1x_xpreheader 
    $endmerge
    $place [bbx_xnphx_x1x_xpreheader_bbx_xnphx_x1]
    //begin: basic-block xx_x_crit_edgex_x7
    $merge bb_15_xx_x_crit_edgex_x7
    $phi ret_val__ :=  ( $cast ($uint<32>) iNsTr_77) $on bb_15_xx_x_crit_edgex_x7 
    $endmerge
    $place [return__]
    //begin: basic-block bbx_xnphx_x1
    $merge bbx_xnphx_x1_bbx_xnphx_x1 bbx_xnphx_x1x_xpreheader_bbx_xnphx_x1
    $phi xx_x03x_x1 :=  ( $cast ($uint<32>) iNsTr_18) $on bbx_xnphx_x1_bbx_xnphx_x1 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_x1x_xpreheader_bbx_xnphx_x1 
    $phi i_sumx_x02x_x1 :=  ( $cast ($uint<32>) iNsTr_17) $on bbx_xnphx_x1_bbx_xnphx_x1 ( $cast ($uint<32>) xx_xlcssa46) $on bbx_xnphx_x1x_xpreheader_bbx_xnphx_x1 
    $endmerge
    tmp42 := (i_stride_pix1 + xx_x03x_x1)
    scevgepx_x1 := pix1[tmp42]
    tmp44 := (i_stride_pix2 + xx_x03x_x1)
    scevgep14x_x1 := pix2[tmp44]
    // load 
    iNsTr_11 := ->(scevgepx_x1) 
    iNsTr_12 := ($cast ($uint<32>) iNsTr_11)
    // load 
    iNsTr_13 := ->(scevgep14x_x1) 
    iNsTr_14 := ($cast ($uint<32>) iNsTr_13)
    iNsTr_15 := (iNsTr_12 - iNsTr_14)
    iNsTr_16 := (iNsTr_15 * iNsTr_15)
    iNsTr_17 := (iNsTr_16 + i_sumx_x02x_x1)
    iNsTr_18 := (xx_x03x_x1 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond41 := (iNsTr_18 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond41 $then  $place [bbx_xnphx_x1_bbx_xnphx_x2] $else $place [bbx_xnphx_x1_bbx_xnphx_x1] $endif 
    //begin: basic-block bb_5
    $merge bb_5_bb_5 bbx_xnphx_x2_bb_5
    $phi xx_x03x_x2 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_x2_bb_5 ( $cast ($uint<32>) iNsTr_28) $on bb_5_bb_5 
    $phi i_sumx_x02x_x2 :=  ( $cast ($uint<32>) xx_xlcssa40) $on bbx_xnphx_x2_bb_5 ( $cast ($uint<32>) iNsTr_27) $on bb_5_bb_5 
    $endmerge
    tmp35 := (tmp34 + xx_x03x_x2)
    scevgepx_x2 := pix1[tmp35]
    tmp38 := (tmp37 + xx_x03x_x2)
    scevgep14x_x2 := pix2[tmp38]
    // load 
    iNsTr_21 := ->(scevgepx_x2) 
    iNsTr_22 := ($cast ($uint<32>) iNsTr_21)
    // load 
    iNsTr_23 := ->(scevgep14x_x2) 
    iNsTr_24 := ($cast ($uint<32>) iNsTr_23)
    iNsTr_25 := (iNsTr_22 - iNsTr_24)
    iNsTr_26 := (iNsTr_25 * iNsTr_25)
    iNsTr_27 := (iNsTr_26 + i_sumx_x02x_x2)
    iNsTr_28 := (xx_x03x_x2 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond33 := (iNsTr_28 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond33 $then  $place [bb_5_bbx_xnphx_x3] $else $place [bb_5_bb_5] $endif 
    //begin: basic-block bbx_xnphx_x2
    $merge bbx_xnphx_x1_bbx_xnphx_x2
    $phi xx_xlcssa40 :=  ( $cast ($uint<32>) iNsTr_17) $on bbx_xnphx_x1_bbx_xnphx_x2 
    $endmerge
    tmp34 := (i_stride_pix1 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    tmp37 := (i_stride_pix2 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    $place [bbx_xnphx_x2_bb_5]
    //begin: basic-block bb_7
    $merge bb_7_bb_7 bbx_xnphx_x3_bb_7
    $phi xx_x03x_x3 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_x3_bb_7 ( $cast ($uint<32>) iNsTr_38) $on bb_7_bb_7 
    $phi i_sumx_x02x_x3 :=  ( $cast ($uint<32>) xx_xlcssa32) $on bbx_xnphx_x3_bb_7 ( $cast ($uint<32>) iNsTr_37) $on bb_7_bb_7 
    $endmerge
    tmp28 := (tmp19x_x3 + xx_x03x_x3)
    scevgepx_x3 := pix1[tmp28]
    tmp30 := (tmp16x_x3 + xx_x03x_x3)
    scevgep14x_x3 := pix2[tmp30]
    // load 
    iNsTr_31 := ->(scevgepx_x3) 
    iNsTr_32 := ($cast ($uint<32>) iNsTr_31)
    // load 
    iNsTr_33 := ->(scevgep14x_x3) 
    iNsTr_34 := ($cast ($uint<32>) iNsTr_33)
    iNsTr_35 := (iNsTr_32 - iNsTr_34)
    iNsTr_36 := (iNsTr_35 * iNsTr_35)
    iNsTr_37 := (iNsTr_36 + i_sumx_x02x_x3)
    iNsTr_38 := (xx_x03x_x3 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond27 := (iNsTr_38 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond27 $then  $place [bb_7_bbx_xnphx_x4] $else $place [bb_7_bb_7] $endif 
    //begin: basic-block bbx_xnphx_x3
    $merge bb_5_bbx_xnphx_x3
    $phi xx_xlcssa32 :=  ( $cast ($uint<32>) iNsTr_27) $on bb_5_bbx_xnphx_x3 
    $endmerge
    tmp16x_x3 := (i_stride_pix2 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    tmp19x_x3 := (i_stride_pix1 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    $place [bbx_xnphx_x3_bb_7]
    //begin: basic-block bb_9
    $merge bb_9_bb_9 bbx_xnphx_x4_bb_9
    $phi xx_x03x_x4 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_x4_bb_9 ( $cast ($uint<32>) iNsTr_48) $on bb_9_bb_9 
    $phi i_sumx_x02x_x4 :=  ( $cast ($uint<32>) xx_xlcssa26) $on bbx_xnphx_x4_bb_9 ( $cast ($uint<32>) iNsTr_47) $on bb_9_bb_9 
    $endmerge
    tmp21 := (tmp20 + xx_x03x_x4)
    scevgepx_x4 := pix1[tmp21]
    tmp24 := (tmp23 + xx_x03x_x4)
    scevgep14x_x4 := pix2[tmp24]
    // load 
    iNsTr_41 := ->(scevgepx_x4) 
    iNsTr_42 := ($cast ($uint<32>) iNsTr_41)
    // load 
    iNsTr_43 := ->(scevgep14x_x4) 
    iNsTr_44 := ($cast ($uint<32>) iNsTr_43)
    iNsTr_45 := (iNsTr_42 - iNsTr_44)
    iNsTr_46 := (iNsTr_45 * iNsTr_45)
    iNsTr_47 := (iNsTr_46 + i_sumx_x02x_x4)
    iNsTr_48 := (xx_x03x_x4 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond19 := (iNsTr_48 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond19 $then  $place [bb_9_bbx_xnphx_x5] $else $place [bb_9_bb_9] $endif 
    //begin: basic-block bbx_xnphx_x4
    $merge bb_7_bbx_xnphx_x4
    $phi xx_xlcssa26 :=  ( $cast ($uint<32>) iNsTr_37) $on bb_7_bbx_xnphx_x4 
    $endmerge
    tmp20 := (i_stride_pix1 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    tmp23 := (i_stride_pix2 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    $place [bbx_xnphx_x4_bb_9]
    //begin: basic-block bb_11
    $merge bb_11_bb_11 bbx_xnphx_x5_bb_11
    $phi xx_x03x_x5 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_x5_bb_11 ( $cast ($uint<32>) iNsTr_58) $on bb_11_bb_11 
    $phi i_sumx_x02x_x5 :=  ( $cast ($uint<32>) xx_xlcssa18) $on bbx_xnphx_x5_bb_11 ( $cast ($uint<32>) iNsTr_57) $on bb_11_bb_11 
    $endmerge
    tmp13 := (tmp19x_x5 + xx_x03x_x5)
    scevgepx_x5 := pix1[tmp13]
    tmp16 := (tmp16x_x5 + xx_x03x_x5)
    scevgep14x_x5 := pix2[tmp16]
    // load 
    iNsTr_51 := ->(scevgepx_x5) 
    iNsTr_52 := ($cast ($uint<32>) iNsTr_51)
    // load 
    iNsTr_53 := ->(scevgep14x_x5) 
    iNsTr_54 := ($cast ($uint<32>) iNsTr_53)
    iNsTr_55 := (iNsTr_52 - iNsTr_54)
    iNsTr_56 := (iNsTr_55 * iNsTr_55)
    iNsTr_57 := (iNsTr_56 + i_sumx_x02x_x5)
    iNsTr_58 := (xx_x03x_x5 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond12 := (iNsTr_58 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond12 $then  $place [bb_11_bbx_xnphx_x6] $else $place [bb_11_bb_11] $endif 
    //begin: basic-block bbx_xnphx_x5
    $merge bb_9_bbx_xnphx_x5
    $phi xx_xlcssa18 :=  ( $cast ($uint<32>) iNsTr_47) $on bb_9_bbx_xnphx_x5 
    $endmerge
    tmp16x_x5 := (i_stride_pix2 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) )
    tmp19x_x5 := (i_stride_pix1 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) )
    $place [bbx_xnphx_x5_bb_11]
    //begin: basic-block bb_13
    $merge bb_13_bb_13 bbx_xnphx_x6_bb_13
    $phi xx_x03x_x6 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_x6_bb_13 ( $cast ($uint<32>) iNsTr_68) $on bb_13_bb_13 
    $phi i_sumx_x02x_x6 :=  ( $cast ($uint<32>) xx_xlcssa11) $on bbx_xnphx_x6_bb_13 ( $cast ($uint<32>) iNsTr_67) $on bb_13_bb_13 
    $endmerge
    tmp7 := (tmp19x_x6 + xx_x03x_x6)
    scevgepx_x6 := pix1[tmp7]
    tmp9 := (tmp16x_x6 + xx_x03x_x6)
    scevgep14x_x6 := pix2[tmp9]
    // load 
    iNsTr_61 := ->(scevgepx_x6) 
    iNsTr_62 := ($cast ($uint<32>) iNsTr_61)
    // load 
    iNsTr_63 := ->(scevgep14x_x6) 
    iNsTr_64 := ($cast ($uint<32>) iNsTr_63)
    iNsTr_65 := (iNsTr_62 - iNsTr_64)
    iNsTr_66 := (iNsTr_65 * iNsTr_65)
    iNsTr_67 := (iNsTr_66 + i_sumx_x02x_x6)
    iNsTr_68 := (xx_x03x_x6 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond6 := (iNsTr_68 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond6 $then  $place [bb_13_bbx_xnphx_x7] $else $place [bb_13_bb_13] $endif 
    //begin: basic-block bbx_xnphx_x6
    $merge bb_11_bbx_xnphx_x6
    $phi xx_xlcssa11 :=  ( $cast ($uint<32>) iNsTr_57) $on bb_11_bbx_xnphx_x6 
    $endmerge
    tmp16x_x6 := (i_stride_pix2 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    tmp19x_x6 := (i_stride_pix1 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    $place [bbx_xnphx_x6_bb_13]
    //begin: basic-block bb_15
    $merge bb_15_bb_15 bbx_xnphx_x7_bb_15
    $phi xx_x03x_x7 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_x7_bb_15 ( $cast ($uint<32>) iNsTr_78) $on bb_15_bb_15 
    $phi i_sumx_x02x_x7 :=  ( $cast ($uint<32>) xx_xlcssa5) $on bbx_xnphx_x7_bb_15 ( $cast ($uint<32>) iNsTr_77) $on bb_15_bb_15 
    $endmerge
    tmp := (tmp19x_x7 + xx_x03x_x7)
    scevgepx_x7 := pix1[tmp]
    tmp3 := (tmp16x_x7 + xx_x03x_x7)
    scevgep14x_x7 := pix2[tmp3]
    // load 
    iNsTr_71 := ->(scevgepx_x7) 
    iNsTr_72 := ($cast ($uint<32>) iNsTr_71)
    // load 
    iNsTr_73 := ->(scevgep14x_x7) 
    iNsTr_74 := ($cast ($uint<32>) iNsTr_73)
    iNsTr_75 := (iNsTr_72 - iNsTr_74)
    iNsTr_76 := (iNsTr_75 * iNsTr_75)
    iNsTr_77 := (iNsTr_76 + i_sumx_x02x_x7)
    iNsTr_78 := (xx_x03x_x7 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (iNsTr_78 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond1 $then  $place [bb_15_xx_x_crit_edgex_x7] $else $place [bb_15_bb_15] $endif 
    //begin: basic-block bbx_xnphx_x7
    $merge bb_13_bbx_xnphx_x7
    $phi xx_xlcssa5 :=  ( $cast ($uint<32>) iNsTr_67) $on bb_13_bbx_xnphx_x7 
    $endmerge
    tmp16x_x7 := (i_stride_pix2 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    tmp19x_x7 := (i_stride_pix1 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    $place [bbx_xnphx_x7_bb_15]
    $merge return__ $endmerge
  }
}
$module [x264_pixel_ssd_8x16] 
$in (pix1 : $pointer< $uint<8> > i_stride_pix1 : $uint<32> pix2 : $pointer< $uint<8> > i_stride_pix2 : $uint<32> )
$out (ret_val__ : $uint<32>)
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bbx_xnph8
    $place [bbx_xnph8_bb_1]
    //begin: basic-block bb_1
    $merge bb_1_bb_1 bbx_xnph8_bb_1
    $phi yx_x05 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph8_bb_1 ( $cast ($uint<32>) iNsTr_57) $on bb_1_bb_1 
    $phi i_sumx_x14 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph8_bb_1 ( $cast ($uint<32>) iNsTr_56) $on bb_1_bb_1 
    $endmerge
    tmp := (i_stride_pix1 * yx_x05)
    scevgep := pix1[tmp]
    tmp3 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    scevgepx_x7 := pix1[tmp3]
    tmp5 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    scevgepx_x6 := pix1[tmp5]
    tmp7 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) )
    scevgepx_x5 := pix1[tmp7]
    tmp9 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    scevgepx_x4 := pix1[tmp9]
    tmp11 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgepx_x3 := pix1[tmp11]
    tmp13 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgepx_x2 := pix1[tmp13]
    tmp17 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgepx_x1 := pix1[tmp17]
    tmp19 := (i_stride_pix2 * yx_x05)
    scevgep14 := pix2[tmp19]
    tmp21 := (tmp19 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    scevgep14x_x7 := pix2[tmp21]
    tmp23 := (tmp19 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    scevgep14x_x6 := pix2[tmp23]
    tmp25 := (tmp19 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) )
    scevgep14x_x5 := pix2[tmp25]
    tmp27 := (tmp19 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    scevgep14x_x4 := pix2[tmp27]
    tmp29 := (tmp19 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep14x_x3 := pix2[tmp29]
    tmp33 := (tmp19 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep14x_x2 := pix2[tmp33]
    tmp35 := (tmp19 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep14x_x1 := pix2[tmp35]
    // load 
    iNsTr_1 := ->(scevgep) 
    iNsTr_2 := ($cast ($uint<32>) iNsTr_1)
    // load 
    iNsTr_3 := ->(scevgep14) 
    iNsTr_4 := ($cast ($uint<32>) iNsTr_3)
    iNsTr_5 := (iNsTr_2 - iNsTr_4)
    // load 
    iNsTr_6 := ->(scevgepx_x1) 
    iNsTr_7 := ($cast ($uint<32>) iNsTr_6)
    // load 
    iNsTr_8 := ->(scevgep14x_x1) 
    iNsTr_9 := ($cast ($uint<32>) iNsTr_8)
    iNsTr_10 := (iNsTr_7 - iNsTr_9)
    // load 
    iNsTr_11 := ->(scevgepx_x2) 
    iNsTr_12 := ($cast ($uint<32>) iNsTr_11)
    // load 
    iNsTr_13 := ->(scevgep14x_x2) 
    iNsTr_14 := ($cast ($uint<32>) iNsTr_13)
    iNsTr_15 := (iNsTr_12 - iNsTr_14)
    // load 
    iNsTr_16 := ->(scevgepx_x3) 
    iNsTr_17 := ($cast ($uint<32>) iNsTr_16)
    // load 
    iNsTr_18 := ->(scevgep14x_x3) 
    iNsTr_19 := ($cast ($uint<32>) iNsTr_18)
    iNsTr_20 := (iNsTr_17 - iNsTr_19)
    // load 
    iNsTr_21 := ->(scevgepx_x4) 
    iNsTr_22 := ($cast ($uint<32>) iNsTr_21)
    // load 
    iNsTr_23 := ->(scevgep14x_x4) 
    iNsTr_24 := ($cast ($uint<32>) iNsTr_23)
    iNsTr_25 := (iNsTr_22 - iNsTr_24)
    // load 
    iNsTr_26 := ->(scevgepx_x5) 
    iNsTr_27 := ($cast ($uint<32>) iNsTr_26)
    // load 
    iNsTr_28 := ->(scevgep14x_x5) 
    iNsTr_29 := ($cast ($uint<32>) iNsTr_28)
    iNsTr_30 := (iNsTr_27 - iNsTr_29)
    // load 
    iNsTr_31 := ->(scevgepx_x6) 
    iNsTr_32 := ($cast ($uint<32>) iNsTr_31)
    // load 
    iNsTr_33 := ->(scevgep14x_x6) 
    iNsTr_34 := ($cast ($uint<32>) iNsTr_33)
    iNsTr_35 := (iNsTr_32 - iNsTr_34)
    // load 
    iNsTr_36 := ->(scevgepx_x7) 
    iNsTr_37 := ($cast ($uint<32>) iNsTr_36)
    // load 
    iNsTr_38 := ->(scevgep14x_x7) 
    iNsTr_39 := ($cast ($uint<32>) iNsTr_38)
    iNsTr_40 := (iNsTr_37 - iNsTr_39)
    iNsTr_41 := (iNsTr_5 * iNsTr_5)
    iNsTr_42 := (iNsTr_10 * iNsTr_10)
    iNsTr_43 := (iNsTr_41 + i_sumx_x14)
    iNsTr_44 := (iNsTr_42 + iNsTr_43)
    iNsTr_45 := (iNsTr_15 * iNsTr_15)
    iNsTr_46 := (iNsTr_20 * iNsTr_20)
    iNsTr_47 := (iNsTr_45 + iNsTr_44)
    iNsTr_48 := (iNsTr_46 + iNsTr_47)
    iNsTr_49 := (iNsTr_25 * iNsTr_25)
    iNsTr_50 := (iNsTr_30 * iNsTr_30)
    iNsTr_51 := (iNsTr_49 + iNsTr_48)
    iNsTr_52 := (iNsTr_50 + iNsTr_51)
    iNsTr_53 := (iNsTr_35 * iNsTr_35)
    iNsTr_54 := (iNsTr_40 * iNsTr_40)
    iNsTr_55 := (iNsTr_53 + iNsTr_52)
    iNsTr_56 := (iNsTr_54 + iNsTr_55)
    iNsTr_57 := (yx_x05 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (iNsTr_57 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond1 $then  $place [bb_1_xx_x_crit_edge9] $else $place [bb_1_bb_1] $endif 
    //begin: basic-block xx_x_crit_edge9
    $merge bb_1_xx_x_crit_edge9
    $phi ret_val__ :=  ( $cast ($uint<32>) iNsTr_56) $on bb_1_xx_x_crit_edge9 
    $endmerge
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [x264_pixel_ssd_8x8] 
$in (pix1 : $pointer< $uint<8> > i_stride_pix1 : $uint<32> pix2 : $pointer< $uint<8> > i_stride_pix2 : $uint<32> )
$out (ret_val__ : $uint<32>)
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bbx_xnph8
    $place [bbx_xnph8_bb_1]
    //begin: basic-block bb_1
    $merge bb_1_bb_1 bbx_xnph8_bb_1
    $phi yx_x05 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph8_bb_1 ( $cast ($uint<32>) iNsTr_57) $on bb_1_bb_1 
    $phi i_sumx_x14 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph8_bb_1 ( $cast ($uint<32>) iNsTr_56) $on bb_1_bb_1 
    $endmerge
    tmp := (i_stride_pix1 * yx_x05)
    scevgep := pix1[tmp]
    tmp3 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    scevgepx_x7 := pix1[tmp3]
    tmp5 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    scevgepx_x6 := pix1[tmp5]
    tmp7 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) )
    scevgepx_x5 := pix1[tmp7]
    tmp9 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    scevgepx_x4 := pix1[tmp9]
    tmp11 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgepx_x3 := pix1[tmp11]
    tmp13 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgepx_x2 := pix1[tmp13]
    tmp17 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgepx_x1 := pix1[tmp17]
    tmp19 := (i_stride_pix2 * yx_x05)
    scevgep14 := pix2[tmp19]
    tmp21 := (tmp19 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    scevgep14x_x7 := pix2[tmp21]
    tmp23 := (tmp19 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    scevgep14x_x6 := pix2[tmp23]
    tmp25 := (tmp19 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) )
    scevgep14x_x5 := pix2[tmp25]
    tmp27 := (tmp19 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    scevgep14x_x4 := pix2[tmp27]
    tmp29 := (tmp19 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep14x_x3 := pix2[tmp29]
    tmp33 := (tmp19 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep14x_x2 := pix2[tmp33]
    tmp35 := (tmp19 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep14x_x1 := pix2[tmp35]
    // load 
    iNsTr_1 := ->(scevgep) 
    iNsTr_2 := ($cast ($uint<32>) iNsTr_1)
    // load 
    iNsTr_3 := ->(scevgep14) 
    iNsTr_4 := ($cast ($uint<32>) iNsTr_3)
    iNsTr_5 := (iNsTr_2 - iNsTr_4)
    // load 
    iNsTr_6 := ->(scevgepx_x1) 
    iNsTr_7 := ($cast ($uint<32>) iNsTr_6)
    // load 
    iNsTr_8 := ->(scevgep14x_x1) 
    iNsTr_9 := ($cast ($uint<32>) iNsTr_8)
    iNsTr_10 := (iNsTr_7 - iNsTr_9)
    // load 
    iNsTr_11 := ->(scevgepx_x2) 
    iNsTr_12 := ($cast ($uint<32>) iNsTr_11)
    // load 
    iNsTr_13 := ->(scevgep14x_x2) 
    iNsTr_14 := ($cast ($uint<32>) iNsTr_13)
    iNsTr_15 := (iNsTr_12 - iNsTr_14)
    // load 
    iNsTr_16 := ->(scevgepx_x3) 
    iNsTr_17 := ($cast ($uint<32>) iNsTr_16)
    // load 
    iNsTr_18 := ->(scevgep14x_x3) 
    iNsTr_19 := ($cast ($uint<32>) iNsTr_18)
    iNsTr_20 := (iNsTr_17 - iNsTr_19)
    // load 
    iNsTr_21 := ->(scevgepx_x4) 
    iNsTr_22 := ($cast ($uint<32>) iNsTr_21)
    // load 
    iNsTr_23 := ->(scevgep14x_x4) 
    iNsTr_24 := ($cast ($uint<32>) iNsTr_23)
    iNsTr_25 := (iNsTr_22 - iNsTr_24)
    // load 
    iNsTr_26 := ->(scevgepx_x5) 
    iNsTr_27 := ($cast ($uint<32>) iNsTr_26)
    // load 
    iNsTr_28 := ->(scevgep14x_x5) 
    iNsTr_29 := ($cast ($uint<32>) iNsTr_28)
    iNsTr_30 := (iNsTr_27 - iNsTr_29)
    // load 
    iNsTr_31 := ->(scevgepx_x6) 
    iNsTr_32 := ($cast ($uint<32>) iNsTr_31)
    // load 
    iNsTr_33 := ->(scevgep14x_x6) 
    iNsTr_34 := ($cast ($uint<32>) iNsTr_33)
    iNsTr_35 := (iNsTr_32 - iNsTr_34)
    // load 
    iNsTr_36 := ->(scevgepx_x7) 
    iNsTr_37 := ($cast ($uint<32>) iNsTr_36)
    // load 
    iNsTr_38 := ->(scevgep14x_x7) 
    iNsTr_39 := ($cast ($uint<32>) iNsTr_38)
    iNsTr_40 := (iNsTr_37 - iNsTr_39)
    iNsTr_41 := (iNsTr_5 * iNsTr_5)
    iNsTr_42 := (iNsTr_10 * iNsTr_10)
    iNsTr_43 := (iNsTr_41 + i_sumx_x14)
    iNsTr_44 := (iNsTr_42 + iNsTr_43)
    iNsTr_45 := (iNsTr_15 * iNsTr_15)
    iNsTr_46 := (iNsTr_20 * iNsTr_20)
    iNsTr_47 := (iNsTr_45 + iNsTr_44)
    iNsTr_48 := (iNsTr_46 + iNsTr_47)
    iNsTr_49 := (iNsTr_25 * iNsTr_25)
    iNsTr_50 := (iNsTr_30 * iNsTr_30)
    iNsTr_51 := (iNsTr_49 + iNsTr_48)
    iNsTr_52 := (iNsTr_50 + iNsTr_51)
    iNsTr_53 := (iNsTr_35 * iNsTr_35)
    iNsTr_54 := (iNsTr_40 * iNsTr_40)
    iNsTr_55 := (iNsTr_53 + iNsTr_52)
    iNsTr_56 := (iNsTr_54 + iNsTr_55)
    iNsTr_57 := (yx_x05 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (iNsTr_57 == ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 )  )
    $if exitcond1 $then  $place [bb_1_xx_x_crit_edge9] $else $place [bb_1_bb_1] $endif 
    //begin: basic-block xx_x_crit_edge9
    $merge bb_1_xx_x_crit_edge9
    $phi ret_val__ :=  ( $cast ($uint<32>) iNsTr_56) $on bb_1_xx_x_crit_edge9 
    $endmerge
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [x264_pixel_ssd_8x4] 
$in (pix1 : $pointer< $uint<8> > i_stride_pix1 : $uint<32> pix2 : $pointer< $uint<8> > i_stride_pix2 : $uint<32> )
$out (ret_val__ : $uint<32>)
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bbx_xnph8
    $place [bbx_xnph8_bb_1]
    //begin: basic-block bb_1
    $merge bb_1_bb_1 bbx_xnph8_bb_1
    $phi yx_x05 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph8_bb_1 ( $cast ($uint<32>) iNsTr_57) $on bb_1_bb_1 
    $phi i_sumx_x14 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph8_bb_1 ( $cast ($uint<32>) iNsTr_56) $on bb_1_bb_1 
    $endmerge
    tmp := (i_stride_pix1 * yx_x05)
    scevgep := pix1[tmp]
    tmp3 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    scevgepx_x7 := pix1[tmp3]
    tmp5 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    scevgepx_x6 := pix1[tmp5]
    tmp7 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) )
    scevgepx_x5 := pix1[tmp7]
    tmp9 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    scevgepx_x4 := pix1[tmp9]
    tmp11 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgepx_x3 := pix1[tmp11]
    tmp13 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgepx_x2 := pix1[tmp13]
    tmp17 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgepx_x1 := pix1[tmp17]
    tmp19 := (i_stride_pix2 * yx_x05)
    scevgep14 := pix2[tmp19]
    tmp21 := (tmp19 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    scevgep14x_x7 := pix2[tmp21]
    tmp23 := (tmp19 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    scevgep14x_x6 := pix2[tmp23]
    tmp25 := (tmp19 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) )
    scevgep14x_x5 := pix2[tmp25]
    tmp27 := (tmp19 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    scevgep14x_x4 := pix2[tmp27]
    tmp29 := (tmp19 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep14x_x3 := pix2[tmp29]
    tmp33 := (tmp19 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep14x_x2 := pix2[tmp33]
    tmp35 := (tmp19 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep14x_x1 := pix2[tmp35]
    // load 
    iNsTr_1 := ->(scevgep) 
    iNsTr_2 := ($cast ($uint<32>) iNsTr_1)
    // load 
    iNsTr_3 := ->(scevgep14) 
    iNsTr_4 := ($cast ($uint<32>) iNsTr_3)
    iNsTr_5 := (iNsTr_2 - iNsTr_4)
    // load 
    iNsTr_6 := ->(scevgepx_x1) 
    iNsTr_7 := ($cast ($uint<32>) iNsTr_6)
    // load 
    iNsTr_8 := ->(scevgep14x_x1) 
    iNsTr_9 := ($cast ($uint<32>) iNsTr_8)
    iNsTr_10 := (iNsTr_7 - iNsTr_9)
    // load 
    iNsTr_11 := ->(scevgepx_x2) 
    iNsTr_12 := ($cast ($uint<32>) iNsTr_11)
    // load 
    iNsTr_13 := ->(scevgep14x_x2) 
    iNsTr_14 := ($cast ($uint<32>) iNsTr_13)
    iNsTr_15 := (iNsTr_12 - iNsTr_14)
    // load 
    iNsTr_16 := ->(scevgepx_x3) 
    iNsTr_17 := ($cast ($uint<32>) iNsTr_16)
    // load 
    iNsTr_18 := ->(scevgep14x_x3) 
    iNsTr_19 := ($cast ($uint<32>) iNsTr_18)
    iNsTr_20 := (iNsTr_17 - iNsTr_19)
    // load 
    iNsTr_21 := ->(scevgepx_x4) 
    iNsTr_22 := ($cast ($uint<32>) iNsTr_21)
    // load 
    iNsTr_23 := ->(scevgep14x_x4) 
    iNsTr_24 := ($cast ($uint<32>) iNsTr_23)
    iNsTr_25 := (iNsTr_22 - iNsTr_24)
    // load 
    iNsTr_26 := ->(scevgepx_x5) 
    iNsTr_27 := ($cast ($uint<32>) iNsTr_26)
    // load 
    iNsTr_28 := ->(scevgep14x_x5) 
    iNsTr_29 := ($cast ($uint<32>) iNsTr_28)
    iNsTr_30 := (iNsTr_27 - iNsTr_29)
    // load 
    iNsTr_31 := ->(scevgepx_x6) 
    iNsTr_32 := ($cast ($uint<32>) iNsTr_31)
    // load 
    iNsTr_33 := ->(scevgep14x_x6) 
    iNsTr_34 := ($cast ($uint<32>) iNsTr_33)
    iNsTr_35 := (iNsTr_32 - iNsTr_34)
    // load 
    iNsTr_36 := ->(scevgepx_x7) 
    iNsTr_37 := ($cast ($uint<32>) iNsTr_36)
    // load 
    iNsTr_38 := ->(scevgep14x_x7) 
    iNsTr_39 := ($cast ($uint<32>) iNsTr_38)
    iNsTr_40 := (iNsTr_37 - iNsTr_39)
    iNsTr_41 := (iNsTr_5 * iNsTr_5)
    iNsTr_42 := (iNsTr_10 * iNsTr_10)
    iNsTr_43 := (iNsTr_41 + i_sumx_x14)
    iNsTr_44 := (iNsTr_42 + iNsTr_43)
    iNsTr_45 := (iNsTr_15 * iNsTr_15)
    iNsTr_46 := (iNsTr_20 * iNsTr_20)
    iNsTr_47 := (iNsTr_45 + iNsTr_44)
    iNsTr_48 := (iNsTr_46 + iNsTr_47)
    iNsTr_49 := (iNsTr_25 * iNsTr_25)
    iNsTr_50 := (iNsTr_30 * iNsTr_30)
    iNsTr_51 := (iNsTr_49 + iNsTr_48)
    iNsTr_52 := (iNsTr_50 + iNsTr_51)
    iNsTr_53 := (iNsTr_35 * iNsTr_35)
    iNsTr_54 := (iNsTr_40 * iNsTr_40)
    iNsTr_55 := (iNsTr_53 + iNsTr_52)
    iNsTr_56 := (iNsTr_54 + iNsTr_55)
    iNsTr_57 := (yx_x05 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (iNsTr_57 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 )  )
    $if exitcond1 $then  $place [bb_1_xx_x_crit_edge9] $else $place [bb_1_bb_1] $endif 
    //begin: basic-block xx_x_crit_edge9
    $merge bb_1_xx_x_crit_edge9
    $phi ret_val__ :=  ( $cast ($uint<32>) iNsTr_56) $on bb_1_xx_x_crit_edge9 
    $endmerge
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [x264_pixel_var2_8x16] 
$in (pix1 : $pointer< $uint<8> > i_stride1 : $uint<32> pix2 : $pointer< $uint<8> > i_stride2 : $uint<32> ssd : $pointer< $uint<32> > )
$out (ret_val__ : $uint<32>)
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bbx_xnph11
    $place [bbx_xnph11_bb_1]
    //begin: basic-block bb_1
    $merge bb_1_bb_1 bbx_xnph11_bb_1
    $phi yx_x08 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph11_bb_1 ( $cast ($uint<32>) iNsTr_65) $on bb_1_bb_1 
    $phi sqrx_x17 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph11_bb_1 ( $cast ($uint<32>) iNsTr_63) $on bb_1_bb_1 
    $phi sumx_x16 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph11_bb_1 ( $cast ($uint<32>) iNsTr_64) $on bb_1_bb_1 
    $endmerge
    tmp := (i_stride1 * yx_x08)
    scevgep := pix1[tmp]
    tmp4 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    scevgepx_x7 := pix1[tmp4]
    tmp6 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    scevgepx_x6 := pix1[tmp6]
    tmp8 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) )
    scevgepx_x5 := pix1[tmp8]
    tmp10 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    scevgepx_x4 := pix1[tmp10]
    tmp12 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgepx_x3 := pix1[tmp12]
    tmp14 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgepx_x2 := pix1[tmp14]
    tmp16 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgepx_x1 := pix1[tmp16]
    tmp18 := (i_stride2 * yx_x08)
    scevgep19 := pix2[tmp18]
    tmp22 := (tmp18 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    scevgep19x_x7 := pix2[tmp22]
    tmp24 := (tmp18 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    scevgep19x_x6 := pix2[tmp24]
    tmp26 := (tmp18 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) )
    scevgep19x_x5 := pix2[tmp26]
    tmp28 := (tmp18 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    scevgep19x_x4 := pix2[tmp28]
    tmp30 := (tmp18 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep19x_x3 := pix2[tmp30]
    tmp32 := (tmp18 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep19x_x2 := pix2[tmp32]
    tmp34 := (tmp18 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep19x_x1 := pix2[tmp34]
    // load 
    iNsTr_1 := ->(scevgep) 
    iNsTr_2 := ($cast ($uint<32>) iNsTr_1)
    // load 
    iNsTr_3 := ->(scevgep19) 
    iNsTr_4 := ($cast ($uint<32>) iNsTr_3)
    iNsTr_5 := (iNsTr_2 - iNsTr_4)
    // load 
    iNsTr_6 := ->(scevgepx_x1) 
    iNsTr_7 := ($cast ($uint<32>) iNsTr_6)
    // load 
    iNsTr_8 := ->(scevgep19x_x1) 
    iNsTr_9 := ($cast ($uint<32>) iNsTr_8)
    iNsTr_10 := (iNsTr_7 - iNsTr_9)
    // load 
    iNsTr_11 := ->(scevgepx_x2) 
    iNsTr_12 := ($cast ($uint<32>) iNsTr_11)
    // load 
    iNsTr_13 := ->(scevgep19x_x2) 
    iNsTr_14 := ($cast ($uint<32>) iNsTr_13)
    iNsTr_15 := (iNsTr_12 - iNsTr_14)
    // load 
    iNsTr_16 := ->(scevgepx_x3) 
    iNsTr_17 := ($cast ($uint<32>) iNsTr_16)
    // load 
    iNsTr_18 := ->(scevgep19x_x3) 
    iNsTr_19 := ($cast ($uint<32>) iNsTr_18)
    iNsTr_20 := (iNsTr_17 - iNsTr_19)
    // load 
    iNsTr_21 := ->(scevgepx_x4) 
    iNsTr_22 := ($cast ($uint<32>) iNsTr_21)
    // load 
    iNsTr_23 := ->(scevgep19x_x4) 
    iNsTr_24 := ($cast ($uint<32>) iNsTr_23)
    iNsTr_25 := (iNsTr_22 - iNsTr_24)
    // load 
    iNsTr_26 := ->(scevgepx_x5) 
    iNsTr_27 := ($cast ($uint<32>) iNsTr_26)
    // load 
    iNsTr_28 := ->(scevgep19x_x5) 
    iNsTr_29 := ($cast ($uint<32>) iNsTr_28)
    iNsTr_30 := (iNsTr_27 - iNsTr_29)
    // load 
    iNsTr_31 := ->(scevgepx_x6) 
    iNsTr_32 := ($cast ($uint<32>) iNsTr_31)
    // load 
    iNsTr_33 := ->(scevgep19x_x6) 
    iNsTr_34 := ($cast ($uint<32>) iNsTr_33)
    iNsTr_35 := (iNsTr_32 - iNsTr_34)
    // load 
    iNsTr_36 := ->(scevgepx_x7) 
    iNsTr_37 := ($cast ($uint<32>) iNsTr_36)
    // load 
    iNsTr_38 := ->(scevgep19x_x7) 
    iNsTr_39 := ($cast ($uint<32>) iNsTr_38)
    iNsTr_40 := (iNsTr_37 - iNsTr_39)
    iNsTr_41 := (iNsTr_5 * iNsTr_5)
    iNsTr_42 := (iNsTr_10 * iNsTr_10)
    iNsTr_43 := (iNsTr_5 + sumx_x16)
    iNsTr_44 := (iNsTr_41 + sqrx_x17)
    iNsTr_45 := (iNsTr_42 + iNsTr_44)
    iNsTr_46 := (iNsTr_10 + iNsTr_43)
    iNsTr_47 := (iNsTr_15 * iNsTr_15)
    iNsTr_48 := (iNsTr_20 * iNsTr_20)
    iNsTr_49 := (iNsTr_15 + iNsTr_46)
    iNsTr_50 := (iNsTr_47 + iNsTr_45)
    iNsTr_51 := (iNsTr_48 + iNsTr_50)
    iNsTr_52 := (iNsTr_20 + iNsTr_49)
    iNsTr_53 := (iNsTr_25 * iNsTr_25)
    iNsTr_54 := (iNsTr_30 * iNsTr_30)
    iNsTr_55 := (iNsTr_25 + iNsTr_52)
    iNsTr_56 := (iNsTr_53 + iNsTr_51)
    iNsTr_57 := (iNsTr_54 + iNsTr_56)
    iNsTr_58 := (iNsTr_30 + iNsTr_55)
    iNsTr_59 := (iNsTr_35 * iNsTr_35)
    iNsTr_60 := (iNsTr_40 * iNsTr_40)
    iNsTr_61 := (iNsTr_35 + iNsTr_58)
    iNsTr_62 := (iNsTr_59 + iNsTr_57)
    iNsTr_63 := (iNsTr_60 + iNsTr_62)
    iNsTr_64 := (iNsTr_40 + iNsTr_61)
    iNsTr_65 := (yx_x08 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond2 := (iNsTr_65 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond2 $then  $place [bb_1_xx_x_crit_edge12] $else $place [bb_1_bb_1] $endif 
    //begin: basic-block xx_x_crit_edge12
    $merge bb_1_xx_x_crit_edge12
    $phi xx_xlcssa1 :=  ( $cast ($uint<32>) iNsTr_64) $on bb_1_xx_x_crit_edge12 
    $phi xx_xlcssa :=  ( $cast ($uint<32>) iNsTr_63) $on bb_1_xx_x_crit_edge12 
    $endmerge
    iNsTr_67 := ($cast ($uint<64>) xx_xlcssa)
    iNsTr_68 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) xx_xlcssa1) )
    iNsTr_69 := (iNsTr_68 * iNsTr_68)
    iNsTr_70 := (iNsTr_69 >> ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000111 ) )
    iNsTr_71 := (iNsTr_67 - iNsTr_70)
    ret_val__ := ($cast ($uint<32>) iNsTr_71)
    ->(ssd) := xx_xlcssa
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [x264_pixel_var2_8x8] 
$in (pix1 : $pointer< $uint<8> > i_stride1 : $uint<32> pix2 : $pointer< $uint<8> > i_stride2 : $uint<32> ssd : $pointer< $uint<32> > )
$out (ret_val__ : $uint<32>)
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bbx_xnph11
    $place [bbx_xnph11_bb_1]
    //begin: basic-block bb_1
    $merge bb_1_bb_1 bbx_xnph11_bb_1
    $phi yx_x08 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph11_bb_1 ( $cast ($uint<32>) iNsTr_65) $on bb_1_bb_1 
    $phi sqrx_x17 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph11_bb_1 ( $cast ($uint<32>) iNsTr_63) $on bb_1_bb_1 
    $phi sumx_x16 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph11_bb_1 ( $cast ($uint<32>) iNsTr_64) $on bb_1_bb_1 
    $endmerge
    tmp := (i_stride1 * yx_x08)
    scevgep := pix1[tmp]
    tmp4 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    scevgepx_x7 := pix1[tmp4]
    tmp6 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    scevgepx_x6 := pix1[tmp6]
    tmp8 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) )
    scevgepx_x5 := pix1[tmp8]
    tmp10 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    scevgepx_x4 := pix1[tmp10]
    tmp12 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgepx_x3 := pix1[tmp12]
    tmp14 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgepx_x2 := pix1[tmp14]
    tmp16 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgepx_x1 := pix1[tmp16]
    tmp18 := (i_stride2 * yx_x08)
    scevgep19 := pix2[tmp18]
    tmp22 := (tmp18 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    scevgep19x_x7 := pix2[tmp22]
    tmp24 := (tmp18 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    scevgep19x_x6 := pix2[tmp24]
    tmp26 := (tmp18 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) )
    scevgep19x_x5 := pix2[tmp26]
    tmp28 := (tmp18 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    scevgep19x_x4 := pix2[tmp28]
    tmp30 := (tmp18 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep19x_x3 := pix2[tmp30]
    tmp32 := (tmp18 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep19x_x2 := pix2[tmp32]
    tmp34 := (tmp18 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep19x_x1 := pix2[tmp34]
    // load 
    iNsTr_1 := ->(scevgep) 
    iNsTr_2 := ($cast ($uint<32>) iNsTr_1)
    // load 
    iNsTr_3 := ->(scevgep19) 
    iNsTr_4 := ($cast ($uint<32>) iNsTr_3)
    iNsTr_5 := (iNsTr_2 - iNsTr_4)
    // load 
    iNsTr_6 := ->(scevgepx_x1) 
    iNsTr_7 := ($cast ($uint<32>) iNsTr_6)
    // load 
    iNsTr_8 := ->(scevgep19x_x1) 
    iNsTr_9 := ($cast ($uint<32>) iNsTr_8)
    iNsTr_10 := (iNsTr_7 - iNsTr_9)
    // load 
    iNsTr_11 := ->(scevgepx_x2) 
    iNsTr_12 := ($cast ($uint<32>) iNsTr_11)
    // load 
    iNsTr_13 := ->(scevgep19x_x2) 
    iNsTr_14 := ($cast ($uint<32>) iNsTr_13)
    iNsTr_15 := (iNsTr_12 - iNsTr_14)
    // load 
    iNsTr_16 := ->(scevgepx_x3) 
    iNsTr_17 := ($cast ($uint<32>) iNsTr_16)
    // load 
    iNsTr_18 := ->(scevgep19x_x3) 
    iNsTr_19 := ($cast ($uint<32>) iNsTr_18)
    iNsTr_20 := (iNsTr_17 - iNsTr_19)
    // load 
    iNsTr_21 := ->(scevgepx_x4) 
    iNsTr_22 := ($cast ($uint<32>) iNsTr_21)
    // load 
    iNsTr_23 := ->(scevgep19x_x4) 
    iNsTr_24 := ($cast ($uint<32>) iNsTr_23)
    iNsTr_25 := (iNsTr_22 - iNsTr_24)
    // load 
    iNsTr_26 := ->(scevgepx_x5) 
    iNsTr_27 := ($cast ($uint<32>) iNsTr_26)
    // load 
    iNsTr_28 := ->(scevgep19x_x5) 
    iNsTr_29 := ($cast ($uint<32>) iNsTr_28)
    iNsTr_30 := (iNsTr_27 - iNsTr_29)
    // load 
    iNsTr_31 := ->(scevgepx_x6) 
    iNsTr_32 := ($cast ($uint<32>) iNsTr_31)
    // load 
    iNsTr_33 := ->(scevgep19x_x6) 
    iNsTr_34 := ($cast ($uint<32>) iNsTr_33)
    iNsTr_35 := (iNsTr_32 - iNsTr_34)
    // load 
    iNsTr_36 := ->(scevgepx_x7) 
    iNsTr_37 := ($cast ($uint<32>) iNsTr_36)
    // load 
    iNsTr_38 := ->(scevgep19x_x7) 
    iNsTr_39 := ($cast ($uint<32>) iNsTr_38)
    iNsTr_40 := (iNsTr_37 - iNsTr_39)
    iNsTr_41 := (iNsTr_5 * iNsTr_5)
    iNsTr_42 := (iNsTr_10 * iNsTr_10)
    iNsTr_43 := (iNsTr_5 + sumx_x16)
    iNsTr_44 := (iNsTr_41 + sqrx_x17)
    iNsTr_45 := (iNsTr_42 + iNsTr_44)
    iNsTr_46 := (iNsTr_10 + iNsTr_43)
    iNsTr_47 := (iNsTr_15 * iNsTr_15)
    iNsTr_48 := (iNsTr_20 * iNsTr_20)
    iNsTr_49 := (iNsTr_15 + iNsTr_46)
    iNsTr_50 := (iNsTr_47 + iNsTr_45)
    iNsTr_51 := (iNsTr_48 + iNsTr_50)
    iNsTr_52 := (iNsTr_20 + iNsTr_49)
    iNsTr_53 := (iNsTr_25 * iNsTr_25)
    iNsTr_54 := (iNsTr_30 * iNsTr_30)
    iNsTr_55 := (iNsTr_25 + iNsTr_52)
    iNsTr_56 := (iNsTr_53 + iNsTr_51)
    iNsTr_57 := (iNsTr_54 + iNsTr_56)
    iNsTr_58 := (iNsTr_30 + iNsTr_55)
    iNsTr_59 := (iNsTr_35 * iNsTr_35)
    iNsTr_60 := (iNsTr_40 * iNsTr_40)
    iNsTr_61 := (iNsTr_35 + iNsTr_58)
    iNsTr_62 := (iNsTr_59 + iNsTr_57)
    iNsTr_63 := (iNsTr_60 + iNsTr_62)
    iNsTr_64 := (iNsTr_40 + iNsTr_61)
    iNsTr_65 := (yx_x08 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond2 := (iNsTr_65 == ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 )  )
    $if exitcond2 $then  $place [bb_1_xx_x_crit_edge12] $else $place [bb_1_bb_1] $endif 
    //begin: basic-block xx_x_crit_edge12
    $merge bb_1_xx_x_crit_edge12
    $phi xx_xlcssa1 :=  ( $cast ($uint<32>) iNsTr_64) $on bb_1_xx_x_crit_edge12 
    $phi xx_xlcssa :=  ( $cast ($uint<32>) iNsTr_63) $on bb_1_xx_x_crit_edge12 
    $endmerge
    iNsTr_67 := ($cast ($uint<64>) xx_xlcssa)
    iNsTr_68 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) xx_xlcssa1) )
    iNsTr_69 := (iNsTr_68 * iNsTr_68)
    iNsTr_70 := (iNsTr_69 >> ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000110 ) )
    iNsTr_71 := (iNsTr_67 - iNsTr_70)
    ret_val__ := ($cast ($uint<32>) iNsTr_71)
    ->(ssd) := xx_xlcssa
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [x264_pixel_satd_4x4] 
$in (pix1 : $pointer< $uint<8> > i_pix1 : $uint<32> pix2 : $pointer< $uint<8> > i_pix2 : $uint<32> )
$out (ret_val__ : $uint<32>)
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bbx_xnph8
    $storage tmp_alloc : $array [4] $of $array [2] $of $uint<32>
    tmp := @(tmp_alloc)
    $place [bbx_xnph8_bb_1]
    //begin: basic-block bb_1
    $merge bb_1_bb_1 bbx_xnph8_bb_1
    $phi ix_x05 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph8_bb_1 ( $cast ($uint<32>) iNsTr_33) $on bb_1_bb_1 
    $endmerge
    scevgep29 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][ix_x05][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    scevgep28 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][ix_x05][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    tmp4 := (i_pix2 * ix_x05)
    xx_x026 := pix2[tmp4]
    tmp6 := (tmp4 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep26 := pix2[tmp6]
    tmp8 := (tmp4 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep24 := pix2[tmp8]
    tmp14 := (tmp4 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep22 := pix2[tmp14]
    tmp16 := (i_pix1 * ix_x05)
    xx_x07 := pix1[tmp16]
    tmp18 := (tmp16 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep18 := pix1[tmp18]
    tmp22 := (tmp16 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep16 := pix1[tmp22]
    tmp24 := (tmp16 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep14 := pix1[tmp24]
    // load 
    iNsTr_1 := ->(xx_x07) 
    iNsTr_2 := ($cast ($uint<32>) iNsTr_1)
    // load 
    iNsTr_3 := ->(xx_x026) 
    iNsTr_4 := ($cast ($uint<32>) iNsTr_3)
    iNsTr_5 := (iNsTr_2 - iNsTr_4)
    // load 
    iNsTr_6 := ->(scevgep14) 
    iNsTr_7 := ($cast ($uint<32>) iNsTr_6)
    // load 
    iNsTr_8 := ->(scevgep22) 
    iNsTr_9 := ($cast ($uint<32>) iNsTr_8)
    iNsTr_10 := (iNsTr_7 - iNsTr_9)
    iNsTr_11 := (iNsTr_5 - iNsTr_10)
    iNsTr_12 := (iNsTr_11 << ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    iNsTr_13 := (iNsTr_10 + iNsTr_5)
    iNsTr_14 := (iNsTr_13 + iNsTr_12)
    // load 
    iNsTr_15 := ->(scevgep16) 
    iNsTr_16 := ($cast ($uint<32>) iNsTr_15)
    // load 
    iNsTr_17 := ->(scevgep24) 
    iNsTr_18 := ($cast ($uint<32>) iNsTr_17)
    iNsTr_19 := (iNsTr_16 - iNsTr_18)
    // load 
    iNsTr_20 := ->(scevgep18) 
    iNsTr_21 := ($cast ($uint<32>) iNsTr_20)
    // load 
    iNsTr_22 := ->(scevgep26) 
    iNsTr_23 := ($cast ($uint<32>) iNsTr_22)
    iNsTr_24 := (iNsTr_21 - iNsTr_23)
    iNsTr_25 := (iNsTr_19 - iNsTr_24)
    iNsTr_26 := (iNsTr_25 << ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    iNsTr_27 := (iNsTr_24 + iNsTr_19)
    iNsTr_28 := (iNsTr_27 + iNsTr_26)
    iNsTr_29 := (iNsTr_28 + iNsTr_14)
    ->(scevgep28) := iNsTr_29
    iNsTr_31 := (iNsTr_14 - iNsTr_28)
    ->(scevgep29) := iNsTr_31
    iNsTr_33 := (ix_x05 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (iNsTr_33 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 )  )
    $if exitcond1 $then  $place [bb_1_bb_2] $else $place [bb_1_bb_1] $endif 
    //begin: basic-block bb_2
    $merge bb_1_bb_2
    $endmerge
    scevgep := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    scevgep9 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    scevgep10 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    scevgep11 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    // load 
    iNsTr_35 := ->(scevgep) 
    // load 
    iNsTr_36 := ->(scevgep9) 
    iNsTr_37 := (iNsTr_36 + iNsTr_35)
    iNsTr_38 := (iNsTr_35 - iNsTr_36)
    // load 
    iNsTr_39 := ->(scevgep10) 
    // load 
    iNsTr_40 := ->(scevgep11) 
    iNsTr_41 := (iNsTr_40 + iNsTr_39)
    iNsTr_42 := (iNsTr_39 - iNsTr_40)
    iNsTr_43 := (iNsTr_41 + iNsTr_37)
    iNsTr_44 := (iNsTr_37 - iNsTr_41)
    iNsTr_45 := (iNsTr_42 + iNsTr_38)
    iNsTr_46 := (iNsTr_38 - iNsTr_42)
    iNsTr_47 := (iNsTr_43 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000001111 ) )
    iNsTr_48 := (iNsTr_47 & ( $bitcast ($uint<32> ) _b00000000000000010000000000000001 ) )
    iNsTr_49 := (iNsTr_48 * ( $bitcast ($uint<32> ) _b00000000000000001111111111111111 ) )
    iNsTr_50 := (iNsTr_49 + iNsTr_43)
    iNsTr_51 := (iNsTr_50 ^ iNsTr_49)
    iNsTr_52 := (iNsTr_45 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000001111 ) )
    iNsTr_53 := (iNsTr_52 & ( $bitcast ($uint<32> ) _b00000000000000010000000000000001 ) )
    iNsTr_54 := (iNsTr_53 * ( $bitcast ($uint<32> ) _b00000000000000001111111111111111 ) )
    iNsTr_55 := (iNsTr_54 + iNsTr_45)
    iNsTr_56 := (iNsTr_55 ^ iNsTr_54)
    iNsTr_57 := (iNsTr_44 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000001111 ) )
    iNsTr_58 := (iNsTr_57 & ( $bitcast ($uint<32> ) _b00000000000000010000000000000001 ) )
    iNsTr_59 := (iNsTr_58 * ( $bitcast ($uint<32> ) _b00000000000000001111111111111111 ) )
    iNsTr_60 := (iNsTr_59 + iNsTr_44)
    iNsTr_61 := (iNsTr_60 ^ iNsTr_59)
    iNsTr_62 := (iNsTr_46 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000001111 ) )
    iNsTr_63 := (iNsTr_62 & ( $bitcast ($uint<32> ) _b00000000000000010000000000000001 ) )
    iNsTr_64 := (iNsTr_63 * ( $bitcast ($uint<32> ) _b00000000000000001111111111111111 ) )
    iNsTr_65 := (iNsTr_64 + iNsTr_46)
    iNsTr_66 := (iNsTr_65 ^ iNsTr_64)
    iNsTr_67 := (iNsTr_51 + iNsTr_66)
    iNsTr_68 := (iNsTr_67 + iNsTr_61)
    iNsTr_69 := (iNsTr_68 + iNsTr_56)
    scevgepx_x1 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    scevgep9x_x1 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    scevgep10x_x1 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    scevgep11x_x1 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_70 := ->(scevgepx_x1) 
    // load 
    iNsTr_71 := ->(scevgep9x_x1) 
    iNsTr_72 := (iNsTr_71 + iNsTr_70)
    iNsTr_73 := (iNsTr_70 - iNsTr_71)
    // load 
    iNsTr_74 := ->(scevgep10x_x1) 
    // load 
    iNsTr_75 := ->(scevgep11x_x1) 
    iNsTr_76 := (iNsTr_75 + iNsTr_74)
    iNsTr_77 := (iNsTr_74 - iNsTr_75)
    iNsTr_78 := (iNsTr_76 + iNsTr_72)
    iNsTr_79 := (iNsTr_72 - iNsTr_76)
    iNsTr_80 := (iNsTr_77 + iNsTr_73)
    iNsTr_81 := (iNsTr_73 - iNsTr_77)
    iNsTr_82 := (iNsTr_78 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000001111 ) )
    iNsTr_83 := (iNsTr_82 & ( $bitcast ($uint<32> ) _b00000000000000010000000000000001 ) )
    iNsTr_84 := (iNsTr_83 * ( $bitcast ($uint<32> ) _b00000000000000001111111111111111 ) )
    iNsTr_85 := (iNsTr_84 + iNsTr_78)
    iNsTr_86 := (iNsTr_85 ^ iNsTr_84)
    iNsTr_87 := (iNsTr_80 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000001111 ) )
    iNsTr_88 := (iNsTr_87 & ( $bitcast ($uint<32> ) _b00000000000000010000000000000001 ) )
    iNsTr_89 := (iNsTr_88 * ( $bitcast ($uint<32> ) _b00000000000000001111111111111111 ) )
    iNsTr_90 := (iNsTr_89 + iNsTr_80)
    iNsTr_91 := (iNsTr_90 ^ iNsTr_89)
    iNsTr_92 := (iNsTr_79 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000001111 ) )
    iNsTr_93 := (iNsTr_92 & ( $bitcast ($uint<32> ) _b00000000000000010000000000000001 ) )
    iNsTr_94 := (iNsTr_93 * ( $bitcast ($uint<32> ) _b00000000000000001111111111111111 ) )
    iNsTr_95 := (iNsTr_94 + iNsTr_79)
    iNsTr_96 := (iNsTr_95 ^ iNsTr_94)
    iNsTr_97 := (iNsTr_81 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000001111 ) )
    iNsTr_98 := (iNsTr_97 & ( $bitcast ($uint<32> ) _b00000000000000010000000000000001 ) )
    iNsTr_99 := (iNsTr_98 * ( $bitcast ($uint<32> ) _b00000000000000001111111111111111 ) )
    iNsTr_100 := (iNsTr_99 + iNsTr_81)
    iNsTr_101 := (iNsTr_100 ^ iNsTr_99)
    iNsTr_102 := (iNsTr_86 + iNsTr_101)
    iNsTr_103 := (iNsTr_102 + iNsTr_96)
    iNsTr_104 := (iNsTr_103 + iNsTr_91)
    iNsTr_105 := (iNsTr_69 & ( $bitcast ($uint<32> ) _b00000000000000001111111111111111 ) )
    iNsTr_106 := (iNsTr_69 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    iNsTr_107 := (iNsTr_104 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    iNsTr_108 := (iNsTr_106 + iNsTr_105)
    iNsTr_109 := (iNsTr_107 + iNsTr_108)
    iNsTr_110 := (iNsTr_104 & ( $bitcast ($uint<32> ) _b00000000000000001111111111111111 ) )
    iNsTr_111 := (iNsTr_109 + iNsTr_110)
    ret_val__ := (iNsTr_111 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [x264_pixel_satd_8x4] 
$in (pix1 : $pointer< $uint<8> > i_pix1 : $uint<32> pix2 : $pointer< $uint<8> > i_pix2 : $uint<32> )
$out (ret_val__ : $uint<32>)
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bbx_xnph12
    $storage tmp_alloc : $array [4] $of $array [4] $of $uint<32>
    tmp := @(tmp_alloc)
    $place [bbx_xnph12_bb_1]
    //begin: basic-block bb_1
    $merge bb_1_bb_1 bbx_xnph12_bb_1
    $phi ix_x09 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph12_bb_1 ( $cast ($uint<32>) iNsTr_61) $on bb_1_bb_1 
    $endmerge
    scevgep51 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][ix_x09][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    scevgep50 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][ix_x09][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    scevgep49 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][ix_x09][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    scevgep48 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][ix_x09][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    tmp6 := (i_pix2 * ix_x09)
    xx_x0610 := pix2[tmp6]
    tmp8 := (tmp6 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    scevgep46 := pix2[tmp8]
    tmp10 := (tmp6 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep44 := pix2[tmp10]
    tmp12 := (tmp6 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    scevgep42 := pix2[tmp12]
    tmp18 := (tmp6 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep40 := pix2[tmp18]
    tmp20 := (tmp6 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) )
    scevgep38 := pix2[tmp20]
    tmp22 := (tmp6 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep36 := pix2[tmp22]
    tmp24 := (tmp6 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    scevgep34 := pix2[tmp24]
    tmp26 := (i_pix1 * ix_x09)
    xx_x011 := pix1[tmp26]
    tmp28 := (tmp26 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    scevgep30 := pix1[tmp28]
    tmp30 := (tmp26 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep28 := pix1[tmp30]
    tmp34 := (tmp26 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    scevgep26 := pix1[tmp34]
    tmp36 := (tmp26 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep24 := pix1[tmp36]
    tmp38 := (tmp26 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) )
    scevgep22 := pix1[tmp38]
    tmp40 := (tmp26 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep20 := pix1[tmp40]
    tmp42 := (tmp26 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    scevgep18 := pix1[tmp42]
    // load 
    iNsTr_1 := ->(xx_x011) 
    iNsTr_2 := ($cast ($uint<32>) iNsTr_1)
    // load 
    iNsTr_3 := ->(xx_x0610) 
    iNsTr_4 := ($cast ($uint<32>) iNsTr_3)
    iNsTr_5 := (iNsTr_2 - iNsTr_4)
    // load 
    iNsTr_6 := ->(scevgep18) 
    iNsTr_7 := ($cast ($uint<32>) iNsTr_6)
    // load 
    iNsTr_8 := ->(scevgep34) 
    iNsTr_9 := ($cast ($uint<32>) iNsTr_8)
    iNsTr_10 := (iNsTr_7 - iNsTr_9)
    iNsTr_11 := (iNsTr_10 << ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    iNsTr_12 := (iNsTr_11 + iNsTr_5)
    // load 
    iNsTr_13 := ->(scevgep20) 
    iNsTr_14 := ($cast ($uint<32>) iNsTr_13)
    // load 
    iNsTr_15 := ->(scevgep36) 
    iNsTr_16 := ($cast ($uint<32>) iNsTr_15)
    iNsTr_17 := (iNsTr_14 - iNsTr_16)
    // load 
    iNsTr_18 := ->(scevgep22) 
    iNsTr_19 := ($cast ($uint<32>) iNsTr_18)
    // load 
    iNsTr_20 := ->(scevgep38) 
    iNsTr_21 := ($cast ($uint<32>) iNsTr_20)
    iNsTr_22 := (iNsTr_19 - iNsTr_21)
    iNsTr_23 := (iNsTr_22 << ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    iNsTr_24 := (iNsTr_23 + iNsTr_17)
    // load 
    iNsTr_25 := ->(scevgep24) 
    iNsTr_26 := ($cast ($uint<32>) iNsTr_25)
    // load 
    iNsTr_27 := ->(scevgep40) 
    iNsTr_28 := ($cast ($uint<32>) iNsTr_27)
    iNsTr_29 := (iNsTr_26 - iNsTr_28)
    // load 
    iNsTr_30 := ->(scevgep26) 
    iNsTr_31 := ($cast ($uint<32>) iNsTr_30)
    // load 
    iNsTr_32 := ->(scevgep42) 
    iNsTr_33 := ($cast ($uint<32>) iNsTr_32)
    iNsTr_34 := (iNsTr_31 - iNsTr_33)
    iNsTr_35 := (iNsTr_34 << ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    iNsTr_36 := (iNsTr_35 + iNsTr_29)
    // load 
    iNsTr_37 := ->(scevgep28) 
    iNsTr_38 := ($cast ($uint<32>) iNsTr_37)
    // load 
    iNsTr_39 := ->(scevgep44) 
    iNsTr_40 := ($cast ($uint<32>) iNsTr_39)
    iNsTr_41 := (iNsTr_38 - iNsTr_40)
    // load 
    iNsTr_42 := ->(scevgep30) 
    iNsTr_43 := ($cast ($uint<32>) iNsTr_42)
    // load 
    iNsTr_44 := ->(scevgep46) 
    iNsTr_45 := ($cast ($uint<32>) iNsTr_44)
    iNsTr_46 := (iNsTr_43 - iNsTr_45)
    iNsTr_47 := (iNsTr_46 << ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    iNsTr_48 := (iNsTr_47 + iNsTr_41)
    iNsTr_49 := (iNsTr_24 + iNsTr_12)
    iNsTr_50 := (iNsTr_12 - iNsTr_24)
    iNsTr_51 := (iNsTr_48 + iNsTr_36)
    iNsTr_52 := (iNsTr_36 - iNsTr_48)
    iNsTr_53 := (iNsTr_51 + iNsTr_49)
    ->(scevgep48) := iNsTr_53
    iNsTr_55 := (iNsTr_49 - iNsTr_51)
    ->(scevgep49) := iNsTr_55
    iNsTr_57 := (iNsTr_52 + iNsTr_50)
    ->(scevgep50) := iNsTr_57
    iNsTr_59 := (iNsTr_50 - iNsTr_52)
    ->(scevgep51) := iNsTr_59
    iNsTr_61 := (ix_x09 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (iNsTr_61 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 )  )
    $if exitcond1 $then  $place [bb_1_bb_2] $else $place [bb_1_bb_1] $endif 
    //begin: basic-block bb_2
    $merge bb_1_bb_2
    $endmerge
    scevgep := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    scevgep13 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    scevgep14 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    scevgep15 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    // load 
    iNsTr_63 := ->(scevgep) 
    // load 
    iNsTr_64 := ->(scevgep13) 
    iNsTr_65 := (iNsTr_64 + iNsTr_63)
    iNsTr_66 := (iNsTr_63 - iNsTr_64)
    // load 
    iNsTr_67 := ->(scevgep14) 
    // load 
    iNsTr_68 := ->(scevgep15) 
    iNsTr_69 := (iNsTr_68 + iNsTr_67)
    iNsTr_70 := (iNsTr_67 - iNsTr_68)
    iNsTr_71 := (iNsTr_69 + iNsTr_65)
    iNsTr_72 := (iNsTr_65 - iNsTr_69)
    iNsTr_73 := (iNsTr_70 + iNsTr_66)
    iNsTr_74 := (iNsTr_66 - iNsTr_70)
    iNsTr_75 := (iNsTr_71 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000001111 ) )
    iNsTr_76 := (iNsTr_75 & ( $bitcast ($uint<32> ) _b00000000000000010000000000000001 ) )
    iNsTr_77 := (iNsTr_76 * ( $bitcast ($uint<32> ) _b00000000000000001111111111111111 ) )
    iNsTr_78 := (iNsTr_73 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000001111 ) )
    iNsTr_79 := (iNsTr_78 & ( $bitcast ($uint<32> ) _b00000000000000010000000000000001 ) )
    iNsTr_80 := (iNsTr_79 * ( $bitcast ($uint<32> ) _b00000000000000001111111111111111 ) )
    iNsTr_81 := (iNsTr_72 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000001111 ) )
    iNsTr_82 := (iNsTr_81 & ( $bitcast ($uint<32> ) _b00000000000000010000000000000001 ) )
    iNsTr_83 := (iNsTr_82 * ( $bitcast ($uint<32> ) _b00000000000000001111111111111111 ) )
    iNsTr_84 := (iNsTr_74 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000001111 ) )
    iNsTr_85 := (iNsTr_84 & ( $bitcast ($uint<32> ) _b00000000000000010000000000000001 ) )
    iNsTr_86 := (iNsTr_85 * ( $bitcast ($uint<32> ) _b00000000000000001111111111111111 ) )
    scevgepx_x1 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    scevgep13x_x1 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    scevgep14x_x1 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    scevgep15x_x1 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_87 := ->(scevgepx_x1) 
    // load 
    iNsTr_88 := ->(scevgep13x_x1) 
    iNsTr_89 := (iNsTr_88 + iNsTr_87)
    iNsTr_90 := (iNsTr_87 - iNsTr_88)
    // load 
    iNsTr_91 := ->(scevgep14x_x1) 
    // load 
    iNsTr_92 := ->(scevgep15x_x1) 
    iNsTr_93 := (iNsTr_92 + iNsTr_91)
    iNsTr_94 := (iNsTr_91 - iNsTr_92)
    iNsTr_95 := (iNsTr_93 + iNsTr_89)
    iNsTr_96 := (iNsTr_89 - iNsTr_93)
    iNsTr_97 := (iNsTr_94 + iNsTr_90)
    iNsTr_98 := (iNsTr_90 - iNsTr_94)
    iNsTr_99 := (iNsTr_95 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000001111 ) )
    iNsTr_100 := (iNsTr_99 & ( $bitcast ($uint<32> ) _b00000000000000010000000000000001 ) )
    iNsTr_101 := (iNsTr_100 * ( $bitcast ($uint<32> ) _b00000000000000001111111111111111 ) )
    iNsTr_102 := (iNsTr_97 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000001111 ) )
    iNsTr_103 := (iNsTr_102 & ( $bitcast ($uint<32> ) _b00000000000000010000000000000001 ) )
    iNsTr_104 := (iNsTr_103 * ( $bitcast ($uint<32> ) _b00000000000000001111111111111111 ) )
    iNsTr_105 := (iNsTr_96 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000001111 ) )
    iNsTr_106 := (iNsTr_105 & ( $bitcast ($uint<32> ) _b00000000000000010000000000000001 ) )
    iNsTr_107 := (iNsTr_106 * ( $bitcast ($uint<32> ) _b00000000000000001111111111111111 ) )
    iNsTr_108 := (iNsTr_98 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000001111 ) )
    iNsTr_109 := (iNsTr_108 & ( $bitcast ($uint<32> ) _b00000000000000010000000000000001 ) )
    iNsTr_110 := (iNsTr_109 * ( $bitcast ($uint<32> ) _b00000000000000001111111111111111 ) )
    scevgepx_x2 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    scevgep13x_x2 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    scevgep14x_x2 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    scevgep15x_x2 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_111 := ->(scevgepx_x2) 
    // load 
    iNsTr_112 := ->(scevgep13x_x2) 
    iNsTr_113 := (iNsTr_112 + iNsTr_111)
    iNsTr_114 := (iNsTr_111 - iNsTr_112)
    // load 
    iNsTr_115 := ->(scevgep14x_x2) 
    // load 
    iNsTr_116 := ->(scevgep15x_x2) 
    iNsTr_117 := (iNsTr_116 + iNsTr_115)
    iNsTr_118 := (iNsTr_115 - iNsTr_116)
    iNsTr_119 := (iNsTr_117 + iNsTr_113)
    iNsTr_120 := (iNsTr_113 - iNsTr_117)
    iNsTr_121 := (iNsTr_118 + iNsTr_114)
    iNsTr_122 := (iNsTr_114 - iNsTr_118)
    iNsTr_123 := (iNsTr_119 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000001111 ) )
    iNsTr_124 := (iNsTr_123 & ( $bitcast ($uint<32> ) _b00000000000000010000000000000001 ) )
    iNsTr_125 := (iNsTr_124 * ( $bitcast ($uint<32> ) _b00000000000000001111111111111111 ) )
    iNsTr_126 := (iNsTr_121 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000001111 ) )
    iNsTr_127 := (iNsTr_126 & ( $bitcast ($uint<32> ) _b00000000000000010000000000000001 ) )
    iNsTr_128 := (iNsTr_127 * ( $bitcast ($uint<32> ) _b00000000000000001111111111111111 ) )
    iNsTr_129 := (iNsTr_120 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000001111 ) )
    iNsTr_130 := (iNsTr_129 & ( $bitcast ($uint<32> ) _b00000000000000010000000000000001 ) )
    iNsTr_131 := (iNsTr_130 * ( $bitcast ($uint<32> ) _b00000000000000001111111111111111 ) )
    iNsTr_132 := (iNsTr_122 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000001111 ) )
    iNsTr_133 := (iNsTr_132 & ( $bitcast ($uint<32> ) _b00000000000000010000000000000001 ) )
    iNsTr_134 := (iNsTr_133 * ( $bitcast ($uint<32> ) _b00000000000000001111111111111111 ) )
    scevgepx_x3 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    scevgep13x_x3 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    scevgep14x_x3 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    scevgep15x_x3 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    iNsTr_135 := ->(scevgepx_x3) 
    // load 
    iNsTr_136 := ->(scevgep13x_x3) 
    iNsTr_137 := (iNsTr_136 + iNsTr_135)
    iNsTr_138 := (iNsTr_135 - iNsTr_136)
    // load 
    iNsTr_139 := ->(scevgep14x_x3) 
    // load 
    iNsTr_140 := ->(scevgep15x_x3) 
    iNsTr_141 := (iNsTr_140 + iNsTr_139)
    iNsTr_142 := (iNsTr_139 - iNsTr_140)
    iNsTr_143 := (iNsTr_141 + iNsTr_137)
    iNsTr_144 := (iNsTr_137 - iNsTr_141)
    iNsTr_145 := (iNsTr_142 + iNsTr_138)
    iNsTr_146 := (iNsTr_138 - iNsTr_142)
    iNsTr_147 := (iNsTr_143 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000001111 ) )
    iNsTr_148 := (iNsTr_147 & ( $bitcast ($uint<32> ) _b00000000000000010000000000000001 ) )
    iNsTr_149 := (iNsTr_148 * ( $bitcast ($uint<32> ) _b00000000000000001111111111111111 ) )
    iNsTr_150 := (iNsTr_145 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000001111 ) )
    iNsTr_151 := (iNsTr_150 & ( $bitcast ($uint<32> ) _b00000000000000010000000000000001 ) )
    iNsTr_152 := (iNsTr_151 * ( $bitcast ($uint<32> ) _b00000000000000001111111111111111 ) )
    iNsTr_153 := (iNsTr_144 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000001111 ) )
    iNsTr_154 := (iNsTr_153 & ( $bitcast ($uint<32> ) _b00000000000000010000000000000001 ) )
    iNsTr_155 := (iNsTr_154 * ( $bitcast ($uint<32> ) _b00000000000000001111111111111111 ) )
    iNsTr_156 := (iNsTr_146 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000001111 ) )
    iNsTr_157 := (iNsTr_156 & ( $bitcast ($uint<32> ) _b00000000000000010000000000000001 ) )
    iNsTr_158 := (iNsTr_157 * ( $bitcast ($uint<32> ) _b00000000000000001111111111111111 ) )
    iNsTr_159 := (iNsTr_83 + iNsTr_72)
    iNsTr_160 := (iNsTr_86 + iNsTr_74)
    iNsTr_161 := (iNsTr_80 + iNsTr_73)
    iNsTr_162 := (iNsTr_159 ^ iNsTr_83)
    iNsTr_163 := (iNsTr_160 ^ iNsTr_86)
    iNsTr_164 := (iNsTr_77 + iNsTr_71)
    iNsTr_165 := (iNsTr_161 ^ iNsTr_80)
    iNsTr_166 := (iNsTr_163 + iNsTr_162)
    iNsTr_167 := (iNsTr_110 + iNsTr_98)
    iNsTr_168 := (iNsTr_164 ^ iNsTr_77)
    iNsTr_169 := (iNsTr_166 + iNsTr_165)
    iNsTr_170 := (iNsTr_167 ^ iNsTr_110)
    iNsTr_171 := (iNsTr_107 + iNsTr_96)
    iNsTr_172 := (iNsTr_169 + iNsTr_168)
    iNsTr_173 := (iNsTr_170 + iNsTr_172)
    iNsTr_174 := (iNsTr_171 ^ iNsTr_107)
    iNsTr_175 := (iNsTr_104 + iNsTr_97)
    iNsTr_176 := (iNsTr_173 + iNsTr_174)
    iNsTr_177 := (iNsTr_175 ^ iNsTr_104)
    iNsTr_178 := (iNsTr_101 + iNsTr_95)
    iNsTr_179 := (iNsTr_176 + iNsTr_177)
    iNsTr_180 := (iNsTr_178 ^ iNsTr_101)
    iNsTr_181 := (iNsTr_134 + iNsTr_122)
    iNsTr_182 := (iNsTr_179 + iNsTr_180)
    iNsTr_183 := (iNsTr_131 + iNsTr_120)
    iNsTr_184 := (iNsTr_181 ^ iNsTr_134)
    iNsTr_185 := (iNsTr_128 + iNsTr_121)
    iNsTr_186 := (iNsTr_183 ^ iNsTr_131)
    iNsTr_187 := (iNsTr_184 + iNsTr_182)
    iNsTr_188 := (iNsTr_125 + iNsTr_119)
    iNsTr_189 := (iNsTr_185 ^ iNsTr_128)
    iNsTr_190 := (iNsTr_187 + iNsTr_186)
    iNsTr_191 := (iNsTr_158 + iNsTr_146)
    iNsTr_192 := (iNsTr_188 ^ iNsTr_125)
    iNsTr_193 := (iNsTr_190 + iNsTr_189)
    iNsTr_194 := (iNsTr_191 ^ iNsTr_158)
    iNsTr_195 := (iNsTr_155 + iNsTr_144)
    iNsTr_196 := (iNsTr_193 + iNsTr_192)
    iNsTr_197 := (iNsTr_194 + iNsTr_196)
    iNsTr_198 := (iNsTr_195 ^ iNsTr_155)
    iNsTr_199 := (iNsTr_152 + iNsTr_145)
    iNsTr_200 := (iNsTr_197 + iNsTr_198)
    iNsTr_201 := (iNsTr_199 ^ iNsTr_152)
    iNsTr_202 := (iNsTr_149 + iNsTr_143)
    iNsTr_203 := (iNsTr_200 + iNsTr_201)
    iNsTr_204 := (iNsTr_202 ^ iNsTr_149)
    iNsTr_205 := (iNsTr_203 + iNsTr_204)
    iNsTr_206 := (iNsTr_205 & ( $bitcast ($uint<32> ) _b00000000000000001111111111111111 ) )
    iNsTr_207 := (iNsTr_205 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    iNsTr_208 := (iNsTr_206 + iNsTr_207)
    ret_val__ := (iNsTr_208 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [x264_pixel_satd_16x16] 
$in (pix1 : $pointer< $uint<8> > i_pix1 : $uint<32> pix2 : $pointer< $uint<8> > i_pix2 : $uint<32> )
$out (ret_val__ : $uint<32>)
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    $call x264_pixel_satd_8x4 (pix1 i_pix1 pix2 i_pix2 )  (iNsTr_0)
    iNsTr_1 := (i_pix1 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_2 := pix1[iNsTr_1]
    iNsTr_3 := (i_pix2 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_4 := pix2[iNsTr_3]
    $call x264_pixel_satd_8x4 (iNsTr_2 i_pix1 iNsTr_4 i_pix2 )  (iNsTr_5)
    iNsTr_6 := pix1[( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) ]
    iNsTr_7 := pix2[( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) ]
    $call x264_pixel_satd_8x4 (iNsTr_6 i_pix1 iNsTr_7 i_pix2 )  (iNsTr_8)
    xx_xsum := (iNsTr_1 + ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) )
    iNsTr_9 := pix1[xx_xsum]
    xx_xsum1 := (iNsTr_3 + ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) )
    iNsTr_10 := pix2[xx_xsum1]
    $call x264_pixel_satd_8x4 (iNsTr_9 i_pix1 iNsTr_10 i_pix2 )  (iNsTr_11)
    iNsTr_12 := (i_pix1 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    iNsTr_13 := pix1[iNsTr_12]
    iNsTr_14 := (i_pix2 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    iNsTr_15 := pix2[iNsTr_14]
    $call x264_pixel_satd_8x4 (iNsTr_13 i_pix1 iNsTr_15 i_pix2 )  (iNsTr_16)
    iNsTr_17 := (i_pix1 * ( $bitcast ($uint<32> ) _b00000000000000000000000000001100 ) )
    iNsTr_18 := pix1[iNsTr_17]
    iNsTr_19 := (i_pix2 * ( $bitcast ($uint<32> ) _b00000000000000000000000000001100 ) )
    iNsTr_20 := pix2[iNsTr_19]
    $call x264_pixel_satd_8x4 (iNsTr_18 i_pix1 iNsTr_20 i_pix2 )  (iNsTr_21)
    xx_xsum2 := (iNsTr_12 + ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) )
    iNsTr_22 := pix1[xx_xsum2]
    xx_xsum3 := (iNsTr_14 + ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) )
    iNsTr_23 := pix2[xx_xsum3]
    $call x264_pixel_satd_8x4 (iNsTr_22 i_pix1 iNsTr_23 i_pix2 )  (iNsTr_24)
    xx_xsum4 := (iNsTr_17 + ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) )
    iNsTr_25 := pix1[xx_xsum4]
    xx_xsum5 := (iNsTr_19 + ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) )
    iNsTr_26 := pix2[xx_xsum5]
    $call x264_pixel_satd_8x4 (iNsTr_25 i_pix1 iNsTr_26 i_pix2 )  (iNsTr_27)
    iNsTr_28 := (iNsTr_5 + iNsTr_0)
    iNsTr_29 := (iNsTr_28 + iNsTr_8)
    iNsTr_30 := (iNsTr_29 + iNsTr_11)
    iNsTr_31 := (iNsTr_30 + iNsTr_16)
    iNsTr_32 := (iNsTr_31 + iNsTr_21)
    iNsTr_33 := (iNsTr_32 + iNsTr_24)
    ret_val__ := (iNsTr_33 + iNsTr_27)
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [sa8d_8x8] 
$in (pix1 : $pointer< $uint<8> > i_pix1 : $uint<32> pix2 : $pointer< $uint<8> > i_pix2 : $uint<32> )
$out (ret_val__ : $uint<32>)
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bbx_xnph16
    $storage tmp_alloc : $array [8] $of $array [4] $of $uint<32>
    tmp := @(tmp_alloc)
    $place [bbx_xnph16_bb_1]
    //begin: basic-block bb_1
    $merge bb_1_bb_1 bbx_xnph16_bb_1
    $phi ix_x013 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph16_bb_1 ( $cast ($uint<32>) iNsTr_69) $on bb_1_bb_1 
    $endmerge
    scevgep60 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][ix_x013][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    scevgep59 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][ix_x013][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    scevgep58 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][ix_x013][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    scevgep57 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][ix_x013][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    tmp14 := (i_pix2 * ix_x013)
    xx_x01014 := pix2[tmp14]
    tmp16 := (tmp14 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    scevgep55 := pix2[tmp16]
    tmp27 := (tmp14 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    scevgep53 := pix2[tmp27]
    tmp29 := (tmp14 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) )
    scevgep51 := pix2[tmp29]
    tmp31 := (tmp14 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    scevgep49 := pix2[tmp31]
    tmp33 := (tmp14 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep47 := pix2[tmp33]
    tmp35 := (tmp14 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep45 := pix2[tmp35]
    tmp37 := (tmp14 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep43 := pix2[tmp37]
    tmp39 := (i_pix1 * ix_x013)
    xx_x015 := pix1[tmp39]
    tmp43 := (tmp39 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    scevgep39 := pix1[tmp43]
    tmp45 := (tmp39 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    scevgep37 := pix1[tmp45]
    tmp47 := (tmp39 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) )
    scevgep35 := pix1[tmp47]
    tmp49 := (tmp39 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    scevgep33 := pix1[tmp49]
    tmp51 := (tmp39 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep31 := pix1[tmp51]
    tmp53 := (tmp39 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep29 := pix1[tmp53]
    tmp55 := (tmp39 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep27 := pix1[tmp55]
    // load 
    iNsTr_1 := ->(xx_x015) 
    iNsTr_2 := ($cast ($uint<32>) iNsTr_1)
    // load 
    iNsTr_3 := ->(xx_x01014) 
    iNsTr_4 := ($cast ($uint<32>) iNsTr_3)
    iNsTr_5 := (iNsTr_2 - iNsTr_4)
    // load 
    iNsTr_6 := ->(scevgep27) 
    iNsTr_7 := ($cast ($uint<32>) iNsTr_6)
    // load 
    iNsTr_8 := ->(scevgep43) 
    iNsTr_9 := ($cast ($uint<32>) iNsTr_8)
    iNsTr_10 := (iNsTr_7 - iNsTr_9)
    iNsTr_11 := (iNsTr_5 - iNsTr_10)
    iNsTr_12 := (iNsTr_11 << ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    iNsTr_13 := (iNsTr_10 + iNsTr_5)
    iNsTr_14 := (iNsTr_13 + iNsTr_12)
    // load 
    iNsTr_15 := ->(scevgep29) 
    iNsTr_16 := ($cast ($uint<32>) iNsTr_15)
    // load 
    iNsTr_17 := ->(scevgep45) 
    iNsTr_18 := ($cast ($uint<32>) iNsTr_17)
    iNsTr_19 := (iNsTr_16 - iNsTr_18)
    // load 
    iNsTr_20 := ->(scevgep31) 
    iNsTr_21 := ($cast ($uint<32>) iNsTr_20)
    // load 
    iNsTr_22 := ->(scevgep47) 
    iNsTr_23 := ($cast ($uint<32>) iNsTr_22)
    iNsTr_24 := (iNsTr_21 - iNsTr_23)
    iNsTr_25 := (iNsTr_19 - iNsTr_24)
    iNsTr_26 := (iNsTr_25 << ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    iNsTr_27 := (iNsTr_24 + iNsTr_19)
    iNsTr_28 := (iNsTr_27 + iNsTr_26)
    // load 
    iNsTr_29 := ->(scevgep33) 
    iNsTr_30 := ($cast ($uint<32>) iNsTr_29)
    // load 
    iNsTr_31 := ->(scevgep49) 
    iNsTr_32 := ($cast ($uint<32>) iNsTr_31)
    iNsTr_33 := (iNsTr_30 - iNsTr_32)
    // load 
    iNsTr_34 := ->(scevgep35) 
    iNsTr_35 := ($cast ($uint<32>) iNsTr_34)
    // load 
    iNsTr_36 := ->(scevgep51) 
    iNsTr_37 := ($cast ($uint<32>) iNsTr_36)
    iNsTr_38 := (iNsTr_35 - iNsTr_37)
    iNsTr_39 := (iNsTr_33 - iNsTr_38)
    iNsTr_40 := (iNsTr_39 << ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    iNsTr_41 := (iNsTr_38 + iNsTr_33)
    iNsTr_42 := (iNsTr_41 + iNsTr_40)
    // load 
    iNsTr_43 := ->(scevgep37) 
    iNsTr_44 := ($cast ($uint<32>) iNsTr_43)
    // load 
    iNsTr_45 := ->(scevgep53) 
    iNsTr_46 := ($cast ($uint<32>) iNsTr_45)
    iNsTr_47 := (iNsTr_44 - iNsTr_46)
    // load 
    iNsTr_48 := ->(scevgep39) 
    iNsTr_49 := ($cast ($uint<32>) iNsTr_48)
    // load 
    iNsTr_50 := ->(scevgep55) 
    iNsTr_51 := ($cast ($uint<32>) iNsTr_50)
    iNsTr_52 := (iNsTr_49 - iNsTr_51)
    iNsTr_53 := (iNsTr_47 - iNsTr_52)
    iNsTr_54 := (iNsTr_53 << ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    iNsTr_55 := (iNsTr_52 + iNsTr_47)
    iNsTr_56 := (iNsTr_55 + iNsTr_54)
    iNsTr_57 := (iNsTr_28 + iNsTr_14)
    iNsTr_58 := (iNsTr_14 - iNsTr_28)
    iNsTr_59 := (iNsTr_56 + iNsTr_42)
    iNsTr_60 := (iNsTr_42 - iNsTr_56)
    iNsTr_61 := (iNsTr_59 + iNsTr_57)
    ->(scevgep57) := iNsTr_61
    iNsTr_63 := (iNsTr_57 - iNsTr_59)
    ->(scevgep58) := iNsTr_63
    iNsTr_65 := (iNsTr_60 + iNsTr_58)
    ->(scevgep59) := iNsTr_65
    iNsTr_67 := (iNsTr_58 - iNsTr_60)
    ->(scevgep60) := iNsTr_67
    iNsTr_69 := (ix_x013 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond := (iNsTr_69 == ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 )  )
    $if exitcond $then  $place [bb_1_bbx_xnphx_xpreheader] $else $place [bb_1_bb_1] $endif 
    //begin: basic-block bbx_xnphx_xpreheader
    $merge bb_1_bbx_xnphx_xpreheader
    $endmerge
    $place [bbx_xnphx_xpreheader_bbx_xnph]
    //begin: basic-block bbx_xnph
    $merge bbx_xnph_bbx_xnph bbx_xnphx_xpreheader_bbx_xnph
    $phi i1x_x012 :=  ( $cast ($uint<32>) iNsTr_155) $on bbx_xnph_bbx_xnph ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xpreheader_bbx_xnph 
    $phi sumx_x011 :=  ( $cast ($uint<32>) iNsTr_154) $on bbx_xnph_bbx_xnph ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xpreheader_bbx_xnph 
    $endmerge
    scevgep23 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) ][i1x_x012]
    scevgep22 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) ][i1x_x012]
    scevgep21 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) ][i1x_x012]
    scevgep20 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ][i1x_x012]
    scevgep19 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][i1x_x012]
    scevgep18 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ][i1x_x012]
    scevgep17 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][i1x_x012]
    scevgep := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][i1x_x012]
    // load 
    iNsTr_72 := ->(scevgep) 
    // load 
    iNsTr_73 := ->(scevgep17) 
    iNsTr_74 := (iNsTr_73 + iNsTr_72)
    iNsTr_75 := (iNsTr_72 - iNsTr_73)
    // load 
    iNsTr_76 := ->(scevgep18) 
    // load 
    iNsTr_77 := ->(scevgep19) 
    iNsTr_78 := (iNsTr_77 + iNsTr_76)
    iNsTr_79 := (iNsTr_76 - iNsTr_77)
    iNsTr_80 := (iNsTr_78 + iNsTr_74)
    iNsTr_81 := (iNsTr_74 - iNsTr_78)
    iNsTr_82 := (iNsTr_79 + iNsTr_75)
    iNsTr_83 := (iNsTr_75 - iNsTr_79)
    // load 
    iNsTr_84 := ->(scevgep20) 
    // load 
    iNsTr_85 := ->(scevgep21) 
    iNsTr_86 := (iNsTr_85 + iNsTr_84)
    iNsTr_87 := (iNsTr_84 - iNsTr_85)
    // load 
    iNsTr_88 := ->(scevgep22) 
    // load 
    iNsTr_89 := ->(scevgep23) 
    iNsTr_90 := (iNsTr_89 + iNsTr_88)
    iNsTr_91 := (iNsTr_88 - iNsTr_89)
    iNsTr_92 := (iNsTr_90 + iNsTr_86)
    iNsTr_93 := (iNsTr_86 - iNsTr_90)
    iNsTr_94 := (iNsTr_91 + iNsTr_87)
    iNsTr_95 := (iNsTr_87 - iNsTr_91)
    iNsTr_96 := (iNsTr_92 + iNsTr_80)
    iNsTr_97 := (iNsTr_96 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000001111 ) )
    iNsTr_98 := (iNsTr_97 & ( $bitcast ($uint<32> ) _b00000000000000010000000000000001 ) )
    iNsTr_99 := (iNsTr_98 * ( $bitcast ($uint<32> ) _b00000000000000001111111111111111 ) )
    iNsTr_100 := (iNsTr_99 + iNsTr_96)
    iNsTr_101 := (iNsTr_100 ^ iNsTr_99)
    iNsTr_102 := (iNsTr_80 - iNsTr_92)
    iNsTr_103 := (iNsTr_102 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000001111 ) )
    iNsTr_104 := (iNsTr_103 & ( $bitcast ($uint<32> ) _b00000000000000010000000000000001 ) )
    iNsTr_105 := (iNsTr_104 * ( $bitcast ($uint<32> ) _b00000000000000001111111111111111 ) )
    iNsTr_106 := (iNsTr_105 + iNsTr_102)
    iNsTr_107 := (iNsTr_106 ^ iNsTr_105)
    iNsTr_108 := (iNsTr_94 + iNsTr_82)
    iNsTr_109 := (iNsTr_108 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000001111 ) )
    iNsTr_110 := (iNsTr_109 & ( $bitcast ($uint<32> ) _b00000000000000010000000000000001 ) )
    iNsTr_111 := (iNsTr_110 * ( $bitcast ($uint<32> ) _b00000000000000001111111111111111 ) )
    iNsTr_112 := (iNsTr_111 + iNsTr_108)
    iNsTr_113 := (iNsTr_112 ^ iNsTr_111)
    iNsTr_114 := (iNsTr_82 - iNsTr_94)
    iNsTr_115 := (iNsTr_114 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000001111 ) )
    iNsTr_116 := (iNsTr_115 & ( $bitcast ($uint<32> ) _b00000000000000010000000000000001 ) )
    iNsTr_117 := (iNsTr_116 * ( $bitcast ($uint<32> ) _b00000000000000001111111111111111 ) )
    iNsTr_118 := (iNsTr_117 + iNsTr_114)
    iNsTr_119 := (iNsTr_118 ^ iNsTr_117)
    iNsTr_120 := (iNsTr_93 + iNsTr_81)
    iNsTr_121 := (iNsTr_120 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000001111 ) )
    iNsTr_122 := (iNsTr_121 & ( $bitcast ($uint<32> ) _b00000000000000010000000000000001 ) )
    iNsTr_123 := (iNsTr_122 * ( $bitcast ($uint<32> ) _b00000000000000001111111111111111 ) )
    iNsTr_124 := (iNsTr_123 + iNsTr_120)
    iNsTr_125 := (iNsTr_124 ^ iNsTr_123)
    iNsTr_126 := (iNsTr_81 - iNsTr_93)
    iNsTr_127 := (iNsTr_126 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000001111 ) )
    iNsTr_128 := (iNsTr_127 & ( $bitcast ($uint<32> ) _b00000000000000010000000000000001 ) )
    iNsTr_129 := (iNsTr_128 * ( $bitcast ($uint<32> ) _b00000000000000001111111111111111 ) )
    iNsTr_130 := (iNsTr_129 + iNsTr_126)
    iNsTr_131 := (iNsTr_130 ^ iNsTr_129)
    iNsTr_132 := (iNsTr_95 + iNsTr_83)
    iNsTr_133 := (iNsTr_132 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000001111 ) )
    iNsTr_134 := (iNsTr_133 & ( $bitcast ($uint<32> ) _b00000000000000010000000000000001 ) )
    iNsTr_135 := (iNsTr_134 * ( $bitcast ($uint<32> ) _b00000000000000001111111111111111 ) )
    iNsTr_136 := (iNsTr_135 + iNsTr_132)
    iNsTr_137 := (iNsTr_136 ^ iNsTr_135)
    iNsTr_138 := (iNsTr_83 - iNsTr_95)
    iNsTr_139 := (iNsTr_138 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000001111 ) )
    iNsTr_140 := (iNsTr_139 & ( $bitcast ($uint<32> ) _b00000000000000010000000000000001 ) )
    iNsTr_141 := (iNsTr_140 * ( $bitcast ($uint<32> ) _b00000000000000001111111111111111 ) )
    iNsTr_142 := (iNsTr_141 + iNsTr_138)
    iNsTr_143 := (iNsTr_142 ^ iNsTr_141)
    iNsTr_144 := (iNsTr_143 + iNsTr_137)
    iNsTr_145 := (iNsTr_144 + iNsTr_101)
    iNsTr_146 := (iNsTr_145 + iNsTr_107)
    iNsTr_147 := (iNsTr_146 + iNsTr_119)
    iNsTr_148 := (iNsTr_147 + iNsTr_113)
    iNsTr_149 := (iNsTr_148 + iNsTr_125)
    iNsTr_150 := (iNsTr_149 + iNsTr_131)
    iNsTr_151 := (iNsTr_150 & ( $bitcast ($uint<32> ) _b00000000000000001111111111111111 ) )
    iNsTr_152 := (iNsTr_150 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    iNsTr_153 := (iNsTr_152 + sumx_x011)
    iNsTr_154 := (iNsTr_153 + iNsTr_151)
    iNsTr_155 := (i1x_x012 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (iNsTr_155 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 )  )
    $if exitcond1 $then  $place [bbx_xnph_xx_x_crit_edge] $else $place [bbx_xnph_bbx_xnph] $endif 
    //begin: basic-block xx_x_crit_edge
    $merge bbx_xnph_xx_x_crit_edge
    $phi ret_val__ :=  ( $cast ($uint<32>) iNsTr_154) $on bbx_xnph_xx_x_crit_edge 
    $endmerge
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [pixel_hadamard_ac] 
$in (pix : $pointer< $uint<8> > stride : $uint<32> )
$out (ret_val__ : $uint<64>)
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bbx_xnph22
    $storage tmp_alloc : $array [32] $of $uint<32>
    tmp := @(tmp_alloc)
    $place [bbx_xnph22_bb_1]
    //begin: basic-block bb_1
    $merge bb_1_bb_1 bbx_xnph22_bb_1
    $phi iNsTr_1 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph22_bb_1 ( $cast ($uint<32>) iNsTr_48) $on bb_1_bb_1 
    $endmerge
    tmp56 := (iNsTr_1 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    tmp20 := (stride * iNsTr_1)
    xx_x021 := pix[tmp20]
    tmp22 := (tmp20 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    scevgep54 := pix[tmp22]
    tmp24 := (tmp20 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    scevgep52 := pix[tmp24]
    tmp26 := (tmp20 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) )
    scevgep50 := pix[tmp26]
    tmp28 := (tmp20 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    scevgep48 := pix[tmp28]
    tmp30 := (tmp20 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep46 := pix[tmp30]
    tmp32 := (tmp20 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep44 := pix[tmp32]
    tmp34 := (tmp20 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep42 := pix[tmp34]
    iNsTr_2 := (iNsTr_1 & ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    iNsTr_3 := (tmp56 & ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    xx_xsum := (iNsTr_3 | iNsTr_2)
    iNsTr_4 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][xx_xsum]
    // load 
    iNsTr_5 := ->(xx_x021) 
    iNsTr_6 := ($cast ($uint<32>) iNsTr_5)
    // load 
    iNsTr_7 := ->(scevgep42) 
    iNsTr_8 := ($cast ($uint<32>) iNsTr_7)
    iNsTr_9 := (iNsTr_6 - iNsTr_8)
    iNsTr_10 := (iNsTr_9 << ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    iNsTr_11 := (iNsTr_8 + iNsTr_6)
    iNsTr_12 := (iNsTr_11 + iNsTr_10)
    // load 
    iNsTr_13 := ->(scevgep44) 
    iNsTr_14 := ($cast ($uint<32>) iNsTr_13)
    // load 
    iNsTr_15 := ->(scevgep46) 
    iNsTr_16 := ($cast ($uint<32>) iNsTr_15)
    iNsTr_17 := (iNsTr_14 - iNsTr_16)
    iNsTr_18 := (iNsTr_17 << ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    iNsTr_19 := (iNsTr_16 + iNsTr_14)
    iNsTr_20 := (iNsTr_19 + iNsTr_18)
    iNsTr_21 := (iNsTr_20 + iNsTr_12)
    ->(iNsTr_4) := iNsTr_21
    iNsTr_23 := (iNsTr_12 - iNsTr_20)
    xx_xsum78 := (xx_xsum | ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    iNsTr_24 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][xx_xsum78]
    ->(iNsTr_24) := iNsTr_23
    // load 
    iNsTr_26 := ->(scevgep48) 
    iNsTr_27 := ($cast ($uint<32>) iNsTr_26)
    // load 
    iNsTr_28 := ->(scevgep50) 
    iNsTr_29 := ($cast ($uint<32>) iNsTr_28)
    iNsTr_30 := (iNsTr_27 - iNsTr_29)
    iNsTr_31 := (iNsTr_30 << ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    iNsTr_32 := (iNsTr_29 + iNsTr_27)
    iNsTr_33 := (iNsTr_32 + iNsTr_31)
    // load 
    iNsTr_34 := ->(scevgep52) 
    iNsTr_35 := ($cast ($uint<32>) iNsTr_34)
    // load 
    iNsTr_36 := ->(scevgep54) 
    iNsTr_37 := ($cast ($uint<32>) iNsTr_36)
    iNsTr_38 := (iNsTr_35 - iNsTr_37)
    iNsTr_39 := (iNsTr_38 << ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    iNsTr_40 := (iNsTr_37 + iNsTr_35)
    iNsTr_41 := (iNsTr_40 + iNsTr_39)
    iNsTr_42 := (iNsTr_41 + iNsTr_33)
    xx_xsum910 := (xx_xsum | ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) )
    iNsTr_43 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][xx_xsum910]
    ->(iNsTr_43) := iNsTr_42
    iNsTr_45 := (iNsTr_33 - iNsTr_41)
    xx_xsum1112 := (xx_xsum | ( $bitcast ($uint<32> ) _b00000000000000000000000000001100 ) )
    iNsTr_46 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][xx_xsum1112]
    ->(iNsTr_46) := iNsTr_45
    iNsTr_48 := (iNsTr_1 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond18 := (iNsTr_48 == ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 )  )
    $if exitcond18 $then  $place [bb_1_bbx_xnph18x_xpreheader] $else $place [bb_1_bb_1] $endif 
    //begin: basic-block bbx_xnph18x_xpreheader
    $merge bb_1_bbx_xnph18x_xpreheader
    $endmerge
    $place [bbx_xnph18x_xpreheader_bbx_xnph18]
    //begin: basic-block bbx_xnph18
    $merge bbx_xnph18_bbx_xnph18 bbx_xnph18x_xpreheader_bbx_xnph18
    $phi i1x_x017 :=  ( $cast ($uint<32>) iNsTr_91) $on bbx_xnph18_bbx_xnph18 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph18x_xpreheader_bbx_xnph18 
    $phi sum4x_x016 :=  ( $cast ($uint<32>) iNsTr_90) $on bbx_xnph18_bbx_xnph18 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph18x_xpreheader_bbx_xnph18 
    $endmerge
    tmp10 := (i1x_x017 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    tmp11 := (tmp10 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep38 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][tmp11]
    tmp13 := (tmp10 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep36 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][tmp13]
    tmp15 := (tmp10 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep34 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][tmp15]
    scevgep32 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][tmp10]
    // load 
    iNsTr_51 := ->(scevgep32) 
    // load 
    iNsTr_52 := ->(scevgep34) 
    iNsTr_53 := (iNsTr_52 + iNsTr_51)
    iNsTr_54 := (iNsTr_51 - iNsTr_52)
    // load 
    iNsTr_55 := ->(scevgep36) 
    // load 
    iNsTr_56 := ->(scevgep38) 
    iNsTr_57 := (iNsTr_56 + iNsTr_55)
    iNsTr_58 := (iNsTr_55 - iNsTr_56)
    iNsTr_59 := (iNsTr_57 + iNsTr_53)
    iNsTr_60 := (iNsTr_53 - iNsTr_57)
    iNsTr_61 := (iNsTr_58 + iNsTr_54)
    iNsTr_62 := (iNsTr_54 - iNsTr_58)
    ->(scevgep32) := iNsTr_59
    ->(scevgep34) := iNsTr_61
    ->(scevgep36) := iNsTr_60
    ->(scevgep38) := iNsTr_62
    iNsTr_67 := (iNsTr_59 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000001111 ) )
    iNsTr_68 := (iNsTr_67 & ( $bitcast ($uint<32> ) _b00000000000000010000000000000001 ) )
    iNsTr_69 := (iNsTr_68 * ( $bitcast ($uint<32> ) _b00000000000000001111111111111111 ) )
    iNsTr_70 := (iNsTr_69 + iNsTr_59)
    iNsTr_71 := (iNsTr_70 ^ iNsTr_69)
    iNsTr_72 := (iNsTr_61 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000001111 ) )
    iNsTr_73 := (iNsTr_72 & ( $bitcast ($uint<32> ) _b00000000000000010000000000000001 ) )
    iNsTr_74 := (iNsTr_73 * ( $bitcast ($uint<32> ) _b00000000000000001111111111111111 ) )
    iNsTr_75 := (iNsTr_74 + iNsTr_61)
    iNsTr_76 := (iNsTr_75 ^ iNsTr_74)
    iNsTr_77 := (iNsTr_60 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000001111 ) )
    iNsTr_78 := (iNsTr_77 & ( $bitcast ($uint<32> ) _b00000000000000010000000000000001 ) )
    iNsTr_79 := (iNsTr_78 * ( $bitcast ($uint<32> ) _b00000000000000001111111111111111 ) )
    iNsTr_80 := (iNsTr_79 + iNsTr_60)
    iNsTr_81 := (iNsTr_80 ^ iNsTr_79)
    iNsTr_82 := (iNsTr_62 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000001111 ) )
    iNsTr_83 := (iNsTr_82 & ( $bitcast ($uint<32> ) _b00000000000000010000000000000001 ) )
    iNsTr_84 := (iNsTr_83 * ( $bitcast ($uint<32> ) _b00000000000000001111111111111111 ) )
    iNsTr_85 := (iNsTr_84 + iNsTr_62)
    iNsTr_86 := (iNsTr_85 ^ iNsTr_84)
    iNsTr_87 := (iNsTr_81 + sum4x_x016)
    iNsTr_88 := (iNsTr_87 + iNsTr_71)
    iNsTr_89 := (iNsTr_88 + iNsTr_86)
    iNsTr_90 := (iNsTr_89 + iNsTr_76)
    iNsTr_91 := (i1x_x017 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond := (iNsTr_91 == ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 )  )
    $if exitcond $then  $place [bbx_xnph18_bbx_xnphx_xpreheader] $else $place [bbx_xnph18_bbx_xnph18] $endif 
    //begin: basic-block bbx_xnphx_xpreheader
    $merge bbx_xnph18_bbx_xnphx_xpreheader
    $phi xx_xlcssa9 :=  ( $cast ($uint<32>) iNsTr_90) $on bbx_xnph18_bbx_xnphx_xpreheader 
    $endmerge
    $place [bbx_xnphx_xpreheader_bbx_xnph]
    //begin: basic-block bbx_xnph
    $merge bbx_xnph_bbx_xnph bbx_xnphx_xpreheader_bbx_xnph
    $phi i2x_x014 :=  ( $cast ($uint<32>) iNsTr_130) $on bbx_xnph_bbx_xnph ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xpreheader_bbx_xnph 
    $phi sum8x_x013 :=  ( $cast ($uint<32>) iNsTr_129) $on bbx_xnph_bbx_xnph ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xpreheader_bbx_xnph 
    $endmerge
    tmp2 := (i2x_x014 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    scevgep28 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][tmp2]
    tmp4 := (i2x_x014 + ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    scevgep26 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][tmp4]
    tmp6 := (i2x_x014 + ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) )
    scevgep24 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][tmp6]
    scevgep := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][i2x_x014]
    // load 
    iNsTr_94 := ->(scevgep) 
    // load 
    iNsTr_95 := ->(scevgep24) 
    iNsTr_96 := (iNsTr_95 + iNsTr_94)
    iNsTr_97 := (iNsTr_94 - iNsTr_95)
    // load 
    iNsTr_98 := ->(scevgep26) 
    // load 
    iNsTr_99 := ->(scevgep28) 
    iNsTr_100 := (iNsTr_99 + iNsTr_98)
    iNsTr_101 := (iNsTr_98 - iNsTr_99)
    iNsTr_102 := (iNsTr_100 + iNsTr_96)
    iNsTr_103 := (iNsTr_96 - iNsTr_100)
    iNsTr_104 := (iNsTr_101 + iNsTr_97)
    iNsTr_105 := (iNsTr_97 - iNsTr_101)
    iNsTr_106 := (iNsTr_102 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000001111 ) )
    iNsTr_107 := (iNsTr_106 & ( $bitcast ($uint<32> ) _b00000000000000010000000000000001 ) )
    iNsTr_108 := (iNsTr_107 * ( $bitcast ($uint<32> ) _b00000000000000001111111111111111 ) )
    iNsTr_109 := (iNsTr_108 + iNsTr_102)
    iNsTr_110 := (iNsTr_109 ^ iNsTr_108)
    iNsTr_111 := (iNsTr_104 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000001111 ) )
    iNsTr_112 := (iNsTr_111 & ( $bitcast ($uint<32> ) _b00000000000000010000000000000001 ) )
    iNsTr_113 := (iNsTr_112 * ( $bitcast ($uint<32> ) _b00000000000000001111111111111111 ) )
    iNsTr_114 := (iNsTr_113 + iNsTr_104)
    iNsTr_115 := (iNsTr_114 ^ iNsTr_113)
    iNsTr_116 := (iNsTr_103 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000001111 ) )
    iNsTr_117 := (iNsTr_116 & ( $bitcast ($uint<32> ) _b00000000000000010000000000000001 ) )
    iNsTr_118 := (iNsTr_117 * ( $bitcast ($uint<32> ) _b00000000000000001111111111111111 ) )
    iNsTr_119 := (iNsTr_118 + iNsTr_103)
    iNsTr_120 := (iNsTr_119 ^ iNsTr_118)
    iNsTr_121 := (iNsTr_105 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000001111 ) )
    iNsTr_122 := (iNsTr_121 & ( $bitcast ($uint<32> ) _b00000000000000010000000000000001 ) )
    iNsTr_123 := (iNsTr_122 * ( $bitcast ($uint<32> ) _b00000000000000001111111111111111 ) )
    iNsTr_124 := (iNsTr_123 + iNsTr_105)
    iNsTr_125 := (iNsTr_124 ^ iNsTr_123)
    iNsTr_126 := (iNsTr_120 + sum8x_x013)
    iNsTr_127 := (iNsTr_126 + iNsTr_110)
    iNsTr_128 := (iNsTr_127 + iNsTr_125)
    iNsTr_129 := (iNsTr_128 + iNsTr_115)
    iNsTr_130 := (i2x_x014 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (iNsTr_130 == ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 )  )
    $if exitcond1 $then  $place [bbx_xnph_xx_x_crit_edge] $else $place [bbx_xnph_bbx_xnph] $endif 
    //begin: basic-block xx_x_crit_edge
    $merge bbx_xnph_xx_x_crit_edge
    $phi xx_xlcssa :=  ( $cast ($uint<32>) iNsTr_129) $on bbx_xnph_xx_x_crit_edge 
    $endmerge
    iNsTr_132 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    // load 
    iNsTr_133 := ->(iNsTr_132) 
    iNsTr_134 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) ]
    // load 
    iNsTr_135 := ->(iNsTr_134) 
    iNsTr_136 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) ]
    // load 
    iNsTr_137 := ->(iNsTr_136) 
    iNsTr_138 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) ]
    // load 
    iNsTr_139 := ->(iNsTr_138) 
    iNsTr_140 := (iNsTr_135 + iNsTr_133)
    iNsTr_141 := (iNsTr_140 + iNsTr_137)
    iNsTr_142 := (iNsTr_141 + iNsTr_139)
    iNsTr_143 := (iNsTr_142 & ( $bitcast ($uint<32> ) _b00000000000000001111111111111111 ) )
    iNsTr_144 := (xx_xlcssa9 & ( $bitcast ($uint<32> ) _b00000000000000001111111111111111 ) )
    iNsTr_145 := (xx_xlcssa9 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    iNsTr_146 := (iNsTr_144 + iNsTr_145)
    iNsTr_147 := (iNsTr_146 - iNsTr_143)
    iNsTr_148 := (xx_xlcssa & ( $bitcast ($uint<32> ) _b00000000000000001111111111111111 ) )
    iNsTr_149 := (xx_xlcssa >> ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    iNsTr_150 := (iNsTr_148 + iNsTr_149)
    iNsTr_151 := (iNsTr_150 - iNsTr_143)
    iNsTr_152 := ($cast ($uint<64>) iNsTr_151)
    iNsTr_153 := (iNsTr_152 << ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000100000 ) )
    iNsTr_154 := ($cast ($uint<64>) iNsTr_147)
    ret_val__ := (iNsTr_153 | iNsTr_154)
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [x264_pixel_sad_x3_16x16] 
$in (fenc : $pointer< $uint<8> > pix0 : $pointer< $uint<8> > pix1 : $pointer< $uint<8> > pix2 : $pointer< $uint<8> > i_stride : $uint<32> scores : $pointer< $uint<32> > )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    $place [bb_0_bbx_xnphx_xi]
    //begin: basic-block bbx_xnphx_xi
    $merge bb_0_bbx_xnphx_xi xx_x_crit_edgex_xi_bbx_xnphx_xi
    $phi yx_x05x_xi :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bb_0_bbx_xnphx_xi ( $cast ($uint<32>) iNsTr_11) $on xx_x_crit_edgex_xi_bbx_xnphx_xi 
    $phi i_sumx_x14x_xi :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bb_0_bbx_xnphx_xi ( $cast ($uint<32>) xx_xlcssa19) $on xx_x_crit_edgex_xi_bbx_xnphx_xi 
    $endmerge
    tmp25 := (i_stride * yx_x05x_xi)
    tmp27 := (yx_x05x_xi * ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    $place [bbx_xnphx_xi_bb_2]
    //begin: basic-block bb_2
    $merge bb_2_bb_2 bbx_xnphx_xi_bb_2
    $phi xx_x03x_xi :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xi_bb_2 ( $cast ($uint<32>) iNsTr_9) $on bb_2_bb_2 
    $phi i_sumx_x02x_xi :=  ( $cast ($uint<32>) i_sumx_x14x_xi) $on bbx_xnphx_xi_bb_2 ( $cast ($uint<32>) iNsTr_8) $on bb_2_bb_2 
    $endmerge
    tmp26 := (tmp25 + xx_x03x_xi)
    scevgep14x_xi := pix0[tmp26]
    tmp28 := (tmp27 + xx_x03x_xi)
    scevgepx_xi := fenc[tmp28]
    // load 
    iNsTr_2 := ->(scevgepx_xi) 
    iNsTr_3 := ($cast ($uint<32>) iNsTr_2)
    // load 
    iNsTr_4 := ->(scevgep14x_xi) 
    iNsTr_5 := ($cast ($uint<32>) iNsTr_4)
    iNsTr_6 := (iNsTr_3 - iNsTr_5)
    // compare instruction
    isposx_xi := ( ($bitcast ( $int<32>) iNsTr_6) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xi := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_6)
    iNsTr_7 := ( $mux isposx_xi iNsTr_6 negx_xi)
    iNsTr_8 := (iNsTr_7 + i_sumx_x02x_xi)
    iNsTr_9 := (xx_x03x_xi + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond20 := (iNsTr_9 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond20 $then  $place [bb_2_xx_x_crit_edgex_xi] $else $place [bb_2_bb_2] $endif 
    //begin: basic-block xx_x_crit_edgex_xi
    $merge bb_2_xx_x_crit_edgex_xi
    $phi xx_xlcssa19 :=  ( $cast ($uint<32>) iNsTr_8) $on bb_2_xx_x_crit_edgex_xi 
    $endmerge
    iNsTr_11 := (yx_x05x_xi + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond24 := (iNsTr_11 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond24 $then  $place [xx_x_crit_edgex_xi_x264_pixel_sad_16x16x_xexit] $else $place [xx_x_crit_edgex_xi_bbx_xnphx_xi] $endif 
    //begin: basic-block x264_pixel_sad_16x16x_xexit
    $merge xx_x_crit_edgex_xi_x264_pixel_sad_16x16x_xexit
    $phi xx_xlcssa19x_xlcssa :=  ( $cast ($uint<32>) xx_xlcssa19) $on xx_x_crit_edgex_xi_x264_pixel_sad_16x16x_xexit 
    $endmerge
    ->(scores) := xx_xlcssa19x_xlcssa
    $place [x264_pixel_sad_16x16x_xexit_bbx_xnphx_xi22]
    //begin: basic-block bbx_xnphx_xi22
    $merge x264_pixel_sad_16x16x_xexit_bbx_xnphx_xi22 xx_x_crit_edgex_xi33_bbx_xnphx_xi22
    $phi yx_x05x_xi18 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on x264_pixel_sad_16x16x_xexit_bbx_xnphx_xi22 ( $cast ($uint<32>) iNsTr_25) $on xx_x_crit_edgex_xi33_bbx_xnphx_xi22 
    $phi i_sumx_x14x_xi19 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on x264_pixel_sad_16x16x_xexit_bbx_xnphx_xi22 ( $cast ($uint<32>) xx_xlcssa9) $on xx_x_crit_edgex_xi33_bbx_xnphx_xi22 
    $endmerge
    tmp15 := (i_stride * yx_x05x_xi18)
    tmp17 := (yx_x05x_xi18 * ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    $place [bbx_xnphx_xi22_bb_6]
    //begin: basic-block bb_6
    $merge bb_6_bb_6 bbx_xnphx_xi22_bb_6
    $phi xx_x03x_xi23 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xi22_bb_6 ( $cast ($uint<32>) iNsTr_23) $on bb_6_bb_6 
    $phi i_sumx_x02x_xi24 :=  ( $cast ($uint<32>) i_sumx_x14x_xi19) $on bbx_xnphx_xi22_bb_6 ( $cast ($uint<32>) iNsTr_22) $on bb_6_bb_6 
    $endmerge
    tmp16 := (tmp15 + xx_x03x_xi23)
    scevgep14x_xi26 := pix1[tmp16]
    tmp18 := (tmp17 + xx_x03x_xi23)
    scevgepx_xi28 := fenc[tmp18]
    // load 
    iNsTr_16 := ->(scevgepx_xi28) 
    iNsTr_17 := ($cast ($uint<32>) iNsTr_16)
    // load 
    iNsTr_18 := ->(scevgep14x_xi26) 
    iNsTr_19 := ($cast ($uint<32>) iNsTr_18)
    iNsTr_20 := (iNsTr_17 - iNsTr_19)
    // compare instruction
    isposx_xi29 := ( ($bitcast ( $int<32>) iNsTr_20) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xi30 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_20)
    iNsTr_21 := ( $mux isposx_xi29 iNsTr_20 negx_xi30)
    iNsTr_22 := (iNsTr_21 + i_sumx_x02x_xi24)
    iNsTr_23 := (xx_x03x_xi23 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond10 := (iNsTr_23 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond10 $then  $place [bb_6_xx_x_crit_edgex_xi33] $else $place [bb_6_bb_6] $endif 
    //begin: basic-block xx_x_crit_edgex_xi33
    $merge bb_6_xx_x_crit_edgex_xi33
    $phi xx_xlcssa9 :=  ( $cast ($uint<32>) iNsTr_22) $on bb_6_xx_x_crit_edgex_xi33 
    $endmerge
    iNsTr_25 := (yx_x05x_xi18 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond14 := (iNsTr_25 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond14 $then  $place [xx_x_crit_edgex_xi33_x264_pixel_sad_16x16x_xexit34] $else $place [xx_x_crit_edgex_xi33_bbx_xnphx_xi22] $endif 
    //begin: basic-block x264_pixel_sad_16x16x_xexit34
    $merge xx_x_crit_edgex_xi33_x264_pixel_sad_16x16x_xexit34
    $phi xx_xlcssa9x_xlcssa :=  ( $cast ($uint<32>) xx_xlcssa9) $on xx_x_crit_edgex_xi33_x264_pixel_sad_16x16x_xexit34 
    $endmerge
    iNsTr_27 := scores[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    ->(iNsTr_27) := xx_xlcssa9x_xlcssa
    $place [x264_pixel_sad_16x16x_xexit34_bbx_xnphx_xi5]
    //begin: basic-block bbx_xnphx_xi5
    $merge x264_pixel_sad_16x16x_xexit34_bbx_xnphx_xi5 xx_x_crit_edgex_xi16_bbx_xnphx_xi5
    $phi yx_x05x_xi1 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on x264_pixel_sad_16x16x_xexit34_bbx_xnphx_xi5 ( $cast ($uint<32>) iNsTr_40) $on xx_x_crit_edgex_xi16_bbx_xnphx_xi5 
    $phi i_sumx_x14x_xi2 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on x264_pixel_sad_16x16x_xexit34_bbx_xnphx_xi5 ( $cast ($uint<32>) xx_xlcssa) $on xx_x_crit_edgex_xi16_bbx_xnphx_xi5 
    $endmerge
    tmp5 := (i_stride * yx_x05x_xi1)
    tmp7 := (yx_x05x_xi1 * ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    $place [bbx_xnphx_xi5_bb_10]
    //begin: basic-block bb_10
    $merge bb_10_bb_10 bbx_xnphx_xi5_bb_10
    $phi xx_x03x_xi6 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xi5_bb_10 ( $cast ($uint<32>) iNsTr_38) $on bb_10_bb_10 
    $phi i_sumx_x02x_xi7 :=  ( $cast ($uint<32>) i_sumx_x14x_xi2) $on bbx_xnphx_xi5_bb_10 ( $cast ($uint<32>) iNsTr_37) $on bb_10_bb_10 
    $endmerge
    tmp6 := (tmp5 + xx_x03x_xi6)
    scevgep14x_xi9 := pix2[tmp6]
    tmp8 := (tmp7 + xx_x03x_xi6)
    scevgepx_xi11 := fenc[tmp8]
    // load 
    iNsTr_31 := ->(scevgepx_xi11) 
    iNsTr_32 := ($cast ($uint<32>) iNsTr_31)
    // load 
    iNsTr_33 := ->(scevgep14x_xi9) 
    iNsTr_34 := ($cast ($uint<32>) iNsTr_33)
    iNsTr_35 := (iNsTr_32 - iNsTr_34)
    // compare instruction
    isposx_xi12 := ( ($bitcast ( $int<32>) iNsTr_35) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xi13 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_35)
    iNsTr_36 := ( $mux isposx_xi12 iNsTr_35 negx_xi13)
    iNsTr_37 := (iNsTr_36 + i_sumx_x02x_xi7)
    iNsTr_38 := (xx_x03x_xi6 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (iNsTr_38 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond1 $then  $place [bb_10_xx_x_crit_edgex_xi16] $else $place [bb_10_bb_10] $endif 
    //begin: basic-block xx_x_crit_edgex_xi16
    $merge bb_10_xx_x_crit_edgex_xi16
    $phi xx_xlcssa :=  ( $cast ($uint<32>) iNsTr_37) $on bb_10_xx_x_crit_edgex_xi16 
    $endmerge
    iNsTr_40 := (yx_x05x_xi1 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond := (iNsTr_40 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond $then  $place [xx_x_crit_edgex_xi16_x264_pixel_sad_16x16x_xexit17] $else $place [xx_x_crit_edgex_xi16_bbx_xnphx_xi5] $endif 
    //begin: basic-block x264_pixel_sad_16x16x_xexit17
    $merge xx_x_crit_edgex_xi16_x264_pixel_sad_16x16x_xexit17
    $phi xx_xlcssax_xlcssa :=  ( $cast ($uint<32>) xx_xlcssa) $on xx_x_crit_edgex_xi16_x264_pixel_sad_16x16x_xexit17 
    $endmerge
    iNsTr_42 := scores[( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    ->(iNsTr_42) := xx_xlcssax_xlcssa
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [x264_pixel_sad_x4_16x16] 
$in (fenc : $pointer< $uint<8> > pix0 : $pointer< $uint<8> > pix1 : $pointer< $uint<8> > pix2 : $pointer< $uint<8> > pix3 : $pointer< $uint<8> > i_stride : $uint<32> scores : $pointer< $uint<32> > )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    $place [bb_0_bbx_xnphx_xi]
    //begin: basic-block bbx_xnphx_xi
    $merge bb_0_bbx_xnphx_xi xx_x_crit_edgex_xi_bbx_xnphx_xi
    $phi yx_x05x_xi :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bb_0_bbx_xnphx_xi ( $cast ($uint<32>) iNsTr_11) $on xx_x_crit_edgex_xi_bbx_xnphx_xi 
    $phi i_sumx_x14x_xi :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bb_0_bbx_xnphx_xi ( $cast ($uint<32>) xx_xlcssa29) $on xx_x_crit_edgex_xi_bbx_xnphx_xi 
    $endmerge
    tmp35 := (i_stride * yx_x05x_xi)
    tmp37 := (yx_x05x_xi * ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    $place [bbx_xnphx_xi_bb_2]
    //begin: basic-block bb_2
    $merge bb_2_bb_2 bbx_xnphx_xi_bb_2
    $phi xx_x03x_xi :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xi_bb_2 ( $cast ($uint<32>) iNsTr_9) $on bb_2_bb_2 
    $phi i_sumx_x02x_xi :=  ( $cast ($uint<32>) i_sumx_x14x_xi) $on bbx_xnphx_xi_bb_2 ( $cast ($uint<32>) iNsTr_8) $on bb_2_bb_2 
    $endmerge
    tmp36 := (tmp35 + xx_x03x_xi)
    scevgep14x_xi := pix0[tmp36]
    tmp38 := (tmp37 + xx_x03x_xi)
    scevgepx_xi := fenc[tmp38]
    // load 
    iNsTr_2 := ->(scevgepx_xi) 
    iNsTr_3 := ($cast ($uint<32>) iNsTr_2)
    // load 
    iNsTr_4 := ->(scevgep14x_xi) 
    iNsTr_5 := ($cast ($uint<32>) iNsTr_4)
    iNsTr_6 := (iNsTr_3 - iNsTr_5)
    // compare instruction
    isposx_xi := ( ($bitcast ( $int<32>) iNsTr_6) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xi := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_6)
    iNsTr_7 := ( $mux isposx_xi iNsTr_6 negx_xi)
    iNsTr_8 := (iNsTr_7 + i_sumx_x02x_xi)
    iNsTr_9 := (xx_x03x_xi + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond30 := (iNsTr_9 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond30 $then  $place [bb_2_xx_x_crit_edgex_xi] $else $place [bb_2_bb_2] $endif 
    //begin: basic-block xx_x_crit_edgex_xi
    $merge bb_2_xx_x_crit_edgex_xi
    $phi xx_xlcssa29 :=  ( $cast ($uint<32>) iNsTr_8) $on bb_2_xx_x_crit_edgex_xi 
    $endmerge
    iNsTr_11 := (yx_x05x_xi + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond34 := (iNsTr_11 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond34 $then  $place [xx_x_crit_edgex_xi_x264_pixel_sad_16x16x_xexit] $else $place [xx_x_crit_edgex_xi_bbx_xnphx_xi] $endif 
    //begin: basic-block x264_pixel_sad_16x16x_xexit
    $merge xx_x_crit_edgex_xi_x264_pixel_sad_16x16x_xexit
    $phi xx_xlcssa29x_xlcssa :=  ( $cast ($uint<32>) xx_xlcssa29) $on xx_x_crit_edgex_xi_x264_pixel_sad_16x16x_xexit 
    $endmerge
    ->(scores) := xx_xlcssa29x_xlcssa
    $place [x264_pixel_sad_16x16x_xexit_bbx_xnphx_xi39]
    //begin: basic-block bbx_xnphx_xi39
    $merge x264_pixel_sad_16x16x_xexit_bbx_xnphx_xi39 xx_x_crit_edgex_xi50_bbx_xnphx_xi39
    $phi yx_x05x_xi35 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on x264_pixel_sad_16x16x_xexit_bbx_xnphx_xi39 ( $cast ($uint<32>) iNsTr_25) $on xx_x_crit_edgex_xi50_bbx_xnphx_xi39 
    $phi i_sumx_x14x_xi36 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on x264_pixel_sad_16x16x_xexit_bbx_xnphx_xi39 ( $cast ($uint<32>) xx_xlcssa19) $on xx_x_crit_edgex_xi50_bbx_xnphx_xi39 
    $endmerge
    tmp25 := (i_stride * yx_x05x_xi35)
    tmp27 := (yx_x05x_xi35 * ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    $place [bbx_xnphx_xi39_bb_6]
    //begin: basic-block bb_6
    $merge bb_6_bb_6 bbx_xnphx_xi39_bb_6
    $phi xx_x03x_xi40 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xi39_bb_6 ( $cast ($uint<32>) iNsTr_23) $on bb_6_bb_6 
    $phi i_sumx_x02x_xi41 :=  ( $cast ($uint<32>) i_sumx_x14x_xi36) $on bbx_xnphx_xi39_bb_6 ( $cast ($uint<32>) iNsTr_22) $on bb_6_bb_6 
    $endmerge
    tmp26 := (tmp25 + xx_x03x_xi40)
    scevgep14x_xi43 := pix1[tmp26]
    tmp28 := (tmp27 + xx_x03x_xi40)
    scevgepx_xi45 := fenc[tmp28]
    // load 
    iNsTr_16 := ->(scevgepx_xi45) 
    iNsTr_17 := ($cast ($uint<32>) iNsTr_16)
    // load 
    iNsTr_18 := ->(scevgep14x_xi43) 
    iNsTr_19 := ($cast ($uint<32>) iNsTr_18)
    iNsTr_20 := (iNsTr_17 - iNsTr_19)
    // compare instruction
    isposx_xi46 := ( ($bitcast ( $int<32>) iNsTr_20) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xi47 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_20)
    iNsTr_21 := ( $mux isposx_xi46 iNsTr_20 negx_xi47)
    iNsTr_22 := (iNsTr_21 + i_sumx_x02x_xi41)
    iNsTr_23 := (xx_x03x_xi40 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond20 := (iNsTr_23 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond20 $then  $place [bb_6_xx_x_crit_edgex_xi50] $else $place [bb_6_bb_6] $endif 
    //begin: basic-block xx_x_crit_edgex_xi50
    $merge bb_6_xx_x_crit_edgex_xi50
    $phi xx_xlcssa19 :=  ( $cast ($uint<32>) iNsTr_22) $on bb_6_xx_x_crit_edgex_xi50 
    $endmerge
    iNsTr_25 := (yx_x05x_xi35 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond24 := (iNsTr_25 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond24 $then  $place [xx_x_crit_edgex_xi50_x264_pixel_sad_16x16x_xexit51] $else $place [xx_x_crit_edgex_xi50_bbx_xnphx_xi39] $endif 
    //begin: basic-block x264_pixel_sad_16x16x_xexit51
    $merge xx_x_crit_edgex_xi50_x264_pixel_sad_16x16x_xexit51
    $phi xx_xlcssa19x_xlcssa :=  ( $cast ($uint<32>) xx_xlcssa19) $on xx_x_crit_edgex_xi50_x264_pixel_sad_16x16x_xexit51 
    $endmerge
    iNsTr_27 := scores[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    ->(iNsTr_27) := xx_xlcssa19x_xlcssa
    $place [x264_pixel_sad_16x16x_xexit51_bbx_xnphx_xi22]
    //begin: basic-block bbx_xnphx_xi22
    $merge x264_pixel_sad_16x16x_xexit51_bbx_xnphx_xi22 xx_x_crit_edgex_xi33_bbx_xnphx_xi22
    $phi yx_x05x_xi18 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on x264_pixel_sad_16x16x_xexit51_bbx_xnphx_xi22 ( $cast ($uint<32>) iNsTr_40) $on xx_x_crit_edgex_xi33_bbx_xnphx_xi22 
    $phi i_sumx_x14x_xi19 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on x264_pixel_sad_16x16x_xexit51_bbx_xnphx_xi22 ( $cast ($uint<32>) xx_xlcssa9) $on xx_x_crit_edgex_xi33_bbx_xnphx_xi22 
    $endmerge
    tmp15 := (i_stride * yx_x05x_xi18)
    tmp17 := (yx_x05x_xi18 * ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    $place [bbx_xnphx_xi22_bb_10]
    //begin: basic-block bb_10
    $merge bb_10_bb_10 bbx_xnphx_xi22_bb_10
    $phi xx_x03x_xi23 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xi22_bb_10 ( $cast ($uint<32>) iNsTr_38) $on bb_10_bb_10 
    $phi i_sumx_x02x_xi24 :=  ( $cast ($uint<32>) i_sumx_x14x_xi19) $on bbx_xnphx_xi22_bb_10 ( $cast ($uint<32>) iNsTr_37) $on bb_10_bb_10 
    $endmerge
    tmp16 := (tmp15 + xx_x03x_xi23)
    scevgep14x_xi26 := pix2[tmp16]
    tmp18 := (tmp17 + xx_x03x_xi23)
    scevgepx_xi28 := fenc[tmp18]
    // load 
    iNsTr_31 := ->(scevgepx_xi28) 
    iNsTr_32 := ($cast ($uint<32>) iNsTr_31)
    // load 
    iNsTr_33 := ->(scevgep14x_xi26) 
    iNsTr_34 := ($cast ($uint<32>) iNsTr_33)
    iNsTr_35 := (iNsTr_32 - iNsTr_34)
    // compare instruction
    isposx_xi29 := ( ($bitcast ( $int<32>) iNsTr_35) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xi30 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_35)
    iNsTr_36 := ( $mux isposx_xi29 iNsTr_35 negx_xi30)
    iNsTr_37 := (iNsTr_36 + i_sumx_x02x_xi24)
    iNsTr_38 := (xx_x03x_xi23 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond10 := (iNsTr_38 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond10 $then  $place [bb_10_xx_x_crit_edgex_xi33] $else $place [bb_10_bb_10] $endif 
    //begin: basic-block xx_x_crit_edgex_xi33
    $merge bb_10_xx_x_crit_edgex_xi33
    $phi xx_xlcssa9 :=  ( $cast ($uint<32>) iNsTr_37) $on bb_10_xx_x_crit_edgex_xi33 
    $endmerge
    iNsTr_40 := (yx_x05x_xi18 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond14 := (iNsTr_40 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond14 $then  $place [xx_x_crit_edgex_xi33_x264_pixel_sad_16x16x_xexit34] $else $place [xx_x_crit_edgex_xi33_bbx_xnphx_xi22] $endif 
    //begin: basic-block x264_pixel_sad_16x16x_xexit34
    $merge xx_x_crit_edgex_xi33_x264_pixel_sad_16x16x_xexit34
    $phi xx_xlcssa9x_xlcssa :=  ( $cast ($uint<32>) xx_xlcssa9) $on xx_x_crit_edgex_xi33_x264_pixel_sad_16x16x_xexit34 
    $endmerge
    iNsTr_42 := scores[( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    ->(iNsTr_42) := xx_xlcssa9x_xlcssa
    $place [x264_pixel_sad_16x16x_xexit34_bbx_xnphx_xi5]
    //begin: basic-block bbx_xnphx_xi5
    $merge x264_pixel_sad_16x16x_xexit34_bbx_xnphx_xi5 xx_x_crit_edgex_xi16_bbx_xnphx_xi5
    $phi yx_x05x_xi1 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on x264_pixel_sad_16x16x_xexit34_bbx_xnphx_xi5 ( $cast ($uint<32>) iNsTr_55) $on xx_x_crit_edgex_xi16_bbx_xnphx_xi5 
    $phi i_sumx_x14x_xi2 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on x264_pixel_sad_16x16x_xexit34_bbx_xnphx_xi5 ( $cast ($uint<32>) xx_xlcssa) $on xx_x_crit_edgex_xi16_bbx_xnphx_xi5 
    $endmerge
    tmp5 := (i_stride * yx_x05x_xi1)
    tmp7 := (yx_x05x_xi1 * ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    $place [bbx_xnphx_xi5_bb_14]
    //begin: basic-block bb_14
    $merge bb_14_bb_14 bbx_xnphx_xi5_bb_14
    $phi xx_x03x_xi6 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xi5_bb_14 ( $cast ($uint<32>) iNsTr_53) $on bb_14_bb_14 
    $phi i_sumx_x02x_xi7 :=  ( $cast ($uint<32>) i_sumx_x14x_xi2) $on bbx_xnphx_xi5_bb_14 ( $cast ($uint<32>) iNsTr_52) $on bb_14_bb_14 
    $endmerge
    tmp6 := (tmp5 + xx_x03x_xi6)
    scevgep14x_xi9 := pix3[tmp6]
    tmp8 := (tmp7 + xx_x03x_xi6)
    scevgepx_xi11 := fenc[tmp8]
    // load 
    iNsTr_46 := ->(scevgepx_xi11) 
    iNsTr_47 := ($cast ($uint<32>) iNsTr_46)
    // load 
    iNsTr_48 := ->(scevgep14x_xi9) 
    iNsTr_49 := ($cast ($uint<32>) iNsTr_48)
    iNsTr_50 := (iNsTr_47 - iNsTr_49)
    // compare instruction
    isposx_xi12 := ( ($bitcast ( $int<32>) iNsTr_50) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xi13 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_50)
    iNsTr_51 := ( $mux isposx_xi12 iNsTr_50 negx_xi13)
    iNsTr_52 := (iNsTr_51 + i_sumx_x02x_xi7)
    iNsTr_53 := (xx_x03x_xi6 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (iNsTr_53 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond1 $then  $place [bb_14_xx_x_crit_edgex_xi16] $else $place [bb_14_bb_14] $endif 
    //begin: basic-block xx_x_crit_edgex_xi16
    $merge bb_14_xx_x_crit_edgex_xi16
    $phi xx_xlcssa :=  ( $cast ($uint<32>) iNsTr_52) $on bb_14_xx_x_crit_edgex_xi16 
    $endmerge
    iNsTr_55 := (yx_x05x_xi1 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond := (iNsTr_55 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond $then  $place [xx_x_crit_edgex_xi16_x264_pixel_sad_16x16x_xexit17] $else $place [xx_x_crit_edgex_xi16_bbx_xnphx_xi5] $endif 
    //begin: basic-block x264_pixel_sad_16x16x_xexit17
    $merge xx_x_crit_edgex_xi16_x264_pixel_sad_16x16x_xexit17
    $phi xx_xlcssax_xlcssa :=  ( $cast ($uint<32>) xx_xlcssa) $on xx_x_crit_edgex_xi16_x264_pixel_sad_16x16x_xexit17 
    $endmerge
    iNsTr_57 := scores[( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    ->(iNsTr_57) := xx_xlcssax_xlcssa
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [x264_pixel_sad_x3_16x8] 
$in (fenc : $pointer< $uint<8> > pix0 : $pointer< $uint<8> > pix1 : $pointer< $uint<8> > pix2 : $pointer< $uint<8> > i_stride : $uint<32> scores : $pointer< $uint<32> > )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bbx_xnphx_xi
    $place [bbx_xnphx_xi_bb_1]
    //begin: basic-block bb_1
    $merge bb_1_bb_1 bbx_xnphx_xi_bb_1
    $phi xx_x03x_xi :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xi_bb_1 ( $cast ($uint<32>) iNsTr_8) $on bb_1_bb_1 
    $phi i_sumx_x02x_xi :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xi_bb_1 ( $cast ($uint<32>) iNsTr_7) $on bb_1_bb_1 
    $endmerge
    scevgepx_xi := fenc[xx_x03x_xi]
    scevgep14x_xi := pix0[xx_x03x_xi]
    // load 
    iNsTr_1 := ->(scevgepx_xi) 
    iNsTr_2 := ($cast ($uint<32>) iNsTr_1)
    // load 
    iNsTr_3 := ->(scevgep14x_xi) 
    iNsTr_4 := ($cast ($uint<32>) iNsTr_3)
    iNsTr_5 := (iNsTr_2 - iNsTr_4)
    // compare instruction
    isposx_xi := ( ($bitcast ( $int<32>) iNsTr_5) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xi := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_5)
    iNsTr_6 := ( $mux isposx_xi iNsTr_5 negx_xi)
    iNsTr_7 := (iNsTr_6 + i_sumx_x02x_xi)
    iNsTr_8 := (xx_x03x_xi + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond101 := (iNsTr_8 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond101 $then  $place [bb_1_xx_x_crit_edgex_xix_xpreheader] $else $place [bb_1_bb_1] $endif 
    //begin: basic-block xx_x_crit_edgex_xix_xpreheader
    $merge bb_1_xx_x_crit_edgex_xix_xpreheader
    $phi xx_xlcssa100 :=  ( $cast ($uint<32>) iNsTr_7) $on bb_1_xx_x_crit_edgex_xix_xpreheader 
    $endmerge
    $place [xx_x_crit_edgex_xix_xpreheader_xx_x_crit_edgex_xi]
    //begin: basic-block bb_3
    $merge bb_3_bb_3 xx_x_crit_edgex_xix_x7_bb_3
    $phi xx_x03x_xi23 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on xx_x_crit_edgex_xix_x7_bb_3 ( $cast ($uint<32>) iNsTr_89) $on bb_3_bb_3 
    $phi i_sumx_x02x_xi24 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on xx_x_crit_edgex_xix_x7_bb_3 ( $cast ($uint<32>) iNsTr_88) $on bb_3_bb_3 
    $endmerge
    scevgepx_xi28 := fenc[xx_x03x_xi23]
    scevgep14x_xi26 := pix1[xx_x03x_xi23]
    // load 
    iNsTr_82 := ->(scevgepx_xi28) 
    iNsTr_83 := ($cast ($uint<32>) iNsTr_82)
    // load 
    iNsTr_84 := ->(scevgep14x_xi26) 
    iNsTr_85 := ($cast ($uint<32>) iNsTr_84)
    iNsTr_86 := (iNsTr_83 - iNsTr_85)
    // compare instruction
    isposx_xi29 := ( ($bitcast ( $int<32>) iNsTr_86) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xi30 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_86)
    iNsTr_87 := ( $mux isposx_xi29 iNsTr_86 negx_xi30)
    iNsTr_88 := (iNsTr_87 + i_sumx_x02x_xi24)
    iNsTr_89 := (xx_x03x_xi23 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond69 := (iNsTr_89 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond69 $then  $place [bb_3_xx_x_crit_edgex_xi33x_xpreheader] $else $place [bb_3_bb_3] $endif 
    //begin: basic-block xx_x_crit_edgex_xi33x_xpreheader
    $merge bb_3_xx_x_crit_edgex_xi33x_xpreheader
    $phi xx_xlcssa68 :=  ( $cast ($uint<32>) iNsTr_88) $on bb_3_xx_x_crit_edgex_xi33x_xpreheader 
    $endmerge
    $place [xx_x_crit_edgex_xi33x_xpreheader_xx_x_crit_edgex_xi33]
    //begin: basic-block bb_5
    $merge bb_5_bb_5 xx_x_crit_edgex_xi33x_x7_bb_5
    $phi xx_x03x_xi6 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on xx_x_crit_edgex_xi33x_x7_bb_5 ( $cast ($uint<32>) iNsTr_171) $on bb_5_bb_5 
    $phi i_sumx_x02x_xi7 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on xx_x_crit_edgex_xi33x_x7_bb_5 ( $cast ($uint<32>) iNsTr_170) $on bb_5_bb_5 
    $endmerge
    scevgepx_xi11 := fenc[xx_x03x_xi6]
    scevgep14x_xi9 := pix2[xx_x03x_xi6]
    // load 
    iNsTr_164 := ->(scevgepx_xi11) 
    iNsTr_165 := ($cast ($uint<32>) iNsTr_164)
    // load 
    iNsTr_166 := ->(scevgep14x_xi9) 
    iNsTr_167 := ($cast ($uint<32>) iNsTr_166)
    iNsTr_168 := (iNsTr_165 - iNsTr_167)
    // compare instruction
    isposx_xi12 := ( ($bitcast ( $int<32>) iNsTr_168) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xi13 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_168)
    iNsTr_169 := ( $mux isposx_xi12 iNsTr_168 negx_xi13)
    iNsTr_170 := (iNsTr_169 + i_sumx_x02x_xi7)
    iNsTr_171 := (xx_x03x_xi6 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond34 := (iNsTr_171 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond34 $then  $place [bb_5_xx_x_crit_edgex_xi16x_xpreheader] $else $place [bb_5_bb_5] $endif 
    //begin: basic-block xx_x_crit_edgex_xi16x_xpreheader
    $merge bb_5_xx_x_crit_edgex_xi16x_xpreheader
    $phi xx_xlcssa33 :=  ( $cast ($uint<32>) iNsTr_170) $on bb_5_xx_x_crit_edgex_xi16x_xpreheader 
    $endmerge
    $place [xx_x_crit_edgex_xi16x_xpreheader_xx_x_crit_edgex_xi16]
    //begin: basic-block xx_x_crit_edgex_xi16
    $merge xx_x_crit_edgex_xi16_xx_x_crit_edgex_xi16 xx_x_crit_edgex_xi16x_xpreheader_xx_x_crit_edgex_xi16
    $phi xx_x03x_xi6x_x1 :=  ( $cast ($uint<32>) iNsTr_181) $on xx_x_crit_edgex_xi16_xx_x_crit_edgex_xi16 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on xx_x_crit_edgex_xi16x_xpreheader_xx_x_crit_edgex_xi16 
    $phi i_sumx_x02x_xi7x_x1 :=  ( $cast ($uint<32>) iNsTr_180) $on xx_x_crit_edgex_xi16_xx_x_crit_edgex_xi16 ( $cast ($uint<32>) xx_xlcssa33) $on xx_x_crit_edgex_xi16x_xpreheader_xx_x_crit_edgex_xi16 
    $endmerge
    tmp31 := (xx_x03x_xi6x_x1 + ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    scevgepx_xi11x_x1 := fenc[tmp31]
    tmp32 := (i_stride + xx_x03x_xi6x_x1)
    scevgep14x_xi9x_x1 := pix2[tmp32]
    // load 
    iNsTr_174 := ->(scevgepx_xi11x_x1) 
    iNsTr_175 := ($cast ($uint<32>) iNsTr_174)
    // load 
    iNsTr_176 := ->(scevgep14x_xi9x_x1) 
    iNsTr_177 := ($cast ($uint<32>) iNsTr_176)
    iNsTr_178 := (iNsTr_175 - iNsTr_177)
    // compare instruction
    isposx_xi12x_x1 := ( ($bitcast ( $int<32>) iNsTr_178) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xi13x_x1 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_178)
    iNsTr_179 := ( $mux isposx_xi12x_x1 iNsTr_178 negx_xi13x_x1)
    iNsTr_180 := (iNsTr_179 + i_sumx_x02x_xi7x_x1)
    iNsTr_181 := (xx_x03x_xi6x_x1 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond30 := (iNsTr_181 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond30 $then  $place [xx_x_crit_edgex_xi16_xx_x_crit_edgex_xi16x_x1x_xpreheader] $else $place [xx_x_crit_edgex_xi16_xx_x_crit_edgex_xi16] $endif 
    //begin: basic-block xx_x_crit_edgex_xi16x_x1x_xpreheader
    $merge xx_x_crit_edgex_xi16_xx_x_crit_edgex_xi16x_x1x_xpreheader
    $phi xx_xlcssa29 :=  ( $cast ($uint<32>) iNsTr_180) $on xx_x_crit_edgex_xi16_xx_x_crit_edgex_xi16x_x1x_xpreheader 
    $endmerge
    tmp27 := (i_stride * ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    $place [xx_x_crit_edgex_xi16x_x1x_xpreheader_xx_x_crit_edgex_xi16x_x1]
    //begin: basic-block xx_x_crit_edgex_xi16x_x1
    $merge xx_x_crit_edgex_xi16x_x1_xx_x_crit_edgex_xi16x_x1 xx_x_crit_edgex_xi16x_x1x_xpreheader_xx_x_crit_edgex_xi16x_x1
    $phi xx_x03x_xi6x_x2 :=  ( $cast ($uint<32>) iNsTr_191) $on xx_x_crit_edgex_xi16x_x1_xx_x_crit_edgex_xi16x_x1 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on xx_x_crit_edgex_xi16x_x1x_xpreheader_xx_x_crit_edgex_xi16x_x1 
    $phi i_sumx_x02x_xi7x_x2 :=  ( $cast ($uint<32>) iNsTr_190) $on xx_x_crit_edgex_xi16x_x1_xx_x_crit_edgex_xi16x_x1 ( $cast ($uint<32>) xx_xlcssa29) $on xx_x_crit_edgex_xi16x_x1x_xpreheader_xx_x_crit_edgex_xi16x_x1 
    $endmerge
    tmp26 := (xx_x03x_xi6x_x2 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    scevgepx_xi11x_x2 := fenc[tmp26]
    tmp28 := (tmp27 + xx_x03x_xi6x_x2)
    scevgep14x_xi9x_x2 := pix2[tmp28]
    // load 
    iNsTr_184 := ->(scevgepx_xi11x_x2) 
    iNsTr_185 := ($cast ($uint<32>) iNsTr_184)
    // load 
    iNsTr_186 := ->(scevgep14x_xi9x_x2) 
    iNsTr_187 := ($cast ($uint<32>) iNsTr_186)
    iNsTr_188 := (iNsTr_185 - iNsTr_187)
    // compare instruction
    isposx_xi12x_x2 := ( ($bitcast ( $int<32>) iNsTr_188) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xi13x_x2 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_188)
    iNsTr_189 := ( $mux isposx_xi12x_x2 iNsTr_188 negx_xi13x_x2)
    iNsTr_190 := (iNsTr_189 + i_sumx_x02x_xi7x_x2)
    iNsTr_191 := (xx_x03x_xi6x_x2 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond25 := (iNsTr_191 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond25 $then  $place [xx_x_crit_edgex_xi16x_x1_xx_x_crit_edgex_xi16x_x2x_xpreheader] $else $place [xx_x_crit_edgex_xi16x_x1_xx_x_crit_edgex_xi16x_x1] $endif 
    //begin: basic-block xx_x_crit_edgex_xi16x_x2x_xpreheader
    $merge xx_x_crit_edgex_xi16x_x1_xx_x_crit_edgex_xi16x_x2x_xpreheader
    $phi xx_xlcssa24 :=  ( $cast ($uint<32>) iNsTr_190) $on xx_x_crit_edgex_xi16x_x1_xx_x_crit_edgex_xi16x_x2x_xpreheader 
    $endmerge
    tmp22 := (i_stride * ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    $place [xx_x_crit_edgex_xi16x_x2x_xpreheader_xx_x_crit_edgex_xi16x_x2]
    //begin: basic-block xx_x_crit_edgex_xi16x_x2
    $merge xx_x_crit_edgex_xi16x_x2_xx_x_crit_edgex_xi16x_x2 xx_x_crit_edgex_xi16x_x2x_xpreheader_xx_x_crit_edgex_xi16x_x2
    $phi xx_x03x_xi6x_x3 :=  ( $cast ($uint<32>) iNsTr_201) $on xx_x_crit_edgex_xi16x_x2_xx_x_crit_edgex_xi16x_x2 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on xx_x_crit_edgex_xi16x_x2x_xpreheader_xx_x_crit_edgex_xi16x_x2 
    $phi i_sumx_x02x_xi7x_x3 :=  ( $cast ($uint<32>) iNsTr_200) $on xx_x_crit_edgex_xi16x_x2_xx_x_crit_edgex_xi16x_x2 ( $cast ($uint<32>) xx_xlcssa24) $on xx_x_crit_edgex_xi16x_x2x_xpreheader_xx_x_crit_edgex_xi16x_x2 
    $endmerge
    tmp21 := (xx_x03x_xi6x_x3 + ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 ) )
    scevgepx_xi11x_x3 := fenc[tmp21]
    tmp23 := (tmp22 + xx_x03x_xi6x_x3)
    scevgep14x_xi9x_x3 := pix2[tmp23]
    // load 
    iNsTr_194 := ->(scevgepx_xi11x_x3) 
    iNsTr_195 := ($cast ($uint<32>) iNsTr_194)
    // load 
    iNsTr_196 := ->(scevgep14x_xi9x_x3) 
    iNsTr_197 := ($cast ($uint<32>) iNsTr_196)
    iNsTr_198 := (iNsTr_195 - iNsTr_197)
    // compare instruction
    isposx_xi12x_x3 := ( ($bitcast ( $int<32>) iNsTr_198) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xi13x_x3 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_198)
    iNsTr_199 := ( $mux isposx_xi12x_x3 iNsTr_198 negx_xi13x_x3)
    iNsTr_200 := (iNsTr_199 + i_sumx_x02x_xi7x_x3)
    iNsTr_201 := (xx_x03x_xi6x_x3 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond20 := (iNsTr_201 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond20 $then  $place [xx_x_crit_edgex_xi16x_x2_xx_x_crit_edgex_xi16x_x3x_xpreheader] $else $place [xx_x_crit_edgex_xi16x_x2_xx_x_crit_edgex_xi16x_x2] $endif 
    //begin: basic-block xx_x_crit_edgex_xi16x_x3x_xpreheader
    $merge xx_x_crit_edgex_xi16x_x2_xx_x_crit_edgex_xi16x_x3x_xpreheader
    $phi xx_xlcssa19 :=  ( $cast ($uint<32>) iNsTr_200) $on xx_x_crit_edgex_xi16x_x2_xx_x_crit_edgex_xi16x_x3x_xpreheader 
    $endmerge
    tmp17 := (i_stride * ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    $place [xx_x_crit_edgex_xi16x_x3x_xpreheader_xx_x_crit_edgex_xi16x_x3]
    //begin: basic-block xx_x_crit_edgex_xi16x_x3
    $merge xx_x_crit_edgex_xi16x_x3_xx_x_crit_edgex_xi16x_x3 xx_x_crit_edgex_xi16x_x3x_xpreheader_xx_x_crit_edgex_xi16x_x3
    $phi xx_x03x_xi6x_x4 :=  ( $cast ($uint<32>) iNsTr_211) $on xx_x_crit_edgex_xi16x_x3_xx_x_crit_edgex_xi16x_x3 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on xx_x_crit_edgex_xi16x_x3x_xpreheader_xx_x_crit_edgex_xi16x_x3 
    $phi i_sumx_x02x_xi7x_x4 :=  ( $cast ($uint<32>) iNsTr_210) $on xx_x_crit_edgex_xi16x_x3_xx_x_crit_edgex_xi16x_x3 ( $cast ($uint<32>) xx_xlcssa19) $on xx_x_crit_edgex_xi16x_x3x_xpreheader_xx_x_crit_edgex_xi16x_x3 
    $endmerge
    tmp16 := (xx_x03x_xi6x_x4 + ( $bitcast ($uint<32> ) _b00000000000000000000000001000000 ) )
    scevgepx_xi11x_x4 := fenc[tmp16]
    tmp18 := (tmp17 + xx_x03x_xi6x_x4)
    scevgep14x_xi9x_x4 := pix2[tmp18]
    // load 
    iNsTr_204 := ->(scevgepx_xi11x_x4) 
    iNsTr_205 := ($cast ($uint<32>) iNsTr_204)
    // load 
    iNsTr_206 := ->(scevgep14x_xi9x_x4) 
    iNsTr_207 := ($cast ($uint<32>) iNsTr_206)
    iNsTr_208 := (iNsTr_205 - iNsTr_207)
    // compare instruction
    isposx_xi12x_x4 := ( ($bitcast ( $int<32>) iNsTr_208) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xi13x_x4 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_208)
    iNsTr_209 := ( $mux isposx_xi12x_x4 iNsTr_208 negx_xi13x_x4)
    iNsTr_210 := (iNsTr_209 + i_sumx_x02x_xi7x_x4)
    iNsTr_211 := (xx_x03x_xi6x_x4 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond15 := (iNsTr_211 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond15 $then  $place [xx_x_crit_edgex_xi16x_x3_xx_x_crit_edgex_xi16x_x4x_xpreheader] $else $place [xx_x_crit_edgex_xi16x_x3_xx_x_crit_edgex_xi16x_x3] $endif 
    //begin: basic-block xx_x_crit_edgex_xi16x_x4x_xpreheader
    $merge xx_x_crit_edgex_xi16x_x3_xx_x_crit_edgex_xi16x_x4x_xpreheader
    $phi xx_xlcssa14 :=  ( $cast ($uint<32>) iNsTr_210) $on xx_x_crit_edgex_xi16x_x3_xx_x_crit_edgex_xi16x_x4x_xpreheader 
    $endmerge
    tmp12 := (i_stride * ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) )
    $place [xx_x_crit_edgex_xi16x_x4x_xpreheader_xx_x_crit_edgex_xi16x_x4]
    //begin: basic-block xx_x_crit_edgex_xi16x_x4
    $merge xx_x_crit_edgex_xi16x_x4_xx_x_crit_edgex_xi16x_x4 xx_x_crit_edgex_xi16x_x4x_xpreheader_xx_x_crit_edgex_xi16x_x4
    $phi xx_x03x_xi6x_x5 :=  ( $cast ($uint<32>) iNsTr_221) $on xx_x_crit_edgex_xi16x_x4_xx_x_crit_edgex_xi16x_x4 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on xx_x_crit_edgex_xi16x_x4x_xpreheader_xx_x_crit_edgex_xi16x_x4 
    $phi i_sumx_x02x_xi7x_x5 :=  ( $cast ($uint<32>) iNsTr_220) $on xx_x_crit_edgex_xi16x_x4_xx_x_crit_edgex_xi16x_x4 ( $cast ($uint<32>) xx_xlcssa14) $on xx_x_crit_edgex_xi16x_x4x_xpreheader_xx_x_crit_edgex_xi16x_x4 
    $endmerge
    tmp11 := (xx_x03x_xi6x_x5 + ( $bitcast ($uint<32> ) _b00000000000000000000000001010000 ) )
    scevgepx_xi11x_x5 := fenc[tmp11]
    tmp13 := (tmp12 + xx_x03x_xi6x_x5)
    scevgep14x_xi9x_x5 := pix2[tmp13]
    // load 
    iNsTr_214 := ->(scevgepx_xi11x_x5) 
    iNsTr_215 := ($cast ($uint<32>) iNsTr_214)
    // load 
    iNsTr_216 := ->(scevgep14x_xi9x_x5) 
    iNsTr_217 := ($cast ($uint<32>) iNsTr_216)
    iNsTr_218 := (iNsTr_215 - iNsTr_217)
    // compare instruction
    isposx_xi12x_x5 := ( ($bitcast ( $int<32>) iNsTr_218) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xi13x_x5 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_218)
    iNsTr_219 := ( $mux isposx_xi12x_x5 iNsTr_218 negx_xi13x_x5)
    iNsTr_220 := (iNsTr_219 + i_sumx_x02x_xi7x_x5)
    iNsTr_221 := (xx_x03x_xi6x_x5 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond10 := (iNsTr_221 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond10 $then  $place [xx_x_crit_edgex_xi16x_x4_xx_x_crit_edgex_xi16x_x5x_xpreheader] $else $place [xx_x_crit_edgex_xi16x_x4_xx_x_crit_edgex_xi16x_x4] $endif 
    //begin: basic-block xx_x_crit_edgex_xi16x_x5x_xpreheader
    $merge xx_x_crit_edgex_xi16x_x4_xx_x_crit_edgex_xi16x_x5x_xpreheader
    $phi xx_xlcssa9 :=  ( $cast ($uint<32>) iNsTr_220) $on xx_x_crit_edgex_xi16x_x4_xx_x_crit_edgex_xi16x_x5x_xpreheader 
    $endmerge
    tmp7 := (i_stride * ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    $place [xx_x_crit_edgex_xi16x_x5x_xpreheader_xx_x_crit_edgex_xi16x_x5]
    //begin: basic-block xx_x_crit_edgex_xi16x_x5
    $merge xx_x_crit_edgex_xi16x_x5_xx_x_crit_edgex_xi16x_x5 xx_x_crit_edgex_xi16x_x5x_xpreheader_xx_x_crit_edgex_xi16x_x5
    $phi xx_x03x_xi6x_x6 :=  ( $cast ($uint<32>) iNsTr_231) $on xx_x_crit_edgex_xi16x_x5_xx_x_crit_edgex_xi16x_x5 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on xx_x_crit_edgex_xi16x_x5x_xpreheader_xx_x_crit_edgex_xi16x_x5 
    $phi i_sumx_x02x_xi7x_x6 :=  ( $cast ($uint<32>) iNsTr_230) $on xx_x_crit_edgex_xi16x_x5_xx_x_crit_edgex_xi16x_x5 ( $cast ($uint<32>) xx_xlcssa9) $on xx_x_crit_edgex_xi16x_x5x_xpreheader_xx_x_crit_edgex_xi16x_x5 
    $endmerge
    tmp6 := (xx_x03x_xi6x_x6 + ( $bitcast ($uint<32> ) _b00000000000000000000000001100000 ) )
    scevgepx_xi11x_x6 := fenc[tmp6]
    tmp8 := (tmp7 + xx_x03x_xi6x_x6)
    scevgep14x_xi9x_x6 := pix2[tmp8]
    // load 
    iNsTr_224 := ->(scevgepx_xi11x_x6) 
    iNsTr_225 := ($cast ($uint<32>) iNsTr_224)
    // load 
    iNsTr_226 := ->(scevgep14x_xi9x_x6) 
    iNsTr_227 := ($cast ($uint<32>) iNsTr_226)
    iNsTr_228 := (iNsTr_225 - iNsTr_227)
    // compare instruction
    isposx_xi12x_x6 := ( ($bitcast ( $int<32>) iNsTr_228) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xi13x_x6 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_228)
    iNsTr_229 := ( $mux isposx_xi12x_x6 iNsTr_228 negx_xi13x_x6)
    iNsTr_230 := (iNsTr_229 + i_sumx_x02x_xi7x_x6)
    iNsTr_231 := (xx_x03x_xi6x_x6 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond5 := (iNsTr_231 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond5 $then  $place [xx_x_crit_edgex_xi16x_x5_xx_x_crit_edgex_xi16x_x6x_xpreheader] $else $place [xx_x_crit_edgex_xi16x_x5_xx_x_crit_edgex_xi16x_x5] $endif 
    //begin: basic-block xx_x_crit_edgex_xi16x_x6x_xpreheader
    $merge xx_x_crit_edgex_xi16x_x5_xx_x_crit_edgex_xi16x_x6x_xpreheader
    $phi xx_xlcssa4 :=  ( $cast ($uint<32>) iNsTr_230) $on xx_x_crit_edgex_xi16x_x5_xx_x_crit_edgex_xi16x_x6x_xpreheader 
    $endmerge
    tmp2 := (i_stride * ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    $place [xx_x_crit_edgex_xi16x_x6x_xpreheader_xx_x_crit_edgex_xi16x_x6]
    //begin: basic-block xx_x_crit_edgex_xi16x_x7
    $merge xx_x_crit_edgex_xi16x_x6_xx_x_crit_edgex_xi16x_x7
    $phi xx_xlcssa :=  ( $cast ($uint<32>) iNsTr_240) $on xx_x_crit_edgex_xi16x_x6_xx_x_crit_edgex_xi16x_x7 
    $endmerge
    iNsTr_243 := scores[( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    ->(iNsTr_243) := xx_xlcssa
    $place [return__]
    //begin: basic-block xx_x_crit_edgex_xi16x_x6
    $merge xx_x_crit_edgex_xi16x_x6_xx_x_crit_edgex_xi16x_x6 xx_x_crit_edgex_xi16x_x6x_xpreheader_xx_x_crit_edgex_xi16x_x6
    $phi xx_x03x_xi6x_x7 :=  ( $cast ($uint<32>) iNsTr_241) $on xx_x_crit_edgex_xi16x_x6_xx_x_crit_edgex_xi16x_x6 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on xx_x_crit_edgex_xi16x_x6x_xpreheader_xx_x_crit_edgex_xi16x_x6 
    $phi i_sumx_x02x_xi7x_x7 :=  ( $cast ($uint<32>) iNsTr_240) $on xx_x_crit_edgex_xi16x_x6_xx_x_crit_edgex_xi16x_x6 ( $cast ($uint<32>) xx_xlcssa4) $on xx_x_crit_edgex_xi16x_x6x_xpreheader_xx_x_crit_edgex_xi16x_x6 
    $endmerge
    tmp := (xx_x03x_xi6x_x7 + ( $bitcast ($uint<32> ) _b00000000000000000000000001110000 ) )
    scevgepx_xi11x_x7 := fenc[tmp]
    tmp3 := (tmp2 + xx_x03x_xi6x_x7)
    scevgep14x_xi9x_x7 := pix2[tmp3]
    // load 
    iNsTr_234 := ->(scevgepx_xi11x_x7) 
    iNsTr_235 := ($cast ($uint<32>) iNsTr_234)
    // load 
    iNsTr_236 := ->(scevgep14x_xi9x_x7) 
    iNsTr_237 := ($cast ($uint<32>) iNsTr_236)
    iNsTr_238 := (iNsTr_235 - iNsTr_237)
    // compare instruction
    isposx_xi12x_x7 := ( ($bitcast ( $int<32>) iNsTr_238) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xi13x_x7 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_238)
    iNsTr_239 := ( $mux isposx_xi12x_x7 iNsTr_238 negx_xi13x_x7)
    iNsTr_240 := (iNsTr_239 + i_sumx_x02x_xi7x_x7)
    iNsTr_241 := (xx_x03x_xi6x_x7 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (iNsTr_241 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond1 $then  $place [xx_x_crit_edgex_xi16x_x6_xx_x_crit_edgex_xi16x_x7] $else $place [xx_x_crit_edgex_xi16x_x6_xx_x_crit_edgex_xi16x_x6] $endif 
    //begin: basic-block xx_x_crit_edgex_xi33
    $merge xx_x_crit_edgex_xi33_xx_x_crit_edgex_xi33 xx_x_crit_edgex_xi33x_xpreheader_xx_x_crit_edgex_xi33
    $phi xx_x03x_xi23x_x1 :=  ( $cast ($uint<32>) iNsTr_99) $on xx_x_crit_edgex_xi33_xx_x_crit_edgex_xi33 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on xx_x_crit_edgex_xi33x_xpreheader_xx_x_crit_edgex_xi33 
    $phi i_sumx_x02x_xi24x_x1 :=  ( $cast ($uint<32>) iNsTr_98) $on xx_x_crit_edgex_xi33_xx_x_crit_edgex_xi33 ( $cast ($uint<32>) xx_xlcssa68) $on xx_x_crit_edgex_xi33x_xpreheader_xx_x_crit_edgex_xi33 
    $endmerge
    tmp66 := (xx_x03x_xi23x_x1 + ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    scevgepx_xi28x_x1 := fenc[tmp66]
    tmp67 := (i_stride + xx_x03x_xi23x_x1)
    scevgep14x_xi26x_x1 := pix1[tmp67]
    // load 
    iNsTr_92 := ->(scevgepx_xi28x_x1) 
    iNsTr_93 := ($cast ($uint<32>) iNsTr_92)
    // load 
    iNsTr_94 := ->(scevgep14x_xi26x_x1) 
    iNsTr_95 := ($cast ($uint<32>) iNsTr_94)
    iNsTr_96 := (iNsTr_93 - iNsTr_95)
    // compare instruction
    isposx_xi29x_x1 := ( ($bitcast ( $int<32>) iNsTr_96) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xi30x_x1 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_96)
    iNsTr_97 := ( $mux isposx_xi29x_x1 iNsTr_96 negx_xi30x_x1)
    iNsTr_98 := (iNsTr_97 + i_sumx_x02x_xi24x_x1)
    iNsTr_99 := (xx_x03x_xi23x_x1 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond65 := (iNsTr_99 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond65 $then  $place [xx_x_crit_edgex_xi33_xx_x_crit_edgex_xi33x_x1x_xpreheader] $else $place [xx_x_crit_edgex_xi33_xx_x_crit_edgex_xi33] $endif 
    //begin: basic-block xx_x_crit_edgex_xi33x_x1x_xpreheader
    $merge xx_x_crit_edgex_xi33_xx_x_crit_edgex_xi33x_x1x_xpreheader
    $phi xx_xlcssa64 :=  ( $cast ($uint<32>) iNsTr_98) $on xx_x_crit_edgex_xi33_xx_x_crit_edgex_xi33x_x1x_xpreheader 
    $endmerge
    tmp62 := (i_stride * ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    $place [xx_x_crit_edgex_xi33x_x1x_xpreheader_xx_x_crit_edgex_xi33x_x1]
    //begin: basic-block xx_x_crit_edgex_xi33x_x1
    $merge xx_x_crit_edgex_xi33x_x1_xx_x_crit_edgex_xi33x_x1 xx_x_crit_edgex_xi33x_x1x_xpreheader_xx_x_crit_edgex_xi33x_x1
    $phi xx_x03x_xi23x_x2 :=  ( $cast ($uint<32>) iNsTr_109) $on xx_x_crit_edgex_xi33x_x1_xx_x_crit_edgex_xi33x_x1 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on xx_x_crit_edgex_xi33x_x1x_xpreheader_xx_x_crit_edgex_xi33x_x1 
    $phi i_sumx_x02x_xi24x_x2 :=  ( $cast ($uint<32>) iNsTr_108) $on xx_x_crit_edgex_xi33x_x1_xx_x_crit_edgex_xi33x_x1 ( $cast ($uint<32>) xx_xlcssa64) $on xx_x_crit_edgex_xi33x_x1x_xpreheader_xx_x_crit_edgex_xi33x_x1 
    $endmerge
    tmp61 := (xx_x03x_xi23x_x2 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    scevgepx_xi28x_x2 := fenc[tmp61]
    tmp63 := (tmp62 + xx_x03x_xi23x_x2)
    scevgep14x_xi26x_x2 := pix1[tmp63]
    // load 
    iNsTr_102 := ->(scevgepx_xi28x_x2) 
    iNsTr_103 := ($cast ($uint<32>) iNsTr_102)
    // load 
    iNsTr_104 := ->(scevgep14x_xi26x_x2) 
    iNsTr_105 := ($cast ($uint<32>) iNsTr_104)
    iNsTr_106 := (iNsTr_103 - iNsTr_105)
    // compare instruction
    isposx_xi29x_x2 := ( ($bitcast ( $int<32>) iNsTr_106) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xi30x_x2 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_106)
    iNsTr_107 := ( $mux isposx_xi29x_x2 iNsTr_106 negx_xi30x_x2)
    iNsTr_108 := (iNsTr_107 + i_sumx_x02x_xi24x_x2)
    iNsTr_109 := (xx_x03x_xi23x_x2 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond60 := (iNsTr_109 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond60 $then  $place [xx_x_crit_edgex_xi33x_x1_xx_x_crit_edgex_xi33x_x2x_xpreheader] $else $place [xx_x_crit_edgex_xi33x_x1_xx_x_crit_edgex_xi33x_x1] $endif 
    //begin: basic-block xx_x_crit_edgex_xi33x_x2x_xpreheader
    $merge xx_x_crit_edgex_xi33x_x1_xx_x_crit_edgex_xi33x_x2x_xpreheader
    $phi xx_xlcssa59 :=  ( $cast ($uint<32>) iNsTr_108) $on xx_x_crit_edgex_xi33x_x1_xx_x_crit_edgex_xi33x_x2x_xpreheader 
    $endmerge
    tmp57 := (i_stride * ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    $place [xx_x_crit_edgex_xi33x_x2x_xpreheader_xx_x_crit_edgex_xi33x_x2]
    //begin: basic-block xx_x_crit_edgex_xi33x_x2
    $merge xx_x_crit_edgex_xi33x_x2_xx_x_crit_edgex_xi33x_x2 xx_x_crit_edgex_xi33x_x2x_xpreheader_xx_x_crit_edgex_xi33x_x2
    $phi xx_x03x_xi23x_x3 :=  ( $cast ($uint<32>) iNsTr_119) $on xx_x_crit_edgex_xi33x_x2_xx_x_crit_edgex_xi33x_x2 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on xx_x_crit_edgex_xi33x_x2x_xpreheader_xx_x_crit_edgex_xi33x_x2 
    $phi i_sumx_x02x_xi24x_x3 :=  ( $cast ($uint<32>) iNsTr_118) $on xx_x_crit_edgex_xi33x_x2_xx_x_crit_edgex_xi33x_x2 ( $cast ($uint<32>) xx_xlcssa59) $on xx_x_crit_edgex_xi33x_x2x_xpreheader_xx_x_crit_edgex_xi33x_x2 
    $endmerge
    tmp56 := (xx_x03x_xi23x_x3 + ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 ) )
    scevgepx_xi28x_x3 := fenc[tmp56]
    tmp58 := (tmp57 + xx_x03x_xi23x_x3)
    scevgep14x_xi26x_x3 := pix1[tmp58]
    // load 
    iNsTr_112 := ->(scevgepx_xi28x_x3) 
    iNsTr_113 := ($cast ($uint<32>) iNsTr_112)
    // load 
    iNsTr_114 := ->(scevgep14x_xi26x_x3) 
    iNsTr_115 := ($cast ($uint<32>) iNsTr_114)
    iNsTr_116 := (iNsTr_113 - iNsTr_115)
    // compare instruction
    isposx_xi29x_x3 := ( ($bitcast ( $int<32>) iNsTr_116) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xi30x_x3 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_116)
    iNsTr_117 := ( $mux isposx_xi29x_x3 iNsTr_116 negx_xi30x_x3)
    iNsTr_118 := (iNsTr_117 + i_sumx_x02x_xi24x_x3)
    iNsTr_119 := (xx_x03x_xi23x_x3 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond55 := (iNsTr_119 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond55 $then  $place [xx_x_crit_edgex_xi33x_x2_xx_x_crit_edgex_xi33x_x3x_xpreheader] $else $place [xx_x_crit_edgex_xi33x_x2_xx_x_crit_edgex_xi33x_x2] $endif 
    //begin: basic-block xx_x_crit_edgex_xi33x_x3x_xpreheader
    $merge xx_x_crit_edgex_xi33x_x2_xx_x_crit_edgex_xi33x_x3x_xpreheader
    $phi xx_xlcssa54 :=  ( $cast ($uint<32>) iNsTr_118) $on xx_x_crit_edgex_xi33x_x2_xx_x_crit_edgex_xi33x_x3x_xpreheader 
    $endmerge
    tmp52 := (i_stride * ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    $place [xx_x_crit_edgex_xi33x_x3x_xpreheader_xx_x_crit_edgex_xi33x_x3]
    //begin: basic-block xx_x_crit_edgex_xi33x_x3
    $merge xx_x_crit_edgex_xi33x_x3_xx_x_crit_edgex_xi33x_x3 xx_x_crit_edgex_xi33x_x3x_xpreheader_xx_x_crit_edgex_xi33x_x3
    $phi xx_x03x_xi23x_x4 :=  ( $cast ($uint<32>) iNsTr_129) $on xx_x_crit_edgex_xi33x_x3_xx_x_crit_edgex_xi33x_x3 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on xx_x_crit_edgex_xi33x_x3x_xpreheader_xx_x_crit_edgex_xi33x_x3 
    $phi i_sumx_x02x_xi24x_x4 :=  ( $cast ($uint<32>) iNsTr_128) $on xx_x_crit_edgex_xi33x_x3_xx_x_crit_edgex_xi33x_x3 ( $cast ($uint<32>) xx_xlcssa54) $on xx_x_crit_edgex_xi33x_x3x_xpreheader_xx_x_crit_edgex_xi33x_x3 
    $endmerge
    tmp51 := (xx_x03x_xi23x_x4 + ( $bitcast ($uint<32> ) _b00000000000000000000000001000000 ) )
    scevgepx_xi28x_x4 := fenc[tmp51]
    tmp53 := (tmp52 + xx_x03x_xi23x_x4)
    scevgep14x_xi26x_x4 := pix1[tmp53]
    // load 
    iNsTr_122 := ->(scevgepx_xi28x_x4) 
    iNsTr_123 := ($cast ($uint<32>) iNsTr_122)
    // load 
    iNsTr_124 := ->(scevgep14x_xi26x_x4) 
    iNsTr_125 := ($cast ($uint<32>) iNsTr_124)
    iNsTr_126 := (iNsTr_123 - iNsTr_125)
    // compare instruction
    isposx_xi29x_x4 := ( ($bitcast ( $int<32>) iNsTr_126) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xi30x_x4 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_126)
    iNsTr_127 := ( $mux isposx_xi29x_x4 iNsTr_126 negx_xi30x_x4)
    iNsTr_128 := (iNsTr_127 + i_sumx_x02x_xi24x_x4)
    iNsTr_129 := (xx_x03x_xi23x_x4 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond50 := (iNsTr_129 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond50 $then  $place [xx_x_crit_edgex_xi33x_x3_xx_x_crit_edgex_xi33x_x4x_xpreheader] $else $place [xx_x_crit_edgex_xi33x_x3_xx_x_crit_edgex_xi33x_x3] $endif 
    //begin: basic-block xx_x_crit_edgex_xi33x_x4x_xpreheader
    $merge xx_x_crit_edgex_xi33x_x3_xx_x_crit_edgex_xi33x_x4x_xpreheader
    $phi xx_xlcssa49 :=  ( $cast ($uint<32>) iNsTr_128) $on xx_x_crit_edgex_xi33x_x3_xx_x_crit_edgex_xi33x_x4x_xpreheader 
    $endmerge
    tmp47 := (i_stride * ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) )
    $place [xx_x_crit_edgex_xi33x_x4x_xpreheader_xx_x_crit_edgex_xi33x_x4]
    //begin: basic-block xx_x_crit_edgex_xi33x_x4
    $merge xx_x_crit_edgex_xi33x_x4_xx_x_crit_edgex_xi33x_x4 xx_x_crit_edgex_xi33x_x4x_xpreheader_xx_x_crit_edgex_xi33x_x4
    $phi xx_x03x_xi23x_x5 :=  ( $cast ($uint<32>) iNsTr_139) $on xx_x_crit_edgex_xi33x_x4_xx_x_crit_edgex_xi33x_x4 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on xx_x_crit_edgex_xi33x_x4x_xpreheader_xx_x_crit_edgex_xi33x_x4 
    $phi i_sumx_x02x_xi24x_x5 :=  ( $cast ($uint<32>) iNsTr_138) $on xx_x_crit_edgex_xi33x_x4_xx_x_crit_edgex_xi33x_x4 ( $cast ($uint<32>) xx_xlcssa49) $on xx_x_crit_edgex_xi33x_x4x_xpreheader_xx_x_crit_edgex_xi33x_x4 
    $endmerge
    tmp46 := (xx_x03x_xi23x_x5 + ( $bitcast ($uint<32> ) _b00000000000000000000000001010000 ) )
    scevgepx_xi28x_x5 := fenc[tmp46]
    tmp48 := (tmp47 + xx_x03x_xi23x_x5)
    scevgep14x_xi26x_x5 := pix1[tmp48]
    // load 
    iNsTr_132 := ->(scevgepx_xi28x_x5) 
    iNsTr_133 := ($cast ($uint<32>) iNsTr_132)
    // load 
    iNsTr_134 := ->(scevgep14x_xi26x_x5) 
    iNsTr_135 := ($cast ($uint<32>) iNsTr_134)
    iNsTr_136 := (iNsTr_133 - iNsTr_135)
    // compare instruction
    isposx_xi29x_x5 := ( ($bitcast ( $int<32>) iNsTr_136) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xi30x_x5 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_136)
    iNsTr_137 := ( $mux isposx_xi29x_x5 iNsTr_136 negx_xi30x_x5)
    iNsTr_138 := (iNsTr_137 + i_sumx_x02x_xi24x_x5)
    iNsTr_139 := (xx_x03x_xi23x_x5 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond45 := (iNsTr_139 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond45 $then  $place [xx_x_crit_edgex_xi33x_x4_xx_x_crit_edgex_xi33x_x5x_xpreheader] $else $place [xx_x_crit_edgex_xi33x_x4_xx_x_crit_edgex_xi33x_x4] $endif 
    //begin: basic-block xx_x_crit_edgex_xi33x_x5x_xpreheader
    $merge xx_x_crit_edgex_xi33x_x4_xx_x_crit_edgex_xi33x_x5x_xpreheader
    $phi xx_xlcssa44 :=  ( $cast ($uint<32>) iNsTr_138) $on xx_x_crit_edgex_xi33x_x4_xx_x_crit_edgex_xi33x_x5x_xpreheader 
    $endmerge
    tmp42 := (i_stride * ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    $place [xx_x_crit_edgex_xi33x_x5x_xpreheader_xx_x_crit_edgex_xi33x_x5]
    //begin: basic-block xx_x_crit_edgex_xi33x_x5
    $merge xx_x_crit_edgex_xi33x_x5_xx_x_crit_edgex_xi33x_x5 xx_x_crit_edgex_xi33x_x5x_xpreheader_xx_x_crit_edgex_xi33x_x5
    $phi xx_x03x_xi23x_x6 :=  ( $cast ($uint<32>) iNsTr_149) $on xx_x_crit_edgex_xi33x_x5_xx_x_crit_edgex_xi33x_x5 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on xx_x_crit_edgex_xi33x_x5x_xpreheader_xx_x_crit_edgex_xi33x_x5 
    $phi i_sumx_x02x_xi24x_x6 :=  ( $cast ($uint<32>) iNsTr_148) $on xx_x_crit_edgex_xi33x_x5_xx_x_crit_edgex_xi33x_x5 ( $cast ($uint<32>) xx_xlcssa44) $on xx_x_crit_edgex_xi33x_x5x_xpreheader_xx_x_crit_edgex_xi33x_x5 
    $endmerge
    tmp41 := (xx_x03x_xi23x_x6 + ( $bitcast ($uint<32> ) _b00000000000000000000000001100000 ) )
    scevgepx_xi28x_x6 := fenc[tmp41]
    tmp43 := (tmp42 + xx_x03x_xi23x_x6)
    scevgep14x_xi26x_x6 := pix1[tmp43]
    // load 
    iNsTr_142 := ->(scevgepx_xi28x_x6) 
    iNsTr_143 := ($cast ($uint<32>) iNsTr_142)
    // load 
    iNsTr_144 := ->(scevgep14x_xi26x_x6) 
    iNsTr_145 := ($cast ($uint<32>) iNsTr_144)
    iNsTr_146 := (iNsTr_143 - iNsTr_145)
    // compare instruction
    isposx_xi29x_x6 := ( ($bitcast ( $int<32>) iNsTr_146) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xi30x_x6 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_146)
    iNsTr_147 := ( $mux isposx_xi29x_x6 iNsTr_146 negx_xi30x_x6)
    iNsTr_148 := (iNsTr_147 + i_sumx_x02x_xi24x_x6)
    iNsTr_149 := (xx_x03x_xi23x_x6 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond40 := (iNsTr_149 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond40 $then  $place [xx_x_crit_edgex_xi33x_x5_xx_x_crit_edgex_xi33x_x6x_xpreheader] $else $place [xx_x_crit_edgex_xi33x_x5_xx_x_crit_edgex_xi33x_x5] $endif 
    //begin: basic-block xx_x_crit_edgex_xi33x_x6x_xpreheader
    $merge xx_x_crit_edgex_xi33x_x5_xx_x_crit_edgex_xi33x_x6x_xpreheader
    $phi xx_xlcssa39 :=  ( $cast ($uint<32>) iNsTr_148) $on xx_x_crit_edgex_xi33x_x5_xx_x_crit_edgex_xi33x_x6x_xpreheader 
    $endmerge
    tmp37 := (i_stride * ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    $place [xx_x_crit_edgex_xi33x_x6x_xpreheader_xx_x_crit_edgex_xi33x_x6]
    //begin: basic-block xx_x_crit_edgex_xi33x_x7
    $merge xx_x_crit_edgex_xi33x_x6_xx_x_crit_edgex_xi33x_x7
    $phi xx_xlcssa35 :=  ( $cast ($uint<32>) iNsTr_158) $on xx_x_crit_edgex_xi33x_x6_xx_x_crit_edgex_xi33x_x7 
    $endmerge
    iNsTr_161 := scores[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    ->(iNsTr_161) := xx_xlcssa35
    $place [xx_x_crit_edgex_xi33x_x7_bb_5]
    //begin: basic-block xx_x_crit_edgex_xi33x_x6
    $merge xx_x_crit_edgex_xi33x_x6_xx_x_crit_edgex_xi33x_x6 xx_x_crit_edgex_xi33x_x6x_xpreheader_xx_x_crit_edgex_xi33x_x6
    $phi xx_x03x_xi23x_x7 :=  ( $cast ($uint<32>) iNsTr_159) $on xx_x_crit_edgex_xi33x_x6_xx_x_crit_edgex_xi33x_x6 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on xx_x_crit_edgex_xi33x_x6x_xpreheader_xx_x_crit_edgex_xi33x_x6 
    $phi i_sumx_x02x_xi24x_x7 :=  ( $cast ($uint<32>) iNsTr_158) $on xx_x_crit_edgex_xi33x_x6_xx_x_crit_edgex_xi33x_x6 ( $cast ($uint<32>) xx_xlcssa39) $on xx_x_crit_edgex_xi33x_x6x_xpreheader_xx_x_crit_edgex_xi33x_x6 
    $endmerge
    tmp36 := (xx_x03x_xi23x_x7 + ( $bitcast ($uint<32> ) _b00000000000000000000000001110000 ) )
    scevgepx_xi28x_x7 := fenc[tmp36]
    tmp38 := (tmp37 + xx_x03x_xi23x_x7)
    scevgep14x_xi26x_x7 := pix1[tmp38]
    // load 
    iNsTr_152 := ->(scevgepx_xi28x_x7) 
    iNsTr_153 := ($cast ($uint<32>) iNsTr_152)
    // load 
    iNsTr_154 := ->(scevgep14x_xi26x_x7) 
    iNsTr_155 := ($cast ($uint<32>) iNsTr_154)
    iNsTr_156 := (iNsTr_153 - iNsTr_155)
    // compare instruction
    isposx_xi29x_x7 := ( ($bitcast ( $int<32>) iNsTr_156) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xi30x_x7 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_156)
    iNsTr_157 := ( $mux isposx_xi29x_x7 iNsTr_156 negx_xi30x_x7)
    iNsTr_158 := (iNsTr_157 + i_sumx_x02x_xi24x_x7)
    iNsTr_159 := (xx_x03x_xi23x_x7 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond := (iNsTr_159 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond $then  $place [xx_x_crit_edgex_xi33x_x6_xx_x_crit_edgex_xi33x_x7] $else $place [xx_x_crit_edgex_xi33x_x6_xx_x_crit_edgex_xi33x_x6] $endif 
    //begin: basic-block xx_x_crit_edgex_xix_x1
    $merge xx_x_crit_edgex_xi_xx_x_crit_edgex_xix_x1
    $phi xx_xlcssa96 :=  ( $cast ($uint<32>) iNsTr_17) $on xx_x_crit_edgex_xi_xx_x_crit_edgex_xix_x1 
    $endmerge
    tmp94 := (i_stride * ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    $place [xx_x_crit_edgex_xix_x1_bb_38]
    //begin: basic-block xx_x_crit_edgex_xi
    $merge xx_x_crit_edgex_xi_xx_x_crit_edgex_xi xx_x_crit_edgex_xix_xpreheader_xx_x_crit_edgex_xi
    $phi xx_x03x_xix_x1 :=  ( $cast ($uint<32>) iNsTr_18) $on xx_x_crit_edgex_xi_xx_x_crit_edgex_xi ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on xx_x_crit_edgex_xix_xpreheader_xx_x_crit_edgex_xi 
    $phi i_sumx_x02x_xix_x1 :=  ( $cast ($uint<32>) iNsTr_17) $on xx_x_crit_edgex_xi_xx_x_crit_edgex_xi ( $cast ($uint<32>) xx_xlcssa100) $on xx_x_crit_edgex_xix_xpreheader_xx_x_crit_edgex_xi 
    $endmerge
    tmp98 := (xx_x03x_xix_x1 + ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    scevgepx_xix_x1 := fenc[tmp98]
    tmp99 := (i_stride + xx_x03x_xix_x1)
    scevgep14x_xix_x1 := pix0[tmp99]
    // load 
    iNsTr_11 := ->(scevgepx_xix_x1) 
    iNsTr_12 := ($cast ($uint<32>) iNsTr_11)
    // load 
    iNsTr_13 := ->(scevgep14x_xix_x1) 
    iNsTr_14 := ($cast ($uint<32>) iNsTr_13)
    iNsTr_15 := (iNsTr_12 - iNsTr_14)
    // compare instruction
    isposx_xix_x1 := ( ($bitcast ( $int<32>) iNsTr_15) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xix_x1 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_15)
    iNsTr_16 := ( $mux isposx_xix_x1 iNsTr_15 negx_xix_x1)
    iNsTr_17 := (iNsTr_16 + i_sumx_x02x_xix_x1)
    iNsTr_18 := (xx_x03x_xix_x1 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond97 := (iNsTr_18 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond97 $then  $place [xx_x_crit_edgex_xi_xx_x_crit_edgex_xix_x1] $else $place [xx_x_crit_edgex_xi_xx_x_crit_edgex_xi] $endif 
    //begin: basic-block xx_x_crit_edgex_xix_x2
    $merge bb_38_xx_x_crit_edgex_xix_x2
    $phi xx_xlcssa91 :=  ( $cast ($uint<32>) iNsTr_27) $on bb_38_xx_x_crit_edgex_xix_x2 
    $endmerge
    tmp61x_x3 := (i_stride * ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    $place [xx_x_crit_edgex_xix_x2_bb_40]
    //begin: basic-block bb_38
    $merge bb_38_bb_38 xx_x_crit_edgex_xix_x1_bb_38
    $phi xx_x03x_xix_x2 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on xx_x_crit_edgex_xix_x1_bb_38 ( $cast ($uint<32>) iNsTr_28) $on bb_38_bb_38 
    $phi i_sumx_x02x_xix_x2 :=  ( $cast ($uint<32>) xx_xlcssa96) $on xx_x_crit_edgex_xix_x1_bb_38 ( $cast ($uint<32>) iNsTr_27) $on bb_38_bb_38 
    $endmerge
    tmp93 := (xx_x03x_xix_x2 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    scevgepx_xix_x2 := fenc[tmp93]
    tmp95 := (tmp94 + xx_x03x_xix_x2)
    scevgep14x_xix_x2 := pix0[tmp95]
    // load 
    iNsTr_21 := ->(scevgepx_xix_x2) 
    iNsTr_22 := ($cast ($uint<32>) iNsTr_21)
    // load 
    iNsTr_23 := ->(scevgep14x_xix_x2) 
    iNsTr_24 := ($cast ($uint<32>) iNsTr_23)
    iNsTr_25 := (iNsTr_22 - iNsTr_24)
    // compare instruction
    isposx_xix_x2 := ( ($bitcast ( $int<32>) iNsTr_25) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xix_x2 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_25)
    iNsTr_26 := ( $mux isposx_xix_x2 iNsTr_25 negx_xix_x2)
    iNsTr_27 := (iNsTr_26 + i_sumx_x02x_xix_x2)
    iNsTr_28 := (xx_x03x_xix_x2 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond92 := (iNsTr_28 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond92 $then  $place [bb_38_xx_x_crit_edgex_xix_x2] $else $place [bb_38_bb_38] $endif 
    //begin: basic-block xx_x_crit_edgex_xix_x3
    $merge bb_40_xx_x_crit_edgex_xix_x3
    $phi xx_xlcssa87 :=  ( $cast ($uint<32>) iNsTr_37) $on bb_40_xx_x_crit_edgex_xix_x3 
    $endmerge
    tmp85 := (i_stride * ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    $place [xx_x_crit_edgex_xix_x3_bb_42]
    //begin: basic-block bb_40
    $merge bb_40_bb_40 xx_x_crit_edgex_xix_x2_bb_40
    $phi xx_x03x_xix_x3 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on xx_x_crit_edgex_xix_x2_bb_40 ( $cast ($uint<32>) iNsTr_38) $on bb_40_bb_40 
    $phi i_sumx_x02x_xix_x3 :=  ( $cast ($uint<32>) xx_xlcssa91) $on xx_x_crit_edgex_xix_x2_bb_40 ( $cast ($uint<32>) iNsTr_37) $on bb_40_bb_40 
    $endmerge
    tmp89 := (xx_x03x_xix_x3 + ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 ) )
    scevgepx_xix_x3 := fenc[tmp89]
    tmp90 := (tmp61x_x3 + xx_x03x_xix_x3)
    scevgep14x_xix_x3 := pix0[tmp90]
    // load 
    iNsTr_31 := ->(scevgepx_xix_x3) 
    iNsTr_32 := ($cast ($uint<32>) iNsTr_31)
    // load 
    iNsTr_33 := ->(scevgep14x_xix_x3) 
    iNsTr_34 := ($cast ($uint<32>) iNsTr_33)
    iNsTr_35 := (iNsTr_32 - iNsTr_34)
    // compare instruction
    isposx_xix_x3 := ( ($bitcast ( $int<32>) iNsTr_35) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xix_x3 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_35)
    iNsTr_36 := ( $mux isposx_xix_x3 iNsTr_35 negx_xix_x3)
    iNsTr_37 := (iNsTr_36 + i_sumx_x02x_xix_x3)
    iNsTr_38 := (xx_x03x_xix_x3 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond88 := (iNsTr_38 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond88 $then  $place [bb_40_xx_x_crit_edgex_xix_x3] $else $place [bb_40_bb_40] $endif 
    //begin: basic-block xx_x_crit_edgex_xix_x4
    $merge bb_42_xx_x_crit_edgex_xix_x4
    $phi xx_xlcssa82 :=  ( $cast ($uint<32>) iNsTr_47) $on bb_42_xx_x_crit_edgex_xix_x4 
    $endmerge
    tmp61x_x5 := (i_stride * ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) )
    $place [xx_x_crit_edgex_xix_x4_bb_44]
    //begin: basic-block bb_42
    $merge bb_42_bb_42 xx_x_crit_edgex_xix_x3_bb_42
    $phi xx_x03x_xix_x4 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on xx_x_crit_edgex_xix_x3_bb_42 ( $cast ($uint<32>) iNsTr_48) $on bb_42_bb_42 
    $phi i_sumx_x02x_xix_x4 :=  ( $cast ($uint<32>) xx_xlcssa87) $on xx_x_crit_edgex_xix_x3_bb_42 ( $cast ($uint<32>) iNsTr_47) $on bb_42_bb_42 
    $endmerge
    tmp84 := (xx_x03x_xix_x4 + ( $bitcast ($uint<32> ) _b00000000000000000000000001000000 ) )
    scevgepx_xix_x4 := fenc[tmp84]
    tmp86 := (tmp85 + xx_x03x_xix_x4)
    scevgep14x_xix_x4 := pix0[tmp86]
    // load 
    iNsTr_41 := ->(scevgepx_xix_x4) 
    iNsTr_42 := ($cast ($uint<32>) iNsTr_41)
    // load 
    iNsTr_43 := ->(scevgep14x_xix_x4) 
    iNsTr_44 := ($cast ($uint<32>) iNsTr_43)
    iNsTr_45 := (iNsTr_42 - iNsTr_44)
    // compare instruction
    isposx_xix_x4 := ( ($bitcast ( $int<32>) iNsTr_45) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xix_x4 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_45)
    iNsTr_46 := ( $mux isposx_xix_x4 iNsTr_45 negx_xix_x4)
    iNsTr_47 := (iNsTr_46 + i_sumx_x02x_xix_x4)
    iNsTr_48 := (xx_x03x_xix_x4 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond83 := (iNsTr_48 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond83 $then  $place [bb_42_xx_x_crit_edgex_xix_x4] $else $place [bb_42_bb_42] $endif 
    //begin: basic-block xx_x_crit_edgex_xix_x5
    $merge bb_44_xx_x_crit_edgex_xix_x5
    $phi xx_xlcssa78 :=  ( $cast ($uint<32>) iNsTr_57) $on bb_44_xx_x_crit_edgex_xix_x5 
    $endmerge
    tmp61x_x6 := (i_stride * ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    $place [xx_x_crit_edgex_xix_x5_bb_46]
    //begin: basic-block bb_44
    $merge bb_44_bb_44 xx_x_crit_edgex_xix_x4_bb_44
    $phi xx_x03x_xix_x5 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on xx_x_crit_edgex_xix_x4_bb_44 ( $cast ($uint<32>) iNsTr_58) $on bb_44_bb_44 
    $phi i_sumx_x02x_xix_x5 :=  ( $cast ($uint<32>) xx_xlcssa82) $on xx_x_crit_edgex_xix_x4_bb_44 ( $cast ($uint<32>) iNsTr_57) $on bb_44_bb_44 
    $endmerge
    tmp80 := (xx_x03x_xix_x5 + ( $bitcast ($uint<32> ) _b00000000000000000000000001010000 ) )
    scevgepx_xix_x5 := fenc[tmp80]
    tmp81 := (tmp61x_x5 + xx_x03x_xix_x5)
    scevgep14x_xix_x5 := pix0[tmp81]
    // load 
    iNsTr_51 := ->(scevgepx_xix_x5) 
    iNsTr_52 := ($cast ($uint<32>) iNsTr_51)
    // load 
    iNsTr_53 := ->(scevgep14x_xix_x5) 
    iNsTr_54 := ($cast ($uint<32>) iNsTr_53)
    iNsTr_55 := (iNsTr_52 - iNsTr_54)
    // compare instruction
    isposx_xix_x5 := ( ($bitcast ( $int<32>) iNsTr_55) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xix_x5 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_55)
    iNsTr_56 := ( $mux isposx_xix_x5 iNsTr_55 negx_xix_x5)
    iNsTr_57 := (iNsTr_56 + i_sumx_x02x_xix_x5)
    iNsTr_58 := (xx_x03x_xix_x5 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond79 := (iNsTr_58 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond79 $then  $place [bb_44_xx_x_crit_edgex_xix_x5] $else $place [bb_44_bb_44] $endif 
    //begin: basic-block xx_x_crit_edgex_xix_x6
    $merge bb_46_xx_x_crit_edgex_xix_x6
    $phi xx_xlcssa74 :=  ( $cast ($uint<32>) iNsTr_67) $on bb_46_xx_x_crit_edgex_xix_x6 
    $endmerge
    tmp61x_x7 := (i_stride * ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    $place [xx_x_crit_edgex_xix_x6_bb_48]
    //begin: basic-block bb_46
    $merge bb_46_bb_46 xx_x_crit_edgex_xix_x5_bb_46
    $phi xx_x03x_xix_x6 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on xx_x_crit_edgex_xix_x5_bb_46 ( $cast ($uint<32>) iNsTr_68) $on bb_46_bb_46 
    $phi i_sumx_x02x_xix_x6 :=  ( $cast ($uint<32>) xx_xlcssa78) $on xx_x_crit_edgex_xix_x5_bb_46 ( $cast ($uint<32>) iNsTr_67) $on bb_46_bb_46 
    $endmerge
    tmp76 := (xx_x03x_xix_x6 + ( $bitcast ($uint<32> ) _b00000000000000000000000001100000 ) )
    scevgepx_xix_x6 := fenc[tmp76]
    tmp77 := (tmp61x_x6 + xx_x03x_xix_x6)
    scevgep14x_xix_x6 := pix0[tmp77]
    // load 
    iNsTr_61 := ->(scevgepx_xix_x6) 
    iNsTr_62 := ($cast ($uint<32>) iNsTr_61)
    // load 
    iNsTr_63 := ->(scevgep14x_xix_x6) 
    iNsTr_64 := ($cast ($uint<32>) iNsTr_63)
    iNsTr_65 := (iNsTr_62 - iNsTr_64)
    // compare instruction
    isposx_xix_x6 := ( ($bitcast ( $int<32>) iNsTr_65) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xix_x6 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_65)
    iNsTr_66 := ( $mux isposx_xix_x6 iNsTr_65 negx_xix_x6)
    iNsTr_67 := (iNsTr_66 + i_sumx_x02x_xix_x6)
    iNsTr_68 := (xx_x03x_xix_x6 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond75 := (iNsTr_68 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond75 $then  $place [bb_46_xx_x_crit_edgex_xix_x6] $else $place [bb_46_bb_46] $endif 
    //begin: basic-block xx_x_crit_edgex_xix_x7
    $merge bb_48_xx_x_crit_edgex_xix_x7
    $phi xx_xlcssa70 :=  ( $cast ($uint<32>) iNsTr_77) $on bb_48_xx_x_crit_edgex_xix_x7 
    $endmerge
    ->(scores) := xx_xlcssa70
    $place [xx_x_crit_edgex_xix_x7_bb_3]
    //begin: basic-block bb_48
    $merge bb_48_bb_48 xx_x_crit_edgex_xix_x6_bb_48
    $phi xx_x03x_xix_x7 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on xx_x_crit_edgex_xix_x6_bb_48 ( $cast ($uint<32>) iNsTr_78) $on bb_48_bb_48 
    $phi i_sumx_x02x_xix_x7 :=  ( $cast ($uint<32>) xx_xlcssa74) $on xx_x_crit_edgex_xix_x6_bb_48 ( $cast ($uint<32>) iNsTr_77) $on bb_48_bb_48 
    $endmerge
    tmp72 := (xx_x03x_xix_x7 + ( $bitcast ($uint<32> ) _b00000000000000000000000001110000 ) )
    scevgepx_xix_x7 := fenc[tmp72]
    tmp73 := (tmp61x_x7 + xx_x03x_xix_x7)
    scevgep14x_xix_x7 := pix0[tmp73]
    // load 
    iNsTr_71 := ->(scevgepx_xix_x7) 
    iNsTr_72 := ($cast ($uint<32>) iNsTr_71)
    // load 
    iNsTr_73 := ->(scevgep14x_xix_x7) 
    iNsTr_74 := ($cast ($uint<32>) iNsTr_73)
    iNsTr_75 := (iNsTr_72 - iNsTr_74)
    // compare instruction
    isposx_xix_x7 := ( ($bitcast ( $int<32>) iNsTr_75) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xix_x7 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_75)
    iNsTr_76 := ( $mux isposx_xix_x7 iNsTr_75 negx_xix_x7)
    iNsTr_77 := (iNsTr_76 + i_sumx_x02x_xix_x7)
    iNsTr_78 := (xx_x03x_xix_x7 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond71 := (iNsTr_78 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond71 $then  $place [bb_48_xx_x_crit_edgex_xix_x7] $else $place [bb_48_bb_48] $endif 
    $merge return__ $endmerge
  }
}
$module [x264_pixel_sad_x4_16x8] 
$in (fenc : $pointer< $uint<8> > pix0 : $pointer< $uint<8> > pix1 : $pointer< $uint<8> > pix2 : $pointer< $uint<8> > pix3 : $pointer< $uint<8> > i_stride : $uint<32> scores : $pointer< $uint<32> > )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bbx_xnphx_xi
    $place [bbx_xnphx_xi_bb_1]
    //begin: basic-block bb_1
    $merge bb_1_bb_1 bbx_xnphx_xi_bb_1
    $phi xx_x03x_xi :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xi_bb_1 ( $cast ($uint<32>) iNsTr_8) $on bb_1_bb_1 
    $phi i_sumx_x02x_xi :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xi_bb_1 ( $cast ($uint<32>) iNsTr_7) $on bb_1_bb_1 
    $endmerge
    scevgepx_xi := fenc[xx_x03x_xi]
    scevgep14x_xi := pix0[xx_x03x_xi]
    // load 
    iNsTr_1 := ->(scevgepx_xi) 
    iNsTr_2 := ($cast ($uint<32>) iNsTr_1)
    // load 
    iNsTr_3 := ->(scevgep14x_xi) 
    iNsTr_4 := ($cast ($uint<32>) iNsTr_3)
    iNsTr_5 := (iNsTr_2 - iNsTr_4)
    // compare instruction
    isposx_xi := ( ($bitcast ( $int<32>) iNsTr_5) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xi := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_5)
    iNsTr_6 := ( $mux isposx_xi iNsTr_5 negx_xi)
    iNsTr_7 := (iNsTr_6 + i_sumx_x02x_xi)
    iNsTr_8 := (xx_x03x_xi + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond137 := (iNsTr_8 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond137 $then  $place [bb_1_xx_x_crit_edgex_xix_xpreheader] $else $place [bb_1_bb_1] $endif 
    //begin: basic-block xx_x_crit_edgex_xix_xpreheader
    $merge bb_1_xx_x_crit_edgex_xix_xpreheader
    $phi xx_xlcssa136 :=  ( $cast ($uint<32>) iNsTr_7) $on bb_1_xx_x_crit_edgex_xix_xpreheader 
    $endmerge
    $place [xx_x_crit_edgex_xix_xpreheader_xx_x_crit_edgex_xi]
    //begin: basic-block bb_3
    $merge bb_3_bb_3 xx_x_crit_edgex_xix_x7_bb_3
    $phi xx_x03x_xi40 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on xx_x_crit_edgex_xix_x7_bb_3 ( $cast ($uint<32>) iNsTr_89) $on bb_3_bb_3 
    $phi i_sumx_x02x_xi41 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on xx_x_crit_edgex_xix_x7_bb_3 ( $cast ($uint<32>) iNsTr_88) $on bb_3_bb_3 
    $endmerge
    scevgepx_xi45 := fenc[xx_x03x_xi40]
    scevgep14x_xi43 := pix1[xx_x03x_xi40]
    // load 
    iNsTr_82 := ->(scevgepx_xi45) 
    iNsTr_83 := ($cast ($uint<32>) iNsTr_82)
    // load 
    iNsTr_84 := ->(scevgep14x_xi43) 
    iNsTr_85 := ($cast ($uint<32>) iNsTr_84)
    iNsTr_86 := (iNsTr_83 - iNsTr_85)
    // compare instruction
    isposx_xi46 := ( ($bitcast ( $int<32>) iNsTr_86) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xi47 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_86)
    iNsTr_87 := ( $mux isposx_xi46 iNsTr_86 negx_xi47)
    iNsTr_88 := (iNsTr_87 + i_sumx_x02x_xi41)
    iNsTr_89 := (xx_x03x_xi40 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond105 := (iNsTr_89 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond105 $then  $place [bb_3_xx_x_crit_edgex_xi50x_xpreheader] $else $place [bb_3_bb_3] $endif 
    //begin: basic-block xx_x_crit_edgex_xi50x_xpreheader
    $merge bb_3_xx_x_crit_edgex_xi50x_xpreheader
    $phi xx_xlcssa104 :=  ( $cast ($uint<32>) iNsTr_88) $on bb_3_xx_x_crit_edgex_xi50x_xpreheader 
    $endmerge
    $place [xx_x_crit_edgex_xi50x_xpreheader_xx_x_crit_edgex_xi50]
    //begin: basic-block bb_5
    $merge bb_5_bb_5 xx_x_crit_edgex_xi50x_x7_bb_5
    $phi xx_x03x_xi23 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on xx_x_crit_edgex_xi50x_x7_bb_5 ( $cast ($uint<32>) iNsTr_171) $on bb_5_bb_5 
    $phi i_sumx_x02x_xi24 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on xx_x_crit_edgex_xi50x_x7_bb_5 ( $cast ($uint<32>) iNsTr_170) $on bb_5_bb_5 
    $endmerge
    scevgepx_xi28 := fenc[xx_x03x_xi23]
    scevgep14x_xi26 := pix2[xx_x03x_xi23]
    // load 
    iNsTr_164 := ->(scevgepx_xi28) 
    iNsTr_165 := ($cast ($uint<32>) iNsTr_164)
    // load 
    iNsTr_166 := ->(scevgep14x_xi26) 
    iNsTr_167 := ($cast ($uint<32>) iNsTr_166)
    iNsTr_168 := (iNsTr_165 - iNsTr_167)
    // compare instruction
    isposx_xi29 := ( ($bitcast ( $int<32>) iNsTr_168) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xi30 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_168)
    iNsTr_169 := ( $mux isposx_xi29 iNsTr_168 negx_xi30)
    iNsTr_170 := (iNsTr_169 + i_sumx_x02x_xi24)
    iNsTr_171 := (xx_x03x_xi23 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond69 := (iNsTr_171 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond69 $then  $place [bb_5_xx_x_crit_edgex_xi33x_xpreheader] $else $place [bb_5_bb_5] $endif 
    //begin: basic-block xx_x_crit_edgex_xi33x_xpreheader
    $merge bb_5_xx_x_crit_edgex_xi33x_xpreheader
    $phi xx_xlcssa68 :=  ( $cast ($uint<32>) iNsTr_170) $on bb_5_xx_x_crit_edgex_xi33x_xpreheader 
    $endmerge
    $place [xx_x_crit_edgex_xi33x_xpreheader_xx_x_crit_edgex_xi33]
    //begin: basic-block bb_7
    $merge bb_7_bb_7 xx_x_crit_edgex_xi33x_x7_bb_7
    $phi xx_x03x_xi6 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on xx_x_crit_edgex_xi33x_x7_bb_7 ( $cast ($uint<32>) iNsTr_253) $on bb_7_bb_7 
    $phi i_sumx_x02x_xi7 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on xx_x_crit_edgex_xi33x_x7_bb_7 ( $cast ($uint<32>) iNsTr_252) $on bb_7_bb_7 
    $endmerge
    scevgepx_xi11 := fenc[xx_x03x_xi6]
    scevgep14x_xi9 := pix3[xx_x03x_xi6]
    // load 
    iNsTr_246 := ->(scevgepx_xi11) 
    iNsTr_247 := ($cast ($uint<32>) iNsTr_246)
    // load 
    iNsTr_248 := ->(scevgep14x_xi9) 
    iNsTr_249 := ($cast ($uint<32>) iNsTr_248)
    iNsTr_250 := (iNsTr_247 - iNsTr_249)
    // compare instruction
    isposx_xi12 := ( ($bitcast ( $int<32>) iNsTr_250) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xi13 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_250)
    iNsTr_251 := ( $mux isposx_xi12 iNsTr_250 negx_xi13)
    iNsTr_252 := (iNsTr_251 + i_sumx_x02x_xi7)
    iNsTr_253 := (xx_x03x_xi6 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond34 := (iNsTr_253 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond34 $then  $place [bb_7_xx_x_crit_edgex_xi16x_xpreheader] $else $place [bb_7_bb_7] $endif 
    //begin: basic-block xx_x_crit_edgex_xi16x_xpreheader
    $merge bb_7_xx_x_crit_edgex_xi16x_xpreheader
    $phi xx_xlcssa33 :=  ( $cast ($uint<32>) iNsTr_252) $on bb_7_xx_x_crit_edgex_xi16x_xpreheader 
    $endmerge
    $place [xx_x_crit_edgex_xi16x_xpreheader_xx_x_crit_edgex_xi16]
    //begin: basic-block xx_x_crit_edgex_xi16
    $merge xx_x_crit_edgex_xi16_xx_x_crit_edgex_xi16 xx_x_crit_edgex_xi16x_xpreheader_xx_x_crit_edgex_xi16
    $phi xx_x03x_xi6x_x1 :=  ( $cast ($uint<32>) iNsTr_263) $on xx_x_crit_edgex_xi16_xx_x_crit_edgex_xi16 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on xx_x_crit_edgex_xi16x_xpreheader_xx_x_crit_edgex_xi16 
    $phi i_sumx_x02x_xi7x_x1 :=  ( $cast ($uint<32>) iNsTr_262) $on xx_x_crit_edgex_xi16_xx_x_crit_edgex_xi16 ( $cast ($uint<32>) xx_xlcssa33) $on xx_x_crit_edgex_xi16x_xpreheader_xx_x_crit_edgex_xi16 
    $endmerge
    tmp31 := (xx_x03x_xi6x_x1 + ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    scevgepx_xi11x_x1 := fenc[tmp31]
    tmp32 := (i_stride + xx_x03x_xi6x_x1)
    scevgep14x_xi9x_x1 := pix3[tmp32]
    // load 
    iNsTr_256 := ->(scevgepx_xi11x_x1) 
    iNsTr_257 := ($cast ($uint<32>) iNsTr_256)
    // load 
    iNsTr_258 := ->(scevgep14x_xi9x_x1) 
    iNsTr_259 := ($cast ($uint<32>) iNsTr_258)
    iNsTr_260 := (iNsTr_257 - iNsTr_259)
    // compare instruction
    isposx_xi12x_x1 := ( ($bitcast ( $int<32>) iNsTr_260) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xi13x_x1 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_260)
    iNsTr_261 := ( $mux isposx_xi12x_x1 iNsTr_260 negx_xi13x_x1)
    iNsTr_262 := (iNsTr_261 + i_sumx_x02x_xi7x_x1)
    iNsTr_263 := (xx_x03x_xi6x_x1 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond30 := (iNsTr_263 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond30 $then  $place [xx_x_crit_edgex_xi16_xx_x_crit_edgex_xi16x_x1x_xpreheader] $else $place [xx_x_crit_edgex_xi16_xx_x_crit_edgex_xi16] $endif 
    //begin: basic-block xx_x_crit_edgex_xi16x_x1x_xpreheader
    $merge xx_x_crit_edgex_xi16_xx_x_crit_edgex_xi16x_x1x_xpreheader
    $phi xx_xlcssa29 :=  ( $cast ($uint<32>) iNsTr_262) $on xx_x_crit_edgex_xi16_xx_x_crit_edgex_xi16x_x1x_xpreheader 
    $endmerge
    tmp27 := (i_stride * ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    $place [xx_x_crit_edgex_xi16x_x1x_xpreheader_xx_x_crit_edgex_xi16x_x1]
    //begin: basic-block xx_x_crit_edgex_xi16x_x1
    $merge xx_x_crit_edgex_xi16x_x1_xx_x_crit_edgex_xi16x_x1 xx_x_crit_edgex_xi16x_x1x_xpreheader_xx_x_crit_edgex_xi16x_x1
    $phi xx_x03x_xi6x_x2 :=  ( $cast ($uint<32>) iNsTr_273) $on xx_x_crit_edgex_xi16x_x1_xx_x_crit_edgex_xi16x_x1 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on xx_x_crit_edgex_xi16x_x1x_xpreheader_xx_x_crit_edgex_xi16x_x1 
    $phi i_sumx_x02x_xi7x_x2 :=  ( $cast ($uint<32>) iNsTr_272) $on xx_x_crit_edgex_xi16x_x1_xx_x_crit_edgex_xi16x_x1 ( $cast ($uint<32>) xx_xlcssa29) $on xx_x_crit_edgex_xi16x_x1x_xpreheader_xx_x_crit_edgex_xi16x_x1 
    $endmerge
    tmp26 := (xx_x03x_xi6x_x2 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    scevgepx_xi11x_x2 := fenc[tmp26]
    tmp28 := (tmp27 + xx_x03x_xi6x_x2)
    scevgep14x_xi9x_x2 := pix3[tmp28]
    // load 
    iNsTr_266 := ->(scevgepx_xi11x_x2) 
    iNsTr_267 := ($cast ($uint<32>) iNsTr_266)
    // load 
    iNsTr_268 := ->(scevgep14x_xi9x_x2) 
    iNsTr_269 := ($cast ($uint<32>) iNsTr_268)
    iNsTr_270 := (iNsTr_267 - iNsTr_269)
    // compare instruction
    isposx_xi12x_x2 := ( ($bitcast ( $int<32>) iNsTr_270) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xi13x_x2 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_270)
    iNsTr_271 := ( $mux isposx_xi12x_x2 iNsTr_270 negx_xi13x_x2)
    iNsTr_272 := (iNsTr_271 + i_sumx_x02x_xi7x_x2)
    iNsTr_273 := (xx_x03x_xi6x_x2 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond25 := (iNsTr_273 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond25 $then  $place [xx_x_crit_edgex_xi16x_x1_xx_x_crit_edgex_xi16x_x2x_xpreheader] $else $place [xx_x_crit_edgex_xi16x_x1_xx_x_crit_edgex_xi16x_x1] $endif 
    //begin: basic-block xx_x_crit_edgex_xi16x_x2x_xpreheader
    $merge xx_x_crit_edgex_xi16x_x1_xx_x_crit_edgex_xi16x_x2x_xpreheader
    $phi xx_xlcssa24 :=  ( $cast ($uint<32>) iNsTr_272) $on xx_x_crit_edgex_xi16x_x1_xx_x_crit_edgex_xi16x_x2x_xpreheader 
    $endmerge
    tmp22 := (i_stride * ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    $place [xx_x_crit_edgex_xi16x_x2x_xpreheader_xx_x_crit_edgex_xi16x_x2]
    //begin: basic-block xx_x_crit_edgex_xi16x_x2
    $merge xx_x_crit_edgex_xi16x_x2_xx_x_crit_edgex_xi16x_x2 xx_x_crit_edgex_xi16x_x2x_xpreheader_xx_x_crit_edgex_xi16x_x2
    $phi xx_x03x_xi6x_x3 :=  ( $cast ($uint<32>) iNsTr_283) $on xx_x_crit_edgex_xi16x_x2_xx_x_crit_edgex_xi16x_x2 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on xx_x_crit_edgex_xi16x_x2x_xpreheader_xx_x_crit_edgex_xi16x_x2 
    $phi i_sumx_x02x_xi7x_x3 :=  ( $cast ($uint<32>) iNsTr_282) $on xx_x_crit_edgex_xi16x_x2_xx_x_crit_edgex_xi16x_x2 ( $cast ($uint<32>) xx_xlcssa24) $on xx_x_crit_edgex_xi16x_x2x_xpreheader_xx_x_crit_edgex_xi16x_x2 
    $endmerge
    tmp21 := (xx_x03x_xi6x_x3 + ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 ) )
    scevgepx_xi11x_x3 := fenc[tmp21]
    tmp23 := (tmp22 + xx_x03x_xi6x_x3)
    scevgep14x_xi9x_x3 := pix3[tmp23]
    // load 
    iNsTr_276 := ->(scevgepx_xi11x_x3) 
    iNsTr_277 := ($cast ($uint<32>) iNsTr_276)
    // load 
    iNsTr_278 := ->(scevgep14x_xi9x_x3) 
    iNsTr_279 := ($cast ($uint<32>) iNsTr_278)
    iNsTr_280 := (iNsTr_277 - iNsTr_279)
    // compare instruction
    isposx_xi12x_x3 := ( ($bitcast ( $int<32>) iNsTr_280) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xi13x_x3 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_280)
    iNsTr_281 := ( $mux isposx_xi12x_x3 iNsTr_280 negx_xi13x_x3)
    iNsTr_282 := (iNsTr_281 + i_sumx_x02x_xi7x_x3)
    iNsTr_283 := (xx_x03x_xi6x_x3 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond20 := (iNsTr_283 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond20 $then  $place [xx_x_crit_edgex_xi16x_x2_xx_x_crit_edgex_xi16x_x3x_xpreheader] $else $place [xx_x_crit_edgex_xi16x_x2_xx_x_crit_edgex_xi16x_x2] $endif 
    //begin: basic-block xx_x_crit_edgex_xi16x_x3x_xpreheader
    $merge xx_x_crit_edgex_xi16x_x2_xx_x_crit_edgex_xi16x_x3x_xpreheader
    $phi xx_xlcssa19 :=  ( $cast ($uint<32>) iNsTr_282) $on xx_x_crit_edgex_xi16x_x2_xx_x_crit_edgex_xi16x_x3x_xpreheader 
    $endmerge
    tmp17 := (i_stride * ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    $place [xx_x_crit_edgex_xi16x_x3x_xpreheader_xx_x_crit_edgex_xi16x_x3]
    //begin: basic-block xx_x_crit_edgex_xi16x_x3
    $merge xx_x_crit_edgex_xi16x_x3_xx_x_crit_edgex_xi16x_x3 xx_x_crit_edgex_xi16x_x3x_xpreheader_xx_x_crit_edgex_xi16x_x3
    $phi xx_x03x_xi6x_x4 :=  ( $cast ($uint<32>) iNsTr_293) $on xx_x_crit_edgex_xi16x_x3_xx_x_crit_edgex_xi16x_x3 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on xx_x_crit_edgex_xi16x_x3x_xpreheader_xx_x_crit_edgex_xi16x_x3 
    $phi i_sumx_x02x_xi7x_x4 :=  ( $cast ($uint<32>) iNsTr_292) $on xx_x_crit_edgex_xi16x_x3_xx_x_crit_edgex_xi16x_x3 ( $cast ($uint<32>) xx_xlcssa19) $on xx_x_crit_edgex_xi16x_x3x_xpreheader_xx_x_crit_edgex_xi16x_x3 
    $endmerge
    tmp16 := (xx_x03x_xi6x_x4 + ( $bitcast ($uint<32> ) _b00000000000000000000000001000000 ) )
    scevgepx_xi11x_x4 := fenc[tmp16]
    tmp18 := (tmp17 + xx_x03x_xi6x_x4)
    scevgep14x_xi9x_x4 := pix3[tmp18]
    // load 
    iNsTr_286 := ->(scevgepx_xi11x_x4) 
    iNsTr_287 := ($cast ($uint<32>) iNsTr_286)
    // load 
    iNsTr_288 := ->(scevgep14x_xi9x_x4) 
    iNsTr_289 := ($cast ($uint<32>) iNsTr_288)
    iNsTr_290 := (iNsTr_287 - iNsTr_289)
    // compare instruction
    isposx_xi12x_x4 := ( ($bitcast ( $int<32>) iNsTr_290) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xi13x_x4 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_290)
    iNsTr_291 := ( $mux isposx_xi12x_x4 iNsTr_290 negx_xi13x_x4)
    iNsTr_292 := (iNsTr_291 + i_sumx_x02x_xi7x_x4)
    iNsTr_293 := (xx_x03x_xi6x_x4 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond15 := (iNsTr_293 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond15 $then  $place [xx_x_crit_edgex_xi16x_x3_xx_x_crit_edgex_xi16x_x4x_xpreheader] $else $place [xx_x_crit_edgex_xi16x_x3_xx_x_crit_edgex_xi16x_x3] $endif 
    //begin: basic-block xx_x_crit_edgex_xi16x_x4x_xpreheader
    $merge xx_x_crit_edgex_xi16x_x3_xx_x_crit_edgex_xi16x_x4x_xpreheader
    $phi xx_xlcssa14 :=  ( $cast ($uint<32>) iNsTr_292) $on xx_x_crit_edgex_xi16x_x3_xx_x_crit_edgex_xi16x_x4x_xpreheader 
    $endmerge
    tmp12 := (i_stride * ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) )
    $place [xx_x_crit_edgex_xi16x_x4x_xpreheader_xx_x_crit_edgex_xi16x_x4]
    //begin: basic-block xx_x_crit_edgex_xi16x_x4
    $merge xx_x_crit_edgex_xi16x_x4_xx_x_crit_edgex_xi16x_x4 xx_x_crit_edgex_xi16x_x4x_xpreheader_xx_x_crit_edgex_xi16x_x4
    $phi xx_x03x_xi6x_x5 :=  ( $cast ($uint<32>) iNsTr_303) $on xx_x_crit_edgex_xi16x_x4_xx_x_crit_edgex_xi16x_x4 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on xx_x_crit_edgex_xi16x_x4x_xpreheader_xx_x_crit_edgex_xi16x_x4 
    $phi i_sumx_x02x_xi7x_x5 :=  ( $cast ($uint<32>) iNsTr_302) $on xx_x_crit_edgex_xi16x_x4_xx_x_crit_edgex_xi16x_x4 ( $cast ($uint<32>) xx_xlcssa14) $on xx_x_crit_edgex_xi16x_x4x_xpreheader_xx_x_crit_edgex_xi16x_x4 
    $endmerge
    tmp11 := (xx_x03x_xi6x_x5 + ( $bitcast ($uint<32> ) _b00000000000000000000000001010000 ) )
    scevgepx_xi11x_x5 := fenc[tmp11]
    tmp13 := (tmp12 + xx_x03x_xi6x_x5)
    scevgep14x_xi9x_x5 := pix3[tmp13]
    // load 
    iNsTr_296 := ->(scevgepx_xi11x_x5) 
    iNsTr_297 := ($cast ($uint<32>) iNsTr_296)
    // load 
    iNsTr_298 := ->(scevgep14x_xi9x_x5) 
    iNsTr_299 := ($cast ($uint<32>) iNsTr_298)
    iNsTr_300 := (iNsTr_297 - iNsTr_299)
    // compare instruction
    isposx_xi12x_x5 := ( ($bitcast ( $int<32>) iNsTr_300) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xi13x_x5 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_300)
    iNsTr_301 := ( $mux isposx_xi12x_x5 iNsTr_300 negx_xi13x_x5)
    iNsTr_302 := (iNsTr_301 + i_sumx_x02x_xi7x_x5)
    iNsTr_303 := (xx_x03x_xi6x_x5 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond10 := (iNsTr_303 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond10 $then  $place [xx_x_crit_edgex_xi16x_x4_xx_x_crit_edgex_xi16x_x5x_xpreheader] $else $place [xx_x_crit_edgex_xi16x_x4_xx_x_crit_edgex_xi16x_x4] $endif 
    //begin: basic-block xx_x_crit_edgex_xi16x_x5x_xpreheader
    $merge xx_x_crit_edgex_xi16x_x4_xx_x_crit_edgex_xi16x_x5x_xpreheader
    $phi xx_xlcssa9 :=  ( $cast ($uint<32>) iNsTr_302) $on xx_x_crit_edgex_xi16x_x4_xx_x_crit_edgex_xi16x_x5x_xpreheader 
    $endmerge
    tmp7 := (i_stride * ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    $place [xx_x_crit_edgex_xi16x_x5x_xpreheader_xx_x_crit_edgex_xi16x_x5]
    //begin: basic-block xx_x_crit_edgex_xi16x_x5
    $merge xx_x_crit_edgex_xi16x_x5_xx_x_crit_edgex_xi16x_x5 xx_x_crit_edgex_xi16x_x5x_xpreheader_xx_x_crit_edgex_xi16x_x5
    $phi xx_x03x_xi6x_x6 :=  ( $cast ($uint<32>) iNsTr_313) $on xx_x_crit_edgex_xi16x_x5_xx_x_crit_edgex_xi16x_x5 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on xx_x_crit_edgex_xi16x_x5x_xpreheader_xx_x_crit_edgex_xi16x_x5 
    $phi i_sumx_x02x_xi7x_x6 :=  ( $cast ($uint<32>) iNsTr_312) $on xx_x_crit_edgex_xi16x_x5_xx_x_crit_edgex_xi16x_x5 ( $cast ($uint<32>) xx_xlcssa9) $on xx_x_crit_edgex_xi16x_x5x_xpreheader_xx_x_crit_edgex_xi16x_x5 
    $endmerge
    tmp6 := (xx_x03x_xi6x_x6 + ( $bitcast ($uint<32> ) _b00000000000000000000000001100000 ) )
    scevgepx_xi11x_x6 := fenc[tmp6]
    tmp8 := (tmp7 + xx_x03x_xi6x_x6)
    scevgep14x_xi9x_x6 := pix3[tmp8]
    // load 
    iNsTr_306 := ->(scevgepx_xi11x_x6) 
    iNsTr_307 := ($cast ($uint<32>) iNsTr_306)
    // load 
    iNsTr_308 := ->(scevgep14x_xi9x_x6) 
    iNsTr_309 := ($cast ($uint<32>) iNsTr_308)
    iNsTr_310 := (iNsTr_307 - iNsTr_309)
    // compare instruction
    isposx_xi12x_x6 := ( ($bitcast ( $int<32>) iNsTr_310) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xi13x_x6 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_310)
    iNsTr_311 := ( $mux isposx_xi12x_x6 iNsTr_310 negx_xi13x_x6)
    iNsTr_312 := (iNsTr_311 + i_sumx_x02x_xi7x_x6)
    iNsTr_313 := (xx_x03x_xi6x_x6 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond5 := (iNsTr_313 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond5 $then  $place [xx_x_crit_edgex_xi16x_x5_xx_x_crit_edgex_xi16x_x6x_xpreheader] $else $place [xx_x_crit_edgex_xi16x_x5_xx_x_crit_edgex_xi16x_x5] $endif 
    //begin: basic-block xx_x_crit_edgex_xi16x_x6x_xpreheader
    $merge xx_x_crit_edgex_xi16x_x5_xx_x_crit_edgex_xi16x_x6x_xpreheader
    $phi xx_xlcssa4 :=  ( $cast ($uint<32>) iNsTr_312) $on xx_x_crit_edgex_xi16x_x5_xx_x_crit_edgex_xi16x_x6x_xpreheader 
    $endmerge
    tmp2 := (i_stride * ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    $place [xx_x_crit_edgex_xi16x_x6x_xpreheader_xx_x_crit_edgex_xi16x_x6]
    //begin: basic-block xx_x_crit_edgex_xi16x_x7
    $merge xx_x_crit_edgex_xi16x_x6_xx_x_crit_edgex_xi16x_x7
    $phi xx_xlcssa :=  ( $cast ($uint<32>) iNsTr_322) $on xx_x_crit_edgex_xi16x_x6_xx_x_crit_edgex_xi16x_x7 
    $endmerge
    iNsTr_325 := scores[( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    ->(iNsTr_325) := xx_xlcssa
    $place [return__]
    //begin: basic-block xx_x_crit_edgex_xi16x_x6
    $merge xx_x_crit_edgex_xi16x_x6_xx_x_crit_edgex_xi16x_x6 xx_x_crit_edgex_xi16x_x6x_xpreheader_xx_x_crit_edgex_xi16x_x6
    $phi xx_x03x_xi6x_x7 :=  ( $cast ($uint<32>) iNsTr_323) $on xx_x_crit_edgex_xi16x_x6_xx_x_crit_edgex_xi16x_x6 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on xx_x_crit_edgex_xi16x_x6x_xpreheader_xx_x_crit_edgex_xi16x_x6 
    $phi i_sumx_x02x_xi7x_x7 :=  ( $cast ($uint<32>) iNsTr_322) $on xx_x_crit_edgex_xi16x_x6_xx_x_crit_edgex_xi16x_x6 ( $cast ($uint<32>) xx_xlcssa4) $on xx_x_crit_edgex_xi16x_x6x_xpreheader_xx_x_crit_edgex_xi16x_x6 
    $endmerge
    tmp := (xx_x03x_xi6x_x7 + ( $bitcast ($uint<32> ) _b00000000000000000000000001110000 ) )
    scevgepx_xi11x_x7 := fenc[tmp]
    tmp3 := (tmp2 + xx_x03x_xi6x_x7)
    scevgep14x_xi9x_x7 := pix3[tmp3]
    // load 
    iNsTr_316 := ->(scevgepx_xi11x_x7) 
    iNsTr_317 := ($cast ($uint<32>) iNsTr_316)
    // load 
    iNsTr_318 := ->(scevgep14x_xi9x_x7) 
    iNsTr_319 := ($cast ($uint<32>) iNsTr_318)
    iNsTr_320 := (iNsTr_317 - iNsTr_319)
    // compare instruction
    isposx_xi12x_x7 := ( ($bitcast ( $int<32>) iNsTr_320) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xi13x_x7 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_320)
    iNsTr_321 := ( $mux isposx_xi12x_x7 iNsTr_320 negx_xi13x_x7)
    iNsTr_322 := (iNsTr_321 + i_sumx_x02x_xi7x_x7)
    iNsTr_323 := (xx_x03x_xi6x_x7 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (iNsTr_323 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond1 $then  $place [xx_x_crit_edgex_xi16x_x6_xx_x_crit_edgex_xi16x_x7] $else $place [xx_x_crit_edgex_xi16x_x6_xx_x_crit_edgex_xi16x_x6] $endif 
    //begin: basic-block xx_x_crit_edgex_xi33
    $merge xx_x_crit_edgex_xi33_xx_x_crit_edgex_xi33 xx_x_crit_edgex_xi33x_xpreheader_xx_x_crit_edgex_xi33
    $phi xx_x03x_xi23x_x1 :=  ( $cast ($uint<32>) iNsTr_181) $on xx_x_crit_edgex_xi33_xx_x_crit_edgex_xi33 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on xx_x_crit_edgex_xi33x_xpreheader_xx_x_crit_edgex_xi33 
    $phi i_sumx_x02x_xi24x_x1 :=  ( $cast ($uint<32>) iNsTr_180) $on xx_x_crit_edgex_xi33_xx_x_crit_edgex_xi33 ( $cast ($uint<32>) xx_xlcssa68) $on xx_x_crit_edgex_xi33x_xpreheader_xx_x_crit_edgex_xi33 
    $endmerge
    tmp66 := (xx_x03x_xi23x_x1 + ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    scevgepx_xi28x_x1 := fenc[tmp66]
    tmp67 := (i_stride + xx_x03x_xi23x_x1)
    scevgep14x_xi26x_x1 := pix2[tmp67]
    // load 
    iNsTr_174 := ->(scevgepx_xi28x_x1) 
    iNsTr_175 := ($cast ($uint<32>) iNsTr_174)
    // load 
    iNsTr_176 := ->(scevgep14x_xi26x_x1) 
    iNsTr_177 := ($cast ($uint<32>) iNsTr_176)
    iNsTr_178 := (iNsTr_175 - iNsTr_177)
    // compare instruction
    isposx_xi29x_x1 := ( ($bitcast ( $int<32>) iNsTr_178) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xi30x_x1 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_178)
    iNsTr_179 := ( $mux isposx_xi29x_x1 iNsTr_178 negx_xi30x_x1)
    iNsTr_180 := (iNsTr_179 + i_sumx_x02x_xi24x_x1)
    iNsTr_181 := (xx_x03x_xi23x_x1 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond65 := (iNsTr_181 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond65 $then  $place [xx_x_crit_edgex_xi33_xx_x_crit_edgex_xi33x_x1x_xpreheader] $else $place [xx_x_crit_edgex_xi33_xx_x_crit_edgex_xi33] $endif 
    //begin: basic-block xx_x_crit_edgex_xi33x_x1x_xpreheader
    $merge xx_x_crit_edgex_xi33_xx_x_crit_edgex_xi33x_x1x_xpreheader
    $phi xx_xlcssa64 :=  ( $cast ($uint<32>) iNsTr_180) $on xx_x_crit_edgex_xi33_xx_x_crit_edgex_xi33x_x1x_xpreheader 
    $endmerge
    tmp62 := (i_stride * ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    $place [xx_x_crit_edgex_xi33x_x1x_xpreheader_xx_x_crit_edgex_xi33x_x1]
    //begin: basic-block xx_x_crit_edgex_xi33x_x1
    $merge xx_x_crit_edgex_xi33x_x1_xx_x_crit_edgex_xi33x_x1 xx_x_crit_edgex_xi33x_x1x_xpreheader_xx_x_crit_edgex_xi33x_x1
    $phi xx_x03x_xi23x_x2 :=  ( $cast ($uint<32>) iNsTr_191) $on xx_x_crit_edgex_xi33x_x1_xx_x_crit_edgex_xi33x_x1 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on xx_x_crit_edgex_xi33x_x1x_xpreheader_xx_x_crit_edgex_xi33x_x1 
    $phi i_sumx_x02x_xi24x_x2 :=  ( $cast ($uint<32>) iNsTr_190) $on xx_x_crit_edgex_xi33x_x1_xx_x_crit_edgex_xi33x_x1 ( $cast ($uint<32>) xx_xlcssa64) $on xx_x_crit_edgex_xi33x_x1x_xpreheader_xx_x_crit_edgex_xi33x_x1 
    $endmerge
    tmp61 := (xx_x03x_xi23x_x2 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    scevgepx_xi28x_x2 := fenc[tmp61]
    tmp63 := (tmp62 + xx_x03x_xi23x_x2)
    scevgep14x_xi26x_x2 := pix2[tmp63]
    // load 
    iNsTr_184 := ->(scevgepx_xi28x_x2) 
    iNsTr_185 := ($cast ($uint<32>) iNsTr_184)
    // load 
    iNsTr_186 := ->(scevgep14x_xi26x_x2) 
    iNsTr_187 := ($cast ($uint<32>) iNsTr_186)
    iNsTr_188 := (iNsTr_185 - iNsTr_187)
    // compare instruction
    isposx_xi29x_x2 := ( ($bitcast ( $int<32>) iNsTr_188) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xi30x_x2 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_188)
    iNsTr_189 := ( $mux isposx_xi29x_x2 iNsTr_188 negx_xi30x_x2)
    iNsTr_190 := (iNsTr_189 + i_sumx_x02x_xi24x_x2)
    iNsTr_191 := (xx_x03x_xi23x_x2 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond60 := (iNsTr_191 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond60 $then  $place [xx_x_crit_edgex_xi33x_x1_xx_x_crit_edgex_xi33x_x2x_xpreheader] $else $place [xx_x_crit_edgex_xi33x_x1_xx_x_crit_edgex_xi33x_x1] $endif 
    //begin: basic-block xx_x_crit_edgex_xi33x_x2x_xpreheader
    $merge xx_x_crit_edgex_xi33x_x1_xx_x_crit_edgex_xi33x_x2x_xpreheader
    $phi xx_xlcssa59 :=  ( $cast ($uint<32>) iNsTr_190) $on xx_x_crit_edgex_xi33x_x1_xx_x_crit_edgex_xi33x_x2x_xpreheader 
    $endmerge
    tmp57 := (i_stride * ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    $place [xx_x_crit_edgex_xi33x_x2x_xpreheader_xx_x_crit_edgex_xi33x_x2]
    //begin: basic-block xx_x_crit_edgex_xi33x_x2
    $merge xx_x_crit_edgex_xi33x_x2_xx_x_crit_edgex_xi33x_x2 xx_x_crit_edgex_xi33x_x2x_xpreheader_xx_x_crit_edgex_xi33x_x2
    $phi xx_x03x_xi23x_x3 :=  ( $cast ($uint<32>) iNsTr_201) $on xx_x_crit_edgex_xi33x_x2_xx_x_crit_edgex_xi33x_x2 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on xx_x_crit_edgex_xi33x_x2x_xpreheader_xx_x_crit_edgex_xi33x_x2 
    $phi i_sumx_x02x_xi24x_x3 :=  ( $cast ($uint<32>) iNsTr_200) $on xx_x_crit_edgex_xi33x_x2_xx_x_crit_edgex_xi33x_x2 ( $cast ($uint<32>) xx_xlcssa59) $on xx_x_crit_edgex_xi33x_x2x_xpreheader_xx_x_crit_edgex_xi33x_x2 
    $endmerge
    tmp56 := (xx_x03x_xi23x_x3 + ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 ) )
    scevgepx_xi28x_x3 := fenc[tmp56]
    tmp58 := (tmp57 + xx_x03x_xi23x_x3)
    scevgep14x_xi26x_x3 := pix2[tmp58]
    // load 
    iNsTr_194 := ->(scevgepx_xi28x_x3) 
    iNsTr_195 := ($cast ($uint<32>) iNsTr_194)
    // load 
    iNsTr_196 := ->(scevgep14x_xi26x_x3) 
    iNsTr_197 := ($cast ($uint<32>) iNsTr_196)
    iNsTr_198 := (iNsTr_195 - iNsTr_197)
    // compare instruction
    isposx_xi29x_x3 := ( ($bitcast ( $int<32>) iNsTr_198) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xi30x_x3 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_198)
    iNsTr_199 := ( $mux isposx_xi29x_x3 iNsTr_198 negx_xi30x_x3)
    iNsTr_200 := (iNsTr_199 + i_sumx_x02x_xi24x_x3)
    iNsTr_201 := (xx_x03x_xi23x_x3 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond55 := (iNsTr_201 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond55 $then  $place [xx_x_crit_edgex_xi33x_x2_xx_x_crit_edgex_xi33x_x3x_xpreheader] $else $place [xx_x_crit_edgex_xi33x_x2_xx_x_crit_edgex_xi33x_x2] $endif 
    //begin: basic-block xx_x_crit_edgex_xi33x_x3x_xpreheader
    $merge xx_x_crit_edgex_xi33x_x2_xx_x_crit_edgex_xi33x_x3x_xpreheader
    $phi xx_xlcssa54 :=  ( $cast ($uint<32>) iNsTr_200) $on xx_x_crit_edgex_xi33x_x2_xx_x_crit_edgex_xi33x_x3x_xpreheader 
    $endmerge
    tmp52 := (i_stride * ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    $place [xx_x_crit_edgex_xi33x_x3x_xpreheader_xx_x_crit_edgex_xi33x_x3]
    //begin: basic-block xx_x_crit_edgex_xi33x_x3
    $merge xx_x_crit_edgex_xi33x_x3_xx_x_crit_edgex_xi33x_x3 xx_x_crit_edgex_xi33x_x3x_xpreheader_xx_x_crit_edgex_xi33x_x3
    $phi xx_x03x_xi23x_x4 :=  ( $cast ($uint<32>) iNsTr_211) $on xx_x_crit_edgex_xi33x_x3_xx_x_crit_edgex_xi33x_x3 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on xx_x_crit_edgex_xi33x_x3x_xpreheader_xx_x_crit_edgex_xi33x_x3 
    $phi i_sumx_x02x_xi24x_x4 :=  ( $cast ($uint<32>) iNsTr_210) $on xx_x_crit_edgex_xi33x_x3_xx_x_crit_edgex_xi33x_x3 ( $cast ($uint<32>) xx_xlcssa54) $on xx_x_crit_edgex_xi33x_x3x_xpreheader_xx_x_crit_edgex_xi33x_x3 
    $endmerge
    tmp51 := (xx_x03x_xi23x_x4 + ( $bitcast ($uint<32> ) _b00000000000000000000000001000000 ) )
    scevgepx_xi28x_x4 := fenc[tmp51]
    tmp53 := (tmp52 + xx_x03x_xi23x_x4)
    scevgep14x_xi26x_x4 := pix2[tmp53]
    // load 
    iNsTr_204 := ->(scevgepx_xi28x_x4) 
    iNsTr_205 := ($cast ($uint<32>) iNsTr_204)
    // load 
    iNsTr_206 := ->(scevgep14x_xi26x_x4) 
    iNsTr_207 := ($cast ($uint<32>) iNsTr_206)
    iNsTr_208 := (iNsTr_205 - iNsTr_207)
    // compare instruction
    isposx_xi29x_x4 := ( ($bitcast ( $int<32>) iNsTr_208) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xi30x_x4 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_208)
    iNsTr_209 := ( $mux isposx_xi29x_x4 iNsTr_208 negx_xi30x_x4)
    iNsTr_210 := (iNsTr_209 + i_sumx_x02x_xi24x_x4)
    iNsTr_211 := (xx_x03x_xi23x_x4 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond50 := (iNsTr_211 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond50 $then  $place [xx_x_crit_edgex_xi33x_x3_xx_x_crit_edgex_xi33x_x4x_xpreheader] $else $place [xx_x_crit_edgex_xi33x_x3_xx_x_crit_edgex_xi33x_x3] $endif 
    //begin: basic-block xx_x_crit_edgex_xi33x_x4x_xpreheader
    $merge xx_x_crit_edgex_xi33x_x3_xx_x_crit_edgex_xi33x_x4x_xpreheader
    $phi xx_xlcssa49 :=  ( $cast ($uint<32>) iNsTr_210) $on xx_x_crit_edgex_xi33x_x3_xx_x_crit_edgex_xi33x_x4x_xpreheader 
    $endmerge
    tmp47 := (i_stride * ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) )
    $place [xx_x_crit_edgex_xi33x_x4x_xpreheader_xx_x_crit_edgex_xi33x_x4]
    //begin: basic-block xx_x_crit_edgex_xi33x_x4
    $merge xx_x_crit_edgex_xi33x_x4_xx_x_crit_edgex_xi33x_x4 xx_x_crit_edgex_xi33x_x4x_xpreheader_xx_x_crit_edgex_xi33x_x4
    $phi xx_x03x_xi23x_x5 :=  ( $cast ($uint<32>) iNsTr_221) $on xx_x_crit_edgex_xi33x_x4_xx_x_crit_edgex_xi33x_x4 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on xx_x_crit_edgex_xi33x_x4x_xpreheader_xx_x_crit_edgex_xi33x_x4 
    $phi i_sumx_x02x_xi24x_x5 :=  ( $cast ($uint<32>) iNsTr_220) $on xx_x_crit_edgex_xi33x_x4_xx_x_crit_edgex_xi33x_x4 ( $cast ($uint<32>) xx_xlcssa49) $on xx_x_crit_edgex_xi33x_x4x_xpreheader_xx_x_crit_edgex_xi33x_x4 
    $endmerge
    tmp46 := (xx_x03x_xi23x_x5 + ( $bitcast ($uint<32> ) _b00000000000000000000000001010000 ) )
    scevgepx_xi28x_x5 := fenc[tmp46]
    tmp48 := (tmp47 + xx_x03x_xi23x_x5)
    scevgep14x_xi26x_x5 := pix2[tmp48]
    // load 
    iNsTr_214 := ->(scevgepx_xi28x_x5) 
    iNsTr_215 := ($cast ($uint<32>) iNsTr_214)
    // load 
    iNsTr_216 := ->(scevgep14x_xi26x_x5) 
    iNsTr_217 := ($cast ($uint<32>) iNsTr_216)
    iNsTr_218 := (iNsTr_215 - iNsTr_217)
    // compare instruction
    isposx_xi29x_x5 := ( ($bitcast ( $int<32>) iNsTr_218) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xi30x_x5 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_218)
    iNsTr_219 := ( $mux isposx_xi29x_x5 iNsTr_218 negx_xi30x_x5)
    iNsTr_220 := (iNsTr_219 + i_sumx_x02x_xi24x_x5)
    iNsTr_221 := (xx_x03x_xi23x_x5 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond45 := (iNsTr_221 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond45 $then  $place [xx_x_crit_edgex_xi33x_x4_xx_x_crit_edgex_xi33x_x5x_xpreheader] $else $place [xx_x_crit_edgex_xi33x_x4_xx_x_crit_edgex_xi33x_x4] $endif 
    //begin: basic-block xx_x_crit_edgex_xi33x_x5x_xpreheader
    $merge xx_x_crit_edgex_xi33x_x4_xx_x_crit_edgex_xi33x_x5x_xpreheader
    $phi xx_xlcssa44 :=  ( $cast ($uint<32>) iNsTr_220) $on xx_x_crit_edgex_xi33x_x4_xx_x_crit_edgex_xi33x_x5x_xpreheader 
    $endmerge
    tmp42 := (i_stride * ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    $place [xx_x_crit_edgex_xi33x_x5x_xpreheader_xx_x_crit_edgex_xi33x_x5]
    //begin: basic-block xx_x_crit_edgex_xi33x_x5
    $merge xx_x_crit_edgex_xi33x_x5_xx_x_crit_edgex_xi33x_x5 xx_x_crit_edgex_xi33x_x5x_xpreheader_xx_x_crit_edgex_xi33x_x5
    $phi xx_x03x_xi23x_x6 :=  ( $cast ($uint<32>) iNsTr_231) $on xx_x_crit_edgex_xi33x_x5_xx_x_crit_edgex_xi33x_x5 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on xx_x_crit_edgex_xi33x_x5x_xpreheader_xx_x_crit_edgex_xi33x_x5 
    $phi i_sumx_x02x_xi24x_x6 :=  ( $cast ($uint<32>) iNsTr_230) $on xx_x_crit_edgex_xi33x_x5_xx_x_crit_edgex_xi33x_x5 ( $cast ($uint<32>) xx_xlcssa44) $on xx_x_crit_edgex_xi33x_x5x_xpreheader_xx_x_crit_edgex_xi33x_x5 
    $endmerge
    tmp41 := (xx_x03x_xi23x_x6 + ( $bitcast ($uint<32> ) _b00000000000000000000000001100000 ) )
    scevgepx_xi28x_x6 := fenc[tmp41]
    tmp43 := (tmp42 + xx_x03x_xi23x_x6)
    scevgep14x_xi26x_x6 := pix2[tmp43]
    // load 
    iNsTr_224 := ->(scevgepx_xi28x_x6) 
    iNsTr_225 := ($cast ($uint<32>) iNsTr_224)
    // load 
    iNsTr_226 := ->(scevgep14x_xi26x_x6) 
    iNsTr_227 := ($cast ($uint<32>) iNsTr_226)
    iNsTr_228 := (iNsTr_225 - iNsTr_227)
    // compare instruction
    isposx_xi29x_x6 := ( ($bitcast ( $int<32>) iNsTr_228) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xi30x_x6 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_228)
    iNsTr_229 := ( $mux isposx_xi29x_x6 iNsTr_228 negx_xi30x_x6)
    iNsTr_230 := (iNsTr_229 + i_sumx_x02x_xi24x_x6)
    iNsTr_231 := (xx_x03x_xi23x_x6 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond40 := (iNsTr_231 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond40 $then  $place [xx_x_crit_edgex_xi33x_x5_xx_x_crit_edgex_xi33x_x6x_xpreheader] $else $place [xx_x_crit_edgex_xi33x_x5_xx_x_crit_edgex_xi33x_x5] $endif 
    //begin: basic-block xx_x_crit_edgex_xi33x_x6x_xpreheader
    $merge xx_x_crit_edgex_xi33x_x5_xx_x_crit_edgex_xi33x_x6x_xpreheader
    $phi xx_xlcssa39 :=  ( $cast ($uint<32>) iNsTr_230) $on xx_x_crit_edgex_xi33x_x5_xx_x_crit_edgex_xi33x_x6x_xpreheader 
    $endmerge
    tmp37 := (i_stride * ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    $place [xx_x_crit_edgex_xi33x_x6x_xpreheader_xx_x_crit_edgex_xi33x_x6]
    //begin: basic-block xx_x_crit_edgex_xi33x_x7
    $merge xx_x_crit_edgex_xi33x_x6_xx_x_crit_edgex_xi33x_x7
    $phi xx_xlcssa35 :=  ( $cast ($uint<32>) iNsTr_240) $on xx_x_crit_edgex_xi33x_x6_xx_x_crit_edgex_xi33x_x7 
    $endmerge
    iNsTr_243 := scores[( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    ->(iNsTr_243) := xx_xlcssa35
    $place [xx_x_crit_edgex_xi33x_x7_bb_7]
    //begin: basic-block xx_x_crit_edgex_xi33x_x6
    $merge xx_x_crit_edgex_xi33x_x6_xx_x_crit_edgex_xi33x_x6 xx_x_crit_edgex_xi33x_x6x_xpreheader_xx_x_crit_edgex_xi33x_x6
    $phi xx_x03x_xi23x_x7 :=  ( $cast ($uint<32>) iNsTr_241) $on xx_x_crit_edgex_xi33x_x6_xx_x_crit_edgex_xi33x_x6 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on xx_x_crit_edgex_xi33x_x6x_xpreheader_xx_x_crit_edgex_xi33x_x6 
    $phi i_sumx_x02x_xi24x_x7 :=  ( $cast ($uint<32>) iNsTr_240) $on xx_x_crit_edgex_xi33x_x6_xx_x_crit_edgex_xi33x_x6 ( $cast ($uint<32>) xx_xlcssa39) $on xx_x_crit_edgex_xi33x_x6x_xpreheader_xx_x_crit_edgex_xi33x_x6 
    $endmerge
    tmp36 := (xx_x03x_xi23x_x7 + ( $bitcast ($uint<32> ) _b00000000000000000000000001110000 ) )
    scevgepx_xi28x_x7 := fenc[tmp36]
    tmp38 := (tmp37 + xx_x03x_xi23x_x7)
    scevgep14x_xi26x_x7 := pix2[tmp38]
    // load 
    iNsTr_234 := ->(scevgepx_xi28x_x7) 
    iNsTr_235 := ($cast ($uint<32>) iNsTr_234)
    // load 
    iNsTr_236 := ->(scevgep14x_xi26x_x7) 
    iNsTr_237 := ($cast ($uint<32>) iNsTr_236)
    iNsTr_238 := (iNsTr_235 - iNsTr_237)
    // compare instruction
    isposx_xi29x_x7 := ( ($bitcast ( $int<32>) iNsTr_238) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xi30x_x7 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_238)
    iNsTr_239 := ( $mux isposx_xi29x_x7 iNsTr_238 negx_xi30x_x7)
    iNsTr_240 := (iNsTr_239 + i_sumx_x02x_xi24x_x7)
    iNsTr_241 := (xx_x03x_xi23x_x7 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond := (iNsTr_241 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond $then  $place [xx_x_crit_edgex_xi33x_x6_xx_x_crit_edgex_xi33x_x7] $else $place [xx_x_crit_edgex_xi33x_x6_xx_x_crit_edgex_xi33x_x6] $endif 
    //begin: basic-block xx_x_crit_edgex_xi50
    $merge xx_x_crit_edgex_xi50_xx_x_crit_edgex_xi50 xx_x_crit_edgex_xi50x_xpreheader_xx_x_crit_edgex_xi50
    $phi xx_x03x_xi40x_x1 :=  ( $cast ($uint<32>) iNsTr_99) $on xx_x_crit_edgex_xi50_xx_x_crit_edgex_xi50 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on xx_x_crit_edgex_xi50x_xpreheader_xx_x_crit_edgex_xi50 
    $phi i_sumx_x02x_xi41x_x1 :=  ( $cast ($uint<32>) iNsTr_98) $on xx_x_crit_edgex_xi50_xx_x_crit_edgex_xi50 ( $cast ($uint<32>) xx_xlcssa104) $on xx_x_crit_edgex_xi50x_xpreheader_xx_x_crit_edgex_xi50 
    $endmerge
    tmp102 := (xx_x03x_xi40x_x1 + ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    scevgepx_xi45x_x1 := fenc[tmp102]
    tmp103 := (i_stride + xx_x03x_xi40x_x1)
    scevgep14x_xi43x_x1 := pix1[tmp103]
    // load 
    iNsTr_92 := ->(scevgepx_xi45x_x1) 
    iNsTr_93 := ($cast ($uint<32>) iNsTr_92)
    // load 
    iNsTr_94 := ->(scevgep14x_xi43x_x1) 
    iNsTr_95 := ($cast ($uint<32>) iNsTr_94)
    iNsTr_96 := (iNsTr_93 - iNsTr_95)
    // compare instruction
    isposx_xi46x_x1 := ( ($bitcast ( $int<32>) iNsTr_96) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xi47x_x1 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_96)
    iNsTr_97 := ( $mux isposx_xi46x_x1 iNsTr_96 negx_xi47x_x1)
    iNsTr_98 := (iNsTr_97 + i_sumx_x02x_xi41x_x1)
    iNsTr_99 := (xx_x03x_xi40x_x1 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond101 := (iNsTr_99 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond101 $then  $place [xx_x_crit_edgex_xi50_xx_x_crit_edgex_xi50x_x1x_xpreheader] $else $place [xx_x_crit_edgex_xi50_xx_x_crit_edgex_xi50] $endif 
    //begin: basic-block xx_x_crit_edgex_xi50x_x1x_xpreheader
    $merge xx_x_crit_edgex_xi50_xx_x_crit_edgex_xi50x_x1x_xpreheader
    $phi xx_xlcssa100 :=  ( $cast ($uint<32>) iNsTr_98) $on xx_x_crit_edgex_xi50_xx_x_crit_edgex_xi50x_x1x_xpreheader 
    $endmerge
    tmp98 := (i_stride * ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    $place [xx_x_crit_edgex_xi50x_x1x_xpreheader_xx_x_crit_edgex_xi50x_x1]
    //begin: basic-block xx_x_crit_edgex_xi50x_x1
    $merge xx_x_crit_edgex_xi50x_x1_xx_x_crit_edgex_xi50x_x1 xx_x_crit_edgex_xi50x_x1x_xpreheader_xx_x_crit_edgex_xi50x_x1
    $phi xx_x03x_xi40x_x2 :=  ( $cast ($uint<32>) iNsTr_109) $on xx_x_crit_edgex_xi50x_x1_xx_x_crit_edgex_xi50x_x1 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on xx_x_crit_edgex_xi50x_x1x_xpreheader_xx_x_crit_edgex_xi50x_x1 
    $phi i_sumx_x02x_xi41x_x2 :=  ( $cast ($uint<32>) iNsTr_108) $on xx_x_crit_edgex_xi50x_x1_xx_x_crit_edgex_xi50x_x1 ( $cast ($uint<32>) xx_xlcssa100) $on xx_x_crit_edgex_xi50x_x1x_xpreheader_xx_x_crit_edgex_xi50x_x1 
    $endmerge
    tmp97 := (xx_x03x_xi40x_x2 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    scevgepx_xi45x_x2 := fenc[tmp97]
    tmp99 := (tmp98 + xx_x03x_xi40x_x2)
    scevgep14x_xi43x_x2 := pix1[tmp99]
    // load 
    iNsTr_102 := ->(scevgepx_xi45x_x2) 
    iNsTr_103 := ($cast ($uint<32>) iNsTr_102)
    // load 
    iNsTr_104 := ->(scevgep14x_xi43x_x2) 
    iNsTr_105 := ($cast ($uint<32>) iNsTr_104)
    iNsTr_106 := (iNsTr_103 - iNsTr_105)
    // compare instruction
    isposx_xi46x_x2 := ( ($bitcast ( $int<32>) iNsTr_106) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xi47x_x2 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_106)
    iNsTr_107 := ( $mux isposx_xi46x_x2 iNsTr_106 negx_xi47x_x2)
    iNsTr_108 := (iNsTr_107 + i_sumx_x02x_xi41x_x2)
    iNsTr_109 := (xx_x03x_xi40x_x2 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond96 := (iNsTr_109 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond96 $then  $place [xx_x_crit_edgex_xi50x_x1_xx_x_crit_edgex_xi50x_x2x_xpreheader] $else $place [xx_x_crit_edgex_xi50x_x1_xx_x_crit_edgex_xi50x_x1] $endif 
    //begin: basic-block xx_x_crit_edgex_xi50x_x2x_xpreheader
    $merge xx_x_crit_edgex_xi50x_x1_xx_x_crit_edgex_xi50x_x2x_xpreheader
    $phi xx_xlcssa95 :=  ( $cast ($uint<32>) iNsTr_108) $on xx_x_crit_edgex_xi50x_x1_xx_x_crit_edgex_xi50x_x2x_xpreheader 
    $endmerge
    tmp93 := (i_stride * ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    $place [xx_x_crit_edgex_xi50x_x2x_xpreheader_xx_x_crit_edgex_xi50x_x2]
    //begin: basic-block xx_x_crit_edgex_xi50x_x2
    $merge xx_x_crit_edgex_xi50x_x2_xx_x_crit_edgex_xi50x_x2 xx_x_crit_edgex_xi50x_x2x_xpreheader_xx_x_crit_edgex_xi50x_x2
    $phi xx_x03x_xi40x_x3 :=  ( $cast ($uint<32>) iNsTr_119) $on xx_x_crit_edgex_xi50x_x2_xx_x_crit_edgex_xi50x_x2 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on xx_x_crit_edgex_xi50x_x2x_xpreheader_xx_x_crit_edgex_xi50x_x2 
    $phi i_sumx_x02x_xi41x_x3 :=  ( $cast ($uint<32>) iNsTr_118) $on xx_x_crit_edgex_xi50x_x2_xx_x_crit_edgex_xi50x_x2 ( $cast ($uint<32>) xx_xlcssa95) $on xx_x_crit_edgex_xi50x_x2x_xpreheader_xx_x_crit_edgex_xi50x_x2 
    $endmerge
    tmp92 := (xx_x03x_xi40x_x3 + ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 ) )
    scevgepx_xi45x_x3 := fenc[tmp92]
    tmp94 := (tmp93 + xx_x03x_xi40x_x3)
    scevgep14x_xi43x_x3 := pix1[tmp94]
    // load 
    iNsTr_112 := ->(scevgepx_xi45x_x3) 
    iNsTr_113 := ($cast ($uint<32>) iNsTr_112)
    // load 
    iNsTr_114 := ->(scevgep14x_xi43x_x3) 
    iNsTr_115 := ($cast ($uint<32>) iNsTr_114)
    iNsTr_116 := (iNsTr_113 - iNsTr_115)
    // compare instruction
    isposx_xi46x_x3 := ( ($bitcast ( $int<32>) iNsTr_116) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xi47x_x3 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_116)
    iNsTr_117 := ( $mux isposx_xi46x_x3 iNsTr_116 negx_xi47x_x3)
    iNsTr_118 := (iNsTr_117 + i_sumx_x02x_xi41x_x3)
    iNsTr_119 := (xx_x03x_xi40x_x3 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond91 := (iNsTr_119 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond91 $then  $place [xx_x_crit_edgex_xi50x_x2_xx_x_crit_edgex_xi50x_x3x_xpreheader] $else $place [xx_x_crit_edgex_xi50x_x2_xx_x_crit_edgex_xi50x_x2] $endif 
    //begin: basic-block xx_x_crit_edgex_xi50x_x3x_xpreheader
    $merge xx_x_crit_edgex_xi50x_x2_xx_x_crit_edgex_xi50x_x3x_xpreheader
    $phi xx_xlcssa90 :=  ( $cast ($uint<32>) iNsTr_118) $on xx_x_crit_edgex_xi50x_x2_xx_x_crit_edgex_xi50x_x3x_xpreheader 
    $endmerge
    tmp88 := (i_stride * ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    $place [xx_x_crit_edgex_xi50x_x3x_xpreheader_xx_x_crit_edgex_xi50x_x3]
    //begin: basic-block xx_x_crit_edgex_xi50x_x3
    $merge xx_x_crit_edgex_xi50x_x3_xx_x_crit_edgex_xi50x_x3 xx_x_crit_edgex_xi50x_x3x_xpreheader_xx_x_crit_edgex_xi50x_x3
    $phi xx_x03x_xi40x_x4 :=  ( $cast ($uint<32>) iNsTr_129) $on xx_x_crit_edgex_xi50x_x3_xx_x_crit_edgex_xi50x_x3 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on xx_x_crit_edgex_xi50x_x3x_xpreheader_xx_x_crit_edgex_xi50x_x3 
    $phi i_sumx_x02x_xi41x_x4 :=  ( $cast ($uint<32>) iNsTr_128) $on xx_x_crit_edgex_xi50x_x3_xx_x_crit_edgex_xi50x_x3 ( $cast ($uint<32>) xx_xlcssa90) $on xx_x_crit_edgex_xi50x_x3x_xpreheader_xx_x_crit_edgex_xi50x_x3 
    $endmerge
    tmp87 := (xx_x03x_xi40x_x4 + ( $bitcast ($uint<32> ) _b00000000000000000000000001000000 ) )
    scevgepx_xi45x_x4 := fenc[tmp87]
    tmp89 := (tmp88 + xx_x03x_xi40x_x4)
    scevgep14x_xi43x_x4 := pix1[tmp89]
    // load 
    iNsTr_122 := ->(scevgepx_xi45x_x4) 
    iNsTr_123 := ($cast ($uint<32>) iNsTr_122)
    // load 
    iNsTr_124 := ->(scevgep14x_xi43x_x4) 
    iNsTr_125 := ($cast ($uint<32>) iNsTr_124)
    iNsTr_126 := (iNsTr_123 - iNsTr_125)
    // compare instruction
    isposx_xi46x_x4 := ( ($bitcast ( $int<32>) iNsTr_126) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xi47x_x4 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_126)
    iNsTr_127 := ( $mux isposx_xi46x_x4 iNsTr_126 negx_xi47x_x4)
    iNsTr_128 := (iNsTr_127 + i_sumx_x02x_xi41x_x4)
    iNsTr_129 := (xx_x03x_xi40x_x4 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond86 := (iNsTr_129 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond86 $then  $place [xx_x_crit_edgex_xi50x_x3_xx_x_crit_edgex_xi50x_x4x_xpreheader] $else $place [xx_x_crit_edgex_xi50x_x3_xx_x_crit_edgex_xi50x_x3] $endif 
    //begin: basic-block xx_x_crit_edgex_xi50x_x4x_xpreheader
    $merge xx_x_crit_edgex_xi50x_x3_xx_x_crit_edgex_xi50x_x4x_xpreheader
    $phi xx_xlcssa85 :=  ( $cast ($uint<32>) iNsTr_128) $on xx_x_crit_edgex_xi50x_x3_xx_x_crit_edgex_xi50x_x4x_xpreheader 
    $endmerge
    tmp83 := (i_stride * ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) )
    $place [xx_x_crit_edgex_xi50x_x4x_xpreheader_xx_x_crit_edgex_xi50x_x4]
    //begin: basic-block xx_x_crit_edgex_xi50x_x4
    $merge xx_x_crit_edgex_xi50x_x4_xx_x_crit_edgex_xi50x_x4 xx_x_crit_edgex_xi50x_x4x_xpreheader_xx_x_crit_edgex_xi50x_x4
    $phi xx_x03x_xi40x_x5 :=  ( $cast ($uint<32>) iNsTr_139) $on xx_x_crit_edgex_xi50x_x4_xx_x_crit_edgex_xi50x_x4 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on xx_x_crit_edgex_xi50x_x4x_xpreheader_xx_x_crit_edgex_xi50x_x4 
    $phi i_sumx_x02x_xi41x_x5 :=  ( $cast ($uint<32>) iNsTr_138) $on xx_x_crit_edgex_xi50x_x4_xx_x_crit_edgex_xi50x_x4 ( $cast ($uint<32>) xx_xlcssa85) $on xx_x_crit_edgex_xi50x_x4x_xpreheader_xx_x_crit_edgex_xi50x_x4 
    $endmerge
    tmp82 := (xx_x03x_xi40x_x5 + ( $bitcast ($uint<32> ) _b00000000000000000000000001010000 ) )
    scevgepx_xi45x_x5 := fenc[tmp82]
    tmp84 := (tmp83 + xx_x03x_xi40x_x5)
    scevgep14x_xi43x_x5 := pix1[tmp84]
    // load 
    iNsTr_132 := ->(scevgepx_xi45x_x5) 
    iNsTr_133 := ($cast ($uint<32>) iNsTr_132)
    // load 
    iNsTr_134 := ->(scevgep14x_xi43x_x5) 
    iNsTr_135 := ($cast ($uint<32>) iNsTr_134)
    iNsTr_136 := (iNsTr_133 - iNsTr_135)
    // compare instruction
    isposx_xi46x_x5 := ( ($bitcast ( $int<32>) iNsTr_136) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xi47x_x5 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_136)
    iNsTr_137 := ( $mux isposx_xi46x_x5 iNsTr_136 negx_xi47x_x5)
    iNsTr_138 := (iNsTr_137 + i_sumx_x02x_xi41x_x5)
    iNsTr_139 := (xx_x03x_xi40x_x5 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond81 := (iNsTr_139 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond81 $then  $place [xx_x_crit_edgex_xi50x_x4_xx_x_crit_edgex_xi50x_x5x_xpreheader] $else $place [xx_x_crit_edgex_xi50x_x4_xx_x_crit_edgex_xi50x_x4] $endif 
    //begin: basic-block xx_x_crit_edgex_xi50x_x5x_xpreheader
    $merge xx_x_crit_edgex_xi50x_x4_xx_x_crit_edgex_xi50x_x5x_xpreheader
    $phi xx_xlcssa80 :=  ( $cast ($uint<32>) iNsTr_138) $on xx_x_crit_edgex_xi50x_x4_xx_x_crit_edgex_xi50x_x5x_xpreheader 
    $endmerge
    tmp78 := (i_stride * ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    $place [xx_x_crit_edgex_xi50x_x5x_xpreheader_xx_x_crit_edgex_xi50x_x5]
    //begin: basic-block xx_x_crit_edgex_xi50x_x5
    $merge xx_x_crit_edgex_xi50x_x5_xx_x_crit_edgex_xi50x_x5 xx_x_crit_edgex_xi50x_x5x_xpreheader_xx_x_crit_edgex_xi50x_x5
    $phi xx_x03x_xi40x_x6 :=  ( $cast ($uint<32>) iNsTr_149) $on xx_x_crit_edgex_xi50x_x5_xx_x_crit_edgex_xi50x_x5 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on xx_x_crit_edgex_xi50x_x5x_xpreheader_xx_x_crit_edgex_xi50x_x5 
    $phi i_sumx_x02x_xi41x_x6 :=  ( $cast ($uint<32>) iNsTr_148) $on xx_x_crit_edgex_xi50x_x5_xx_x_crit_edgex_xi50x_x5 ( $cast ($uint<32>) xx_xlcssa80) $on xx_x_crit_edgex_xi50x_x5x_xpreheader_xx_x_crit_edgex_xi50x_x5 
    $endmerge
    tmp77 := (xx_x03x_xi40x_x6 + ( $bitcast ($uint<32> ) _b00000000000000000000000001100000 ) )
    scevgepx_xi45x_x6 := fenc[tmp77]
    tmp79 := (tmp78 + xx_x03x_xi40x_x6)
    scevgep14x_xi43x_x6 := pix1[tmp79]
    // load 
    iNsTr_142 := ->(scevgepx_xi45x_x6) 
    iNsTr_143 := ($cast ($uint<32>) iNsTr_142)
    // load 
    iNsTr_144 := ->(scevgep14x_xi43x_x6) 
    iNsTr_145 := ($cast ($uint<32>) iNsTr_144)
    iNsTr_146 := (iNsTr_143 - iNsTr_145)
    // compare instruction
    isposx_xi46x_x6 := ( ($bitcast ( $int<32>) iNsTr_146) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xi47x_x6 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_146)
    iNsTr_147 := ( $mux isposx_xi46x_x6 iNsTr_146 negx_xi47x_x6)
    iNsTr_148 := (iNsTr_147 + i_sumx_x02x_xi41x_x6)
    iNsTr_149 := (xx_x03x_xi40x_x6 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond76 := (iNsTr_149 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond76 $then  $place [xx_x_crit_edgex_xi50x_x5_xx_x_crit_edgex_xi50x_x6x_xpreheader] $else $place [xx_x_crit_edgex_xi50x_x5_xx_x_crit_edgex_xi50x_x5] $endif 
    //begin: basic-block xx_x_crit_edgex_xi50x_x6x_xpreheader
    $merge xx_x_crit_edgex_xi50x_x5_xx_x_crit_edgex_xi50x_x6x_xpreheader
    $phi xx_xlcssa75 :=  ( $cast ($uint<32>) iNsTr_148) $on xx_x_crit_edgex_xi50x_x5_xx_x_crit_edgex_xi50x_x6x_xpreheader 
    $endmerge
    tmp73 := (i_stride * ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    $place [xx_x_crit_edgex_xi50x_x6x_xpreheader_xx_x_crit_edgex_xi50x_x6]
    //begin: basic-block xx_x_crit_edgex_xi50x_x7
    $merge xx_x_crit_edgex_xi50x_x6_xx_x_crit_edgex_xi50x_x7
    $phi xx_xlcssa70 :=  ( $cast ($uint<32>) iNsTr_158) $on xx_x_crit_edgex_xi50x_x6_xx_x_crit_edgex_xi50x_x7 
    $endmerge
    iNsTr_161 := scores[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    ->(iNsTr_161) := xx_xlcssa70
    $place [xx_x_crit_edgex_xi50x_x7_bb_5]
    //begin: basic-block xx_x_crit_edgex_xi50x_x6
    $merge xx_x_crit_edgex_xi50x_x6_xx_x_crit_edgex_xi50x_x6 xx_x_crit_edgex_xi50x_x6x_xpreheader_xx_x_crit_edgex_xi50x_x6
    $phi xx_x03x_xi40x_x7 :=  ( $cast ($uint<32>) iNsTr_159) $on xx_x_crit_edgex_xi50x_x6_xx_x_crit_edgex_xi50x_x6 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on xx_x_crit_edgex_xi50x_x6x_xpreheader_xx_x_crit_edgex_xi50x_x6 
    $phi i_sumx_x02x_xi41x_x7 :=  ( $cast ($uint<32>) iNsTr_158) $on xx_x_crit_edgex_xi50x_x6_xx_x_crit_edgex_xi50x_x6 ( $cast ($uint<32>) xx_xlcssa75) $on xx_x_crit_edgex_xi50x_x6x_xpreheader_xx_x_crit_edgex_xi50x_x6 
    $endmerge
    tmp72 := (xx_x03x_xi40x_x7 + ( $bitcast ($uint<32> ) _b00000000000000000000000001110000 ) )
    scevgepx_xi45x_x7 := fenc[tmp72]
    tmp74 := (tmp73 + xx_x03x_xi40x_x7)
    scevgep14x_xi43x_x7 := pix1[tmp74]
    // load 
    iNsTr_152 := ->(scevgepx_xi45x_x7) 
    iNsTr_153 := ($cast ($uint<32>) iNsTr_152)
    // load 
    iNsTr_154 := ->(scevgep14x_xi43x_x7) 
    iNsTr_155 := ($cast ($uint<32>) iNsTr_154)
    iNsTr_156 := (iNsTr_153 - iNsTr_155)
    // compare instruction
    isposx_xi46x_x7 := ( ($bitcast ( $int<32>) iNsTr_156) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xi47x_x7 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_156)
    iNsTr_157 := ( $mux isposx_xi46x_x7 iNsTr_156 negx_xi47x_x7)
    iNsTr_158 := (iNsTr_157 + i_sumx_x02x_xi41x_x7)
    iNsTr_159 := (xx_x03x_xi40x_x7 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond71 := (iNsTr_159 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond71 $then  $place [xx_x_crit_edgex_xi50x_x6_xx_x_crit_edgex_xi50x_x7] $else $place [xx_x_crit_edgex_xi50x_x6_xx_x_crit_edgex_xi50x_x6] $endif 
    //begin: basic-block xx_x_crit_edgex_xix_x1
    $merge xx_x_crit_edgex_xi_xx_x_crit_edgex_xix_x1
    $phi xx_xlcssa132 :=  ( $cast ($uint<32>) iNsTr_17) $on xx_x_crit_edgex_xi_xx_x_crit_edgex_xix_x1 
    $endmerge
    tmp130 := (i_stride * ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    $place [xx_x_crit_edgex_xix_x1_bb_54]
    //begin: basic-block xx_x_crit_edgex_xi
    $merge xx_x_crit_edgex_xi_xx_x_crit_edgex_xi xx_x_crit_edgex_xix_xpreheader_xx_x_crit_edgex_xi
    $phi xx_x03x_xix_x1 :=  ( $cast ($uint<32>) iNsTr_18) $on xx_x_crit_edgex_xi_xx_x_crit_edgex_xi ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on xx_x_crit_edgex_xix_xpreheader_xx_x_crit_edgex_xi 
    $phi i_sumx_x02x_xix_x1 :=  ( $cast ($uint<32>) iNsTr_17) $on xx_x_crit_edgex_xi_xx_x_crit_edgex_xi ( $cast ($uint<32>) xx_xlcssa136) $on xx_x_crit_edgex_xix_xpreheader_xx_x_crit_edgex_xi 
    $endmerge
    tmp134 := (xx_x03x_xix_x1 + ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    scevgepx_xix_x1 := fenc[tmp134]
    tmp135 := (i_stride + xx_x03x_xix_x1)
    scevgep14x_xix_x1 := pix0[tmp135]
    // load 
    iNsTr_11 := ->(scevgepx_xix_x1) 
    iNsTr_12 := ($cast ($uint<32>) iNsTr_11)
    // load 
    iNsTr_13 := ->(scevgep14x_xix_x1) 
    iNsTr_14 := ($cast ($uint<32>) iNsTr_13)
    iNsTr_15 := (iNsTr_12 - iNsTr_14)
    // compare instruction
    isposx_xix_x1 := ( ($bitcast ( $int<32>) iNsTr_15) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xix_x1 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_15)
    iNsTr_16 := ( $mux isposx_xix_x1 iNsTr_15 negx_xix_x1)
    iNsTr_17 := (iNsTr_16 + i_sumx_x02x_xix_x1)
    iNsTr_18 := (xx_x03x_xix_x1 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond133 := (iNsTr_18 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond133 $then  $place [xx_x_crit_edgex_xi_xx_x_crit_edgex_xix_x1] $else $place [xx_x_crit_edgex_xi_xx_x_crit_edgex_xi] $endif 
    //begin: basic-block xx_x_crit_edgex_xix_x2
    $merge bb_54_xx_x_crit_edgex_xix_x2
    $phi xx_xlcssa127 :=  ( $cast ($uint<32>) iNsTr_27) $on bb_54_xx_x_crit_edgex_xix_x2 
    $endmerge
    tmp89x_x3 := (i_stride * ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    $place [xx_x_crit_edgex_xix_x2_bb_56]
    //begin: basic-block bb_54
    $merge bb_54_bb_54 xx_x_crit_edgex_xix_x1_bb_54
    $phi xx_x03x_xix_x2 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on xx_x_crit_edgex_xix_x1_bb_54 ( $cast ($uint<32>) iNsTr_28) $on bb_54_bb_54 
    $phi i_sumx_x02x_xix_x2 :=  ( $cast ($uint<32>) xx_xlcssa132) $on xx_x_crit_edgex_xix_x1_bb_54 ( $cast ($uint<32>) iNsTr_27) $on bb_54_bb_54 
    $endmerge
    tmp129 := (xx_x03x_xix_x2 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    scevgepx_xix_x2 := fenc[tmp129]
    tmp131 := (tmp130 + xx_x03x_xix_x2)
    scevgep14x_xix_x2 := pix0[tmp131]
    // load 
    iNsTr_21 := ->(scevgepx_xix_x2) 
    iNsTr_22 := ($cast ($uint<32>) iNsTr_21)
    // load 
    iNsTr_23 := ->(scevgep14x_xix_x2) 
    iNsTr_24 := ($cast ($uint<32>) iNsTr_23)
    iNsTr_25 := (iNsTr_22 - iNsTr_24)
    // compare instruction
    isposx_xix_x2 := ( ($bitcast ( $int<32>) iNsTr_25) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xix_x2 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_25)
    iNsTr_26 := ( $mux isposx_xix_x2 iNsTr_25 negx_xix_x2)
    iNsTr_27 := (iNsTr_26 + i_sumx_x02x_xix_x2)
    iNsTr_28 := (xx_x03x_xix_x2 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond128 := (iNsTr_28 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond128 $then  $place [bb_54_xx_x_crit_edgex_xix_x2] $else $place [bb_54_bb_54] $endif 
    //begin: basic-block xx_x_crit_edgex_xix_x3
    $merge bb_56_xx_x_crit_edgex_xix_x3
    $phi xx_xlcssa123 :=  ( $cast ($uint<32>) iNsTr_37) $on bb_56_xx_x_crit_edgex_xix_x3 
    $endmerge
    tmp121 := (i_stride * ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    $place [xx_x_crit_edgex_xix_x3_bb_58]
    //begin: basic-block bb_56
    $merge bb_56_bb_56 xx_x_crit_edgex_xix_x2_bb_56
    $phi xx_x03x_xix_x3 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on xx_x_crit_edgex_xix_x2_bb_56 ( $cast ($uint<32>) iNsTr_38) $on bb_56_bb_56 
    $phi i_sumx_x02x_xix_x3 :=  ( $cast ($uint<32>) xx_xlcssa127) $on xx_x_crit_edgex_xix_x2_bb_56 ( $cast ($uint<32>) iNsTr_37) $on bb_56_bb_56 
    $endmerge
    tmp125 := (xx_x03x_xix_x3 + ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 ) )
    scevgepx_xix_x3 := fenc[tmp125]
    tmp126 := (tmp89x_x3 + xx_x03x_xix_x3)
    scevgep14x_xix_x3 := pix0[tmp126]
    // load 
    iNsTr_31 := ->(scevgepx_xix_x3) 
    iNsTr_32 := ($cast ($uint<32>) iNsTr_31)
    // load 
    iNsTr_33 := ->(scevgep14x_xix_x3) 
    iNsTr_34 := ($cast ($uint<32>) iNsTr_33)
    iNsTr_35 := (iNsTr_32 - iNsTr_34)
    // compare instruction
    isposx_xix_x3 := ( ($bitcast ( $int<32>) iNsTr_35) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xix_x3 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_35)
    iNsTr_36 := ( $mux isposx_xix_x3 iNsTr_35 negx_xix_x3)
    iNsTr_37 := (iNsTr_36 + i_sumx_x02x_xix_x3)
    iNsTr_38 := (xx_x03x_xix_x3 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond124 := (iNsTr_38 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond124 $then  $place [bb_56_xx_x_crit_edgex_xix_x3] $else $place [bb_56_bb_56] $endif 
    //begin: basic-block xx_x_crit_edgex_xix_x4
    $merge bb_58_xx_x_crit_edgex_xix_x4
    $phi xx_xlcssa118 :=  ( $cast ($uint<32>) iNsTr_47) $on bb_58_xx_x_crit_edgex_xix_x4 
    $endmerge
    tmp89x_x5 := (i_stride * ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) )
    $place [xx_x_crit_edgex_xix_x4_bb_60]
    //begin: basic-block bb_58
    $merge bb_58_bb_58 xx_x_crit_edgex_xix_x3_bb_58
    $phi xx_x03x_xix_x4 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on xx_x_crit_edgex_xix_x3_bb_58 ( $cast ($uint<32>) iNsTr_48) $on bb_58_bb_58 
    $phi i_sumx_x02x_xix_x4 :=  ( $cast ($uint<32>) xx_xlcssa123) $on xx_x_crit_edgex_xix_x3_bb_58 ( $cast ($uint<32>) iNsTr_47) $on bb_58_bb_58 
    $endmerge
    tmp120 := (xx_x03x_xix_x4 + ( $bitcast ($uint<32> ) _b00000000000000000000000001000000 ) )
    scevgepx_xix_x4 := fenc[tmp120]
    tmp122 := (tmp121 + xx_x03x_xix_x4)
    scevgep14x_xix_x4 := pix0[tmp122]
    // load 
    iNsTr_41 := ->(scevgepx_xix_x4) 
    iNsTr_42 := ($cast ($uint<32>) iNsTr_41)
    // load 
    iNsTr_43 := ->(scevgep14x_xix_x4) 
    iNsTr_44 := ($cast ($uint<32>) iNsTr_43)
    iNsTr_45 := (iNsTr_42 - iNsTr_44)
    // compare instruction
    isposx_xix_x4 := ( ($bitcast ( $int<32>) iNsTr_45) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xix_x4 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_45)
    iNsTr_46 := ( $mux isposx_xix_x4 iNsTr_45 negx_xix_x4)
    iNsTr_47 := (iNsTr_46 + i_sumx_x02x_xix_x4)
    iNsTr_48 := (xx_x03x_xix_x4 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond119 := (iNsTr_48 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond119 $then  $place [bb_58_xx_x_crit_edgex_xix_x4] $else $place [bb_58_bb_58] $endif 
    //begin: basic-block xx_x_crit_edgex_xix_x5
    $merge bb_60_xx_x_crit_edgex_xix_x5
    $phi xx_xlcssa114 :=  ( $cast ($uint<32>) iNsTr_57) $on bb_60_xx_x_crit_edgex_xix_x5 
    $endmerge
    tmp89x_x6 := (i_stride * ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    $place [xx_x_crit_edgex_xix_x5_bb_62]
    //begin: basic-block bb_60
    $merge bb_60_bb_60 xx_x_crit_edgex_xix_x4_bb_60
    $phi xx_x03x_xix_x5 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on xx_x_crit_edgex_xix_x4_bb_60 ( $cast ($uint<32>) iNsTr_58) $on bb_60_bb_60 
    $phi i_sumx_x02x_xix_x5 :=  ( $cast ($uint<32>) xx_xlcssa118) $on xx_x_crit_edgex_xix_x4_bb_60 ( $cast ($uint<32>) iNsTr_57) $on bb_60_bb_60 
    $endmerge
    tmp116 := (xx_x03x_xix_x5 + ( $bitcast ($uint<32> ) _b00000000000000000000000001010000 ) )
    scevgepx_xix_x5 := fenc[tmp116]
    tmp117 := (tmp89x_x5 + xx_x03x_xix_x5)
    scevgep14x_xix_x5 := pix0[tmp117]
    // load 
    iNsTr_51 := ->(scevgepx_xix_x5) 
    iNsTr_52 := ($cast ($uint<32>) iNsTr_51)
    // load 
    iNsTr_53 := ->(scevgep14x_xix_x5) 
    iNsTr_54 := ($cast ($uint<32>) iNsTr_53)
    iNsTr_55 := (iNsTr_52 - iNsTr_54)
    // compare instruction
    isposx_xix_x5 := ( ($bitcast ( $int<32>) iNsTr_55) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xix_x5 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_55)
    iNsTr_56 := ( $mux isposx_xix_x5 iNsTr_55 negx_xix_x5)
    iNsTr_57 := (iNsTr_56 + i_sumx_x02x_xix_x5)
    iNsTr_58 := (xx_x03x_xix_x5 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond115 := (iNsTr_58 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond115 $then  $place [bb_60_xx_x_crit_edgex_xix_x5] $else $place [bb_60_bb_60] $endif 
    //begin: basic-block xx_x_crit_edgex_xix_x6
    $merge bb_62_xx_x_crit_edgex_xix_x6
    $phi xx_xlcssa110 :=  ( $cast ($uint<32>) iNsTr_67) $on bb_62_xx_x_crit_edgex_xix_x6 
    $endmerge
    tmp89x_x7 := (i_stride * ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    $place [xx_x_crit_edgex_xix_x6_bb_64]
    //begin: basic-block bb_62
    $merge bb_62_bb_62 xx_x_crit_edgex_xix_x5_bb_62
    $phi xx_x03x_xix_x6 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on xx_x_crit_edgex_xix_x5_bb_62 ( $cast ($uint<32>) iNsTr_68) $on bb_62_bb_62 
    $phi i_sumx_x02x_xix_x6 :=  ( $cast ($uint<32>) xx_xlcssa114) $on xx_x_crit_edgex_xix_x5_bb_62 ( $cast ($uint<32>) iNsTr_67) $on bb_62_bb_62 
    $endmerge
    tmp112 := (xx_x03x_xix_x6 + ( $bitcast ($uint<32> ) _b00000000000000000000000001100000 ) )
    scevgepx_xix_x6 := fenc[tmp112]
    tmp113 := (tmp89x_x6 + xx_x03x_xix_x6)
    scevgep14x_xix_x6 := pix0[tmp113]
    // load 
    iNsTr_61 := ->(scevgepx_xix_x6) 
    iNsTr_62 := ($cast ($uint<32>) iNsTr_61)
    // load 
    iNsTr_63 := ->(scevgep14x_xix_x6) 
    iNsTr_64 := ($cast ($uint<32>) iNsTr_63)
    iNsTr_65 := (iNsTr_62 - iNsTr_64)
    // compare instruction
    isposx_xix_x6 := ( ($bitcast ( $int<32>) iNsTr_65) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xix_x6 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_65)
    iNsTr_66 := ( $mux isposx_xix_x6 iNsTr_65 negx_xix_x6)
    iNsTr_67 := (iNsTr_66 + i_sumx_x02x_xix_x6)
    iNsTr_68 := (xx_x03x_xix_x6 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond111 := (iNsTr_68 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond111 $then  $place [bb_62_xx_x_crit_edgex_xix_x6] $else $place [bb_62_bb_62] $endif 
    //begin: basic-block xx_x_crit_edgex_xix_x7
    $merge bb_64_xx_x_crit_edgex_xix_x7
    $phi xx_xlcssa106 :=  ( $cast ($uint<32>) iNsTr_77) $on bb_64_xx_x_crit_edgex_xix_x7 
    $endmerge
    ->(scores) := xx_xlcssa106
    $place [xx_x_crit_edgex_xix_x7_bb_3]
    //begin: basic-block bb_64
    $merge bb_64_bb_64 xx_x_crit_edgex_xix_x6_bb_64
    $phi xx_x03x_xix_x7 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on xx_x_crit_edgex_xix_x6_bb_64 ( $cast ($uint<32>) iNsTr_78) $on bb_64_bb_64 
    $phi i_sumx_x02x_xix_x7 :=  ( $cast ($uint<32>) xx_xlcssa110) $on xx_x_crit_edgex_xix_x6_bb_64 ( $cast ($uint<32>) iNsTr_77) $on bb_64_bb_64 
    $endmerge
    tmp108 := (xx_x03x_xix_x7 + ( $bitcast ($uint<32> ) _b00000000000000000000000001110000 ) )
    scevgepx_xix_x7 := fenc[tmp108]
    tmp109 := (tmp89x_x7 + xx_x03x_xix_x7)
    scevgep14x_xix_x7 := pix0[tmp109]
    // load 
    iNsTr_71 := ->(scevgepx_xix_x7) 
    iNsTr_72 := ($cast ($uint<32>) iNsTr_71)
    // load 
    iNsTr_73 := ->(scevgep14x_xix_x7) 
    iNsTr_74 := ($cast ($uint<32>) iNsTr_73)
    iNsTr_75 := (iNsTr_72 - iNsTr_74)
    // compare instruction
    isposx_xix_x7 := ( ($bitcast ( $int<32>) iNsTr_75) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xix_x7 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_75)
    iNsTr_76 := ( $mux isposx_xix_x7 iNsTr_75 negx_xix_x7)
    iNsTr_77 := (iNsTr_76 + i_sumx_x02x_xix_x7)
    iNsTr_78 := (xx_x03x_xix_x7 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond107 := (iNsTr_78 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond107 $then  $place [bb_64_xx_x_crit_edgex_xix_x7] $else $place [bb_64_bb_64] $endif 
    $merge return__ $endmerge
  }
}
$module [x264_pixel_sad_x3_4x8] 
$in (fenc : $pointer< $uint<8> > pix0 : $pointer< $uint<8> > pix1 : $pointer< $uint<8> > pix2 : $pointer< $uint<8> > i_stride : $uint<32> scores : $pointer< $uint<32> > )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    $place [bb_0_bb_1]
    //begin: basic-block bb_1
    $merge bb_0_bb_1 bb_1_bb_1
    $phi yx_x05x_xi :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bb_0_bb_1 ( $cast ($uint<32>) iNsTr_29) $on bb_1_bb_1 
    $phi i_sumx_x14x_xi :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bb_0_bb_1 ( $cast ($uint<32>) iNsTr_28) $on bb_1_bb_1 
    $endmerge
    tmp20 := (yx_x05x_xi * ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    scevgepx_xi := fenc[tmp20]
    tmp21 := (tmp20 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgepx_x1x_xi := fenc[tmp21]
    tmp22 := (tmp20 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgepx_x2x_xi := fenc[tmp22]
    tmp23 := (tmp20 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgepx_x3x_xi := fenc[tmp23]
    tmp24 := (i_stride * yx_x05x_xi)
    scevgep14x_xi := pix0[tmp24]
    tmp25 := (tmp24 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep14x_x1x_xi := pix0[tmp25]
    tmp26 := (tmp24 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep14x_x2x_xi := pix0[tmp26]
    tmp27 := (tmp24 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep14x_x3x_xi := pix0[tmp27]
    // load 
    iNsTr_1 := ->(scevgepx_xi) 
    iNsTr_2 := ($cast ($uint<32>) iNsTr_1)
    // load 
    iNsTr_3 := ->(scevgep14x_xi) 
    iNsTr_4 := ($cast ($uint<32>) iNsTr_3)
    iNsTr_5 := (iNsTr_2 - iNsTr_4)
    // load 
    iNsTr_6 := ->(scevgepx_x1x_xi) 
    iNsTr_7 := ($cast ($uint<32>) iNsTr_6)
    // load 
    iNsTr_8 := ->(scevgep14x_x1x_xi) 
    iNsTr_9 := ($cast ($uint<32>) iNsTr_8)
    iNsTr_10 := (iNsTr_7 - iNsTr_9)
    // load 
    iNsTr_11 := ->(scevgepx_x2x_xi) 
    iNsTr_12 := ($cast ($uint<32>) iNsTr_11)
    // load 
    iNsTr_13 := ->(scevgep14x_x2x_xi) 
    iNsTr_14 := ($cast ($uint<32>) iNsTr_13)
    iNsTr_15 := (iNsTr_12 - iNsTr_14)
    // load 
    iNsTr_16 := ->(scevgepx_x3x_xi) 
    iNsTr_17 := ($cast ($uint<32>) iNsTr_16)
    // load 
    iNsTr_18 := ->(scevgep14x_x3x_xi) 
    iNsTr_19 := ($cast ($uint<32>) iNsTr_18)
    iNsTr_20 := (iNsTr_17 - iNsTr_19)
    // compare instruction
    isposx_xi := ( ($bitcast ( $int<32>) iNsTr_5) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xi := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_5)
    negx_x1x_xi := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_10)
    // compare instruction
    isposx_x1x_xi := ( ($bitcast ( $int<32>) iNsTr_10) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    iNsTr_21 := ( $mux isposx_xi iNsTr_5 negx_xi)
    iNsTr_22 := ( $mux isposx_x1x_xi iNsTr_10 negx_x1x_xi)
    // compare instruction
    isposx_x2x_xi := ( ($bitcast ( $int<32>) iNsTr_15) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_x2x_xi := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_15)
    negx_x3x_xi := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_20)
    // compare instruction
    isposx_x3x_xi := ( ($bitcast ( $int<32>) iNsTr_20) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    iNsTr_23 := ( $mux isposx_x2x_xi iNsTr_15 negx_x2x_xi)
    iNsTr_24 := ( $mux isposx_x3x_xi iNsTr_20 negx_x3x_xi)
    iNsTr_25 := (iNsTr_21 + i_sumx_x14x_xi)
    iNsTr_26 := (iNsTr_25 + iNsTr_22)
    iNsTr_27 := (iNsTr_26 + iNsTr_23)
    iNsTr_28 := (iNsTr_27 + iNsTr_24)
    iNsTr_29 := (yx_x05x_xi + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond19 := (iNsTr_29 == ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 )  )
    $if exitcond19 $then  $place [bb_1_x264_pixel_sad_4x8x_xexit] $else $place [bb_1_bb_1] $endif 
    //begin: basic-block x264_pixel_sad_4x8x_xexit
    $merge bb_1_x264_pixel_sad_4x8x_xexit
    $phi xx_xlcssa18 :=  ( $cast ($uint<32>) iNsTr_28) $on bb_1_x264_pixel_sad_4x8x_xexit 
    $endmerge
    ->(scores) := xx_xlcssa18
    $place [x264_pixel_sad_4x8x_xexit_bb_3]
    //begin: basic-block bb_3
    $merge bb_3_bb_3 x264_pixel_sad_4x8x_xexit_bb_3
    $phi yx_x05x_xi29 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on x264_pixel_sad_4x8x_xexit_bb_3 ( $cast ($uint<32>) iNsTr_61) $on bb_3_bb_3 
    $phi i_sumx_x14x_xi30 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on x264_pixel_sad_4x8x_xexit_bb_3 ( $cast ($uint<32>) iNsTr_60) $on bb_3_bb_3 
    $endmerge
    tmp := (yx_x05x_xi29 * ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    scevgepx_xi39 := fenc[tmp]
    tmp11 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgepx_x1x_xi40 := fenc[tmp11]
    tmp12 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgepx_x2x_xi41 := fenc[tmp12]
    tmp13 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgepx_x3x_xi42 := fenc[tmp13]
    tmp14 := (i_stride * yx_x05x_xi29)
    scevgep14x_xi43 := pix1[tmp14]
    tmp15 := (tmp14 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep14x_x1x_xi44 := pix1[tmp15]
    tmp16 := (tmp14 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep14x_x2x_xi45 := pix1[tmp16]
    tmp17 := (tmp14 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep14x_x3x_xi46 := pix1[tmp17]
    // load 
    iNsTr_33 := ->(scevgepx_xi39) 
    iNsTr_34 := ($cast ($uint<32>) iNsTr_33)
    // load 
    iNsTr_35 := ->(scevgep14x_xi43) 
    iNsTr_36 := ($cast ($uint<32>) iNsTr_35)
    iNsTr_37 := (iNsTr_34 - iNsTr_36)
    // load 
    iNsTr_38 := ->(scevgepx_x1x_xi40) 
    iNsTr_39 := ($cast ($uint<32>) iNsTr_38)
    // load 
    iNsTr_40 := ->(scevgep14x_x1x_xi44) 
    iNsTr_41 := ($cast ($uint<32>) iNsTr_40)
    iNsTr_42 := (iNsTr_39 - iNsTr_41)
    // load 
    iNsTr_43 := ->(scevgepx_x2x_xi41) 
    iNsTr_44 := ($cast ($uint<32>) iNsTr_43)
    // load 
    iNsTr_45 := ->(scevgep14x_x2x_xi45) 
    iNsTr_46 := ($cast ($uint<32>) iNsTr_45)
    iNsTr_47 := (iNsTr_44 - iNsTr_46)
    // load 
    iNsTr_48 := ->(scevgepx_x3x_xi42) 
    iNsTr_49 := ($cast ($uint<32>) iNsTr_48)
    // load 
    iNsTr_50 := ->(scevgep14x_x3x_xi46) 
    iNsTr_51 := ($cast ($uint<32>) iNsTr_50)
    iNsTr_52 := (iNsTr_49 - iNsTr_51)
    // compare instruction
    isposx_xi47 := ( ($bitcast ( $int<32>) iNsTr_37) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xi48 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_37)
    negx_x1x_xi49 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_42)
    // compare instruction
    isposx_x1x_xi50 := ( ($bitcast ( $int<32>) iNsTr_42) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    iNsTr_53 := ( $mux isposx_xi47 iNsTr_37 negx_xi48)
    iNsTr_54 := ( $mux isposx_x1x_xi50 iNsTr_42 negx_x1x_xi49)
    // compare instruction
    isposx_x2x_xi51 := ( ($bitcast ( $int<32>) iNsTr_47) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_x2x_xi52 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_47)
    negx_x3x_xi53 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_52)
    // compare instruction
    isposx_x3x_xi54 := ( ($bitcast ( $int<32>) iNsTr_52) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    iNsTr_55 := ( $mux isposx_x2x_xi51 iNsTr_47 negx_x2x_xi52)
    iNsTr_56 := ( $mux isposx_x3x_xi54 iNsTr_52 negx_x3x_xi53)
    iNsTr_57 := (iNsTr_53 + i_sumx_x14x_xi30)
    iNsTr_58 := (iNsTr_57 + iNsTr_54)
    iNsTr_59 := (iNsTr_58 + iNsTr_55)
    iNsTr_60 := (iNsTr_59 + iNsTr_56)
    iNsTr_61 := (yx_x05x_xi29 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond := (iNsTr_61 == ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 )  )
    $if exitcond $then  $place [bb_3_x264_pixel_sad_4x8x_xexit56] $else $place [bb_3_bb_3] $endif 
    //begin: basic-block x264_pixel_sad_4x8x_xexit56
    $merge bb_3_x264_pixel_sad_4x8x_xexit56
    $phi xx_xlcssa10 :=  ( $cast ($uint<32>) iNsTr_60) $on bb_3_x264_pixel_sad_4x8x_xexit56 
    $endmerge
    iNsTr_63 := scores[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    ->(iNsTr_63) := xx_xlcssa10
    $place [x264_pixel_sad_4x8x_xexit56_bb_5]
    //begin: basic-block bb_5
    $merge bb_5_bb_5 x264_pixel_sad_4x8x_xexit56_bb_5
    $phi yx_x05x_xi1 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on x264_pixel_sad_4x8x_xexit56_bb_5 ( $cast ($uint<32>) iNsTr_94) $on bb_5_bb_5 
    $phi i_sumx_x14x_xi2 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on x264_pixel_sad_4x8x_xexit56_bb_5 ( $cast ($uint<32>) iNsTr_93) $on bb_5_bb_5 
    $endmerge
    tmp2 := (yx_x05x_xi1 * ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    scevgepx_xi11 := fenc[tmp2]
    tmp3 := (tmp2 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgepx_x1x_xi12 := fenc[tmp3]
    tmp4 := (tmp2 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgepx_x2x_xi13 := fenc[tmp4]
    tmp5 := (tmp2 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgepx_x3x_xi14 := fenc[tmp5]
    tmp6 := (i_stride * yx_x05x_xi1)
    scevgep14x_xi15 := pix2[tmp6]
    tmp7 := (tmp6 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep14x_x1x_xi16 := pix2[tmp7]
    tmp8 := (tmp6 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep14x_x2x_xi17 := pix2[tmp8]
    tmp9 := (tmp6 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep14x_x3x_xi18 := pix2[tmp9]
    // load 
    iNsTr_66 := ->(scevgepx_xi11) 
    iNsTr_67 := ($cast ($uint<32>) iNsTr_66)
    // load 
    iNsTr_68 := ->(scevgep14x_xi15) 
    iNsTr_69 := ($cast ($uint<32>) iNsTr_68)
    iNsTr_70 := (iNsTr_67 - iNsTr_69)
    // load 
    iNsTr_71 := ->(scevgepx_x1x_xi12) 
    iNsTr_72 := ($cast ($uint<32>) iNsTr_71)
    // load 
    iNsTr_73 := ->(scevgep14x_x1x_xi16) 
    iNsTr_74 := ($cast ($uint<32>) iNsTr_73)
    iNsTr_75 := (iNsTr_72 - iNsTr_74)
    // load 
    iNsTr_76 := ->(scevgepx_x2x_xi13) 
    iNsTr_77 := ($cast ($uint<32>) iNsTr_76)
    // load 
    iNsTr_78 := ->(scevgep14x_x2x_xi17) 
    iNsTr_79 := ($cast ($uint<32>) iNsTr_78)
    iNsTr_80 := (iNsTr_77 - iNsTr_79)
    // load 
    iNsTr_81 := ->(scevgepx_x3x_xi14) 
    iNsTr_82 := ($cast ($uint<32>) iNsTr_81)
    // load 
    iNsTr_83 := ->(scevgep14x_x3x_xi18) 
    iNsTr_84 := ($cast ($uint<32>) iNsTr_83)
    iNsTr_85 := (iNsTr_82 - iNsTr_84)
    // compare instruction
    isposx_xi19 := ( ($bitcast ( $int<32>) iNsTr_70) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xi20 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_70)
    negx_x1x_xi21 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_75)
    // compare instruction
    isposx_x1x_xi22 := ( ($bitcast ( $int<32>) iNsTr_75) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    iNsTr_86 := ( $mux isposx_xi19 iNsTr_70 negx_xi20)
    iNsTr_87 := ( $mux isposx_x1x_xi22 iNsTr_75 negx_x1x_xi21)
    // compare instruction
    isposx_x2x_xi23 := ( ($bitcast ( $int<32>) iNsTr_80) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_x2x_xi24 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_80)
    negx_x3x_xi25 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_85)
    // compare instruction
    isposx_x3x_xi26 := ( ($bitcast ( $int<32>) iNsTr_85) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    iNsTr_88 := ( $mux isposx_x2x_xi23 iNsTr_80 negx_x2x_xi24)
    iNsTr_89 := ( $mux isposx_x3x_xi26 iNsTr_85 negx_x3x_xi25)
    iNsTr_90 := (iNsTr_86 + i_sumx_x14x_xi2)
    iNsTr_91 := (iNsTr_90 + iNsTr_87)
    iNsTr_92 := (iNsTr_91 + iNsTr_88)
    iNsTr_93 := (iNsTr_92 + iNsTr_89)
    iNsTr_94 := (yx_x05x_xi1 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (iNsTr_94 == ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 )  )
    $if exitcond1 $then  $place [bb_5_x264_pixel_sad_4x8x_xexit28] $else $place [bb_5_bb_5] $endif 
    //begin: basic-block x264_pixel_sad_4x8x_xexit28
    $merge bb_5_x264_pixel_sad_4x8x_xexit28
    $phi xx_xlcssa :=  ( $cast ($uint<32>) iNsTr_93) $on bb_5_x264_pixel_sad_4x8x_xexit28 
    $endmerge
    iNsTr_96 := scores[( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    ->(iNsTr_96) := xx_xlcssa
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [x264_pixel_sad_x4_4x8] 
$in (fenc : $pointer< $uint<8> > pix0 : $pointer< $uint<8> > pix1 : $pointer< $uint<8> > pix2 : $pointer< $uint<8> > pix3 : $pointer< $uint<8> > i_stride : $uint<32> scores : $pointer< $uint<32> > )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    $place [bb_0_bb_1]
    //begin: basic-block bb_1
    $merge bb_0_bb_1 bb_1_bb_1
    $phi yx_x05x_xi :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bb_0_bb_1 ( $cast ($uint<32>) iNsTr_29) $on bb_1_bb_1 
    $phi i_sumx_x14x_xi :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bb_0_bb_1 ( $cast ($uint<32>) iNsTr_28) $on bb_1_bb_1 
    $endmerge
    tmp30 := (yx_x05x_xi * ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    scevgepx_xi := fenc[tmp30]
    tmp31 := (tmp30 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgepx_x1x_xi := fenc[tmp31]
    tmp32 := (tmp30 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgepx_x2x_xi := fenc[tmp32]
    tmp33 := (tmp30 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgepx_x3x_xi := fenc[tmp33]
    tmp34 := (i_stride * yx_x05x_xi)
    scevgep14x_xi := pix0[tmp34]
    tmp35 := (tmp34 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep14x_x1x_xi := pix0[tmp35]
    tmp36 := (tmp34 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep14x_x2x_xi := pix0[tmp36]
    tmp37 := (tmp34 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep14x_x3x_xi := pix0[tmp37]
    // load 
    iNsTr_1 := ->(scevgepx_xi) 
    iNsTr_2 := ($cast ($uint<32>) iNsTr_1)
    // load 
    iNsTr_3 := ->(scevgep14x_xi) 
    iNsTr_4 := ($cast ($uint<32>) iNsTr_3)
    iNsTr_5 := (iNsTr_2 - iNsTr_4)
    // load 
    iNsTr_6 := ->(scevgepx_x1x_xi) 
    iNsTr_7 := ($cast ($uint<32>) iNsTr_6)
    // load 
    iNsTr_8 := ->(scevgep14x_x1x_xi) 
    iNsTr_9 := ($cast ($uint<32>) iNsTr_8)
    iNsTr_10 := (iNsTr_7 - iNsTr_9)
    // load 
    iNsTr_11 := ->(scevgepx_x2x_xi) 
    iNsTr_12 := ($cast ($uint<32>) iNsTr_11)
    // load 
    iNsTr_13 := ->(scevgep14x_x2x_xi) 
    iNsTr_14 := ($cast ($uint<32>) iNsTr_13)
    iNsTr_15 := (iNsTr_12 - iNsTr_14)
    // load 
    iNsTr_16 := ->(scevgepx_x3x_xi) 
    iNsTr_17 := ($cast ($uint<32>) iNsTr_16)
    // load 
    iNsTr_18 := ->(scevgep14x_x3x_xi) 
    iNsTr_19 := ($cast ($uint<32>) iNsTr_18)
    iNsTr_20 := (iNsTr_17 - iNsTr_19)
    // compare instruction
    isposx_xi := ( ($bitcast ( $int<32>) iNsTr_5) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xi := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_5)
    negx_x1x_xi := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_10)
    // compare instruction
    isposx_x1x_xi := ( ($bitcast ( $int<32>) iNsTr_10) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    iNsTr_21 := ( $mux isposx_xi iNsTr_5 negx_xi)
    iNsTr_22 := ( $mux isposx_x1x_xi iNsTr_10 negx_x1x_xi)
    // compare instruction
    isposx_x2x_xi := ( ($bitcast ( $int<32>) iNsTr_15) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_x2x_xi := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_15)
    negx_x3x_xi := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_20)
    // compare instruction
    isposx_x3x_xi := ( ($bitcast ( $int<32>) iNsTr_20) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    iNsTr_23 := ( $mux isposx_x2x_xi iNsTr_15 negx_x2x_xi)
    iNsTr_24 := ( $mux isposx_x3x_xi iNsTr_20 negx_x3x_xi)
    iNsTr_25 := (iNsTr_21 + i_sumx_x14x_xi)
    iNsTr_26 := (iNsTr_25 + iNsTr_22)
    iNsTr_27 := (iNsTr_26 + iNsTr_23)
    iNsTr_28 := (iNsTr_27 + iNsTr_24)
    iNsTr_29 := (yx_x05x_xi + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond29 := (iNsTr_29 == ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 )  )
    $if exitcond29 $then  $place [bb_1_x264_pixel_sad_4x8x_xexit] $else $place [bb_1_bb_1] $endif 
    //begin: basic-block x264_pixel_sad_4x8x_xexit
    $merge bb_1_x264_pixel_sad_4x8x_xexit
    $phi xx_xlcssa28 :=  ( $cast ($uint<32>) iNsTr_28) $on bb_1_x264_pixel_sad_4x8x_xexit 
    $endmerge
    ->(scores) := xx_xlcssa28
    $place [x264_pixel_sad_4x8x_xexit_bb_3]
    //begin: basic-block bb_3
    $merge bb_3_bb_3 x264_pixel_sad_4x8x_xexit_bb_3
    $phi yx_x05x_xi57 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on x264_pixel_sad_4x8x_xexit_bb_3 ( $cast ($uint<32>) iNsTr_61) $on bb_3_bb_3 
    $phi i_sumx_x14x_xi58 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on x264_pixel_sad_4x8x_xexit_bb_3 ( $cast ($uint<32>) iNsTr_60) $on bb_3_bb_3 
    $endmerge
    tmp20 := (yx_x05x_xi57 * ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    scevgepx_xi67 := fenc[tmp20]
    tmp21 := (tmp20 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgepx_x1x_xi68 := fenc[tmp21]
    tmp22 := (tmp20 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgepx_x2x_xi69 := fenc[tmp22]
    tmp23 := (tmp20 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgepx_x3x_xi70 := fenc[tmp23]
    tmp24 := (i_stride * yx_x05x_xi57)
    scevgep14x_xi71 := pix1[tmp24]
    tmp25 := (tmp24 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep14x_x1x_xi72 := pix1[tmp25]
    tmp26 := (tmp24 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep14x_x2x_xi73 := pix1[tmp26]
    tmp27 := (tmp24 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep14x_x3x_xi74 := pix1[tmp27]
    // load 
    iNsTr_33 := ->(scevgepx_xi67) 
    iNsTr_34 := ($cast ($uint<32>) iNsTr_33)
    // load 
    iNsTr_35 := ->(scevgep14x_xi71) 
    iNsTr_36 := ($cast ($uint<32>) iNsTr_35)
    iNsTr_37 := (iNsTr_34 - iNsTr_36)
    // load 
    iNsTr_38 := ->(scevgepx_x1x_xi68) 
    iNsTr_39 := ($cast ($uint<32>) iNsTr_38)
    // load 
    iNsTr_40 := ->(scevgep14x_x1x_xi72) 
    iNsTr_41 := ($cast ($uint<32>) iNsTr_40)
    iNsTr_42 := (iNsTr_39 - iNsTr_41)
    // load 
    iNsTr_43 := ->(scevgepx_x2x_xi69) 
    iNsTr_44 := ($cast ($uint<32>) iNsTr_43)
    // load 
    iNsTr_45 := ->(scevgep14x_x2x_xi73) 
    iNsTr_46 := ($cast ($uint<32>) iNsTr_45)
    iNsTr_47 := (iNsTr_44 - iNsTr_46)
    // load 
    iNsTr_48 := ->(scevgepx_x3x_xi70) 
    iNsTr_49 := ($cast ($uint<32>) iNsTr_48)
    // load 
    iNsTr_50 := ->(scevgep14x_x3x_xi74) 
    iNsTr_51 := ($cast ($uint<32>) iNsTr_50)
    iNsTr_52 := (iNsTr_49 - iNsTr_51)
    // compare instruction
    isposx_xi75 := ( ($bitcast ( $int<32>) iNsTr_37) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xi76 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_37)
    negx_x1x_xi77 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_42)
    // compare instruction
    isposx_x1x_xi78 := ( ($bitcast ( $int<32>) iNsTr_42) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    iNsTr_53 := ( $mux isposx_xi75 iNsTr_37 negx_xi76)
    iNsTr_54 := ( $mux isposx_x1x_xi78 iNsTr_42 negx_x1x_xi77)
    // compare instruction
    isposx_x2x_xi79 := ( ($bitcast ( $int<32>) iNsTr_47) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_x2x_xi80 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_47)
    negx_x3x_xi81 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_52)
    // compare instruction
    isposx_x3x_xi82 := ( ($bitcast ( $int<32>) iNsTr_52) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    iNsTr_55 := ( $mux isposx_x2x_xi79 iNsTr_47 negx_x2x_xi80)
    iNsTr_56 := ( $mux isposx_x3x_xi82 iNsTr_52 negx_x3x_xi81)
    iNsTr_57 := (iNsTr_53 + i_sumx_x14x_xi58)
    iNsTr_58 := (iNsTr_57 + iNsTr_54)
    iNsTr_59 := (iNsTr_58 + iNsTr_55)
    iNsTr_60 := (iNsTr_59 + iNsTr_56)
    iNsTr_61 := (yx_x05x_xi57 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond19 := (iNsTr_61 == ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 )  )
    $if exitcond19 $then  $place [bb_3_x264_pixel_sad_4x8x_xexit84] $else $place [bb_3_bb_3] $endif 
    //begin: basic-block x264_pixel_sad_4x8x_xexit84
    $merge bb_3_x264_pixel_sad_4x8x_xexit84
    $phi xx_xlcssa18 :=  ( $cast ($uint<32>) iNsTr_60) $on bb_3_x264_pixel_sad_4x8x_xexit84 
    $endmerge
    iNsTr_63 := scores[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    ->(iNsTr_63) := xx_xlcssa18
    $place [x264_pixel_sad_4x8x_xexit84_bb_5]
    //begin: basic-block bb_5
    $merge bb_5_bb_5 x264_pixel_sad_4x8x_xexit84_bb_5
    $phi yx_x05x_xi29 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on x264_pixel_sad_4x8x_xexit84_bb_5 ( $cast ($uint<32>) iNsTr_94) $on bb_5_bb_5 
    $phi i_sumx_x14x_xi30 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on x264_pixel_sad_4x8x_xexit84_bb_5 ( $cast ($uint<32>) iNsTr_93) $on bb_5_bb_5 
    $endmerge
    tmp := (yx_x05x_xi29 * ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    scevgepx_xi39 := fenc[tmp]
    tmp11 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgepx_x1x_xi40 := fenc[tmp11]
    tmp12 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgepx_x2x_xi41 := fenc[tmp12]
    tmp13 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgepx_x3x_xi42 := fenc[tmp13]
    tmp14 := (i_stride * yx_x05x_xi29)
    scevgep14x_xi43 := pix2[tmp14]
    tmp15 := (tmp14 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep14x_x1x_xi44 := pix2[tmp15]
    tmp16 := (tmp14 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep14x_x2x_xi45 := pix2[tmp16]
    tmp17 := (tmp14 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep14x_x3x_xi46 := pix2[tmp17]
    // load 
    iNsTr_66 := ->(scevgepx_xi39) 
    iNsTr_67 := ($cast ($uint<32>) iNsTr_66)
    // load 
    iNsTr_68 := ->(scevgep14x_xi43) 
    iNsTr_69 := ($cast ($uint<32>) iNsTr_68)
    iNsTr_70 := (iNsTr_67 - iNsTr_69)
    // load 
    iNsTr_71 := ->(scevgepx_x1x_xi40) 
    iNsTr_72 := ($cast ($uint<32>) iNsTr_71)
    // load 
    iNsTr_73 := ->(scevgep14x_x1x_xi44) 
    iNsTr_74 := ($cast ($uint<32>) iNsTr_73)
    iNsTr_75 := (iNsTr_72 - iNsTr_74)
    // load 
    iNsTr_76 := ->(scevgepx_x2x_xi41) 
    iNsTr_77 := ($cast ($uint<32>) iNsTr_76)
    // load 
    iNsTr_78 := ->(scevgep14x_x2x_xi45) 
    iNsTr_79 := ($cast ($uint<32>) iNsTr_78)
    iNsTr_80 := (iNsTr_77 - iNsTr_79)
    // load 
    iNsTr_81 := ->(scevgepx_x3x_xi42) 
    iNsTr_82 := ($cast ($uint<32>) iNsTr_81)
    // load 
    iNsTr_83 := ->(scevgep14x_x3x_xi46) 
    iNsTr_84 := ($cast ($uint<32>) iNsTr_83)
    iNsTr_85 := (iNsTr_82 - iNsTr_84)
    // compare instruction
    isposx_xi47 := ( ($bitcast ( $int<32>) iNsTr_70) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xi48 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_70)
    negx_x1x_xi49 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_75)
    // compare instruction
    isposx_x1x_xi50 := ( ($bitcast ( $int<32>) iNsTr_75) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    iNsTr_86 := ( $mux isposx_xi47 iNsTr_70 negx_xi48)
    iNsTr_87 := ( $mux isposx_x1x_xi50 iNsTr_75 negx_x1x_xi49)
    // compare instruction
    isposx_x2x_xi51 := ( ($bitcast ( $int<32>) iNsTr_80) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_x2x_xi52 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_80)
    negx_x3x_xi53 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_85)
    // compare instruction
    isposx_x3x_xi54 := ( ($bitcast ( $int<32>) iNsTr_85) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    iNsTr_88 := ( $mux isposx_x2x_xi51 iNsTr_80 negx_x2x_xi52)
    iNsTr_89 := ( $mux isposx_x3x_xi54 iNsTr_85 negx_x3x_xi53)
    iNsTr_90 := (iNsTr_86 + i_sumx_x14x_xi30)
    iNsTr_91 := (iNsTr_90 + iNsTr_87)
    iNsTr_92 := (iNsTr_91 + iNsTr_88)
    iNsTr_93 := (iNsTr_92 + iNsTr_89)
    iNsTr_94 := (yx_x05x_xi29 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond := (iNsTr_94 == ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 )  )
    $if exitcond $then  $place [bb_5_x264_pixel_sad_4x8x_xexit56] $else $place [bb_5_bb_5] $endif 
    //begin: basic-block x264_pixel_sad_4x8x_xexit56
    $merge bb_5_x264_pixel_sad_4x8x_xexit56
    $phi xx_xlcssa10 :=  ( $cast ($uint<32>) iNsTr_93) $on bb_5_x264_pixel_sad_4x8x_xexit56 
    $endmerge
    iNsTr_96 := scores[( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    ->(iNsTr_96) := xx_xlcssa10
    $place [x264_pixel_sad_4x8x_xexit56_bb_7]
    //begin: basic-block bb_7
    $merge bb_7_bb_7 x264_pixel_sad_4x8x_xexit56_bb_7
    $phi yx_x05x_xi1 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on x264_pixel_sad_4x8x_xexit56_bb_7 ( $cast ($uint<32>) iNsTr_127) $on bb_7_bb_7 
    $phi i_sumx_x14x_xi2 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on x264_pixel_sad_4x8x_xexit56_bb_7 ( $cast ($uint<32>) iNsTr_126) $on bb_7_bb_7 
    $endmerge
    tmp2 := (yx_x05x_xi1 * ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    scevgepx_xi11 := fenc[tmp2]
    tmp3 := (tmp2 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgepx_x1x_xi12 := fenc[tmp3]
    tmp4 := (tmp2 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgepx_x2x_xi13 := fenc[tmp4]
    tmp5 := (tmp2 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgepx_x3x_xi14 := fenc[tmp5]
    tmp6 := (i_stride * yx_x05x_xi1)
    scevgep14x_xi15 := pix3[tmp6]
    tmp7 := (tmp6 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep14x_x1x_xi16 := pix3[tmp7]
    tmp8 := (tmp6 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep14x_x2x_xi17 := pix3[tmp8]
    tmp9 := (tmp6 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep14x_x3x_xi18 := pix3[tmp9]
    // load 
    iNsTr_99 := ->(scevgepx_xi11) 
    iNsTr_100 := ($cast ($uint<32>) iNsTr_99)
    // load 
    iNsTr_101 := ->(scevgep14x_xi15) 
    iNsTr_102 := ($cast ($uint<32>) iNsTr_101)
    iNsTr_103 := (iNsTr_100 - iNsTr_102)
    // load 
    iNsTr_104 := ->(scevgepx_x1x_xi12) 
    iNsTr_105 := ($cast ($uint<32>) iNsTr_104)
    // load 
    iNsTr_106 := ->(scevgep14x_x1x_xi16) 
    iNsTr_107 := ($cast ($uint<32>) iNsTr_106)
    iNsTr_108 := (iNsTr_105 - iNsTr_107)
    // load 
    iNsTr_109 := ->(scevgepx_x2x_xi13) 
    iNsTr_110 := ($cast ($uint<32>) iNsTr_109)
    // load 
    iNsTr_111 := ->(scevgep14x_x2x_xi17) 
    iNsTr_112 := ($cast ($uint<32>) iNsTr_111)
    iNsTr_113 := (iNsTr_110 - iNsTr_112)
    // load 
    iNsTr_114 := ->(scevgepx_x3x_xi14) 
    iNsTr_115 := ($cast ($uint<32>) iNsTr_114)
    // load 
    iNsTr_116 := ->(scevgep14x_x3x_xi18) 
    iNsTr_117 := ($cast ($uint<32>) iNsTr_116)
    iNsTr_118 := (iNsTr_115 - iNsTr_117)
    // compare instruction
    isposx_xi19 := ( ($bitcast ( $int<32>) iNsTr_103) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xi20 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_103)
    negx_x1x_xi21 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_108)
    // compare instruction
    isposx_x1x_xi22 := ( ($bitcast ( $int<32>) iNsTr_108) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    iNsTr_119 := ( $mux isposx_xi19 iNsTr_103 negx_xi20)
    iNsTr_120 := ( $mux isposx_x1x_xi22 iNsTr_108 negx_x1x_xi21)
    // compare instruction
    isposx_x2x_xi23 := ( ($bitcast ( $int<32>) iNsTr_113) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_x2x_xi24 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_113)
    negx_x3x_xi25 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_118)
    // compare instruction
    isposx_x3x_xi26 := ( ($bitcast ( $int<32>) iNsTr_118) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    iNsTr_121 := ( $mux isposx_x2x_xi23 iNsTr_113 negx_x2x_xi24)
    iNsTr_122 := ( $mux isposx_x3x_xi26 iNsTr_118 negx_x3x_xi25)
    iNsTr_123 := (iNsTr_119 + i_sumx_x14x_xi2)
    iNsTr_124 := (iNsTr_123 + iNsTr_120)
    iNsTr_125 := (iNsTr_124 + iNsTr_121)
    iNsTr_126 := (iNsTr_125 + iNsTr_122)
    iNsTr_127 := (yx_x05x_xi1 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (iNsTr_127 == ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 )  )
    $if exitcond1 $then  $place [bb_7_x264_pixel_sad_4x8x_xexit28] $else $place [bb_7_bb_7] $endif 
    //begin: basic-block x264_pixel_sad_4x8x_xexit28
    $merge bb_7_x264_pixel_sad_4x8x_xexit28
    $phi xx_xlcssa :=  ( $cast ($uint<32>) iNsTr_126) $on bb_7_x264_pixel_sad_4x8x_xexit28 
    $endmerge
    iNsTr_129 := scores[( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    ->(iNsTr_129) := xx_xlcssa
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [x264_pixel_sad_x3_4x4] 
$in (fenc : $pointer< $uint<8> > pix0 : $pointer< $uint<8> > pix1 : $pointer< $uint<8> > pix2 : $pointer< $uint<8> > i_stride : $uint<32> scores : $pointer< $uint<32> > )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    $place [bb_0_bb_1]
    //begin: basic-block bb_1
    $merge bb_0_bb_1 bb_1_bb_1
    $phi yx_x05x_xi :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bb_0_bb_1 ( $cast ($uint<32>) iNsTr_29) $on bb_1_bb_1 
    $phi i_sumx_x14x_xi :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bb_0_bb_1 ( $cast ($uint<32>) iNsTr_28) $on bb_1_bb_1 
    $endmerge
    tmp20 := (yx_x05x_xi * ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    scevgepx_xi := fenc[tmp20]
    tmp21 := (tmp20 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgepx_x1x_xi := fenc[tmp21]
    tmp22 := (tmp20 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgepx_x2x_xi := fenc[tmp22]
    tmp23 := (tmp20 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgepx_x3x_xi := fenc[tmp23]
    tmp24 := (i_stride * yx_x05x_xi)
    scevgep14x_xi := pix0[tmp24]
    tmp25 := (tmp24 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep14x_x1x_xi := pix0[tmp25]
    tmp26 := (tmp24 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep14x_x2x_xi := pix0[tmp26]
    tmp27 := (tmp24 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep14x_x3x_xi := pix0[tmp27]
    // load 
    iNsTr_1 := ->(scevgepx_xi) 
    iNsTr_2 := ($cast ($uint<32>) iNsTr_1)
    // load 
    iNsTr_3 := ->(scevgep14x_xi) 
    iNsTr_4 := ($cast ($uint<32>) iNsTr_3)
    iNsTr_5 := (iNsTr_2 - iNsTr_4)
    // load 
    iNsTr_6 := ->(scevgepx_x1x_xi) 
    iNsTr_7 := ($cast ($uint<32>) iNsTr_6)
    // load 
    iNsTr_8 := ->(scevgep14x_x1x_xi) 
    iNsTr_9 := ($cast ($uint<32>) iNsTr_8)
    iNsTr_10 := (iNsTr_7 - iNsTr_9)
    // load 
    iNsTr_11 := ->(scevgepx_x2x_xi) 
    iNsTr_12 := ($cast ($uint<32>) iNsTr_11)
    // load 
    iNsTr_13 := ->(scevgep14x_x2x_xi) 
    iNsTr_14 := ($cast ($uint<32>) iNsTr_13)
    iNsTr_15 := (iNsTr_12 - iNsTr_14)
    // load 
    iNsTr_16 := ->(scevgepx_x3x_xi) 
    iNsTr_17 := ($cast ($uint<32>) iNsTr_16)
    // load 
    iNsTr_18 := ->(scevgep14x_x3x_xi) 
    iNsTr_19 := ($cast ($uint<32>) iNsTr_18)
    iNsTr_20 := (iNsTr_17 - iNsTr_19)
    // compare instruction
    isposx_xi := ( ($bitcast ( $int<32>) iNsTr_5) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xi := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_5)
    negx_x1x_xi := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_10)
    // compare instruction
    isposx_x1x_xi := ( ($bitcast ( $int<32>) iNsTr_10) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    iNsTr_21 := ( $mux isposx_xi iNsTr_5 negx_xi)
    iNsTr_22 := ( $mux isposx_x1x_xi iNsTr_10 negx_x1x_xi)
    // compare instruction
    isposx_x2x_xi := ( ($bitcast ( $int<32>) iNsTr_15) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_x2x_xi := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_15)
    negx_x3x_xi := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_20)
    // compare instruction
    isposx_x3x_xi := ( ($bitcast ( $int<32>) iNsTr_20) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    iNsTr_23 := ( $mux isposx_x2x_xi iNsTr_15 negx_x2x_xi)
    iNsTr_24 := ( $mux isposx_x3x_xi iNsTr_20 negx_x3x_xi)
    iNsTr_25 := (iNsTr_21 + i_sumx_x14x_xi)
    iNsTr_26 := (iNsTr_25 + iNsTr_22)
    iNsTr_27 := (iNsTr_26 + iNsTr_23)
    iNsTr_28 := (iNsTr_27 + iNsTr_24)
    iNsTr_29 := (yx_x05x_xi + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond19 := (iNsTr_29 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 )  )
    $if exitcond19 $then  $place [bb_1_x264_pixel_sad_4x4x_xexit] $else $place [bb_1_bb_1] $endif 
    //begin: basic-block x264_pixel_sad_4x4x_xexit
    $merge bb_1_x264_pixel_sad_4x4x_xexit
    $phi xx_xlcssa18 :=  ( $cast ($uint<32>) iNsTr_28) $on bb_1_x264_pixel_sad_4x4x_xexit 
    $endmerge
    ->(scores) := xx_xlcssa18
    $place [x264_pixel_sad_4x4x_xexit_bb_3]
    //begin: basic-block bb_3
    $merge bb_3_bb_3 x264_pixel_sad_4x4x_xexit_bb_3
    $phi yx_x05x_xi29 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on x264_pixel_sad_4x4x_xexit_bb_3 ( $cast ($uint<32>) iNsTr_61) $on bb_3_bb_3 
    $phi i_sumx_x14x_xi30 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on x264_pixel_sad_4x4x_xexit_bb_3 ( $cast ($uint<32>) iNsTr_60) $on bb_3_bb_3 
    $endmerge
    tmp := (yx_x05x_xi29 * ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    scevgepx_xi39 := fenc[tmp]
    tmp11 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgepx_x1x_xi40 := fenc[tmp11]
    tmp12 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgepx_x2x_xi41 := fenc[tmp12]
    tmp13 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgepx_x3x_xi42 := fenc[tmp13]
    tmp14 := (i_stride * yx_x05x_xi29)
    scevgep14x_xi43 := pix1[tmp14]
    tmp15 := (tmp14 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep14x_x1x_xi44 := pix1[tmp15]
    tmp16 := (tmp14 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep14x_x2x_xi45 := pix1[tmp16]
    tmp17 := (tmp14 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep14x_x3x_xi46 := pix1[tmp17]
    // load 
    iNsTr_33 := ->(scevgepx_xi39) 
    iNsTr_34 := ($cast ($uint<32>) iNsTr_33)
    // load 
    iNsTr_35 := ->(scevgep14x_xi43) 
    iNsTr_36 := ($cast ($uint<32>) iNsTr_35)
    iNsTr_37 := (iNsTr_34 - iNsTr_36)
    // load 
    iNsTr_38 := ->(scevgepx_x1x_xi40) 
    iNsTr_39 := ($cast ($uint<32>) iNsTr_38)
    // load 
    iNsTr_40 := ->(scevgep14x_x1x_xi44) 
    iNsTr_41 := ($cast ($uint<32>) iNsTr_40)
    iNsTr_42 := (iNsTr_39 - iNsTr_41)
    // load 
    iNsTr_43 := ->(scevgepx_x2x_xi41) 
    iNsTr_44 := ($cast ($uint<32>) iNsTr_43)
    // load 
    iNsTr_45 := ->(scevgep14x_x2x_xi45) 
    iNsTr_46 := ($cast ($uint<32>) iNsTr_45)
    iNsTr_47 := (iNsTr_44 - iNsTr_46)
    // load 
    iNsTr_48 := ->(scevgepx_x3x_xi42) 
    iNsTr_49 := ($cast ($uint<32>) iNsTr_48)
    // load 
    iNsTr_50 := ->(scevgep14x_x3x_xi46) 
    iNsTr_51 := ($cast ($uint<32>) iNsTr_50)
    iNsTr_52 := (iNsTr_49 - iNsTr_51)
    // compare instruction
    isposx_xi47 := ( ($bitcast ( $int<32>) iNsTr_37) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xi48 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_37)
    negx_x1x_xi49 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_42)
    // compare instruction
    isposx_x1x_xi50 := ( ($bitcast ( $int<32>) iNsTr_42) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    iNsTr_53 := ( $mux isposx_xi47 iNsTr_37 negx_xi48)
    iNsTr_54 := ( $mux isposx_x1x_xi50 iNsTr_42 negx_x1x_xi49)
    // compare instruction
    isposx_x2x_xi51 := ( ($bitcast ( $int<32>) iNsTr_47) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_x2x_xi52 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_47)
    negx_x3x_xi53 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_52)
    // compare instruction
    isposx_x3x_xi54 := ( ($bitcast ( $int<32>) iNsTr_52) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    iNsTr_55 := ( $mux isposx_x2x_xi51 iNsTr_47 negx_x2x_xi52)
    iNsTr_56 := ( $mux isposx_x3x_xi54 iNsTr_52 negx_x3x_xi53)
    iNsTr_57 := (iNsTr_53 + i_sumx_x14x_xi30)
    iNsTr_58 := (iNsTr_57 + iNsTr_54)
    iNsTr_59 := (iNsTr_58 + iNsTr_55)
    iNsTr_60 := (iNsTr_59 + iNsTr_56)
    iNsTr_61 := (yx_x05x_xi29 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond := (iNsTr_61 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 )  )
    $if exitcond $then  $place [bb_3_x264_pixel_sad_4x4x_xexit56] $else $place [bb_3_bb_3] $endif 
    //begin: basic-block x264_pixel_sad_4x4x_xexit56
    $merge bb_3_x264_pixel_sad_4x4x_xexit56
    $phi xx_xlcssa10 :=  ( $cast ($uint<32>) iNsTr_60) $on bb_3_x264_pixel_sad_4x4x_xexit56 
    $endmerge
    iNsTr_63 := scores[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    ->(iNsTr_63) := xx_xlcssa10
    $place [x264_pixel_sad_4x4x_xexit56_bb_5]
    //begin: basic-block bb_5
    $merge bb_5_bb_5 x264_pixel_sad_4x4x_xexit56_bb_5
    $phi yx_x05x_xi1 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on x264_pixel_sad_4x4x_xexit56_bb_5 ( $cast ($uint<32>) iNsTr_94) $on bb_5_bb_5 
    $phi i_sumx_x14x_xi2 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on x264_pixel_sad_4x4x_xexit56_bb_5 ( $cast ($uint<32>) iNsTr_93) $on bb_5_bb_5 
    $endmerge
    tmp2 := (yx_x05x_xi1 * ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    scevgepx_xi11 := fenc[tmp2]
    tmp3 := (tmp2 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgepx_x1x_xi12 := fenc[tmp3]
    tmp4 := (tmp2 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgepx_x2x_xi13 := fenc[tmp4]
    tmp5 := (tmp2 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgepx_x3x_xi14 := fenc[tmp5]
    tmp6 := (i_stride * yx_x05x_xi1)
    scevgep14x_xi15 := pix2[tmp6]
    tmp7 := (tmp6 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep14x_x1x_xi16 := pix2[tmp7]
    tmp8 := (tmp6 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep14x_x2x_xi17 := pix2[tmp8]
    tmp9 := (tmp6 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep14x_x3x_xi18 := pix2[tmp9]
    // load 
    iNsTr_66 := ->(scevgepx_xi11) 
    iNsTr_67 := ($cast ($uint<32>) iNsTr_66)
    // load 
    iNsTr_68 := ->(scevgep14x_xi15) 
    iNsTr_69 := ($cast ($uint<32>) iNsTr_68)
    iNsTr_70 := (iNsTr_67 - iNsTr_69)
    // load 
    iNsTr_71 := ->(scevgepx_x1x_xi12) 
    iNsTr_72 := ($cast ($uint<32>) iNsTr_71)
    // load 
    iNsTr_73 := ->(scevgep14x_x1x_xi16) 
    iNsTr_74 := ($cast ($uint<32>) iNsTr_73)
    iNsTr_75 := (iNsTr_72 - iNsTr_74)
    // load 
    iNsTr_76 := ->(scevgepx_x2x_xi13) 
    iNsTr_77 := ($cast ($uint<32>) iNsTr_76)
    // load 
    iNsTr_78 := ->(scevgep14x_x2x_xi17) 
    iNsTr_79 := ($cast ($uint<32>) iNsTr_78)
    iNsTr_80 := (iNsTr_77 - iNsTr_79)
    // load 
    iNsTr_81 := ->(scevgepx_x3x_xi14) 
    iNsTr_82 := ($cast ($uint<32>) iNsTr_81)
    // load 
    iNsTr_83 := ->(scevgep14x_x3x_xi18) 
    iNsTr_84 := ($cast ($uint<32>) iNsTr_83)
    iNsTr_85 := (iNsTr_82 - iNsTr_84)
    // compare instruction
    isposx_xi19 := ( ($bitcast ( $int<32>) iNsTr_70) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xi20 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_70)
    negx_x1x_xi21 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_75)
    // compare instruction
    isposx_x1x_xi22 := ( ($bitcast ( $int<32>) iNsTr_75) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    iNsTr_86 := ( $mux isposx_xi19 iNsTr_70 negx_xi20)
    iNsTr_87 := ( $mux isposx_x1x_xi22 iNsTr_75 negx_x1x_xi21)
    // compare instruction
    isposx_x2x_xi23 := ( ($bitcast ( $int<32>) iNsTr_80) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_x2x_xi24 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_80)
    negx_x3x_xi25 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_85)
    // compare instruction
    isposx_x3x_xi26 := ( ($bitcast ( $int<32>) iNsTr_85) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    iNsTr_88 := ( $mux isposx_x2x_xi23 iNsTr_80 negx_x2x_xi24)
    iNsTr_89 := ( $mux isposx_x3x_xi26 iNsTr_85 negx_x3x_xi25)
    iNsTr_90 := (iNsTr_86 + i_sumx_x14x_xi2)
    iNsTr_91 := (iNsTr_90 + iNsTr_87)
    iNsTr_92 := (iNsTr_91 + iNsTr_88)
    iNsTr_93 := (iNsTr_92 + iNsTr_89)
    iNsTr_94 := (yx_x05x_xi1 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (iNsTr_94 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 )  )
    $if exitcond1 $then  $place [bb_5_x264_pixel_sad_4x4x_xexit28] $else $place [bb_5_bb_5] $endif 
    //begin: basic-block x264_pixel_sad_4x4x_xexit28
    $merge bb_5_x264_pixel_sad_4x4x_xexit28
    $phi xx_xlcssa :=  ( $cast ($uint<32>) iNsTr_93) $on bb_5_x264_pixel_sad_4x4x_xexit28 
    $endmerge
    iNsTr_96 := scores[( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    ->(iNsTr_96) := xx_xlcssa
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [x264_pixel_sad_x4_4x4] 
$in (fenc : $pointer< $uint<8> > pix0 : $pointer< $uint<8> > pix1 : $pointer< $uint<8> > pix2 : $pointer< $uint<8> > pix3 : $pointer< $uint<8> > i_stride : $uint<32> scores : $pointer< $uint<32> > )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    $place [bb_0_bb_1]
    //begin: basic-block bb_1
    $merge bb_0_bb_1 bb_1_bb_1
    $phi yx_x05x_xi :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bb_0_bb_1 ( $cast ($uint<32>) iNsTr_29) $on bb_1_bb_1 
    $phi i_sumx_x14x_xi :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bb_0_bb_1 ( $cast ($uint<32>) iNsTr_28) $on bb_1_bb_1 
    $endmerge
    tmp30 := (yx_x05x_xi * ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    scevgepx_xi := fenc[tmp30]
    tmp31 := (tmp30 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgepx_x1x_xi := fenc[tmp31]
    tmp32 := (tmp30 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgepx_x2x_xi := fenc[tmp32]
    tmp33 := (tmp30 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgepx_x3x_xi := fenc[tmp33]
    tmp34 := (i_stride * yx_x05x_xi)
    scevgep14x_xi := pix0[tmp34]
    tmp35 := (tmp34 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep14x_x1x_xi := pix0[tmp35]
    tmp36 := (tmp34 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep14x_x2x_xi := pix0[tmp36]
    tmp37 := (tmp34 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep14x_x3x_xi := pix0[tmp37]
    // load 
    iNsTr_1 := ->(scevgepx_xi) 
    iNsTr_2 := ($cast ($uint<32>) iNsTr_1)
    // load 
    iNsTr_3 := ->(scevgep14x_xi) 
    iNsTr_4 := ($cast ($uint<32>) iNsTr_3)
    iNsTr_5 := (iNsTr_2 - iNsTr_4)
    // load 
    iNsTr_6 := ->(scevgepx_x1x_xi) 
    iNsTr_7 := ($cast ($uint<32>) iNsTr_6)
    // load 
    iNsTr_8 := ->(scevgep14x_x1x_xi) 
    iNsTr_9 := ($cast ($uint<32>) iNsTr_8)
    iNsTr_10 := (iNsTr_7 - iNsTr_9)
    // load 
    iNsTr_11 := ->(scevgepx_x2x_xi) 
    iNsTr_12 := ($cast ($uint<32>) iNsTr_11)
    // load 
    iNsTr_13 := ->(scevgep14x_x2x_xi) 
    iNsTr_14 := ($cast ($uint<32>) iNsTr_13)
    iNsTr_15 := (iNsTr_12 - iNsTr_14)
    // load 
    iNsTr_16 := ->(scevgepx_x3x_xi) 
    iNsTr_17 := ($cast ($uint<32>) iNsTr_16)
    // load 
    iNsTr_18 := ->(scevgep14x_x3x_xi) 
    iNsTr_19 := ($cast ($uint<32>) iNsTr_18)
    iNsTr_20 := (iNsTr_17 - iNsTr_19)
    // compare instruction
    isposx_xi := ( ($bitcast ( $int<32>) iNsTr_5) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xi := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_5)
    negx_x1x_xi := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_10)
    // compare instruction
    isposx_x1x_xi := ( ($bitcast ( $int<32>) iNsTr_10) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    iNsTr_21 := ( $mux isposx_xi iNsTr_5 negx_xi)
    iNsTr_22 := ( $mux isposx_x1x_xi iNsTr_10 negx_x1x_xi)
    // compare instruction
    isposx_x2x_xi := ( ($bitcast ( $int<32>) iNsTr_15) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_x2x_xi := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_15)
    negx_x3x_xi := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_20)
    // compare instruction
    isposx_x3x_xi := ( ($bitcast ( $int<32>) iNsTr_20) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    iNsTr_23 := ( $mux isposx_x2x_xi iNsTr_15 negx_x2x_xi)
    iNsTr_24 := ( $mux isposx_x3x_xi iNsTr_20 negx_x3x_xi)
    iNsTr_25 := (iNsTr_21 + i_sumx_x14x_xi)
    iNsTr_26 := (iNsTr_25 + iNsTr_22)
    iNsTr_27 := (iNsTr_26 + iNsTr_23)
    iNsTr_28 := (iNsTr_27 + iNsTr_24)
    iNsTr_29 := (yx_x05x_xi + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond29 := (iNsTr_29 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 )  )
    $if exitcond29 $then  $place [bb_1_x264_pixel_sad_4x4x_xexit] $else $place [bb_1_bb_1] $endif 
    //begin: basic-block x264_pixel_sad_4x4x_xexit
    $merge bb_1_x264_pixel_sad_4x4x_xexit
    $phi xx_xlcssa28 :=  ( $cast ($uint<32>) iNsTr_28) $on bb_1_x264_pixel_sad_4x4x_xexit 
    $endmerge
    ->(scores) := xx_xlcssa28
    $place [x264_pixel_sad_4x4x_xexit_bb_3]
    //begin: basic-block bb_3
    $merge bb_3_bb_3 x264_pixel_sad_4x4x_xexit_bb_3
    $phi yx_x05x_xi57 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on x264_pixel_sad_4x4x_xexit_bb_3 ( $cast ($uint<32>) iNsTr_61) $on bb_3_bb_3 
    $phi i_sumx_x14x_xi58 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on x264_pixel_sad_4x4x_xexit_bb_3 ( $cast ($uint<32>) iNsTr_60) $on bb_3_bb_3 
    $endmerge
    tmp20 := (yx_x05x_xi57 * ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    scevgepx_xi67 := fenc[tmp20]
    tmp21 := (tmp20 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgepx_x1x_xi68 := fenc[tmp21]
    tmp22 := (tmp20 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgepx_x2x_xi69 := fenc[tmp22]
    tmp23 := (tmp20 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgepx_x3x_xi70 := fenc[tmp23]
    tmp24 := (i_stride * yx_x05x_xi57)
    scevgep14x_xi71 := pix1[tmp24]
    tmp25 := (tmp24 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep14x_x1x_xi72 := pix1[tmp25]
    tmp26 := (tmp24 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep14x_x2x_xi73 := pix1[tmp26]
    tmp27 := (tmp24 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep14x_x3x_xi74 := pix1[tmp27]
    // load 
    iNsTr_33 := ->(scevgepx_xi67) 
    iNsTr_34 := ($cast ($uint<32>) iNsTr_33)
    // load 
    iNsTr_35 := ->(scevgep14x_xi71) 
    iNsTr_36 := ($cast ($uint<32>) iNsTr_35)
    iNsTr_37 := (iNsTr_34 - iNsTr_36)
    // load 
    iNsTr_38 := ->(scevgepx_x1x_xi68) 
    iNsTr_39 := ($cast ($uint<32>) iNsTr_38)
    // load 
    iNsTr_40 := ->(scevgep14x_x1x_xi72) 
    iNsTr_41 := ($cast ($uint<32>) iNsTr_40)
    iNsTr_42 := (iNsTr_39 - iNsTr_41)
    // load 
    iNsTr_43 := ->(scevgepx_x2x_xi69) 
    iNsTr_44 := ($cast ($uint<32>) iNsTr_43)
    // load 
    iNsTr_45 := ->(scevgep14x_x2x_xi73) 
    iNsTr_46 := ($cast ($uint<32>) iNsTr_45)
    iNsTr_47 := (iNsTr_44 - iNsTr_46)
    // load 
    iNsTr_48 := ->(scevgepx_x3x_xi70) 
    iNsTr_49 := ($cast ($uint<32>) iNsTr_48)
    // load 
    iNsTr_50 := ->(scevgep14x_x3x_xi74) 
    iNsTr_51 := ($cast ($uint<32>) iNsTr_50)
    iNsTr_52 := (iNsTr_49 - iNsTr_51)
    // compare instruction
    isposx_xi75 := ( ($bitcast ( $int<32>) iNsTr_37) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xi76 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_37)
    negx_x1x_xi77 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_42)
    // compare instruction
    isposx_x1x_xi78 := ( ($bitcast ( $int<32>) iNsTr_42) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    iNsTr_53 := ( $mux isposx_xi75 iNsTr_37 negx_xi76)
    iNsTr_54 := ( $mux isposx_x1x_xi78 iNsTr_42 negx_x1x_xi77)
    // compare instruction
    isposx_x2x_xi79 := ( ($bitcast ( $int<32>) iNsTr_47) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_x2x_xi80 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_47)
    negx_x3x_xi81 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_52)
    // compare instruction
    isposx_x3x_xi82 := ( ($bitcast ( $int<32>) iNsTr_52) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    iNsTr_55 := ( $mux isposx_x2x_xi79 iNsTr_47 negx_x2x_xi80)
    iNsTr_56 := ( $mux isposx_x3x_xi82 iNsTr_52 negx_x3x_xi81)
    iNsTr_57 := (iNsTr_53 + i_sumx_x14x_xi58)
    iNsTr_58 := (iNsTr_57 + iNsTr_54)
    iNsTr_59 := (iNsTr_58 + iNsTr_55)
    iNsTr_60 := (iNsTr_59 + iNsTr_56)
    iNsTr_61 := (yx_x05x_xi57 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond19 := (iNsTr_61 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 )  )
    $if exitcond19 $then  $place [bb_3_x264_pixel_sad_4x4x_xexit84] $else $place [bb_3_bb_3] $endif 
    //begin: basic-block x264_pixel_sad_4x4x_xexit84
    $merge bb_3_x264_pixel_sad_4x4x_xexit84
    $phi xx_xlcssa18 :=  ( $cast ($uint<32>) iNsTr_60) $on bb_3_x264_pixel_sad_4x4x_xexit84 
    $endmerge
    iNsTr_63 := scores[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    ->(iNsTr_63) := xx_xlcssa18
    $place [x264_pixel_sad_4x4x_xexit84_bb_5]
    //begin: basic-block bb_5
    $merge bb_5_bb_5 x264_pixel_sad_4x4x_xexit84_bb_5
    $phi yx_x05x_xi29 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on x264_pixel_sad_4x4x_xexit84_bb_5 ( $cast ($uint<32>) iNsTr_94) $on bb_5_bb_5 
    $phi i_sumx_x14x_xi30 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on x264_pixel_sad_4x4x_xexit84_bb_5 ( $cast ($uint<32>) iNsTr_93) $on bb_5_bb_5 
    $endmerge
    tmp := (yx_x05x_xi29 * ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    scevgepx_xi39 := fenc[tmp]
    tmp11 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgepx_x1x_xi40 := fenc[tmp11]
    tmp12 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgepx_x2x_xi41 := fenc[tmp12]
    tmp13 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgepx_x3x_xi42 := fenc[tmp13]
    tmp14 := (i_stride * yx_x05x_xi29)
    scevgep14x_xi43 := pix2[tmp14]
    tmp15 := (tmp14 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep14x_x1x_xi44 := pix2[tmp15]
    tmp16 := (tmp14 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep14x_x2x_xi45 := pix2[tmp16]
    tmp17 := (tmp14 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep14x_x3x_xi46 := pix2[tmp17]
    // load 
    iNsTr_66 := ->(scevgepx_xi39) 
    iNsTr_67 := ($cast ($uint<32>) iNsTr_66)
    // load 
    iNsTr_68 := ->(scevgep14x_xi43) 
    iNsTr_69 := ($cast ($uint<32>) iNsTr_68)
    iNsTr_70 := (iNsTr_67 - iNsTr_69)
    // load 
    iNsTr_71 := ->(scevgepx_x1x_xi40) 
    iNsTr_72 := ($cast ($uint<32>) iNsTr_71)
    // load 
    iNsTr_73 := ->(scevgep14x_x1x_xi44) 
    iNsTr_74 := ($cast ($uint<32>) iNsTr_73)
    iNsTr_75 := (iNsTr_72 - iNsTr_74)
    // load 
    iNsTr_76 := ->(scevgepx_x2x_xi41) 
    iNsTr_77 := ($cast ($uint<32>) iNsTr_76)
    // load 
    iNsTr_78 := ->(scevgep14x_x2x_xi45) 
    iNsTr_79 := ($cast ($uint<32>) iNsTr_78)
    iNsTr_80 := (iNsTr_77 - iNsTr_79)
    // load 
    iNsTr_81 := ->(scevgepx_x3x_xi42) 
    iNsTr_82 := ($cast ($uint<32>) iNsTr_81)
    // load 
    iNsTr_83 := ->(scevgep14x_x3x_xi46) 
    iNsTr_84 := ($cast ($uint<32>) iNsTr_83)
    iNsTr_85 := (iNsTr_82 - iNsTr_84)
    // compare instruction
    isposx_xi47 := ( ($bitcast ( $int<32>) iNsTr_70) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xi48 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_70)
    negx_x1x_xi49 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_75)
    // compare instruction
    isposx_x1x_xi50 := ( ($bitcast ( $int<32>) iNsTr_75) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    iNsTr_86 := ( $mux isposx_xi47 iNsTr_70 negx_xi48)
    iNsTr_87 := ( $mux isposx_x1x_xi50 iNsTr_75 negx_x1x_xi49)
    // compare instruction
    isposx_x2x_xi51 := ( ($bitcast ( $int<32>) iNsTr_80) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_x2x_xi52 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_80)
    negx_x3x_xi53 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_85)
    // compare instruction
    isposx_x3x_xi54 := ( ($bitcast ( $int<32>) iNsTr_85) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    iNsTr_88 := ( $mux isposx_x2x_xi51 iNsTr_80 negx_x2x_xi52)
    iNsTr_89 := ( $mux isposx_x3x_xi54 iNsTr_85 negx_x3x_xi53)
    iNsTr_90 := (iNsTr_86 + i_sumx_x14x_xi30)
    iNsTr_91 := (iNsTr_90 + iNsTr_87)
    iNsTr_92 := (iNsTr_91 + iNsTr_88)
    iNsTr_93 := (iNsTr_92 + iNsTr_89)
    iNsTr_94 := (yx_x05x_xi29 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond := (iNsTr_94 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 )  )
    $if exitcond $then  $place [bb_5_x264_pixel_sad_4x4x_xexit56] $else $place [bb_5_bb_5] $endif 
    //begin: basic-block x264_pixel_sad_4x4x_xexit56
    $merge bb_5_x264_pixel_sad_4x4x_xexit56
    $phi xx_xlcssa10 :=  ( $cast ($uint<32>) iNsTr_93) $on bb_5_x264_pixel_sad_4x4x_xexit56 
    $endmerge
    iNsTr_96 := scores[( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    ->(iNsTr_96) := xx_xlcssa10
    $place [x264_pixel_sad_4x4x_xexit56_bb_7]
    //begin: basic-block bb_7
    $merge bb_7_bb_7 x264_pixel_sad_4x4x_xexit56_bb_7
    $phi yx_x05x_xi1 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on x264_pixel_sad_4x4x_xexit56_bb_7 ( $cast ($uint<32>) iNsTr_127) $on bb_7_bb_7 
    $phi i_sumx_x14x_xi2 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on x264_pixel_sad_4x4x_xexit56_bb_7 ( $cast ($uint<32>) iNsTr_126) $on bb_7_bb_7 
    $endmerge
    tmp2 := (yx_x05x_xi1 * ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    scevgepx_xi11 := fenc[tmp2]
    tmp3 := (tmp2 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgepx_x1x_xi12 := fenc[tmp3]
    tmp4 := (tmp2 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgepx_x2x_xi13 := fenc[tmp4]
    tmp5 := (tmp2 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgepx_x3x_xi14 := fenc[tmp5]
    tmp6 := (i_stride * yx_x05x_xi1)
    scevgep14x_xi15 := pix3[tmp6]
    tmp7 := (tmp6 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep14x_x1x_xi16 := pix3[tmp7]
    tmp8 := (tmp6 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep14x_x2x_xi17 := pix3[tmp8]
    tmp9 := (tmp6 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep14x_x3x_xi18 := pix3[tmp9]
    // load 
    iNsTr_99 := ->(scevgepx_xi11) 
    iNsTr_100 := ($cast ($uint<32>) iNsTr_99)
    // load 
    iNsTr_101 := ->(scevgep14x_xi15) 
    iNsTr_102 := ($cast ($uint<32>) iNsTr_101)
    iNsTr_103 := (iNsTr_100 - iNsTr_102)
    // load 
    iNsTr_104 := ->(scevgepx_x1x_xi12) 
    iNsTr_105 := ($cast ($uint<32>) iNsTr_104)
    // load 
    iNsTr_106 := ->(scevgep14x_x1x_xi16) 
    iNsTr_107 := ($cast ($uint<32>) iNsTr_106)
    iNsTr_108 := (iNsTr_105 - iNsTr_107)
    // load 
    iNsTr_109 := ->(scevgepx_x2x_xi13) 
    iNsTr_110 := ($cast ($uint<32>) iNsTr_109)
    // load 
    iNsTr_111 := ->(scevgep14x_x2x_xi17) 
    iNsTr_112 := ($cast ($uint<32>) iNsTr_111)
    iNsTr_113 := (iNsTr_110 - iNsTr_112)
    // load 
    iNsTr_114 := ->(scevgepx_x3x_xi14) 
    iNsTr_115 := ($cast ($uint<32>) iNsTr_114)
    // load 
    iNsTr_116 := ->(scevgep14x_x3x_xi18) 
    iNsTr_117 := ($cast ($uint<32>) iNsTr_116)
    iNsTr_118 := (iNsTr_115 - iNsTr_117)
    // compare instruction
    isposx_xi19 := ( ($bitcast ( $int<32>) iNsTr_103) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xi20 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_103)
    negx_x1x_xi21 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_108)
    // compare instruction
    isposx_x1x_xi22 := ( ($bitcast ( $int<32>) iNsTr_108) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    iNsTr_119 := ( $mux isposx_xi19 iNsTr_103 negx_xi20)
    iNsTr_120 := ( $mux isposx_x1x_xi22 iNsTr_108 negx_x1x_xi21)
    // compare instruction
    isposx_x2x_xi23 := ( ($bitcast ( $int<32>) iNsTr_113) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_x2x_xi24 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_113)
    negx_x3x_xi25 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_118)
    // compare instruction
    isposx_x3x_xi26 := ( ($bitcast ( $int<32>) iNsTr_118) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    iNsTr_121 := ( $mux isposx_x2x_xi23 iNsTr_113 negx_x2x_xi24)
    iNsTr_122 := ( $mux isposx_x3x_xi26 iNsTr_118 negx_x3x_xi25)
    iNsTr_123 := (iNsTr_119 + i_sumx_x14x_xi2)
    iNsTr_124 := (iNsTr_123 + iNsTr_120)
    iNsTr_125 := (iNsTr_124 + iNsTr_121)
    iNsTr_126 := (iNsTr_125 + iNsTr_122)
    iNsTr_127 := (yx_x05x_xi1 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (iNsTr_127 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 )  )
    $if exitcond1 $then  $place [bb_7_x264_pixel_sad_4x4x_xexit28] $else $place [bb_7_bb_7] $endif 
    //begin: basic-block x264_pixel_sad_4x4x_xexit28
    $merge bb_7_x264_pixel_sad_4x4x_xexit28
    $phi xx_xlcssa :=  ( $cast ($uint<32>) iNsTr_126) $on bb_7_x264_pixel_sad_4x4x_xexit28 
    $endmerge
    iNsTr_129 := scores[( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    ->(iNsTr_129) := xx_xlcssa
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [x264_intra_satd_x3_8x8c] 
$in (fenc : $pointer< $uint<8> > fdec : $pointer< $uint<8> > res : $pointer< $uint<32> > )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    $call x264_predict_8x8c_dc_c (fdec )  ()
    $call x264_pixel_satd_8x4 (fdec ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  fenc ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )  (iNsTr_1)
    iNsTr_2 := fdec[( $bitcast ($uint<32> ) _b00000000000000000000000010000000 ) ]
    iNsTr_3 := fenc[( $bitcast ($uint<32> ) _b00000000000000000000000001000000 ) ]
    $call x264_pixel_satd_8x4 (iNsTr_2 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_3 ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )  (iNsTr_4)
    iNsTr_5 := (iNsTr_4 + iNsTr_1)
    ->(res) := iNsTr_5
    scevgepx_xi := fdec[( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) ]
    scevgep5x_xi := fdec[( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ]
    scevgep56x_xi := ($bitcast ($pointer< $uint<32> >) scevgep5x_xi)
    scevgep78x_xi := ($bitcast ($pointer< $uint<32> >) fdec)
    // load 
    iNsTr_7 := ->(scevgepx_xi) 
    iNsTr_8 := ($cast ($uint<32>) iNsTr_7)
    iNsTr_9 := (iNsTr_8 * ( $bitcast ($uint<32> ) _b00000001000000010000000100000001 ) )
    ->(scevgep78x_xi) := iNsTr_9
    ->(scevgep56x_xi) := iNsTr_9
    scevgepx_x1x_xi := fdec[( $bitcast ($uint<32> ) _b00000000000000000000000000011111 ) ]
    scevgep5x_x1x_xi := fdec[( $bitcast ($uint<32> ) _b00000000000000000000000000100100 ) ]
    scevgep56x_x1x_xi := ($bitcast ($pointer< $uint<32> >) scevgep5x_x1x_xi)
    scevgep7x_x1x_xi := fdec[( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) ]
    scevgep78x_x1x_xi := ($bitcast ($pointer< $uint<32> >) scevgep7x_x1x_xi)
    // load 
    iNsTr_12 := ->(scevgepx_x1x_xi) 
    iNsTr_13 := ($cast ($uint<32>) iNsTr_12)
    iNsTr_14 := (iNsTr_13 * ( $bitcast ($uint<32> ) _b00000001000000010000000100000001 ) )
    ->(scevgep78x_x1x_xi) := iNsTr_14
    ->(scevgep56x_x1x_xi) := iNsTr_14
    scevgepx_x2x_xi := fdec[( $bitcast ($uint<32> ) _b00000000000000000000000000111111 ) ]
    scevgep5x_x2x_xi := fdec[( $bitcast ($uint<32> ) _b00000000000000000000000001000100 ) ]
    scevgep56x_x2x_xi := ($bitcast ($pointer< $uint<32> >) scevgep5x_x2x_xi)
    scevgep7x_x2x_xi := fdec[( $bitcast ($uint<32> ) _b00000000000000000000000001000000 ) ]
    scevgep78x_x2x_xi := ($bitcast ($pointer< $uint<32> >) scevgep7x_x2x_xi)
    // load 
    iNsTr_17 := ->(scevgepx_x2x_xi) 
    iNsTr_18 := ($cast ($uint<32>) iNsTr_17)
    iNsTr_19 := (iNsTr_18 * ( $bitcast ($uint<32> ) _b00000001000000010000000100000001 ) )
    ->(scevgep78x_x2x_xi) := iNsTr_19
    ->(scevgep56x_x2x_xi) := iNsTr_19
    scevgepx_x3x_xi := fdec[( $bitcast ($uint<32> ) _b00000000000000000000000001011111 ) ]
    scevgep5x_x3x_xi := fdec[( $bitcast ($uint<32> ) _b00000000000000000000000001100100 ) ]
    scevgep56x_x3x_xi := ($bitcast ($pointer< $uint<32> >) scevgep5x_x3x_xi)
    scevgep7x_x3x_xi := fdec[( $bitcast ($uint<32> ) _b00000000000000000000000001100000 ) ]
    scevgep78x_x3x_xi := ($bitcast ($pointer< $uint<32> >) scevgep7x_x3x_xi)
    // load 
    iNsTr_22 := ->(scevgepx_x3x_xi) 
    iNsTr_23 := ($cast ($uint<32>) iNsTr_22)
    iNsTr_24 := (iNsTr_23 * ( $bitcast ($uint<32> ) _b00000001000000010000000100000001 ) )
    ->(scevgep78x_x3x_xi) := iNsTr_24
    ->(scevgep56x_x3x_xi) := iNsTr_24
    scevgepx_x4x_xi := fdec[( $bitcast ($uint<32> ) _b00000000000000000000000001111111 ) ]
    scevgep5x_x4x_xi := fdec[( $bitcast ($uint<32> ) _b00000000000000000000000010000100 ) ]
    scevgep56x_x4x_xi := ($bitcast ($pointer< $uint<32> >) scevgep5x_x4x_xi)
    scevgep78x_x4x_xi := ($bitcast ($pointer< $uint<32> >) iNsTr_2)
    // load 
    iNsTr_27 := ->(scevgepx_x4x_xi) 
    iNsTr_28 := ($cast ($uint<32>) iNsTr_27)
    iNsTr_29 := (iNsTr_28 * ( $bitcast ($uint<32> ) _b00000001000000010000000100000001 ) )
    ->(scevgep78x_x4x_xi) := iNsTr_29
    ->(scevgep56x_x4x_xi) := iNsTr_29
    scevgepx_x5x_xi := fdec[( $bitcast ($uint<32> ) _b00000000000000000000000010011111 ) ]
    scevgep5x_x5x_xi := fdec[( $bitcast ($uint<32> ) _b00000000000000000000000010100100 ) ]
    scevgep56x_x5x_xi := ($bitcast ($pointer< $uint<32> >) scevgep5x_x5x_xi)
    scevgep7x_x5x_xi := fdec[( $bitcast ($uint<32> ) _b00000000000000000000000010100000 ) ]
    scevgep78x_x5x_xi := ($bitcast ($pointer< $uint<32> >) scevgep7x_x5x_xi)
    // load 
    iNsTr_32 := ->(scevgepx_x5x_xi) 
    iNsTr_33 := ($cast ($uint<32>) iNsTr_32)
    iNsTr_34 := (iNsTr_33 * ( $bitcast ($uint<32> ) _b00000001000000010000000100000001 ) )
    ->(scevgep78x_x5x_xi) := iNsTr_34
    ->(scevgep56x_x5x_xi) := iNsTr_34
    scevgepx_x6x_xi := fdec[( $bitcast ($uint<32> ) _b00000000000000000000000010111111 ) ]
    scevgep5x_x6x_xi := fdec[( $bitcast ($uint<32> ) _b00000000000000000000000011000100 ) ]
    scevgep56x_x6x_xi := ($bitcast ($pointer< $uint<32> >) scevgep5x_x6x_xi)
    scevgep7x_x6x_xi := fdec[( $bitcast ($uint<32> ) _b00000000000000000000000011000000 ) ]
    scevgep78x_x6x_xi := ($bitcast ($pointer< $uint<32> >) scevgep7x_x6x_xi)
    // load 
    iNsTr_37 := ->(scevgepx_x6x_xi) 
    iNsTr_38 := ($cast ($uint<32>) iNsTr_37)
    iNsTr_39 := (iNsTr_38 * ( $bitcast ($uint<32> ) _b00000001000000010000000100000001 ) )
    ->(scevgep78x_x6x_xi) := iNsTr_39
    ->(scevgep56x_x6x_xi) := iNsTr_39
    scevgepx_x7x_xi := fdec[( $bitcast ($uint<32> ) _b00000000000000000000000011011111 ) ]
    scevgep5x_x7x_xi := fdec[( $bitcast ($uint<32> ) _b00000000000000000000000011100100 ) ]
    scevgep56x_x7x_xi := ($bitcast ($pointer< $uint<32> >) scevgep5x_x7x_xi)
    scevgep7x_x7x_xi := fdec[( $bitcast ($uint<32> ) _b00000000000000000000000011100000 ) ]
    scevgep78x_x7x_xi := ($bitcast ($pointer< $uint<32> >) scevgep7x_x7x_xi)
    // load 
    iNsTr_42 := ->(scevgepx_x7x_xi) 
    iNsTr_43 := ($cast ($uint<32>) iNsTr_42)
    iNsTr_44 := (iNsTr_43 * ( $bitcast ($uint<32> ) _b00000001000000010000000100000001 ) )
    ->(scevgep78x_x7x_xi) := iNsTr_44
    ->(scevgep56x_x7x_xi) := iNsTr_44
    $call x264_pixel_satd_8x4 (fdec ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  fenc ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )  (iNsTr_47)
    $call x264_pixel_satd_8x4 (iNsTr_2 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_3 ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )  (iNsTr_48)
    iNsTr_49 := (iNsTr_48 + iNsTr_47)
    iNsTr_50 := res[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    ->(iNsTr_50) := iNsTr_49
    iNsTr_52 := fdec[( $bitcast ($uint<32> ) _b11111111111111111111111111100000 ) ]
    iNsTr_53 := ($bitcast ($pointer< $uint<32> >) iNsTr_52)
    // load 
    iNsTr_54 := ->(iNsTr_53) 
    iNsTr_55 := fdec[( $bitcast ($uint<32> ) _b11111111111111111111111111100100 ) ]
    iNsTr_56 := ($bitcast ($pointer< $uint<32> >) iNsTr_55)
    // load 
    iNsTr_57 := ->(iNsTr_56) 
    ->(scevgep78x_xi) := iNsTr_54
    ->(scevgep56x_xi) := iNsTr_57
    ->(scevgep78x_x1x_xi) := iNsTr_54
    ->(scevgep56x_x1x_xi) := iNsTr_57
    ->(scevgep78x_x2x_xi) := iNsTr_54
    ->(scevgep56x_x2x_xi) := iNsTr_57
    ->(scevgep78x_x3x_xi) := iNsTr_54
    ->(scevgep56x_x3x_xi) := iNsTr_57
    ->(scevgep78x_x4x_xi) := iNsTr_54
    ->(scevgep56x_x4x_xi) := iNsTr_57
    ->(scevgep78x_x5x_xi) := iNsTr_54
    ->(scevgep56x_x5x_xi) := iNsTr_57
    ->(scevgep78x_x6x_xi) := iNsTr_54
    ->(scevgep56x_x6x_xi) := iNsTr_57
    ->(scevgep78x_x7x_xi) := iNsTr_54
    ->(scevgep56x_x7x_xi) := iNsTr_57
    $call x264_pixel_satd_8x4 (fdec ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  fenc ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )  (iNsTr_74)
    $call x264_pixel_satd_8x4 (iNsTr_2 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_3 ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )  (iNsTr_75)
    iNsTr_76 := (iNsTr_75 + iNsTr_74)
    iNsTr_77 := res[( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    ->(iNsTr_77) := iNsTr_76
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [x264_intra_satd_x3_16x16] 
$in (fenc : $pointer< $uint<8> > fdec : $pointer< $uint<8> > res : $pointer< $uint<32> > )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    iNsTr_0 := fdec[( $bitcast ($uint<32> ) _b11111111111111111111111111100000 ) ]
    iNsTr_1 := ($bitcast ($pointer< $uint<32> >) iNsTr_0)
    // load 
    iNsTr_2 := ->(iNsTr_1) 
    iNsTr_3 := fdec[( $bitcast ($uint<32> ) _b11111111111111111111111111100100 ) ]
    iNsTr_4 := ($bitcast ($pointer< $uint<32> >) iNsTr_3)
    // load 
    iNsTr_5 := ->(iNsTr_4) 
    iNsTr_6 := fdec[( $bitcast ($uint<32> ) _b11111111111111111111111111101000 ) ]
    iNsTr_7 := ($bitcast ($pointer< $uint<32> >) iNsTr_6)
    // load 
    iNsTr_8 := ->(iNsTr_7) 
    iNsTr_9 := fdec[( $bitcast ($uint<32> ) _b11111111111111111111111111101100 ) ]
    iNsTr_10 := ($bitcast ($pointer< $uint<32> >) iNsTr_9)
    // load 
    iNsTr_11 := ->(iNsTr_10) 
    $place [bb_0_bb_1]
    //begin: basic-block bb_1
    $merge bb_0_bb_1 bb_1_bb_1
    $phi ix_x01x_xi :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bb_0_bb_1 ( $cast ($uint<32>) iNsTr_17) $on bb_1_bb_1 
    $endmerge
    tmp33 := (ix_x01x_xi * ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    scevgep34 := fdec[tmp33]
    scevgep1112x_xi := ($bitcast ($pointer< $uint<32> >) scevgep34)
    tmp36 := (tmp33 + ( $bitcast ($uint<32> ) _b00000000000000000000000000001100 ) )
    scevgep37 := fdec[tmp36]
    scevgep910x_xi := ($bitcast ($pointer< $uint<32> >) scevgep37)
    tmp39 := (tmp33 + ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) )
    scevgep40 := fdec[tmp39]
    scevgep67x_xi := ($bitcast ($pointer< $uint<32> >) scevgep40)
    tmp42 := (tmp33 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    scevgep43 := fdec[tmp42]
    scevgep4x_xi := ($bitcast ($pointer< $uint<32> >) scevgep43)
    ->(scevgep1112x_xi) := iNsTr_2
    ->(scevgep4x_xi) := iNsTr_5
    ->(scevgep67x_xi) := iNsTr_8
    ->(scevgep910x_xi) := iNsTr_11
    iNsTr_17 := (ix_x01x_xi + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond32 := (iNsTr_17 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond32 $then  $place [bb_1_x264_predict_16x16_v_cx_xexit] $else $place [bb_1_bb_1] $endif 
    //begin: basic-block x264_predict_16x16_v_cx_xexit
    $merge bb_1_x264_predict_16x16_v_cx_xexit
    $endmerge
    $call x264_pixel_satd_16x16 (fdec ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  fenc ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )  (iNsTr_19)
    ->(res) := iNsTr_19
    $place [x264_predict_16x16_v_cx_xexit_bb_3]
    //begin: basic-block bb_3
    $merge bb_3_bb_3 x264_predict_16x16_v_cx_xexit_bb_3
    $phi ix_x01x_xi1 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on x264_predict_16x16_v_cx_xexit_bb_3 ( $cast ($uint<32>) iNsTr_29) $on bb_3_bb_3 
    $endmerge
    tmp18 := (ix_x01x_xi1 * ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    scevgep19 := fdec[tmp18]
    scevgep1314x_xi := ($bitcast ($pointer< $uint<32> >) scevgep19)
    tmp21 := (tmp18 + ( $bitcast ($uint<32> ) _b00000000000000000000000000001100 ) )
    scevgep22 := fdec[tmp21]
    scevgep1112x_xi5 := ($bitcast ($pointer< $uint<32> >) scevgep22)
    tmp24 := (tmp18 + ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) )
    scevgep25 := fdec[tmp24]
    scevgep89x_xi := ($bitcast ($pointer< $uint<32> >) scevgep25)
    tmp27 := (tmp18 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    scevgep28 := fdec[tmp27]
    scevgep56x_xi := ($bitcast ($pointer< $uint<32> >) scevgep28)
    tmp30 := (tmp18 + ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) )
    scevgepx_xi3 := fdec[tmp30]
    // load 
    iNsTr_22 := ->(scevgepx_xi3) 
    iNsTr_23 := ($cast ($uint<32>) iNsTr_22)
    iNsTr_24 := (iNsTr_23 * ( $bitcast ($uint<32> ) _b00000001000000010000000100000001 ) )
    ->(scevgep1314x_xi) := iNsTr_24
    ->(scevgep56x_xi) := iNsTr_24
    ->(scevgep89x_xi) := iNsTr_24
    ->(scevgep1112x_xi5) := iNsTr_24
    iNsTr_29 := (ix_x01x_xi1 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond17 := (iNsTr_29 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond17 $then  $place [bb_3_x264_predict_16x16_h_cx_xexit] $else $place [bb_3_bb_3] $endif 
    //begin: basic-block x264_predict_16x16_h_cx_xexit
    $merge bb_3_x264_predict_16x16_h_cx_xexit
    $endmerge
    $call x264_pixel_satd_16x16 (fdec ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  fenc ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )  (iNsTr_31)
    iNsTr_32 := res[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    ->(iNsTr_32) := iNsTr_31
    $place [x264_predict_16x16_h_cx_xexit_bb_5]
    //begin: basic-block bb_5
    $merge bb_5_bb_5 x264_predict_16x16_h_cx_xexit_bb_5
    $phi dcx_x05x_xi :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on x264_predict_16x16_h_cx_xexit_bb_5 ( $cast ($uint<32>) iNsTr_40) $on bb_5_bb_5 
    $phi ix_x04x_xi :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on x264_predict_16x16_h_cx_xexit_bb_5 ( $cast ($uint<32>) iNsTr_41) $on bb_5_bb_5 
    $endmerge
    tmp12 := (ix_x04x_xi + ( $bitcast ($uint<32> ) _b11111111111111111111111111100000 ) )
    scevgep25x_xi := fdec[tmp12]
    tmp14 := (ix_x04x_xi * ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    tmp15 := (tmp14 + ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) )
    scevgep23x_xi := fdec[tmp15]
    // load 
    iNsTr_35 := ->(scevgep23x_xi) 
    iNsTr_36 := ($cast ($uint<32>) iNsTr_35)
    // load 
    iNsTr_37 := ->(scevgep25x_xi) 
    iNsTr_38 := ($cast ($uint<32>) iNsTr_37)
    iNsTr_39 := (iNsTr_36 + dcx_x05x_xi)
    iNsTr_40 := (iNsTr_39 + iNsTr_38)
    iNsTr_41 := (ix_x04x_xi + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond11 := (iNsTr_41 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond11 $then  $place [bb_5_bbx_xnphx_xi] $else $place [bb_5_bb_5] $endif 
    //begin: basic-block bbx_xnphx_xi
    $merge bb_5_bbx_xnphx_xi
    $phi xx_xlcssa :=  ( $cast ($uint<32>) iNsTr_40) $on bb_5_bbx_xnphx_xi 
    $endmerge
    phitmpx_xi := (xx_xlcssa + ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    phitmp8x_xi :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) phitmpx_xi) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 )  )))
    phitmp9x_xi := (phitmp8x_xi * ( $bitcast ($uint<32> ) _b00000001000000010000000100000001 ) )
    $place [bbx_xnphx_xi_bb_7]
    //begin: basic-block bb_7
    $merge bb_7_bb_7 bbx_xnphx_xi_bb_7
    $phi i1x_x02x_xi :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xi_bb_7 ( $cast ($uint<32>) iNsTr_48) $on bb_7_bb_7 
    $endmerge
    tmp := (i1x_x02x_xi * ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    scevgep := fdec[tmp]
    scevgep1819x_xi := ($bitcast ($pointer< $uint<32> >) scevgep)
    tmp2 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000001100 ) )
    scevgep3 := fdec[tmp2]
    scevgep1617x_xi := ($bitcast ($pointer< $uint<32> >) scevgep3)
    tmp5 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) )
    scevgep6 := fdec[tmp5]
    scevgep1314x_xi11 := ($bitcast ($pointer< $uint<32> >) scevgep6)
    tmp8 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    scevgep9 := fdec[tmp8]
    scevgep11x_xi9 := ($bitcast ($pointer< $uint<32> >) scevgep9)
    ->(scevgep1819x_xi) := phitmp9x_xi
    ->(scevgep11x_xi9) := phitmp9x_xi
    ->(scevgep1314x_xi11) := phitmp9x_xi
    ->(scevgep1617x_xi) := phitmp9x_xi
    iNsTr_48 := (i1x_x02x_xi + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond := (iNsTr_48 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond $then  $place [bb_7_x264_predict_16x16_dc_cx_xexit] $else $place [bb_7_bb_7] $endif 
    //begin: basic-block x264_predict_16x16_dc_cx_xexit
    $merge bb_7_x264_predict_16x16_dc_cx_xexit
    $endmerge
    $call x264_pixel_satd_16x16 (fdec ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  fenc ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )  (iNsTr_50)
    iNsTr_51 := res[( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    ->(iNsTr_51) := iNsTr_50
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [x264_pixel_ads4] 
$in (enc_dc : $pointer< $uint<32> > sums : $pointer< $uint<16> > delta : $uint<32> cost_mvx : $pointer< $uint<16> > mvs : $pointer< $uint<16> > width : $uint<32> thresh : $uint<32> )
$out (ret_val__ : $uint<32>)
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    // compare instruction
    iNsTr_0 := ( ($bitcast ( $int<32>) width) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    $if iNsTr_0 $then  $place [bb_0_bbx_xnph] $else $place [bb_0_xx_x_crit_edge] $endif 
    //begin: basic-block bbx_xnph
    $merge bb_0_bbx_xnph
    $endmerge
    iNsTr_2 := enc_dc[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    iNsTr_3 := enc_dc[( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    iNsTr_4 := enc_dc[( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    iNsTr_5 := (delta + ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) )
    $place [bbx_xnph_bb_2]
    //begin: basic-block bb_2
    $merge bb_4_bb_2 bbx_xnph_bb_2
    $phi ix_x09 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph_bb_2 ( $cast ($uint<32>) iNsTr_40) $on bb_4_bb_2 
    $phi nmvx_x17 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph_bb_2 ( $cast ($uint<32>) nmvx_x0) $on bb_4_bb_2 
    $endmerge
    tmp := ($cast ($uint<16>) ix_x09)
    xx_x08 := sums[ix_x09]
    tmp4 := (iNsTr_5 + ix_x09)
    scevgep15 := sums[tmp4]
    tmp6 := (delta + ix_x09)
    scevgep13 := sums[tmp6]
    tmp8 := (ix_x09 + ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) )
    scevgep11 := sums[tmp8]
    scevgep := cost_mvx[ix_x09]
    // load 
    iNsTr_8 := ->(enc_dc) 
    // load 
    iNsTr_9 := ->(xx_x08) 
    iNsTr_10 := ($cast ($uint<32>) iNsTr_9)
    iNsTr_11 := (iNsTr_8 - iNsTr_10)
    // compare instruction
    ispos := ( ($bitcast ( $int<32>) iNsTr_11) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    neg := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_11)
    iNsTr_12 := ( $mux ispos iNsTr_11 neg)
    // load 
    iNsTr_13 := ->(iNsTr_2) 
    // load 
    iNsTr_14 := ->(scevgep11) 
    iNsTr_15 := ($cast ($uint<32>) iNsTr_14)
    iNsTr_16 := (iNsTr_13 - iNsTr_15)
    // compare instruction
    ispos1 := ( ($bitcast ( $int<32>) iNsTr_16) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    neg2 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_16)
    iNsTr_17 := ( $mux ispos1 iNsTr_16 neg2)
    // load 
    iNsTr_18 := ->(iNsTr_3) 
    // load 
    iNsTr_19 := ->(scevgep13) 
    iNsTr_20 := ($cast ($uint<32>) iNsTr_19)
    iNsTr_21 := (iNsTr_18 - iNsTr_20)
    // compare instruction
    ispos3 := ( ($bitcast ( $int<32>) iNsTr_21) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    neg4 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_21)
    iNsTr_22 := ( $mux ispos3 iNsTr_21 neg4)
    // load 
    iNsTr_23 := ->(iNsTr_4) 
    // load 
    iNsTr_24 := ->(scevgep15) 
    iNsTr_25 := ($cast ($uint<32>) iNsTr_24)
    iNsTr_26 := (iNsTr_23 - iNsTr_25)
    // compare instruction
    ispos5 := ( ($bitcast ( $int<32>) iNsTr_26) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    neg6 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_26)
    iNsTr_27 := ( $mux ispos5 iNsTr_26 neg6)
    // load 
    iNsTr_28 := ->(scevgep) 
    iNsTr_29 := ($cast ($uint<32>) iNsTr_28)
    iNsTr_30 := (iNsTr_17 + iNsTr_12)
    iNsTr_31 := (iNsTr_30 + iNsTr_29)
    iNsTr_32 := (iNsTr_31 + iNsTr_22)
    iNsTr_33 := (iNsTr_32 + iNsTr_27)
    // compare instruction
    iNsTr_34 := ( ($bitcast ( $int<32>) iNsTr_33) <   ($bitcast ( $int<32>) thresh ) )
    $if iNsTr_34 $then  $place [bb_2_bb_3] $else $place [bb_2_bb_4] $endif 
    //begin: basic-block bb_3
    $merge bb_2_bb_3
    $endmerge
    iNsTr_36 := (nmvx_x17 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_37 := mvs[nmvx_x17]
    ->(iNsTr_37) := tmp
    $place [bb_3_bb_4]
    //begin: basic-block bb_4
    $merge bb_2_bb_4 bb_3_bb_4
    $phi nmvx_x0 :=  ( $cast ($uint<32>) iNsTr_36) $on bb_3_bb_4 ( $cast ($uint<32>) nmvx_x17) $on bb_2_bb_4 
    $endmerge
    iNsTr_40 := (ix_x09 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (iNsTr_40 == width )
    $if exitcond1 $then  $place [bb_4_xx_x_crit_edgex_xloopexit] $else $place [bb_4_bb_2] $endif 
    //begin: basic-block xx_x_crit_edgex_xloopexit
    $merge bb_4_xx_x_crit_edgex_xloopexit
    $phi nmvx_x0x_xlcssa :=  ( $cast ($uint<32>) nmvx_x0) $on bb_4_xx_x_crit_edgex_xloopexit 
    $endmerge
    $place [xx_x_crit_edgex_xloopexit_xx_x_crit_edge]
    //begin: basic-block xx_x_crit_edge
    $merge bb_0_xx_x_crit_edge xx_x_crit_edgex_xloopexit_xx_x_crit_edge
    $phi ret_val__ :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bb_0_xx_x_crit_edge ( $cast ($uint<32>) nmvx_x0x_xlcssa) $on xx_x_crit_edgex_xloopexit_xx_x_crit_edge 
    $endmerge
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [x264_mb_mc_8x8] 
$in (h : $pointer< structx_xx264_t > i8 : $uint<32> )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    iNsTr_0 := (i8 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_1 := (iNsTr_0 & ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_2 := (i8 & ( $bitcast ($uint<32> ) _b11111111111111111111111111111110 ) )
    iNsTr_3 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000110010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_4 := ->(iNsTr_3) 
    // compare instruction
    iNsTr_5 := (iNsTr_4 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if iNsTr_5 $then  $place [bb_0_bb_1] $else $place [bb_0_bb_6] $endif 
    //begin: basic-block bb_1
    $merge bb_0_bb_1
    $endmerge
    iNsTr_7 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001001110 ) ][i8]
    // load 
    iNsTr_8 := ->(iNsTr_7) 
    iNsTr_9 := ($cast ($uint<32>) iNsTr_8)
    $switch iNsTr_9
    $when _b00000000000000000000000000000011 $then 
    $place [bb_1_bb_2]
    $when _b00000000000000000000000000000001 $then 
    $place [bb_1_bb_3]
    $when _b00000000000000000000000000000010 $then 
    $place [bb_1_bb_4]
    $when _b00000000000000000000000000000000 $then 
    $place [bb_1_bb_5]
    $default 
    $place [bb_1_bb_11]
    $endswitch
    //begin: basic-block bb_2
    $merge bb_1_bb_2
    $endmerge
    $call x264_mb_mc_0xywh (h iNsTr_1 iNsTr_2 ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )  ()
    $place [bb_2_UnifiedReturnBlock]
    //begin: basic-block bb_3
    $merge bb_1_bb_3
    $endmerge
    $call x264_mb_mc_0xywh (h iNsTr_1 iNsTr_2 ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )  ()
    iNsTr_22 := (i8 | ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    $call x264_mb_mc_0xywh (h iNsTr_1 iNsTr_22 ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )  ()
    $place [bb_3_UnifiedReturnBlock]
    //begin: basic-block bb_4
    $merge bb_1_bb_4
    $endmerge
    $call x264_mb_mc_0xywh (h iNsTr_1 iNsTr_2 ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )  ()
    iNsTr_26 := (iNsTr_1 | ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    $call x264_mb_mc_0xywh (h iNsTr_26 iNsTr_2 ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )  ()
    $place [bb_4_UnifiedReturnBlock]
    //begin: basic-block bb_5
    $merge bb_1_bb_5
    $endmerge
    $call x264_mb_mc_0xywh (h iNsTr_1 iNsTr_2 ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )  ()
    iNsTr_30 := (iNsTr_1 | ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    $call x264_mb_mc_0xywh (h iNsTr_30 iNsTr_2 ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )  ()
    iNsTr_32 := (i8 | ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    $call x264_mb_mc_0xywh (h iNsTr_1 iNsTr_32 ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )  ()
    $call x264_mb_mc_0xywh (h iNsTr_30 iNsTr_32 ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )  ()
    $place [bb_5_UnifiedReturnBlock]
    //begin: basic-block bb_6
    $merge bb_0_bb_6
    $endmerge
    iNsTr_11 := (i8 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    iNsTr_12 := (iNsTr_11 | ( $bitcast ($uint<32> ) _b00000000000000000000000000001100 ) )
    iNsTr_13 := (iNsTr_12 | iNsTr_1)
    iNsTr_14 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011100 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][iNsTr_13]
    // load 
    iNsTr_15 := ->(iNsTr_14) 
    // compare instruction
    iNsTr_16 := ( ($bitcast ( $int<8>) iNsTr_15) >  ($bitcast ( $int<8>) ( $bitcast ($uint<8> ) _b11111111 )  ) )
    $if iNsTr_16 $then  $place [bb_6_bb_7] $else $place [bb_6_bb_10] $endif 
    //begin: basic-block bb_7
    $merge bb_6_bb_7
    $endmerge
    iNsTr_36 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011100 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][iNsTr_13]
    // load 
    iNsTr_37 := ->(iNsTr_36) 
    // compare instruction
    iNsTr_38 := ( ($bitcast ( $int<8>) iNsTr_37) >  ($bitcast ( $int<8>) ( $bitcast ($uint<8> ) _b11111111 )  ) )
    $if iNsTr_38 $then  $place [bb_7_bb_8] $else $place [bb_7_bb_9] $endif 
    //begin: basic-block bb_8
    $merge bb_7_bb_8
    $endmerge
    $call x264_mb_mc_01xywh (h iNsTr_1 iNsTr_2 ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )  ()
    $place [bb_8_UnifiedReturnBlock]
    //begin: basic-block bb_9
    $merge bb_7_bb_9
    $endmerge
    $call x264_mb_mc_0xywh (h iNsTr_1 iNsTr_2 ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )  ()
    $place [bb_9_UnifiedReturnBlock]
    //begin: basic-block bb_10
    $merge bb_6_bb_10
    $endmerge
    $call x264_mb_mc_1xywh (h iNsTr_1 iNsTr_2 ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )  ()
    $place [bb_10_UnifiedReturnBlock]
    //begin: basic-block bb_11
    $merge bb_1_bb_11
    $endmerge
    $place [bb_11_UnifiedReturnBlock]
    //begin: basic-block UnifiedReturnBlock
    $merge bb_10_UnifiedReturnBlock bb_11_UnifiedReturnBlock bb_2_UnifiedReturnBlock bb_3_UnifiedReturnBlock bb_4_UnifiedReturnBlock bb_5_UnifiedReturnBlock bb_8_UnifiedReturnBlock bb_9_UnifiedReturnBlock
    $endmerge
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [x264_mb_mc_0xywh] 
$in (h : $pointer< structx_xx264_t > x : $uint<32> y : $uint<32> width : $uint<32> height : $uint<32> )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    iNsTr_0 := (y << ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    iNsTr_1 := (x + ( $bitcast ($uint<32> ) _b00000000000000000000000000001100 ) )
    iNsTr_2 := (iNsTr_1 + iNsTr_0)
    iNsTr_3 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011100 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][iNsTr_2]
    // load 
    iNsTr_4 := ->(iNsTr_3) 
    iNsTr_5 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_4) )
    iNsTr_6 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011100 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][iNsTr_2][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    // load 
    iNsTr_7 := ->(iNsTr_6) 
    iNsTr_8 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_7) )
    iNsTr_9 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000011001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    // load 
    iNsTr_10 := ->(iNsTr_9) 
    iNsTr_11 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000011010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    // load 
    iNsTr_12 := ->(iNsTr_11) 
    // compare instruction
    iNsTr_13 := ( ($bitcast ( $int<32>) iNsTr_8) <   ($bitcast ( $int<32>) iNsTr_10 ) )
    $if iNsTr_13 $then  $place [bb_0_x264_clip3x_xexit] $else $place [bb_0_bb_1] $endif 
    //begin: basic-block bb_1
    $merge bb_0_bb_1
    $endmerge
    // compare instruction
    iNsTr_27 := ( ($bitcast ( $int<32>) iNsTr_8) >  ($bitcast ( $int<32>) iNsTr_12 ) )
    iNsTr_28 := ( $mux iNsTr_27 iNsTr_12 iNsTr_8)
    $place [bb_1_x264_clip3x_xexit]
    //begin: basic-block x264_clip3x_xexit
    $merge bb_0_x264_clip3x_xexit bb_1_x264_clip3x_xexit
    $phi iNsTr_15 :=  ( $cast ($uint<32>) iNsTr_28) $on bb_1_x264_clip3x_xexit ( $cast ($uint<32>) iNsTr_10) $on bb_0_x264_clip3x_xexit 
    $endmerge
    iNsTr_16 := (x << ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    iNsTr_17 := (iNsTr_15 + iNsTr_16)
    iNsTr_18 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011100 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][iNsTr_2][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_19 := ->(iNsTr_18) 
    iNsTr_20 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_19) )
    iNsTr_21 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000011001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_22 := ->(iNsTr_21) 
    iNsTr_23 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000011010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_24 := ->(iNsTr_23) 
    // compare instruction
    iNsTr_25 := ( ($bitcast ( $int<32>) iNsTr_20) <   ($bitcast ( $int<32>) iNsTr_22 ) )
    $if iNsTr_25 $then  $place [x264_clip3x_xexit_x264_clip3x_xexit1] $else $place [x264_clip3x_xexit_bb_3] $endif 
    //begin: basic-block bb_3
    $merge x264_clip3x_xexit_bb_3
    $endmerge
    // compare instruction
    iNsTr_50 := ( ($bitcast ( $int<32>) iNsTr_20) >  ($bitcast ( $int<32>) iNsTr_24 ) )
    iNsTr_51 := ( $mux iNsTr_50 iNsTr_24 iNsTr_20)
    $place [bb_3_x264_clip3x_xexit1]
    //begin: basic-block x264_clip3x_xexit1
    $merge bb_3_x264_clip3x_xexit1 x264_clip3x_xexit_x264_clip3x_xexit1
    $phi iNsTr_30 :=  ( $cast ($uint<32>) iNsTr_51) $on bb_3_x264_clip3x_xexit1 ( $cast ($uint<32>) iNsTr_22) $on x264_clip3x_xexit_x264_clip3x_xexit1 
    $endmerge
    iNsTr_31 := (y << ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    iNsTr_32 := (iNsTr_30 + iNsTr_31)
    iNsTr_33 := (y << ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    iNsTr_34 := (x << ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_35 := (iNsTr_33 + iNsTr_34)
    iNsTr_36 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    // load 
    iNsTr_37 := ->(iNsTr_36) 
    iNsTr_38 := iNsTr_37[iNsTr_35]
    iNsTr_39 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][iNsTr_5][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    iNsTr_40 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    // load 
    iNsTr_41 := ->(iNsTr_40) 
    iNsTr_42 := (width << ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_43 := (height << ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_44 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000110010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010111 ) ][iNsTr_5][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    $call mc_luma (iNsTr_38 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_39 iNsTr_41 iNsTr_17 iNsTr_32 iNsTr_42 iNsTr_43 iNsTr_44 )  ()
    iNsTr_46 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000110011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010110 ) ]
    // load 
    iNsTr_47 := ->(iNsTr_46) 
    // compare instruction
    iNsTr_48 := (iNsTr_47 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 )  )
    $if iNsTr_48 $then  $place [x264_clip3x_xexit1_bb_5] $else $place [x264_clip3x_xexit1_bb_6] $endif 
    //begin: basic-block bb_5
    $merge x264_clip3x_xexit1_bb_5
    $endmerge
    iNsTr_53 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_54 := ->(iNsTr_53) 
    iNsTr_55 := iNsTr_54[iNsTr_35]
    iNsTr_56 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][iNsTr_5][( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ]
    iNsTr_57 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_58 := ->(iNsTr_57) 
    iNsTr_59 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000110010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010111 ) ][iNsTr_5][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    $call mc_luma (iNsTr_55 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_56 iNsTr_58 iNsTr_17 iNsTr_32 iNsTr_42 iNsTr_43 iNsTr_59 )  ()
    iNsTr_61 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_62 := ->(iNsTr_61) 
    iNsTr_63 := iNsTr_62[iNsTr_35]
    iNsTr_64 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][iNsTr_5][( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) ]
    iNsTr_65 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_66 := ->(iNsTr_65) 
    iNsTr_67 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000110010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010111 ) ][iNsTr_5][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    $call mc_luma (iNsTr_63 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_64 iNsTr_66 iNsTr_17 iNsTr_32 iNsTr_42 iNsTr_43 iNsTr_67 )  ()
    $place [bb_5_UnifiedReturnBlock]
    //begin: basic-block bb_6
    $merge x264_clip3x_xexit1_bb_6
    $endmerge
    iNsTr_70 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ]
    // load 
    iNsTr_71 := ->(iNsTr_70) 
    iNsTr_72 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010111 ) ]
    // load 
    iNsTr_73 := ->(iNsTr_72) 
    iNsTr_74 := (iNsTr_71 & iNsTr_5)
    iNsTr_75 := (iNsTr_74 & iNsTr_73)
    // compare instruction
    iNsTr_76 := (iNsTr_75 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if iNsTr_76 $then  $place [bb_6_bb_8] $else $place [bb_6_bb_7] $endif 
    //begin: basic-block bb_7
    $merge bb_6_bb_7
    $endmerge
    iNsTr_102 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000001011 ) ]
    // load 
    iNsTr_103 := ->(iNsTr_102) 
    iNsTr_104 := (iNsTr_103 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_105 := (iNsTr_104 & ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    iNsTr_106 := (iNsTr_32 + ( $bitcast ($uint<32> ) _b11111111111111111111111111111110 ) )
    iNsTr_107 := (iNsTr_106 + iNsTr_105)
    $place [bb_7_bb_8]
    //begin: basic-block bb_8
    $merge bb_6_bb_8 bb_7_bb_8
    $phi mvyx_x0 :=  ( $cast ($uint<32>) iNsTr_107) $on bb_7_bb_8 ( $cast ($uint<32>) iNsTr_32) $on bb_6_bb_8 
    $endmerge
    iNsTr_79 := (( $bitcast ($uint<32> ) _b00000000000000000000000010000000 )  >> iNsTr_71)
    iNsTr_80 := (iNsTr_79 * y)
    iNsTr_81 := (x << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_82 := (iNsTr_80 + iNsTr_81)
    iNsTr_83 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_43) >>  ($bitcast ( $int<32>) iNsTr_71 )))
    iNsTr_84 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_85 := ->(iNsTr_84) 
    iNsTr_86 := iNsTr_85[iNsTr_82]
    iNsTr_87 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_88 := ->(iNsTr_87) 
    iNsTr_89 := iNsTr_88[iNsTr_82]
    iNsTr_90 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][iNsTr_5][( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ]
    // load 
    iNsTr_91 := ->(iNsTr_90) 
    iNsTr_92 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_93 := ->(iNsTr_92) 
    iNsTr_94 := (mvyx_x0 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_95 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_94) >>  ($bitcast ( $int<32>) iNsTr_71 )))
    iNsTr_96 := (width << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    $call mc_chroma (iNsTr_86 iNsTr_89 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_91 iNsTr_93 iNsTr_17 iNsTr_95 iNsTr_96 iNsTr_83 )  ()
    iNsTr_98 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000110010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010111 ) ][iNsTr_5][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) ]
    // load 
    iNsTr_99 := ->(iNsTr_98) 
    // compare instruction
    iNsTr_100 := (iNsTr_99 == ( $bitcast ($pointer< $pointer< $pointer < $void >  > > ) _b1111111111111111111111111111111111111111111111111111111111111111 )  )
    $if iNsTr_100 $then  $place [bb_8_bb_16] $else $place [bb_8_bb_9] $endif 
    //begin: basic-block bb_9
    $merge bb_8_bb_9
    $endmerge
    iNsTr_113 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) width) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )))
    $switch iNsTr_113
    $when _b00000000000000000000000000000000 $then 
    $place [bb_9_bb_10]
    $when _b00000000000000000000000000000001 $then 
    $place [bb_9_bb_11]
    $when _b00000000000000000000000000000010 $then 
    $place [bb_9_bb_12]
    $when _b00000000000000000000000000000011 $then 
    $place [bb_9_bb_13]
    $when _b00000000000000000000000000000100 $then 
    $place [bb_9_bb_14]
    $when _b00000000000000000000000000000101 $then 
    $place [bb_9_bb_15]
    $default 
    $place [bb_9_bb_16]
    $endswitch
    //begin: basic-block bb_10
    $merge bb_9_bb_10
    $endmerge
    // load 
    iNsTr_118 := ->(iNsTr_84) 
    iNsTr_119 := iNsTr_118[iNsTr_82]
    xx_xidx12 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000110010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010111 ) ][iNsTr_5][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    xx_xidx12x_xval := ->(xx_xidx12) 
    xx_xidx13 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000110010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010111 ) ][iNsTr_5][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    xx_xidx13x_xval := ->(xx_xidx13) 
    xx_xidx14 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000110010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010111 ) ][iNsTr_5][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ]
    // load 
    xx_xidx14x_xval := ->(xx_xidx14) 
    $call mc_weight_w2 (iNsTr_119 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_119 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  xx_xidx12x_xval xx_xidx13x_xval xx_xidx14x_xval iNsTr_83 )  ()
    $place [bb_10_bb_16]
    //begin: basic-block bb_11
    $merge bb_9_bb_11
    $endmerge
    // load 
    iNsTr_122 := ->(iNsTr_84) 
    iNsTr_123 := iNsTr_122[iNsTr_82]
    xx_xidx18 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000110010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010111 ) ][iNsTr_5][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    xx_xidx18x_xval := ->(xx_xidx18) 
    xx_xidx19 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000110010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010111 ) ][iNsTr_5][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    xx_xidx19x_xval := ->(xx_xidx19) 
    xx_xidx20 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000110010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010111 ) ][iNsTr_5][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ]
    // load 
    xx_xidx20x_xval := ->(xx_xidx20) 
    $call mc_weight_w4 (iNsTr_123 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_123 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  xx_xidx18x_xval xx_xidx19x_xval xx_xidx20x_xval iNsTr_83 )  ()
    $place [bb_11_bb_16]
    //begin: basic-block bb_12
    $merge bb_9_bb_12
    $endmerge
    // load 
    iNsTr_126 := ->(iNsTr_84) 
    iNsTr_127 := iNsTr_126[iNsTr_82]
    xx_xidx6 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000110010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010111 ) ][iNsTr_5][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    xx_xidx6x_xval := ->(xx_xidx6) 
    xx_xidx7 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000110010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010111 ) ][iNsTr_5][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    xx_xidx7x_xval := ->(xx_xidx7) 
    xx_xidx8 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000110010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010111 ) ][iNsTr_5][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ]
    // load 
    xx_xidx8x_xval := ->(xx_xidx8) 
    $call mc_weight_w8 (iNsTr_127 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_127 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  xx_xidx6x_xval xx_xidx7x_xval xx_xidx8x_xval iNsTr_83 )  ()
    $place [bb_12_bb_16]
    //begin: basic-block bb_13
    $merge bb_9_bb_13
    $endmerge
    // load 
    iNsTr_130 := ->(iNsTr_84) 
    iNsTr_131 := iNsTr_130[iNsTr_82]
    xx_xidx24 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000110010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010111 ) ][iNsTr_5][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    xx_xidx24x_xval := ->(xx_xidx24) 
    xx_xidx25 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000110010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010111 ) ][iNsTr_5][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    xx_xidx25x_xval := ->(xx_xidx25) 
    xx_xidx26 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000110010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010111 ) ][iNsTr_5][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ]
    // load 
    xx_xidx26x_xval := ->(xx_xidx26) 
    $call mc_weight_w12 (iNsTr_131 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_131 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  xx_xidx24x_xval xx_xidx25x_xval xx_xidx26x_xval iNsTr_83 )  ()
    $place [bb_13_bb_16]
    //begin: basic-block bb_14
    $merge bb_9_bb_14
    $endmerge
    // load 
    iNsTr_134 := ->(iNsTr_84) 
    iNsTr_135 := iNsTr_134[iNsTr_82]
    xx_xidx := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000110010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010111 ) ][iNsTr_5][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    xx_xidxx_xval := ->(xx_xidx) 
    xx_xidx1 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000110010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010111 ) ][iNsTr_5][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    xx_xidx1x_xval := ->(xx_xidx1) 
    xx_xidx2 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000110010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010111 ) ][iNsTr_5][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ]
    // load 
    xx_xidx2x_xval := ->(xx_xidx2) 
    $call mc_weight_w16 (iNsTr_135 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_135 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  xx_xidxx_xval xx_xidx1x_xval xx_xidx2x_xval iNsTr_83 )  ()
    $place [bb_14_bb_16]
    //begin: basic-block bb_15
    $merge bb_9_bb_15
    $endmerge
    // load 
    iNsTr_138 := ->(iNsTr_84) 
    iNsTr_139 := iNsTr_138[iNsTr_82]
    xx_xidx33 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000110010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010111 ) ][iNsTr_5][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    xx_xidx33x_xval := ->(xx_xidx33) 
    xx_xidx34 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000110010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010111 ) ][iNsTr_5][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    xx_xidx34x_xval := ->(xx_xidx34) 
    xx_xidx35 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000110010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010111 ) ][iNsTr_5][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ]
    // load 
    xx_xidx35x_xval := ->(xx_xidx35) 
    $call mc_weight_w20 (iNsTr_139 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_139 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  xx_xidx33x_xval xx_xidx34x_xval xx_xidx35x_xval iNsTr_83 )  ()
    $place [bb_15_bb_16]
    //begin: basic-block bb_16
    $merge bb_10_bb_16 bb_11_bb_16 bb_12_bb_16 bb_13_bb_16 bb_14_bb_16 bb_15_bb_16 bb_8_bb_16 bb_9_bb_16
    $endmerge
    iNsTr_109 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000110010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010111 ) ][iNsTr_5][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) ]
    // load 
    iNsTr_110 := ->(iNsTr_109) 
    // compare instruction
    iNsTr_111 := (iNsTr_110 == ( $bitcast ($pointer< $pointer< $pointer < $void >  > > ) _b1111111111111111111111111111111111111111111111111111111111111111 )  )
    $if iNsTr_111 $then  $place [bb_16_bb_24] $else $place [bb_16_bb_17] $endif 
    //begin: basic-block bb_17
    $merge bb_16_bb_17
    $endmerge
    iNsTr_116 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) width) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )))
    $switch iNsTr_116
    $when _b00000000000000000000000000000000 $then 
    $place [bb_17_bb_18]
    $when _b00000000000000000000000000000001 $then 
    $place [bb_17_bb_19]
    $when _b00000000000000000000000000000010 $then 
    $place [bb_17_bb_20]
    $when _b00000000000000000000000000000011 $then 
    $place [bb_17_bb_21]
    $when _b00000000000000000000000000000100 $then 
    $place [bb_17_bb_22]
    $when _b00000000000000000000000000000101 $then 
    $place [bb_17_bb_23]
    $default 
    $place [bb_17_bb_24]
    $endswitch
    //begin: basic-block bb_18
    $merge bb_17_bb_18
    $endmerge
    // load 
    iNsTr_142 := ->(iNsTr_87) 
    iNsTr_143 := iNsTr_142[iNsTr_82]
    xx_xidx15 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000110010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010111 ) ][iNsTr_5][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    xx_xidx15x_xval := ->(xx_xidx15) 
    xx_xidx16 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000110010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010111 ) ][iNsTr_5][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    xx_xidx16x_xval := ->(xx_xidx16) 
    xx_xidx17 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000110010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010111 ) ][iNsTr_5][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ]
    // load 
    xx_xidx17x_xval := ->(xx_xidx17) 
    $call mc_weight_w2 (iNsTr_143 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_143 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  xx_xidx15x_xval xx_xidx16x_xval xx_xidx17x_xval iNsTr_83 )  ()
    $place [bb_18_UnifiedReturnBlock]
    //begin: basic-block bb_19
    $merge bb_17_bb_19
    $endmerge
    // load 
    iNsTr_146 := ->(iNsTr_87) 
    iNsTr_147 := iNsTr_146[iNsTr_82]
    xx_xidx21 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000110010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010111 ) ][iNsTr_5][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    xx_xidx21x_xval := ->(xx_xidx21) 
    xx_xidx22 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000110010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010111 ) ][iNsTr_5][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    xx_xidx22x_xval := ->(xx_xidx22) 
    xx_xidx23 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000110010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010111 ) ][iNsTr_5][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ]
    // load 
    xx_xidx23x_xval := ->(xx_xidx23) 
    $call mc_weight_w4 (iNsTr_147 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_147 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  xx_xidx21x_xval xx_xidx22x_xval xx_xidx23x_xval iNsTr_83 )  ()
    $place [bb_19_UnifiedReturnBlock]
    //begin: basic-block bb_20
    $merge bb_17_bb_20
    $endmerge
    // load 
    iNsTr_150 := ->(iNsTr_87) 
    iNsTr_151 := iNsTr_150[iNsTr_82]
    xx_xidx9 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000110010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010111 ) ][iNsTr_5][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    xx_xidx9x_xval := ->(xx_xidx9) 
    xx_xidx10 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000110010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010111 ) ][iNsTr_5][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    xx_xidx10x_xval := ->(xx_xidx10) 
    xx_xidx11 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000110010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010111 ) ][iNsTr_5][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ]
    // load 
    xx_xidx11x_xval := ->(xx_xidx11) 
    $call mc_weight_w8 (iNsTr_151 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_151 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  xx_xidx9x_xval xx_xidx10x_xval xx_xidx11x_xval iNsTr_83 )  ()
    $place [bb_20_UnifiedReturnBlock]
    //begin: basic-block bb_21
    $merge bb_17_bb_21
    $endmerge
    // load 
    iNsTr_154 := ->(iNsTr_87) 
    iNsTr_155 := iNsTr_154[iNsTr_82]
    xx_xidx27 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000110010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010111 ) ][iNsTr_5][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    xx_xidx27x_xval := ->(xx_xidx27) 
    xx_xidx28 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000110010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010111 ) ][iNsTr_5][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    xx_xidx28x_xval := ->(xx_xidx28) 
    xx_xidx29 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000110010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010111 ) ][iNsTr_5][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ]
    // load 
    xx_xidx29x_xval := ->(xx_xidx29) 
    $call mc_weight_w12 (iNsTr_155 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_155 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  xx_xidx27x_xval xx_xidx28x_xval xx_xidx29x_xval iNsTr_83 )  ()
    $place [bb_21_UnifiedReturnBlock]
    //begin: basic-block bb_22
    $merge bb_17_bb_22
    $endmerge
    // load 
    iNsTr_158 := ->(iNsTr_87) 
    iNsTr_159 := iNsTr_158[iNsTr_82]
    xx_xidx3 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000110010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010111 ) ][iNsTr_5][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    xx_xidx3x_xval := ->(xx_xidx3) 
    xx_xidx4 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000110010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010111 ) ][iNsTr_5][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    xx_xidx4x_xval := ->(xx_xidx4) 
    xx_xidx5 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000110010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010111 ) ][iNsTr_5][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ]
    // load 
    xx_xidx5x_xval := ->(xx_xidx5) 
    $call mc_weight_w16 (iNsTr_159 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_159 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  xx_xidx3x_xval xx_xidx4x_xval xx_xidx5x_xval iNsTr_83 )  ()
    $place [bb_22_UnifiedReturnBlock]
    //begin: basic-block bb_23
    $merge bb_17_bb_23
    $endmerge
    // load 
    iNsTr_162 := ->(iNsTr_87) 
    iNsTr_163 := iNsTr_162[iNsTr_82]
    xx_xidx30 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000110010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010111 ) ][iNsTr_5][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    xx_xidx30x_xval := ->(xx_xidx30) 
    xx_xidx31 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000110010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010111 ) ][iNsTr_5][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    xx_xidx31x_xval := ->(xx_xidx31) 
    xx_xidx32 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000110010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010111 ) ][iNsTr_5][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ]
    // load 
    xx_xidx32x_xval := ->(xx_xidx32) 
    $call mc_weight_w20 (iNsTr_163 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_163 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  xx_xidx30x_xval xx_xidx31x_xval xx_xidx32x_xval iNsTr_83 )  ()
    $place [bb_23_UnifiedReturnBlock]
    //begin: basic-block bb_24
    $merge bb_16_bb_24 bb_17_bb_24
    $endmerge
    $place [bb_24_UnifiedReturnBlock]
    //begin: basic-block UnifiedReturnBlock
    $merge bb_18_UnifiedReturnBlock bb_19_UnifiedReturnBlock bb_20_UnifiedReturnBlock bb_21_UnifiedReturnBlock bb_22_UnifiedReturnBlock bb_23_UnifiedReturnBlock bb_24_UnifiedReturnBlock bb_5_UnifiedReturnBlock
    $endmerge
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [x264_mb_mc_01xywh] 
$in (h : $pointer< structx_xx264_t > x : $uint<32> y : $uint<32> width : $uint<32> height : $uint<32> )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    $storage i_stride0_alloc : $uint<32>
    $storage i_stride1_alloc : $uint<32>
    $storage tmp0_u_alloc : $array [287] $of $uint<8>
    $storage tmp1_u_alloc : $array [287] $of $uint<8>
    i_stride0 := @(i_stride0_alloc)
    i_stride1 := @(i_stride1_alloc)
    tmp0_u := @(tmp0_u_alloc)
    tmp1_u := @(tmp1_u_alloc)
    iNsTr_0 := (y << ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    iNsTr_1 := (x + ( $bitcast ($uint<32> ) _b00000000000000000000000000001100 ) )
    iNsTr_2 := (iNsTr_1 + iNsTr_0)
    iNsTr_3 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011100 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][iNsTr_2]
    // load 
    iNsTr_4 := ->(iNsTr_3) 
    iNsTr_5 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_4) )
    iNsTr_6 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011100 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][iNsTr_2]
    // load 
    iNsTr_7 := ->(iNsTr_6) 
    iNsTr_8 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_7) )
    iNsTr_9 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001101011 ) ]
    // load 
    iNsTr_10 := ->(iNsTr_9) 
    iNsTr_11 := iNsTr_10[iNsTr_5][iNsTr_8]
    // load 
    iNsTr_12 := ->(iNsTr_11) 
    iNsTr_13 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_12) )
    iNsTr_14 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011100 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][iNsTr_2][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    // load 
    iNsTr_15 := ->(iNsTr_14) 
    iNsTr_16 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_15) )
    iNsTr_17 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000011001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    // load 
    iNsTr_18 := ->(iNsTr_17) 
    iNsTr_19 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000011010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    // load 
    iNsTr_20 := ->(iNsTr_19) 
    // compare instruction
    iNsTr_21 := ( ($bitcast ( $int<32>) iNsTr_16) <   ($bitcast ( $int<32>) iNsTr_18 ) )
    $if iNsTr_21 $then  $place [bb_0_x264_clip3x_xexit] $else $place [bb_0_bb_1] $endif 
    //begin: basic-block bb_1
    $merge bb_0_bb_1
    $endmerge
    // compare instruction
    iNsTr_31 := ( ($bitcast ( $int<32>) iNsTr_16) >  ($bitcast ( $int<32>) iNsTr_20 ) )
    iNsTr_32 := ( $mux iNsTr_31 iNsTr_20 iNsTr_16)
    $place [bb_1_x264_clip3x_xexit]
    //begin: basic-block x264_clip3x_xexit
    $merge bb_0_x264_clip3x_xexit bb_1_x264_clip3x_xexit
    $phi iNsTr_23 :=  ( $cast ($uint<32>) iNsTr_32) $on bb_1_x264_clip3x_xexit ( $cast ($uint<32>) iNsTr_18) $on bb_0_x264_clip3x_xexit 
    $endmerge
    iNsTr_24 := (x << ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    iNsTr_25 := (iNsTr_23 + iNsTr_24)
    iNsTr_26 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011100 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][iNsTr_2][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    // load 
    iNsTr_27 := ->(iNsTr_26) 
    iNsTr_28 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_27) )
    // compare instruction
    iNsTr_29 := ( ($bitcast ( $int<32>) iNsTr_28) <   ($bitcast ( $int<32>) iNsTr_18 ) )
    $if iNsTr_29 $then  $place [x264_clip3x_xexit_x264_clip3x_xexit3] $else $place [x264_clip3x_xexit_bb_3] $endif 
    //begin: basic-block bb_3
    $merge x264_clip3x_xexit_bb_3
    $endmerge
    // compare instruction
    iNsTr_45 := ( ($bitcast ( $int<32>) iNsTr_28) >  ($bitcast ( $int<32>) iNsTr_20 ) )
    iNsTr_46 := ( $mux iNsTr_45 iNsTr_20 iNsTr_28)
    $place [bb_3_x264_clip3x_xexit3]
    //begin: basic-block x264_clip3x_xexit3
    $merge bb_3_x264_clip3x_xexit3 x264_clip3x_xexit_x264_clip3x_xexit3
    $phi iNsTr_34 :=  ( $cast ($uint<32>) iNsTr_46) $on bb_3_x264_clip3x_xexit3 ( $cast ($uint<32>) iNsTr_18) $on x264_clip3x_xexit_x264_clip3x_xexit3 
    $endmerge
    iNsTr_35 := (iNsTr_34 + iNsTr_24)
    iNsTr_36 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011100 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][iNsTr_2][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_37 := ->(iNsTr_36) 
    iNsTr_38 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_37) )
    iNsTr_39 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000011001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_40 := ->(iNsTr_39) 
    iNsTr_41 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000011010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_42 := ->(iNsTr_41) 
    // compare instruction
    iNsTr_43 := ( ($bitcast ( $int<32>) iNsTr_38) <   ($bitcast ( $int<32>) iNsTr_40 ) )
    $if iNsTr_43 $then  $place [x264_clip3x_xexit3_x264_clip3x_xexit2] $else $place [x264_clip3x_xexit3_bb_5] $endif 
    //begin: basic-block bb_5
    $merge x264_clip3x_xexit3_bb_5
    $endmerge
    // compare instruction
    iNsTr_56 := ( ($bitcast ( $int<32>) iNsTr_38) >  ($bitcast ( $int<32>) iNsTr_42 ) )
    iNsTr_57 := ( $mux iNsTr_56 iNsTr_42 iNsTr_38)
    $place [bb_5_x264_clip3x_xexit2]
    //begin: basic-block x264_clip3x_xexit2
    $merge bb_5_x264_clip3x_xexit2 x264_clip3x_xexit3_x264_clip3x_xexit2
    $phi iNsTr_48 :=  ( $cast ($uint<32>) iNsTr_57) $on bb_5_x264_clip3x_xexit2 ( $cast ($uint<32>) iNsTr_40) $on x264_clip3x_xexit3_x264_clip3x_xexit2 
    $endmerge
    iNsTr_49 := (y << ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    iNsTr_50 := (iNsTr_48 + iNsTr_49)
    iNsTr_51 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011100 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][iNsTr_2][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_52 := ->(iNsTr_51) 
    iNsTr_53 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_52) )
    // compare instruction
    iNsTr_54 := ( ($bitcast ( $int<32>) iNsTr_53) <   ($bitcast ( $int<32>) iNsTr_40 ) )
    $if iNsTr_54 $then  $place [x264_clip3x_xexit2_x264_clip3x_xexit1] $else $place [x264_clip3x_xexit2_bb_7] $endif 
    //begin: basic-block bb_7
    $merge x264_clip3x_xexit2_bb_7
    $endmerge
    // compare instruction
    iNsTr_86 := ( ($bitcast ( $int<32>) iNsTr_53) >  ($bitcast ( $int<32>) iNsTr_42 ) )
    iNsTr_87 := ( $mux iNsTr_86 iNsTr_42 iNsTr_53)
    $place [bb_7_x264_clip3x_xexit1]
    //begin: basic-block x264_clip3x_xexit1
    $merge bb_7_x264_clip3x_xexit1 x264_clip3x_xexit2_x264_clip3x_xexit1
    $phi iNsTr_59 :=  ( $cast ($uint<32>) iNsTr_87) $on bb_7_x264_clip3x_xexit1 ( $cast ($uint<32>) iNsTr_40) $on x264_clip3x_xexit2_x264_clip3x_xexit1 
    $endmerge
    iNsTr_60 := (iNsTr_59 + iNsTr_49)
    iNsTr_61 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_x264_size2pixel[height][width])
    // load 
    iNsTr_62 := ->(iNsTr_61) 
    iNsTr_63 := ($cast ($uint<32>) iNsTr_62)
    ->(i_stride0) := ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) 
    ->(i_stride1) := ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) 
    iNsTr_66 := tmp0_u[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000011111 ) ]
    iNsTr_67 := ($cast ($uint<32>) iNsTr_66)
    iNsTr_68 := (iNsTr_67 & ( $bitcast ($uint<32> ) _b11111111111111111111111111100000 ) )
    iNsTr_69 := ($cast ($pointer< $uint<8> >) iNsTr_68)
    iNsTr_70 := tmp1_u[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000011111 ) ]
    iNsTr_71 := ($cast ($uint<32>) iNsTr_70)
    iNsTr_72 := (iNsTr_71 & ( $bitcast ($uint<32> ) _b11111111111111111111111111100000 ) )
    iNsTr_73 := ($cast ($pointer< $uint<8> >) iNsTr_72)
    iNsTr_74 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][iNsTr_5][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    iNsTr_75 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    // load 
    iNsTr_76 := ->(iNsTr_75) 
    iNsTr_77 := (width << ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_78 := (height << ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_79 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_x264_weight_none[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ])
    $call get_ref (iNsTr_69 i_stride0 iNsTr_74 iNsTr_76 iNsTr_25 iNsTr_50 iNsTr_77 iNsTr_78 iNsTr_79 )  (iNsTr_80)
    iNsTr_81 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][iNsTr_8][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    // load 
    iNsTr_82 := ->(iNsTr_75) 
    iNsTr_83 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_x264_weight_none[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ])
    $call get_ref (iNsTr_73 i_stride1 iNsTr_81 iNsTr_82 iNsTr_35 iNsTr_60 iNsTr_77 iNsTr_78 iNsTr_83 )  (iNsTr_84)
    $switch iNsTr_63
    $when _b00000000000000000000000000000000 $then 
    $place [x264_clip3x_xexit1_bb_9]
    $when _b00000000000000000000000000000001 $then 
    $place [x264_clip3x_xexit1_bb_10]
    $when _b00000000000000000000000000000010 $then 
    $place [x264_clip3x_xexit1_bb_11]
    $when _b00000000000000000000000000000011 $then 
    $place [x264_clip3x_xexit1_bb_12]
    $when _b00000000000000000000000000000100 $then 
    $place [x264_clip3x_xexit1_bb_13]
    $when _b00000000000000000000000000000101 $then 
    $place [x264_clip3x_xexit1_bb_14]
    $when _b00000000000000000000000000000110 $then 
    $place [x264_clip3x_xexit1_bb_15]
    $when _b00000000000000000000000000000111 $then 
    $place [x264_clip3x_xexit1_bb_16]
    $when _b00000000000000000000000000001000 $then 
    $place [x264_clip3x_xexit1_bb_17]
    $when _b00000000000000000000000000001001 $then 
    $place [x264_clip3x_xexit1_bb_18]
    $when _b00000000000000000000000000001010 $then 
    $place [x264_clip3x_xexit1_bb_19]
    $when _b00000000000000000000000000001011 $then 
    $place [x264_clip3x_xexit1_bb_20]
    $default 
    $place [x264_clip3x_xexit1_bb_21]
    $endswitch
    //begin: basic-block bb_9
    $merge x264_clip3x_xexit1_bb_9
    $endmerge
    iNsTr_93 := (y << ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    iNsTr_94 := (x << ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_95 := (iNsTr_93 + iNsTr_94)
    iNsTr_96 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    // load 
    iNsTr_97 := ->(iNsTr_96) 
    iNsTr_98 := iNsTr_97[iNsTr_95]
    // load 
    iNsTr_99 := ->(i_stride0) 
    // load 
    iNsTr_100 := ->(i_stride1) 
    $call pixel_avg_16x16 (iNsTr_98 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_80 iNsTr_99 iNsTr_84 iNsTr_100 iNsTr_13 )  ()
    $place [bb_9_bb_21]
    //begin: basic-block bb_10
    $merge x264_clip3x_xexit1_bb_10
    $endmerge
    iNsTr_103 := (y << ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    iNsTr_104 := (x << ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_105 := (iNsTr_103 + iNsTr_104)
    iNsTr_106 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    // load 
    iNsTr_107 := ->(iNsTr_106) 
    iNsTr_108 := iNsTr_107[iNsTr_105]
    // load 
    iNsTr_109 := ->(i_stride0) 
    // load 
    iNsTr_110 := ->(i_stride1) 
    $call pixel_avg_16x8 (iNsTr_108 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_80 iNsTr_109 iNsTr_84 iNsTr_110 iNsTr_13 )  ()
    $place [bb_10_bb_21]
    //begin: basic-block bb_11
    $merge x264_clip3x_xexit1_bb_11
    $endmerge
    iNsTr_113 := (y << ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    iNsTr_114 := (x << ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_115 := (iNsTr_113 + iNsTr_114)
    iNsTr_116 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    // load 
    iNsTr_117 := ->(iNsTr_116) 
    iNsTr_118 := iNsTr_117[iNsTr_115]
    // load 
    iNsTr_119 := ->(i_stride0) 
    // load 
    iNsTr_120 := ->(i_stride1) 
    $call pixel_avg_8x16 (iNsTr_118 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_80 iNsTr_119 iNsTr_84 iNsTr_120 iNsTr_13 )  ()
    $place [bb_11_bb_21]
    //begin: basic-block bb_12
    $merge x264_clip3x_xexit1_bb_12
    $endmerge
    iNsTr_123 := (y << ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    iNsTr_124 := (x << ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_125 := (iNsTr_123 + iNsTr_124)
    iNsTr_126 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    // load 
    iNsTr_127 := ->(iNsTr_126) 
    iNsTr_128 := iNsTr_127[iNsTr_125]
    // load 
    iNsTr_129 := ->(i_stride0) 
    // load 
    iNsTr_130 := ->(i_stride1) 
    $call pixel_avg_8x8 (iNsTr_128 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_80 iNsTr_129 iNsTr_84 iNsTr_130 iNsTr_13 )  ()
    $place [bb_12_bb_21]
    //begin: basic-block bb_13
    $merge x264_clip3x_xexit1_bb_13
    $endmerge
    iNsTr_133 := (y << ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    iNsTr_134 := (x << ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_135 := (iNsTr_133 + iNsTr_134)
    iNsTr_136 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    // load 
    iNsTr_137 := ->(iNsTr_136) 
    iNsTr_138 := iNsTr_137[iNsTr_135]
    // load 
    iNsTr_139 := ->(i_stride0) 
    // load 
    iNsTr_140 := ->(i_stride1) 
    $call pixel_avg_8x4 (iNsTr_138 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_80 iNsTr_139 iNsTr_84 iNsTr_140 iNsTr_13 )  ()
    $place [bb_13_bb_21]
    //begin: basic-block bb_14
    $merge x264_clip3x_xexit1_bb_14
    $endmerge
    iNsTr_143 := (y << ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    iNsTr_144 := (x << ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_145 := (iNsTr_143 + iNsTr_144)
    iNsTr_146 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    // load 
    iNsTr_147 := ->(iNsTr_146) 
    iNsTr_148 := iNsTr_147[iNsTr_145]
    // load 
    iNsTr_149 := ->(i_stride0) 
    // load 
    iNsTr_150 := ->(i_stride1) 
    $call pixel_avg_4x8 (iNsTr_148 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_80 iNsTr_149 iNsTr_84 iNsTr_150 iNsTr_13 )  ()
    $place [bb_14_bb_21]
    //begin: basic-block bb_15
    $merge x264_clip3x_xexit1_bb_15
    $endmerge
    iNsTr_153 := (y << ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    iNsTr_154 := (x << ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_155 := (iNsTr_153 + iNsTr_154)
    iNsTr_156 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    // load 
    iNsTr_157 := ->(iNsTr_156) 
    iNsTr_158 := iNsTr_157[iNsTr_155]
    // load 
    iNsTr_159 := ->(i_stride0) 
    // load 
    iNsTr_160 := ->(i_stride1) 
    $call pixel_avg_4x4 (iNsTr_158 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_80 iNsTr_159 iNsTr_84 iNsTr_160 iNsTr_13 )  ()
    $place [bb_15_bb_21]
    //begin: basic-block bb_16
    $merge x264_clip3x_xexit1_bb_16
    $endmerge
    iNsTr_163 := (y << ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    iNsTr_164 := (x << ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_165 := (iNsTr_163 + iNsTr_164)
    iNsTr_166 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    // load 
    iNsTr_167 := ->(iNsTr_166) 
    iNsTr_168 := iNsTr_167[iNsTr_165]
    // load 
    iNsTr_169 := ->(i_stride0) 
    // load 
    iNsTr_170 := ->(i_stride1) 
    $call pixel_avg_4x16 (iNsTr_168 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_80 iNsTr_169 iNsTr_84 iNsTr_170 iNsTr_13 )  ()
    $place [bb_16_bb_21]
    //begin: basic-block bb_17
    $merge x264_clip3x_xexit1_bb_17
    $endmerge
    iNsTr_173 := (y << ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    iNsTr_174 := (x << ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_175 := (iNsTr_173 + iNsTr_174)
    iNsTr_176 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    // load 
    iNsTr_177 := ->(iNsTr_176) 
    iNsTr_178 := iNsTr_177[iNsTr_175]
    // load 
    iNsTr_179 := ->(i_stride0) 
    // load 
    iNsTr_180 := ->(i_stride1) 
    $call pixel_avg_4x2 (iNsTr_178 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_80 iNsTr_179 iNsTr_84 iNsTr_180 iNsTr_13 )  ()
    $place [bb_17_bb_21]
    //begin: basic-block bb_18
    $merge x264_clip3x_xexit1_bb_18
    $endmerge
    iNsTr_183 := (y << ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    iNsTr_184 := (x << ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_185 := (iNsTr_183 + iNsTr_184)
    iNsTr_186 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    // load 
    iNsTr_187 := ->(iNsTr_186) 
    iNsTr_188 := iNsTr_187[iNsTr_185]
    // load 
    iNsTr_189 := ->(i_stride0) 
    // load 
    iNsTr_190 := ->(i_stride1) 
    $call pixel_avg_2x8 (iNsTr_188 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_80 iNsTr_189 iNsTr_84 iNsTr_190 iNsTr_13 )  ()
    $place [bb_18_bb_21]
    //begin: basic-block bb_19
    $merge x264_clip3x_xexit1_bb_19
    $endmerge
    iNsTr_193 := (y << ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    iNsTr_194 := (x << ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_195 := (iNsTr_193 + iNsTr_194)
    iNsTr_196 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    // load 
    iNsTr_197 := ->(iNsTr_196) 
    iNsTr_198 := iNsTr_197[iNsTr_195]
    // load 
    iNsTr_199 := ->(i_stride0) 
    // load 
    iNsTr_200 := ->(i_stride1) 
    $call pixel_avg_2x4 (iNsTr_198 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_80 iNsTr_199 iNsTr_84 iNsTr_200 iNsTr_13 )  ()
    $place [bb_19_bb_21]
    //begin: basic-block bb_20
    $merge x264_clip3x_xexit1_bb_20
    $endmerge
    iNsTr_203 := (y << ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    iNsTr_204 := (x << ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_205 := (iNsTr_203 + iNsTr_204)
    iNsTr_206 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    // load 
    iNsTr_207 := ->(iNsTr_206) 
    iNsTr_208 := iNsTr_207[iNsTr_205]
    // load 
    iNsTr_209 := ->(i_stride0) 
    // load 
    iNsTr_210 := ->(i_stride1) 
    $call pixel_avg_2x2 (iNsTr_208 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_80 iNsTr_209 iNsTr_84 iNsTr_210 iNsTr_13 )  ()
    $place [bb_20_bb_21]
    //begin: basic-block bb_21
    $merge bb_10_bb_21 bb_11_bb_21 bb_12_bb_21 bb_13_bb_21 bb_14_bb_21 bb_15_bb_21 bb_16_bb_21 bb_17_bb_21 bb_18_bb_21 bb_19_bb_21 bb_20_bb_21 bb_9_bb_21 x264_clip3x_xexit1_bb_21
    $endmerge
    iNsTr_89 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000110011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010110 ) ]
    // load 
    iNsTr_90 := ->(iNsTr_89) 
    // compare instruction
    iNsTr_91 := (iNsTr_90 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 )  )
    $if iNsTr_91 $then  $place [bb_21_bb_22] $else $place [bb_21_bb_48] $endif 
    //begin: basic-block bb_22
    $merge bb_21_bb_22
    $endmerge
    iNsTr_213 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][iNsTr_5][( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ]
    iNsTr_214 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_215 := ->(iNsTr_214) 
    iNsTr_216 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_x264_weight_none[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ])
    $call get_ref (iNsTr_69 i_stride0 iNsTr_213 iNsTr_215 iNsTr_25 iNsTr_50 iNsTr_77 iNsTr_78 iNsTr_216 )  (iNsTr_217)
    iNsTr_218 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][iNsTr_8][( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ]
    // load 
    iNsTr_219 := ->(iNsTr_214) 
    iNsTr_220 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_x264_weight_none[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ])
    $call get_ref (iNsTr_73 i_stride1 iNsTr_218 iNsTr_219 iNsTr_35 iNsTr_60 iNsTr_77 iNsTr_78 iNsTr_220 )  (iNsTr_221)
    $switch iNsTr_63
    $when _b00000000000000000000000000000000 $then 
    $place [bb_22_bb_23]
    $when _b00000000000000000000000000000001 $then 
    $place [bb_22_bb_24]
    $when _b00000000000000000000000000000010 $then 
    $place [bb_22_bb_25]
    $when _b00000000000000000000000000000011 $then 
    $place [bb_22_bb_26]
    $when _b00000000000000000000000000000100 $then 
    $place [bb_22_bb_27]
    $when _b00000000000000000000000000000101 $then 
    $place [bb_22_bb_28]
    $when _b00000000000000000000000000000110 $then 
    $place [bb_22_bb_29]
    $when _b00000000000000000000000000000111 $then 
    $place [bb_22_bb_30]
    $when _b00000000000000000000000000001000 $then 
    $place [bb_22_bb_31]
    $when _b00000000000000000000000000001001 $then 
    $place [bb_22_bb_32]
    $when _b00000000000000000000000000001010 $then 
    $place [bb_22_bb_33]
    $when _b00000000000000000000000000001011 $then 
    $place [bb_22_bb_34]
    $default 
    $place [bb_22_bb_35]
    $endswitch
    //begin: basic-block bb_23
    $merge bb_22_bb_23
    $endmerge
    iNsTr_241 := (y << ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    iNsTr_242 := (x << ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_243 := (iNsTr_241 + iNsTr_242)
    iNsTr_244 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_245 := ->(iNsTr_244) 
    iNsTr_246 := iNsTr_245[iNsTr_243]
    // load 
    iNsTr_247 := ->(i_stride0) 
    // load 
    iNsTr_248 := ->(i_stride1) 
    $call pixel_avg_16x16 (iNsTr_246 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_217 iNsTr_247 iNsTr_221 iNsTr_248 iNsTr_13 )  ()
    $place [bb_23_bb_35]
    //begin: basic-block bb_24
    $merge bb_22_bb_24
    $endmerge
    iNsTr_251 := (y << ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    iNsTr_252 := (x << ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_253 := (iNsTr_251 + iNsTr_252)
    iNsTr_254 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_255 := ->(iNsTr_254) 
    iNsTr_256 := iNsTr_255[iNsTr_253]
    // load 
    iNsTr_257 := ->(i_stride0) 
    // load 
    iNsTr_258 := ->(i_stride1) 
    $call pixel_avg_16x8 (iNsTr_256 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_217 iNsTr_257 iNsTr_221 iNsTr_258 iNsTr_13 )  ()
    $place [bb_24_bb_35]
    //begin: basic-block bb_25
    $merge bb_22_bb_25
    $endmerge
    iNsTr_261 := (y << ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    iNsTr_262 := (x << ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_263 := (iNsTr_261 + iNsTr_262)
    iNsTr_264 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_265 := ->(iNsTr_264) 
    iNsTr_266 := iNsTr_265[iNsTr_263]
    // load 
    iNsTr_267 := ->(i_stride0) 
    // load 
    iNsTr_268 := ->(i_stride1) 
    $call pixel_avg_8x16 (iNsTr_266 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_217 iNsTr_267 iNsTr_221 iNsTr_268 iNsTr_13 )  ()
    $place [bb_25_bb_35]
    //begin: basic-block bb_26
    $merge bb_22_bb_26
    $endmerge
    iNsTr_271 := (y << ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    iNsTr_272 := (x << ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_273 := (iNsTr_271 + iNsTr_272)
    iNsTr_274 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_275 := ->(iNsTr_274) 
    iNsTr_276 := iNsTr_275[iNsTr_273]
    // load 
    iNsTr_277 := ->(i_stride0) 
    // load 
    iNsTr_278 := ->(i_stride1) 
    $call pixel_avg_8x8 (iNsTr_276 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_217 iNsTr_277 iNsTr_221 iNsTr_278 iNsTr_13 )  ()
    $place [bb_26_bb_35]
    //begin: basic-block bb_27
    $merge bb_22_bb_27
    $endmerge
    iNsTr_281 := (y << ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    iNsTr_282 := (x << ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_283 := (iNsTr_281 + iNsTr_282)
    iNsTr_284 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_285 := ->(iNsTr_284) 
    iNsTr_286 := iNsTr_285[iNsTr_283]
    // load 
    iNsTr_287 := ->(i_stride0) 
    // load 
    iNsTr_288 := ->(i_stride1) 
    $call pixel_avg_8x4 (iNsTr_286 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_217 iNsTr_287 iNsTr_221 iNsTr_288 iNsTr_13 )  ()
    $place [bb_27_bb_35]
    //begin: basic-block bb_28
    $merge bb_22_bb_28
    $endmerge
    iNsTr_291 := (y << ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    iNsTr_292 := (x << ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_293 := (iNsTr_291 + iNsTr_292)
    iNsTr_294 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_295 := ->(iNsTr_294) 
    iNsTr_296 := iNsTr_295[iNsTr_293]
    // load 
    iNsTr_297 := ->(i_stride0) 
    // load 
    iNsTr_298 := ->(i_stride1) 
    $call pixel_avg_4x8 (iNsTr_296 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_217 iNsTr_297 iNsTr_221 iNsTr_298 iNsTr_13 )  ()
    $place [bb_28_bb_35]
    //begin: basic-block bb_29
    $merge bb_22_bb_29
    $endmerge
    iNsTr_301 := (y << ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    iNsTr_302 := (x << ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_303 := (iNsTr_301 + iNsTr_302)
    iNsTr_304 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_305 := ->(iNsTr_304) 
    iNsTr_306 := iNsTr_305[iNsTr_303]
    // load 
    iNsTr_307 := ->(i_stride0) 
    // load 
    iNsTr_308 := ->(i_stride1) 
    $call pixel_avg_4x4 (iNsTr_306 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_217 iNsTr_307 iNsTr_221 iNsTr_308 iNsTr_13 )  ()
    $place [bb_29_bb_35]
    //begin: basic-block bb_30
    $merge bb_22_bb_30
    $endmerge
    iNsTr_311 := (y << ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    iNsTr_312 := (x << ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_313 := (iNsTr_311 + iNsTr_312)
    iNsTr_314 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_315 := ->(iNsTr_314) 
    iNsTr_316 := iNsTr_315[iNsTr_313]
    // load 
    iNsTr_317 := ->(i_stride0) 
    // load 
    iNsTr_318 := ->(i_stride1) 
    $call pixel_avg_4x16 (iNsTr_316 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_217 iNsTr_317 iNsTr_221 iNsTr_318 iNsTr_13 )  ()
    $place [bb_30_bb_35]
    //begin: basic-block bb_31
    $merge bb_22_bb_31
    $endmerge
    iNsTr_321 := (y << ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    iNsTr_322 := (x << ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_323 := (iNsTr_321 + iNsTr_322)
    iNsTr_324 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_325 := ->(iNsTr_324) 
    iNsTr_326 := iNsTr_325[iNsTr_323]
    // load 
    iNsTr_327 := ->(i_stride0) 
    // load 
    iNsTr_328 := ->(i_stride1) 
    $call pixel_avg_4x2 (iNsTr_326 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_217 iNsTr_327 iNsTr_221 iNsTr_328 iNsTr_13 )  ()
    $place [bb_31_bb_35]
    //begin: basic-block bb_32
    $merge bb_22_bb_32
    $endmerge
    iNsTr_331 := (y << ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    iNsTr_332 := (x << ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_333 := (iNsTr_331 + iNsTr_332)
    iNsTr_334 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_335 := ->(iNsTr_334) 
    iNsTr_336 := iNsTr_335[iNsTr_333]
    // load 
    iNsTr_337 := ->(i_stride0) 
    // load 
    iNsTr_338 := ->(i_stride1) 
    $call pixel_avg_2x8 (iNsTr_336 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_217 iNsTr_337 iNsTr_221 iNsTr_338 iNsTr_13 )  ()
    $place [bb_32_bb_35]
    //begin: basic-block bb_33
    $merge bb_22_bb_33
    $endmerge
    iNsTr_341 := (y << ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    iNsTr_342 := (x << ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_343 := (iNsTr_341 + iNsTr_342)
    iNsTr_344 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_345 := ->(iNsTr_344) 
    iNsTr_346 := iNsTr_345[iNsTr_343]
    // load 
    iNsTr_347 := ->(i_stride0) 
    // load 
    iNsTr_348 := ->(i_stride1) 
    $call pixel_avg_2x4 (iNsTr_346 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_217 iNsTr_347 iNsTr_221 iNsTr_348 iNsTr_13 )  ()
    $place [bb_33_bb_35]
    //begin: basic-block bb_34
    $merge bb_22_bb_34
    $endmerge
    iNsTr_351 := (y << ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    iNsTr_352 := (x << ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_353 := (iNsTr_351 + iNsTr_352)
    iNsTr_354 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_355 := ->(iNsTr_354) 
    iNsTr_356 := iNsTr_355[iNsTr_353]
    // load 
    iNsTr_357 := ->(i_stride0) 
    // load 
    iNsTr_358 := ->(i_stride1) 
    $call pixel_avg_2x2 (iNsTr_356 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_217 iNsTr_357 iNsTr_221 iNsTr_358 iNsTr_13 )  ()
    $place [bb_34_bb_35]
    //begin: basic-block bb_35
    $merge bb_22_bb_35 bb_23_bb_35 bb_24_bb_35 bb_25_bb_35 bb_26_bb_35 bb_27_bb_35 bb_28_bb_35 bb_29_bb_35 bb_30_bb_35 bb_31_bb_35 bb_32_bb_35 bb_33_bb_35 bb_34_bb_35
    $endmerge
    iNsTr_231 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][iNsTr_5][( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) ]
    iNsTr_232 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_233 := ->(iNsTr_232) 
    iNsTr_234 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_x264_weight_none[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ])
    $call get_ref (iNsTr_69 i_stride0 iNsTr_231 iNsTr_233 iNsTr_25 iNsTr_50 iNsTr_77 iNsTr_78 iNsTr_234 )  (iNsTr_235)
    iNsTr_236 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][iNsTr_8][( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) ]
    // load 
    iNsTr_237 := ->(iNsTr_232) 
    iNsTr_238 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_x264_weight_none[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ])
    $call get_ref (iNsTr_73 i_stride1 iNsTr_236 iNsTr_237 iNsTr_35 iNsTr_60 iNsTr_77 iNsTr_78 iNsTr_238 )  (iNsTr_239)
    $switch iNsTr_63
    $when _b00000000000000000000000000000000 $then 
    $place [bb_35_bb_36]
    $when _b00000000000000000000000000000001 $then 
    $place [bb_35_bb_37]
    $when _b00000000000000000000000000000010 $then 
    $place [bb_35_bb_38]
    $when _b00000000000000000000000000000011 $then 
    $place [bb_35_bb_39]
    $when _b00000000000000000000000000000100 $then 
    $place [bb_35_bb_40]
    $when _b00000000000000000000000000000101 $then 
    $place [bb_35_bb_41]
    $when _b00000000000000000000000000000110 $then 
    $place [bb_35_bb_42]
    $when _b00000000000000000000000000000111 $then 
    $place [bb_35_bb_43]
    $when _b00000000000000000000000000001000 $then 
    $place [bb_35_bb_44]
    $when _b00000000000000000000000000001001 $then 
    $place [bb_35_bb_45]
    $when _b00000000000000000000000000001010 $then 
    $place [bb_35_bb_46]
    $when _b00000000000000000000000000001011 $then 
    $place [bb_35_bb_47]
    $default 
    $place [bb_35_bb_65]
    $endswitch
    //begin: basic-block bb_36
    $merge bb_35_bb_36
    $endmerge
    iNsTr_373 := (y << ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    iNsTr_374 := (x << ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_375 := (iNsTr_373 + iNsTr_374)
    iNsTr_376 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_377 := ->(iNsTr_376) 
    iNsTr_378 := iNsTr_377[iNsTr_375]
    // load 
    iNsTr_379 := ->(i_stride0) 
    // load 
    iNsTr_380 := ->(i_stride1) 
    $call pixel_avg_16x16 (iNsTr_378 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_235 iNsTr_379 iNsTr_239 iNsTr_380 iNsTr_13 )  ()
    $place [bb_36_UnifiedReturnBlock]
    //begin: basic-block bb_37
    $merge bb_35_bb_37
    $endmerge
    iNsTr_383 := (y << ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    iNsTr_384 := (x << ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_385 := (iNsTr_383 + iNsTr_384)
    iNsTr_386 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_387 := ->(iNsTr_386) 
    iNsTr_388 := iNsTr_387[iNsTr_385]
    // load 
    iNsTr_389 := ->(i_stride0) 
    // load 
    iNsTr_390 := ->(i_stride1) 
    $call pixel_avg_16x8 (iNsTr_388 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_235 iNsTr_389 iNsTr_239 iNsTr_390 iNsTr_13 )  ()
    $place [bb_37_UnifiedReturnBlock]
    //begin: basic-block bb_38
    $merge bb_35_bb_38
    $endmerge
    iNsTr_393 := (y << ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    iNsTr_394 := (x << ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_395 := (iNsTr_393 + iNsTr_394)
    iNsTr_396 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_397 := ->(iNsTr_396) 
    iNsTr_398 := iNsTr_397[iNsTr_395]
    // load 
    iNsTr_399 := ->(i_stride0) 
    // load 
    iNsTr_400 := ->(i_stride1) 
    $call pixel_avg_8x16 (iNsTr_398 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_235 iNsTr_399 iNsTr_239 iNsTr_400 iNsTr_13 )  ()
    $place [bb_38_UnifiedReturnBlock]
    //begin: basic-block bb_39
    $merge bb_35_bb_39
    $endmerge
    iNsTr_403 := (y << ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    iNsTr_404 := (x << ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_405 := (iNsTr_403 + iNsTr_404)
    iNsTr_406 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_407 := ->(iNsTr_406) 
    iNsTr_408 := iNsTr_407[iNsTr_405]
    // load 
    iNsTr_409 := ->(i_stride0) 
    // load 
    iNsTr_410 := ->(i_stride1) 
    $call pixel_avg_8x8 (iNsTr_408 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_235 iNsTr_409 iNsTr_239 iNsTr_410 iNsTr_13 )  ()
    $place [bb_39_UnifiedReturnBlock]
    //begin: basic-block bb_40
    $merge bb_35_bb_40
    $endmerge
    iNsTr_413 := (y << ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    iNsTr_414 := (x << ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_415 := (iNsTr_413 + iNsTr_414)
    iNsTr_416 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_417 := ->(iNsTr_416) 
    iNsTr_418 := iNsTr_417[iNsTr_415]
    // load 
    iNsTr_419 := ->(i_stride0) 
    // load 
    iNsTr_420 := ->(i_stride1) 
    $call pixel_avg_8x4 (iNsTr_418 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_235 iNsTr_419 iNsTr_239 iNsTr_420 iNsTr_13 )  ()
    $place [bb_40_UnifiedReturnBlock]
    //begin: basic-block bb_41
    $merge bb_35_bb_41
    $endmerge
    iNsTr_423 := (y << ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    iNsTr_424 := (x << ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_425 := (iNsTr_423 + iNsTr_424)
    iNsTr_426 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_427 := ->(iNsTr_426) 
    iNsTr_428 := iNsTr_427[iNsTr_425]
    // load 
    iNsTr_429 := ->(i_stride0) 
    // load 
    iNsTr_430 := ->(i_stride1) 
    $call pixel_avg_4x8 (iNsTr_428 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_235 iNsTr_429 iNsTr_239 iNsTr_430 iNsTr_13 )  ()
    $place [bb_41_UnifiedReturnBlock]
    //begin: basic-block bb_42
    $merge bb_35_bb_42
    $endmerge
    iNsTr_433 := (y << ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    iNsTr_434 := (x << ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_435 := (iNsTr_433 + iNsTr_434)
    iNsTr_436 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_437 := ->(iNsTr_436) 
    iNsTr_438 := iNsTr_437[iNsTr_435]
    // load 
    iNsTr_439 := ->(i_stride0) 
    // load 
    iNsTr_440 := ->(i_stride1) 
    $call pixel_avg_4x4 (iNsTr_438 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_235 iNsTr_439 iNsTr_239 iNsTr_440 iNsTr_13 )  ()
    $place [bb_42_UnifiedReturnBlock]
    //begin: basic-block bb_43
    $merge bb_35_bb_43
    $endmerge
    iNsTr_443 := (y << ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    iNsTr_444 := (x << ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_445 := (iNsTr_443 + iNsTr_444)
    iNsTr_446 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_447 := ->(iNsTr_446) 
    iNsTr_448 := iNsTr_447[iNsTr_445]
    // load 
    iNsTr_449 := ->(i_stride0) 
    // load 
    iNsTr_450 := ->(i_stride1) 
    $call pixel_avg_4x16 (iNsTr_448 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_235 iNsTr_449 iNsTr_239 iNsTr_450 iNsTr_13 )  ()
    $place [bb_43_UnifiedReturnBlock]
    //begin: basic-block bb_44
    $merge bb_35_bb_44
    $endmerge
    iNsTr_453 := (y << ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    iNsTr_454 := (x << ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_455 := (iNsTr_453 + iNsTr_454)
    iNsTr_456 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_457 := ->(iNsTr_456) 
    iNsTr_458 := iNsTr_457[iNsTr_455]
    // load 
    iNsTr_459 := ->(i_stride0) 
    // load 
    iNsTr_460 := ->(i_stride1) 
    $call pixel_avg_4x2 (iNsTr_458 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_235 iNsTr_459 iNsTr_239 iNsTr_460 iNsTr_13 )  ()
    $place [bb_44_UnifiedReturnBlock]
    //begin: basic-block bb_45
    $merge bb_35_bb_45
    $endmerge
    iNsTr_463 := (y << ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    iNsTr_464 := (x << ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_465 := (iNsTr_463 + iNsTr_464)
    iNsTr_466 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_467 := ->(iNsTr_466) 
    iNsTr_468 := iNsTr_467[iNsTr_465]
    // load 
    iNsTr_469 := ->(i_stride0) 
    // load 
    iNsTr_470 := ->(i_stride1) 
    $call pixel_avg_2x8 (iNsTr_468 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_235 iNsTr_469 iNsTr_239 iNsTr_470 iNsTr_13 )  ()
    $place [bb_45_UnifiedReturnBlock]
    //begin: basic-block bb_46
    $merge bb_35_bb_46
    $endmerge
    iNsTr_473 := (y << ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    iNsTr_474 := (x << ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_475 := (iNsTr_473 + iNsTr_474)
    iNsTr_476 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_477 := ->(iNsTr_476) 
    iNsTr_478 := iNsTr_477[iNsTr_475]
    // load 
    iNsTr_479 := ->(i_stride0) 
    // load 
    iNsTr_480 := ->(i_stride1) 
    $call pixel_avg_2x4 (iNsTr_478 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_235 iNsTr_479 iNsTr_239 iNsTr_480 iNsTr_13 )  ()
    $place [bb_46_UnifiedReturnBlock]
    //begin: basic-block bb_47
    $merge bb_35_bb_47
    $endmerge
    iNsTr_483 := (y << ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    iNsTr_484 := (x << ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_485 := (iNsTr_483 + iNsTr_484)
    iNsTr_486 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_487 := ->(iNsTr_486) 
    iNsTr_488 := iNsTr_487[iNsTr_485]
    // load 
    iNsTr_489 := ->(i_stride0) 
    // load 
    iNsTr_490 := ->(i_stride1) 
    $call pixel_avg_2x2 (iNsTr_488 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_235 iNsTr_489 iNsTr_239 iNsTr_490 iNsTr_13 )  ()
    $place [bb_47_UnifiedReturnBlock]
    //begin: basic-block bb_48
    $merge bb_21_bb_48
    $endmerge
    iNsTr_223 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ]
    // load 
    iNsTr_224 := ->(iNsTr_223) 
    iNsTr_225 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010111 ) ]
    // load 
    iNsTr_226 := ->(iNsTr_225) 
    iNsTr_227 := (iNsTr_224 & iNsTr_5)
    iNsTr_228 := (iNsTr_227 & iNsTr_226)
    // compare instruction
    iNsTr_229 := (iNsTr_228 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if iNsTr_229 $then  $place [bb_48_bb_50] $else $place [bb_48_bb_49] $endif 
    //begin: basic-block bb_49
    $merge bb_48_bb_49
    $endmerge
    iNsTr_365 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000001011 ) ]
    // load 
    iNsTr_366 := ->(iNsTr_365) 
    iNsTr_367 := (iNsTr_366 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_368 := (iNsTr_367 & ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    iNsTr_369 := (iNsTr_50 + ( $bitcast ($uint<32> ) _b11111111111111111111111111111110 ) )
    iNsTr_370 := (iNsTr_369 + iNsTr_368)
    $place [bb_49_bb_50]
    //begin: basic-block bb_50
    $merge bb_48_bb_50 bb_49_bb_50
    $phi mvy0x_x0 :=  ( $cast ($uint<32>) iNsTr_370) $on bb_49_bb_50 ( $cast ($uint<32>) iNsTr_50) $on bb_48_bb_50 
    $endmerge
    iNsTr_361 := (iNsTr_224 & iNsTr_8)
    iNsTr_362 := (iNsTr_361 & iNsTr_226)
    // compare instruction
    iNsTr_363 := (iNsTr_362 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if iNsTr_363 $then  $place [bb_50_bb_52] $else $place [bb_50_bb_51] $endif 
    //begin: basic-block bb_51
    $merge bb_50_bb_51
    $endmerge
    iNsTr_518 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000001011 ) ]
    // load 
    iNsTr_519 := ->(iNsTr_518) 
    iNsTr_520 := (iNsTr_519 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_521 := (iNsTr_520 & ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    iNsTr_522 := (iNsTr_60 + ( $bitcast ($uint<32> ) _b11111111111111111111111111111110 ) )
    iNsTr_523 := (iNsTr_522 + iNsTr_521)
    $place [bb_51_bb_52]
    //begin: basic-block bb_52
    $merge bb_50_bb_52 bb_51_bb_52
    $phi mvy1x_x0 :=  ( $cast ($uint<32>) iNsTr_523) $on bb_51_bb_52 ( $cast ($uint<32>) iNsTr_60) $on bb_50_bb_52 
    $endmerge
    iNsTr_493 := iNsTr_69[( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) ]
    iNsTr_494 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][iNsTr_5][( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ]
    // load 
    iNsTr_495 := ->(iNsTr_494) 
    iNsTr_496 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_497 := ->(iNsTr_496) 
    iNsTr_498 := (mvy0x_x0 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_499 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_498) >>  ($bitcast ( $int<32>) iNsTr_224 )))
    iNsTr_500 := (width << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_501 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_78) >>  ($bitcast ( $int<32>) iNsTr_224 )))
    $call mc_chroma (iNsTr_69 iNsTr_493 ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  iNsTr_495 iNsTr_497 iNsTr_25 iNsTr_499 iNsTr_500 iNsTr_501 )  ()
    iNsTr_503 := iNsTr_73[( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) ]
    iNsTr_504 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][iNsTr_8][( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ]
    // load 
    iNsTr_505 := ->(iNsTr_504) 
    // load 
    iNsTr_506 := ->(iNsTr_496) 
    iNsTr_507 := (mvy1x_x0 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_508 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_507) >>  ($bitcast ( $int<32>) iNsTr_224 )))
    $call mc_chroma (iNsTr_73 iNsTr_503 ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  iNsTr_505 iNsTr_506 iNsTr_35 iNsTr_508 iNsTr_500 iNsTr_501 )  ()
    iNsTr_510 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001001111 ) ][iNsTr_63]
    // load 
    iNsTr_511 := ->(iNsTr_510) 
    iNsTr_512 := ($cast ($uint<32>) iNsTr_511)
    iNsTr_513 := (( $bitcast ($uint<32> ) _b00000000000000000000000010000000 )  >> iNsTr_224)
    iNsTr_514 := (iNsTr_513 * y)
    iNsTr_515 := (x << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_516 := (iNsTr_514 + iNsTr_515)
    $switch iNsTr_512
    $when _b00000000000000000000000000000000 $then 
    $place [bb_52_bb_53]
    $when _b00000000000000000000000000000001 $then 
    $place [bb_52_bb_54]
    $when _b00000000000000000000000000000010 $then 
    $place [bb_52_bb_55]
    $when _b00000000000000000000000000000011 $then 
    $place [bb_52_bb_56]
    $when _b00000000000000000000000000000100 $then 
    $place [bb_52_bb_57]
    $when _b00000000000000000000000000000101 $then 
    $place [bb_52_bb_58]
    $when _b00000000000000000000000000000110 $then 
    $place [bb_52_bb_59]
    $when _b00000000000000000000000000000111 $then 
    $place [bb_52_bb_60]
    $when _b00000000000000000000000000001000 $then 
    $place [bb_52_bb_61]
    $when _b00000000000000000000000000001001 $then 
    $place [bb_52_bb_62]
    $when _b00000000000000000000000000001010 $then 
    $place [bb_52_bb_63]
    $when _b00000000000000000000000000001011 $then 
    $place [bb_52_bb_64]
    $default 
    $place [bb_52_bb_65]
    $endswitch
    //begin: basic-block bb_53
    $merge bb_52_bb_53
    $endmerge
    iNsTr_526 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_527 := ->(iNsTr_526) 
    iNsTr_528 := iNsTr_527[iNsTr_516]
    $call pixel_avg_16x16 (iNsTr_528 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_69 ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  iNsTr_73 ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  iNsTr_13 )  ()
    iNsTr_530 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_531 := ->(iNsTr_530) 
    iNsTr_532 := iNsTr_531[iNsTr_516]
    $call pixel_avg_16x16 (iNsTr_532 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_493 ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  iNsTr_503 ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  iNsTr_13 )  ()
    $place [bb_53_UnifiedReturnBlock]
    //begin: basic-block bb_54
    $merge bb_52_bb_54
    $endmerge
    iNsTr_535 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_536 := ->(iNsTr_535) 
    iNsTr_537 := iNsTr_536[iNsTr_516]
    $call pixel_avg_16x8 (iNsTr_537 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_69 ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  iNsTr_73 ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  iNsTr_13 )  ()
    iNsTr_539 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_540 := ->(iNsTr_539) 
    iNsTr_541 := iNsTr_540[iNsTr_516]
    $call pixel_avg_16x8 (iNsTr_541 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_493 ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  iNsTr_503 ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  iNsTr_13 )  ()
    $place [bb_54_UnifiedReturnBlock]
    //begin: basic-block bb_55
    $merge bb_52_bb_55
    $endmerge
    iNsTr_544 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_545 := ->(iNsTr_544) 
    iNsTr_546 := iNsTr_545[iNsTr_516]
    $call pixel_avg_8x16 (iNsTr_546 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_69 ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  iNsTr_73 ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  iNsTr_13 )  ()
    iNsTr_548 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_549 := ->(iNsTr_548) 
    iNsTr_550 := iNsTr_549[iNsTr_516]
    $call pixel_avg_8x16 (iNsTr_550 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_493 ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  iNsTr_503 ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  iNsTr_13 )  ()
    $place [bb_55_UnifiedReturnBlock]
    //begin: basic-block bb_56
    $merge bb_52_bb_56
    $endmerge
    iNsTr_553 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_554 := ->(iNsTr_553) 
    iNsTr_555 := iNsTr_554[iNsTr_516]
    $call pixel_avg_8x8 (iNsTr_555 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_69 ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  iNsTr_73 ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  iNsTr_13 )  ()
    iNsTr_557 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_558 := ->(iNsTr_557) 
    iNsTr_559 := iNsTr_558[iNsTr_516]
    $call pixel_avg_8x8 (iNsTr_559 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_493 ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  iNsTr_503 ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  iNsTr_13 )  ()
    $place [bb_56_UnifiedReturnBlock]
    //begin: basic-block bb_57
    $merge bb_52_bb_57
    $endmerge
    iNsTr_562 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_563 := ->(iNsTr_562) 
    iNsTr_564 := iNsTr_563[iNsTr_516]
    $call pixel_avg_8x4 (iNsTr_564 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_69 ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  iNsTr_73 ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  iNsTr_13 )  ()
    iNsTr_566 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_567 := ->(iNsTr_566) 
    iNsTr_568 := iNsTr_567[iNsTr_516]
    $call pixel_avg_8x4 (iNsTr_568 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_493 ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  iNsTr_503 ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  iNsTr_13 )  ()
    $place [bb_57_UnifiedReturnBlock]
    //begin: basic-block bb_58
    $merge bb_52_bb_58
    $endmerge
    iNsTr_571 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_572 := ->(iNsTr_571) 
    iNsTr_573 := iNsTr_572[iNsTr_516]
    $call pixel_avg_4x8 (iNsTr_573 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_69 ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  iNsTr_73 ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  iNsTr_13 )  ()
    iNsTr_575 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_576 := ->(iNsTr_575) 
    iNsTr_577 := iNsTr_576[iNsTr_516]
    $call pixel_avg_4x8 (iNsTr_577 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_493 ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  iNsTr_503 ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  iNsTr_13 )  ()
    $place [bb_58_UnifiedReturnBlock]
    //begin: basic-block bb_59
    $merge bb_52_bb_59
    $endmerge
    iNsTr_580 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_581 := ->(iNsTr_580) 
    iNsTr_582 := iNsTr_581[iNsTr_516]
    $call pixel_avg_4x4 (iNsTr_582 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_69 ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  iNsTr_73 ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  iNsTr_13 )  ()
    iNsTr_584 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_585 := ->(iNsTr_584) 
    iNsTr_586 := iNsTr_585[iNsTr_516]
    $call pixel_avg_4x4 (iNsTr_586 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_493 ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  iNsTr_503 ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  iNsTr_13 )  ()
    $place [bb_59_UnifiedReturnBlock]
    //begin: basic-block bb_60
    $merge bb_52_bb_60
    $endmerge
    iNsTr_589 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_590 := ->(iNsTr_589) 
    iNsTr_591 := iNsTr_590[iNsTr_516]
    $call pixel_avg_4x16 (iNsTr_591 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_69 ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  iNsTr_73 ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  iNsTr_13 )  ()
    iNsTr_593 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_594 := ->(iNsTr_593) 
    iNsTr_595 := iNsTr_594[iNsTr_516]
    $call pixel_avg_4x16 (iNsTr_595 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_493 ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  iNsTr_503 ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  iNsTr_13 )  ()
    $place [bb_60_UnifiedReturnBlock]
    //begin: basic-block bb_61
    $merge bb_52_bb_61
    $endmerge
    iNsTr_598 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_599 := ->(iNsTr_598) 
    iNsTr_600 := iNsTr_599[iNsTr_516]
    $call pixel_avg_4x2 (iNsTr_600 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_69 ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  iNsTr_73 ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  iNsTr_13 )  ()
    iNsTr_602 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_603 := ->(iNsTr_602) 
    iNsTr_604 := iNsTr_603[iNsTr_516]
    $call pixel_avg_4x2 (iNsTr_604 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_493 ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  iNsTr_503 ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  iNsTr_13 )  ()
    $place [bb_61_UnifiedReturnBlock]
    //begin: basic-block bb_62
    $merge bb_52_bb_62
    $endmerge
    iNsTr_607 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_608 := ->(iNsTr_607) 
    iNsTr_609 := iNsTr_608[iNsTr_516]
    $call pixel_avg_2x8 (iNsTr_609 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_69 ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  iNsTr_73 ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  iNsTr_13 )  ()
    iNsTr_611 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_612 := ->(iNsTr_611) 
    iNsTr_613 := iNsTr_612[iNsTr_516]
    $call pixel_avg_2x8 (iNsTr_613 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_493 ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  iNsTr_503 ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  iNsTr_13 )  ()
    $place [bb_62_UnifiedReturnBlock]
    //begin: basic-block bb_63
    $merge bb_52_bb_63
    $endmerge
    iNsTr_616 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_617 := ->(iNsTr_616) 
    iNsTr_618 := iNsTr_617[iNsTr_516]
    $call pixel_avg_2x4 (iNsTr_618 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_69 ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  iNsTr_73 ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  iNsTr_13 )  ()
    iNsTr_620 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_621 := ->(iNsTr_620) 
    iNsTr_622 := iNsTr_621[iNsTr_516]
    $call pixel_avg_2x4 (iNsTr_622 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_493 ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  iNsTr_503 ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  iNsTr_13 )  ()
    $place [bb_63_UnifiedReturnBlock]
    //begin: basic-block bb_64
    $merge bb_52_bb_64
    $endmerge
    iNsTr_625 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_626 := ->(iNsTr_625) 
    iNsTr_627 := iNsTr_626[iNsTr_516]
    $call pixel_avg_2x2 (iNsTr_627 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_69 ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  iNsTr_73 ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  iNsTr_13 )  ()
    iNsTr_629 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_630 := ->(iNsTr_629) 
    iNsTr_631 := iNsTr_630[iNsTr_516]
    $call pixel_avg_2x2 (iNsTr_631 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_493 ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  iNsTr_503 ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  iNsTr_13 )  ()
    $place [bb_64_UnifiedReturnBlock]
    //begin: basic-block bb_65
    $merge bb_35_bb_65 bb_52_bb_65
    $endmerge
    $place [bb_65_UnifiedReturnBlock]
    //begin: basic-block UnifiedReturnBlock
    $merge bb_36_UnifiedReturnBlock bb_37_UnifiedReturnBlock bb_38_UnifiedReturnBlock bb_39_UnifiedReturnBlock bb_40_UnifiedReturnBlock bb_41_UnifiedReturnBlock bb_42_UnifiedReturnBlock bb_43_UnifiedReturnBlock bb_44_UnifiedReturnBlock bb_45_UnifiedReturnBlock bb_46_UnifiedReturnBlock bb_47_UnifiedReturnBlock bb_53_UnifiedReturnBlock bb_54_UnifiedReturnBlock bb_55_UnifiedReturnBlock bb_56_UnifiedReturnBlock bb_57_UnifiedReturnBlock bb_58_UnifiedReturnBlock bb_59_UnifiedReturnBlock bb_60_UnifiedReturnBlock bb_61_UnifiedReturnBlock bb_62_UnifiedReturnBlock bb_63_UnifiedReturnBlock bb_64_UnifiedReturnBlock bb_65_UnifiedReturnBlock
    $endmerge
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [x264_mb_mc_1xywh] 
$in (h : $pointer< structx_xx264_t > x : $uint<32> y : $uint<32> width : $uint<32> height : $uint<32> )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    iNsTr_0 := (y << ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    iNsTr_1 := (x + ( $bitcast ($uint<32> ) _b00000000000000000000000000001100 ) )
    iNsTr_2 := (iNsTr_1 + iNsTr_0)
    iNsTr_3 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011100 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][iNsTr_2]
    // load 
    iNsTr_4 := ->(iNsTr_3) 
    iNsTr_5 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_4) )
    iNsTr_6 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011100 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][iNsTr_2][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    // load 
    iNsTr_7 := ->(iNsTr_6) 
    iNsTr_8 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_7) )
    iNsTr_9 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000011001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    // load 
    iNsTr_10 := ->(iNsTr_9) 
    iNsTr_11 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000011010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    // load 
    iNsTr_12 := ->(iNsTr_11) 
    // compare instruction
    iNsTr_13 := ( ($bitcast ( $int<32>) iNsTr_8) <   ($bitcast ( $int<32>) iNsTr_10 ) )
    $if iNsTr_13 $then  $place [bb_0_x264_clip3x_xexit] $else $place [bb_0_bb_1] $endif 
    //begin: basic-block bb_1
    $merge bb_0_bb_1
    $endmerge
    // compare instruction
    iNsTr_27 := ( ($bitcast ( $int<32>) iNsTr_8) >  ($bitcast ( $int<32>) iNsTr_12 ) )
    iNsTr_28 := ( $mux iNsTr_27 iNsTr_12 iNsTr_8)
    $place [bb_1_x264_clip3x_xexit]
    //begin: basic-block x264_clip3x_xexit
    $merge bb_0_x264_clip3x_xexit bb_1_x264_clip3x_xexit
    $phi iNsTr_15 :=  ( $cast ($uint<32>) iNsTr_28) $on bb_1_x264_clip3x_xexit ( $cast ($uint<32>) iNsTr_10) $on bb_0_x264_clip3x_xexit 
    $endmerge
    iNsTr_16 := (x << ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    iNsTr_17 := (iNsTr_15 + iNsTr_16)
    iNsTr_18 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011100 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][iNsTr_2][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_19 := ->(iNsTr_18) 
    iNsTr_20 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_19) )
    iNsTr_21 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000011001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_22 := ->(iNsTr_21) 
    iNsTr_23 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000011010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_24 := ->(iNsTr_23) 
    // compare instruction
    iNsTr_25 := ( ($bitcast ( $int<32>) iNsTr_20) <   ($bitcast ( $int<32>) iNsTr_22 ) )
    $if iNsTr_25 $then  $place [x264_clip3x_xexit_x264_clip3x_xexit1] $else $place [x264_clip3x_xexit_bb_3] $endif 
    //begin: basic-block bb_3
    $merge x264_clip3x_xexit_bb_3
    $endmerge
    // compare instruction
    iNsTr_50 := ( ($bitcast ( $int<32>) iNsTr_20) >  ($bitcast ( $int<32>) iNsTr_24 ) )
    iNsTr_51 := ( $mux iNsTr_50 iNsTr_24 iNsTr_20)
    $place [bb_3_x264_clip3x_xexit1]
    //begin: basic-block x264_clip3x_xexit1
    $merge bb_3_x264_clip3x_xexit1 x264_clip3x_xexit_x264_clip3x_xexit1
    $phi iNsTr_30 :=  ( $cast ($uint<32>) iNsTr_51) $on bb_3_x264_clip3x_xexit1 ( $cast ($uint<32>) iNsTr_22) $on x264_clip3x_xexit_x264_clip3x_xexit1 
    $endmerge
    iNsTr_31 := (y << ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    iNsTr_32 := (iNsTr_30 + iNsTr_31)
    iNsTr_33 := (y << ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    iNsTr_34 := (x << ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_35 := (iNsTr_33 + iNsTr_34)
    iNsTr_36 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    // load 
    iNsTr_37 := ->(iNsTr_36) 
    iNsTr_38 := iNsTr_37[iNsTr_35]
    iNsTr_39 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][iNsTr_5][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    iNsTr_40 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    // load 
    iNsTr_41 := ->(iNsTr_40) 
    iNsTr_42 := (width << ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_43 := (height << ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_44 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_x264_weight_none[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ])
    $call mc_luma (iNsTr_38 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_39 iNsTr_41 iNsTr_17 iNsTr_32 iNsTr_42 iNsTr_43 iNsTr_44 )  ()
    iNsTr_46 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000110011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010110 ) ]
    // load 
    iNsTr_47 := ->(iNsTr_46) 
    // compare instruction
    iNsTr_48 := (iNsTr_47 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 )  )
    $if iNsTr_48 $then  $place [x264_clip3x_xexit1_bb_5] $else $place [x264_clip3x_xexit1_bb_6] $endif 
    //begin: basic-block bb_5
    $merge x264_clip3x_xexit1_bb_5
    $endmerge
    iNsTr_53 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_54 := ->(iNsTr_53) 
    iNsTr_55 := iNsTr_54[iNsTr_35]
    iNsTr_56 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][iNsTr_5][( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ]
    iNsTr_57 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_58 := ->(iNsTr_57) 
    iNsTr_59 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_x264_weight_none[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ])
    $call mc_luma (iNsTr_55 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_56 iNsTr_58 iNsTr_17 iNsTr_32 iNsTr_42 iNsTr_43 iNsTr_59 )  ()
    iNsTr_61 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_62 := ->(iNsTr_61) 
    iNsTr_63 := iNsTr_62[iNsTr_35]
    iNsTr_64 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][iNsTr_5][( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) ]
    iNsTr_65 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_66 := ->(iNsTr_65) 
    iNsTr_67 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_x264_weight_none[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ])
    $call mc_luma (iNsTr_63 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_64 iNsTr_66 iNsTr_17 iNsTr_32 iNsTr_42 iNsTr_43 iNsTr_67 )  ()
    $place [bb_5_UnifiedReturnBlock]
    //begin: basic-block bb_6
    $merge x264_clip3x_xexit1_bb_6
    $endmerge
    iNsTr_70 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ]
    // load 
    iNsTr_71 := ->(iNsTr_70) 
    iNsTr_72 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010111 ) ]
    // load 
    iNsTr_73 := ->(iNsTr_72) 
    iNsTr_74 := (iNsTr_71 & iNsTr_5)
    iNsTr_75 := (iNsTr_74 & iNsTr_73)
    // compare instruction
    iNsTr_76 := (iNsTr_75 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if iNsTr_76 $then  $place [bb_6_bb_8] $else $place [bb_6_bb_7] $endif 
    //begin: basic-block bb_7
    $merge bb_6_bb_7
    $endmerge
    iNsTr_99 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000001011 ) ]
    // load 
    iNsTr_100 := ->(iNsTr_99) 
    iNsTr_101 := (iNsTr_100 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_102 := (iNsTr_101 & ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    iNsTr_103 := (iNsTr_32 + ( $bitcast ($uint<32> ) _b11111111111111111111111111111110 ) )
    iNsTr_104 := (iNsTr_103 + iNsTr_102)
    $place [bb_7_bb_8]
    //begin: basic-block bb_8
    $merge bb_6_bb_8 bb_7_bb_8
    $phi mvyx_x0 :=  ( $cast ($uint<32>) iNsTr_104) $on bb_7_bb_8 ( $cast ($uint<32>) iNsTr_32) $on bb_6_bb_8 
    $endmerge
    iNsTr_79 := (( $bitcast ($uint<32> ) _b00000000000000000000000010000000 )  >> iNsTr_71)
    iNsTr_80 := (iNsTr_79 * y)
    iNsTr_81 := (x << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_82 := (iNsTr_80 + iNsTr_81)
    iNsTr_83 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_84 := ->(iNsTr_83) 
    iNsTr_85 := iNsTr_84[iNsTr_82]
    iNsTr_86 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_87 := ->(iNsTr_86) 
    iNsTr_88 := iNsTr_87[iNsTr_82]
    iNsTr_89 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][iNsTr_5][( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ]
    // load 
    iNsTr_90 := ->(iNsTr_89) 
    iNsTr_91 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_92 := ->(iNsTr_91) 
    iNsTr_93 := (mvyx_x0 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_94 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_93) >>  ($bitcast ( $int<32>) iNsTr_71 )))
    iNsTr_95 := (width << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_96 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_43) >>  ($bitcast ( $int<32>) iNsTr_71 )))
    $call mc_chroma (iNsTr_85 iNsTr_88 ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 )  iNsTr_90 iNsTr_92 iNsTr_17 iNsTr_94 iNsTr_95 iNsTr_96 )  ()
    $place [bb_8_UnifiedReturnBlock]
    //begin: basic-block UnifiedReturnBlock
    $merge bb_5_UnifiedReturnBlock bb_8_UnifiedReturnBlock
    $endmerge
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [x264_mb_mc] 
$in (h : $pointer< structx_xx264_t > )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    iNsTr_0 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001001101 ) ]
    // load 
    iNsTr_1 := ->(iNsTr_0) 
    // compare instruction
    iNsTr_2 := (iNsTr_1 == ( $bitcast ($uint<32> ) _b00000000000000000000000000001101 )  )
    $if iNsTr_2 $then  $place [bb_0_bbx_xnphx_xpreheader] $else $place [bb_0_bb_3] $endif 
    //begin: basic-block bbx_xnphx_xpreheader
    $merge bb_0_bbx_xnphx_xpreheader
    $endmerge
    $place [bbx_xnphx_xpreheader_bbx_xnph]
    //begin: basic-block bbx_xnph
    $merge bbx_xnph_bbx_xnph bbx_xnphx_xpreheader_bbx_xnph
    $phi iNsTr_14 :=  ( $cast ($uint<32>) iNsTr_16) $on bbx_xnph_bbx_xnph ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xpreheader_bbx_xnph 
    $endmerge
    $call x264_mb_mc_8x8 (h iNsTr_14 )  ()
    iNsTr_16 := (iNsTr_14 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (iNsTr_16 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 )  )
    $if exitcond1 $then  $place [bbx_xnph_xx_xloopexitx_xloopexit] $else $place [bbx_xnph_bbx_xnph] $endif 
    //begin: basic-block bb_3
    $merge bb_0_bb_3
    $endmerge
    iNsTr_5 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011100 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000001100 ) ]
    // load 
    iNsTr_6 := ->(iNsTr_5) 
    iNsTr_7 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011100 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000011110 ) ]
    // load 
    iNsTr_8 := ->(iNsTr_7) 
    iNsTr_9 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011100 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000001100 ) ]
    // load 
    iNsTr_10 := ->(iNsTr_9) 
    iNsTr_11 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011100 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000011110 ) ]
    // load 
    iNsTr_12 := ->(iNsTr_11) 
    $switch iNsTr_1
    $when _b00000000000000000000000000010000 $then 
    $place [bb_3_bb_4]
    $when _b00000000000000000000000000001110 $then 
    $place [bb_3_bb_9]
    $when _b00000000000000000000000000001111 $then 
    $place [bb_3_bb_19]
    $default 
    $place [bb_3_xx_xloopexit]
    $endswitch
    //begin: basic-block bb_4
    $merge bb_3_bb_4
    $endmerge
    // compare instruction
    iNsTr_19 := ( ($bitcast ( $int<8>) iNsTr_6) >  ($bitcast ( $int<8>) ( $bitcast ($uint<8> ) _b11111111 )  ) )
    $if iNsTr_19 $then  $place [bb_4_bb_5] $else $place [bb_4_bb_8] $endif 
    //begin: basic-block bb_5
    $merge bb_4_bb_5
    $endmerge
    // compare instruction
    iNsTr_27 := ( ($bitcast ( $int<8>) iNsTr_10) >  ($bitcast ( $int<8>) ( $bitcast ($uint<8> ) _b11111111 )  ) )
    $if iNsTr_27 $then  $place [bb_5_bb_6] $else $place [bb_5_bb_7] $endif 
    //begin: basic-block bb_6
    $merge bb_5_bb_6
    $endmerge
    $call x264_mb_mc_01xywh (h ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 )  ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 )  )  ()
    $place [bb_6_UnifiedReturnBlock]
    //begin: basic-block bb_7
    $merge bb_5_bb_7
    $endmerge
    $call x264_mb_mc_0xywh (h ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 )  ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 )  )  ()
    $place [bb_7_UnifiedReturnBlock]
    //begin: basic-block bb_8
    $merge bb_4_bb_8
    $endmerge
    $call x264_mb_mc_1xywh (h ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 )  ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 )  )  ()
    $place [bb_8_UnifiedReturnBlock]
    //begin: basic-block bb_9
    $merge bb_3_bb_9
    $endmerge
    // compare instruction
    iNsTr_21 := ( ($bitcast ( $int<8>) iNsTr_6) >  ($bitcast ( $int<8>) ( $bitcast ($uint<8> ) _b11111111 )  ) )
    $if iNsTr_21 $then  $place [bb_9_bb_10] $else $place [bb_9_bb_13] $endif 
    //begin: basic-block bb_10
    $merge bb_9_bb_10
    $endmerge
    // compare instruction
    iNsTr_31 := ( ($bitcast ( $int<8>) iNsTr_10) >  ($bitcast ( $int<8>) ( $bitcast ($uint<8> ) _b11111111 )  ) )
    $if iNsTr_31 $then  $place [bb_10_bb_11] $else $place [bb_10_bb_12] $endif 
    //begin: basic-block bb_11
    $merge bb_10_bb_11
    $endmerge
    $call x264_mb_mc_01xywh (h ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 )  ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )  ()
    $place [bb_11_bb_14]
    //begin: basic-block bb_12
    $merge bb_10_bb_12
    $endmerge
    $call x264_mb_mc_0xywh (h ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 )  ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )  ()
    $place [bb_12_bb_14]
    //begin: basic-block bb_13
    $merge bb_9_bb_13
    $endmerge
    $call x264_mb_mc_1xywh (h ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 )  ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )  ()
    $place [bb_13_bb_14]
    //begin: basic-block bb_14
    $merge bb_11_bb_14 bb_12_bb_14 bb_13_bb_14
    $endmerge
    // compare instruction
    iNsTr_47 := ( ($bitcast ( $int<8>) iNsTr_8) >  ($bitcast ( $int<8>) ( $bitcast ($uint<8> ) _b11111111 )  ) )
    $if iNsTr_47 $then  $place [bb_14_bb_15] $else $place [bb_14_bb_18] $endif 
    //begin: basic-block bb_15
    $merge bb_14_bb_15
    $endmerge
    // compare instruction
    iNsTr_55 := ( ($bitcast ( $int<8>) iNsTr_12) >  ($bitcast ( $int<8>) ( $bitcast ($uint<8> ) _b11111111 )  ) )
    $if iNsTr_55 $then  $place [bb_15_bb_16] $else $place [bb_15_bb_17] $endif 
    //begin: basic-block bb_16
    $merge bb_15_bb_16
    $endmerge
    $call x264_mb_mc_01xywh (h ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 )  ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )  ()
    $place [bb_16_UnifiedReturnBlock]
    //begin: basic-block bb_17
    $merge bb_15_bb_17
    $endmerge
    $call x264_mb_mc_0xywh (h ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 )  ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )  ()
    $place [bb_17_UnifiedReturnBlock]
    //begin: basic-block bb_18
    $merge bb_14_bb_18
    $endmerge
    $call x264_mb_mc_1xywh (h ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 )  ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )  ()
    $place [bb_18_UnifiedReturnBlock]
    //begin: basic-block bb_19
    $merge bb_3_bb_19
    $endmerge
    // compare instruction
    iNsTr_23 := ( ($bitcast ( $int<8>) iNsTr_6) >  ($bitcast ( $int<8>) ( $bitcast ($uint<8> ) _b11111111 )  ) )
    $if iNsTr_23 $then  $place [bb_19_bb_20] $else $place [bb_19_bb_23] $endif 
    //begin: basic-block bb_20
    $merge bb_19_bb_20
    $endmerge
    // compare instruction
    iNsTr_35 := ( ($bitcast ( $int<8>) iNsTr_10) >  ($bitcast ( $int<8>) ( $bitcast ($uint<8> ) _b11111111 )  ) )
    $if iNsTr_35 $then  $place [bb_20_bb_21] $else $place [bb_20_bb_22] $endif 
    //begin: basic-block bb_21
    $merge bb_20_bb_21
    $endmerge
    $call x264_mb_mc_01xywh (h ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 )  )  ()
    $place [bb_21_bb_24]
    //begin: basic-block bb_22
    $merge bb_20_bb_22
    $endmerge
    $call x264_mb_mc_0xywh (h ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 )  )  ()
    $place [bb_22_bb_24]
    //begin: basic-block bb_23
    $merge bb_19_bb_23
    $endmerge
    $call x264_mb_mc_1xywh (h ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 )  )  ()
    $place [bb_23_bb_24]
    //begin: basic-block bb_24
    $merge bb_21_bb_24 bb_22_bb_24 bb_23_bb_24
    $endmerge
    // compare instruction
    iNsTr_53 := ( ($bitcast ( $int<8>) iNsTr_8) >  ($bitcast ( $int<8>) ( $bitcast ($uint<8> ) _b11111111 )  ) )
    $if iNsTr_53 $then  $place [bb_24_bb_25] $else $place [bb_24_bb_28] $endif 
    //begin: basic-block bb_25
    $merge bb_24_bb_25
    $endmerge
    // compare instruction
    iNsTr_59 := ( ($bitcast ( $int<8>) iNsTr_12) >  ($bitcast ( $int<8>) ( $bitcast ($uint<8> ) _b11111111 )  ) )
    $if iNsTr_59 $then  $place [bb_25_bb_26] $else $place [bb_25_bb_27] $endif 
    //begin: basic-block bb_26
    $merge bb_25_bb_26
    $endmerge
    $call x264_mb_mc_01xywh (h ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 )  )  ()
    $place [bb_26_UnifiedReturnBlock]
    //begin: basic-block bb_27
    $merge bb_25_bb_27
    $endmerge
    $call x264_mb_mc_0xywh (h ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 )  )  ()
    $place [bb_27_UnifiedReturnBlock]
    //begin: basic-block bb_28
    $merge bb_24_bb_28
    $endmerge
    $call x264_mb_mc_1xywh (h ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 )  )  ()
    $place [bb_28_UnifiedReturnBlock]
    //begin: basic-block xx_xloopexitx_xloopexit
    $merge bbx_xnph_xx_xloopexitx_xloopexit
    $endmerge
    $place [xx_xloopexitx_xloopexit_xx_xloopexit]
    //begin: basic-block xx_xloopexit
    $merge bb_3_xx_xloopexit xx_xloopexitx_xloopexit_xx_xloopexit
    $endmerge
    $place [xx_xloopexit_UnifiedReturnBlock]
    //begin: basic-block UnifiedReturnBlock
    $merge bb_16_UnifiedReturnBlock bb_17_UnifiedReturnBlock bb_18_UnifiedReturnBlock bb_26_UnifiedReturnBlock bb_27_UnifiedReturnBlock bb_28_UnifiedReturnBlock bb_6_UnifiedReturnBlock bb_7_UnifiedReturnBlock bb_8_UnifiedReturnBlock xx_xloopexit_UnifiedReturnBlock
    $endmerge
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [x264_copy_column8] 
$in (dst : $pointer< $uint<8> > src : $pointer< $uint<8> > )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    scevgep := src[( $bitcast ($uint<32> ) _b11111111111111111111111110000000 ) ]
    scevgep3 := dst[( $bitcast ($uint<32> ) _b11111111111111111111111110000000 ) ]
    // load 
    iNsTr_0 := ->(scevgep) 
    ->(scevgep3) := iNsTr_0
    scevgepx_x1 := src[( $bitcast ($uint<32> ) _b11111111111111111111111110100000 ) ]
    scevgep3x_x1 := dst[( $bitcast ($uint<32> ) _b11111111111111111111111110100000 ) ]
    // load 
    iNsTr_2 := ->(scevgepx_x1) 
    ->(scevgep3x_x1) := iNsTr_2
    scevgepx_x2 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111000000 ) ]
    scevgep3x_x2 := dst[( $bitcast ($uint<32> ) _b11111111111111111111111111000000 ) ]
    // load 
    iNsTr_4 := ->(scevgepx_x2) 
    ->(scevgep3x_x2) := iNsTr_4
    scevgepx_x3 := src[( $bitcast ($uint<32> ) _b11111111111111111111111111100000 ) ]
    scevgep3x_x3 := dst[( $bitcast ($uint<32> ) _b11111111111111111111111111100000 ) ]
    // load 
    iNsTr_6 := ->(scevgepx_x3) 
    ->(scevgep3x_x3) := iNsTr_6
    // load 
    iNsTr_8 := ->(src) 
    ->(dst) := iNsTr_8
    scevgepx_x5 := src[( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) ]
    scevgep3x_x5 := dst[( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) ]
    // load 
    iNsTr_10 := ->(scevgepx_x5) 
    ->(scevgep3x_x5) := iNsTr_10
    scevgepx_x6 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001000000 ) ]
    scevgep3x_x6 := dst[( $bitcast ($uint<32> ) _b00000000000000000000000001000000 ) ]
    // load 
    iNsTr_12 := ->(scevgepx_x6) 
    ->(scevgep3x_x6) := iNsTr_12
    scevgepx_x7 := src[( $bitcast ($uint<32> ) _b00000000000000000000000001100000 ) ]
    scevgep3x_x7 := dst[( $bitcast ($uint<32> ) _b00000000000000000000000001100000 ) ]
    // load 
    iNsTr_14 := ->(scevgepx_x7) 
    ->(scevgep3x_x7) := iNsTr_14
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [x264_weight_scale_plane] 
$in (dst : $pointer< $uint<8> > i_dst_stride : $uint<32> src : $pointer< $uint<8> > i_src_stride : $uint<32> i_width : $uint<32> i_height : $uint<32> w : $pointer< structx_xx264_weight_t > )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    // compare instruction
    iNsTr_0 := ( ($bitcast ( $int<32>) i_height) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    $if iNsTr_0 $then  $place [bb_0_bbx_xnph7] $else $place [bb_0_xx_x_crit_edge8] $endif 
    //begin: basic-block bbx_xnph7
    $merge bb_0_bbx_xnph7
    $endmerge
    iNsTr_2 := (i_width + ( $bitcast ($uint<32> ) _b11111111111111111111111111111000 ) )
    // compare instruction
    iNsTr_3 := ( ($bitcast ( $int<32>) iNsTr_2) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    $if iNsTr_3 $then  $place [bbx_xnph7_bbx_xnph7x_xsplitx_xus] $else $place [bbx_xnph7_bbx_xnph7x_xbbx_xnph7x_xsplit_crit_edge] $endif 
    //begin: basic-block bbx_xnph7x_xbbx_xnph7x_xsplit_crit_edge
    $merge bbx_xnph7_bbx_xnph7x_xbbx_xnph7x_xsplit_crit_edge
    $endmerge
    // compare instruction
    iNsTr_7 := ( ($bitcast ( $int<32>) i_width) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    wx_xidx6 := w[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    wx_xidx7 := w[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    wx_xidx8 := w[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ]
    tmp := (i_dst_stride * ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    tmp3 := (i_src_stride * ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    tmp7 := (i_height + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    $place [bbx_xnph7x_xbbx_xnph7x_xsplit_crit_edge_bb_9]
    //begin: basic-block bbx_xnph7x_xsplitx_xus
    $merge bbx_xnph7_bbx_xnph7x_xsplitx_xus
    $endmerge
    wx_xidx := w[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    wx_xidx1 := w[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    wx_xidx2 := w[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ]
    tmp27 := (i_dst_stride * ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    tmp31 := (i_src_stride * ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    tmp38 := (i_height + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    $place [bbx_xnph7x_xsplitx_xus_bbx_xnphx_xus]
    //begin: basic-block bb_4
    $merge bb_5_bb_4 bb_7_bb_4
    $endmerge
    // compare instruction
    iNsTr_27 := ( ($bitcast ( $int<32>) tmp33) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    indvarx_xnext11 := (indvar10 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    $if iNsTr_27 $then  $place [bb_4_bbx_xnphx_xus] $else $place [bb_4_xx_x_crit_edge8x_xloopexit25] $endif 
    //begin: basic-block bb_5
    $merge bb_6_bb_5
    $phi tmp9x_xlcssa :=  ( $cast ($uint<32>) tmp9) $on bb_6_bb_5 
    $endmerge
    // compare instruction
    iNsTr_22 := ( ($bitcast ( $int<32>) tmp9x_xlcssa) <   ($bitcast ( $int<32>) i_width ) )
    $if iNsTr_22 $then  $place [bb_5_bb_7] $else $place [bb_5_bb_4] $endif 
    //begin: basic-block bb_6
    $merge bb_6_bb_6 bbx_xnphx_xus_bb_6
    $phi indvar :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xus_bb_6 ( $cast ($uint<32>) indvarx_xnext) $on bb_6_bb_6 
    $endmerge
    tmp26 := (indvar * ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    tmp29 := (tmp28 + tmp26)
    scevgep18 := dst[tmp29]
    tmp35 := (tmp34 + tmp26)
    scevgep := src[tmp35]
    tmp11 := (indvar * ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    tmp9 := (tmp11 + ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    // load 
    wx_xidxx_xval := ->(wx_xidx) 
    // load 
    wx_xidx1x_xval := ->(wx_xidx1) 
    // load 
    wx_xidx2x_xval := ->(wx_xidx2) 
    $call mc_weight_w16 (scevgep18 i_dst_stride scevgep i_src_stride wx_xidxx_xval wx_xidx1x_xval wx_xidx2x_xval iNsTr_10 )  ()
    // compare instruction
    iNsTr_14 := ( ($bitcast ( $int<32>) tmp9) <   ($bitcast ( $int<32>) iNsTr_2 ) )
    indvarx_xnext := (indvar + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    $if iNsTr_14 $then  $place [bb_6_bb_6] $else $place [bb_6_bb_5] $endif 
    //begin: basic-block bb_7
    $merge bb_5_bb_7
    $endmerge
    // load 
    wx_xidx3x_xval := ->(wx_xidx) 
    // load 
    wx_xidx4x_xval := ->(wx_xidx1) 
    // load 
    wx_xidx5x_xval := ->(wx_xidx2) 
    scevgep35 := scevgep41[tmp9x_xlcssa]
    scevgep29 := scevgep43[tmp9x_xlcssa]
    $call mc_weight_w8 (scevgep29 i_dst_stride scevgep35 i_src_stride wx_xidx3x_xval wx_xidx4x_xval wx_xidx5x_xval iNsTr_10 )  ()
    $place [bb_7_bb_4]
    //begin: basic-block bbx_xnphx_xus
    $merge bb_4_bbx_xnphx_xus bbx_xnph7x_xsplitx_xus_bbx_xnphx_xus
    $phi indvar10 :=  ( $cast ($uint<32>) indvarx_xnext11) $on bb_4_bbx_xnphx_xus ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph7x_xsplitx_xus_bbx_xnphx_xus 
    $endmerge
    tmp28 := (tmp27 * indvar10)
    tmp34 := (tmp31 * indvar10)
    tmp37 := (indvar10 * ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    tmp33 := (tmp38 + tmp37)
    xx_x015x_xus := (i_height + tmp37)
    scevgep41 := src[tmp34]
    scevgep43 := dst[tmp28]
    // compare instruction
    iNsTr_9 := ( ($bitcast ( $int<32>) xx_x015x_xus) <   ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  ) )
    iNsTr_10 := ( $mux iNsTr_9 xx_x015x_xus ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    $place [bbx_xnphx_xus_bb_6]
    //begin: basic-block bb_9
    $merge bb_11_bb_9 bbx_xnph7x_xbbx_xnph7x_xsplit_crit_edge_bb_9
    $phi indvar38 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph7x_xbbx_xnph7x_xsplit_crit_edge_bb_9 ( $cast ($uint<32>) indvarx_xnext39) $on bb_11_bb_9 
    $endmerge
    tmp1 := (tmp * indvar38)
    xx_x06 := dst[tmp1]
    tmp4 := (tmp3 * indvar38)
    xx_x024 := src[tmp4]
    tmp6 := (indvar38 * ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    tmp46 := (tmp7 + tmp6)
    xx_x015 := (i_height + tmp6)
    $if iNsTr_7 $then  $place [bb_9_bb_10] $else $place [bb_9_bb_11] $endif 
    //begin: basic-block bb_10
    $merge bb_9_bb_10
    $endmerge
    // compare instruction
    iNsTr_16 := ( ($bitcast ( $int<32>) xx_x015) <   ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  ) )
    iNsTr_17 := ( $mux iNsTr_16 xx_x015 ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    // load 
    wx_xidx6x_xval := ->(wx_xidx6) 
    // load 
    wx_xidx7x_xval := ->(wx_xidx7) 
    // load 
    wx_xidx8x_xval := ->(wx_xidx8) 
    $call mc_weight_w8 (xx_x06 i_dst_stride xx_x024 i_src_stride wx_xidx6x_xval wx_xidx7x_xval wx_xidx8x_xval iNsTr_17 )  ()
    $place [bb_10_bb_11]
    //begin: basic-block bb_11
    $merge bb_10_bb_11 bb_9_bb_11
    $endmerge
    // compare instruction
    iNsTr_20 := ( ($bitcast ( $int<32>) tmp46) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    indvarx_xnext39 := (indvar38 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    $if iNsTr_20 $then  $place [bb_11_bb_9] $else $place [bb_11_xx_x_crit_edge8x_xloopexit] $endif 
    //begin: basic-block xx_x_crit_edge8x_xloopexit
    $merge bb_11_xx_x_crit_edge8x_xloopexit
    $endmerge
    $place [xx_x_crit_edge8x_xloopexit_xx_x_crit_edge8]
    //begin: basic-block xx_x_crit_edge8x_xloopexit25
    $merge bb_4_xx_x_crit_edge8x_xloopexit25
    $endmerge
    $place [xx_x_crit_edge8x_xloopexit25_xx_x_crit_edge8]
    //begin: basic-block xx_x_crit_edge8
    $merge bb_0_xx_x_crit_edge8 xx_x_crit_edge8x_xloopexit_xx_x_crit_edge8 xx_x_crit_edge8x_xloopexit25_xx_x_crit_edge8
    $endmerge
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [dct4x4dc] 
$in (d : $pointer< $uint<16> > )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bbx_xnph9
    $storage tmp_alloc : $array [16] $of $uint<16>
    tmp := @(tmp_alloc)
    $place [bbx_xnph9_bb_1]
    //begin: basic-block bb_1
    $merge bb_1_bb_1 bbx_xnph9_bb_1
    $phi ix_x08 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph9_bb_1 ( $cast ($uint<32>) iNsTr_25) $on bb_1_bb_1 
    $endmerge
    tmp23 := (ix_x08 + ( $bitcast ($uint<32> ) _b00000000000000000000000000001100 ) )
    scevgep36 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][tmp23]
    tmp25 := (ix_x08 + ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) )
    scevgep34 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][tmp25]
    tmp27 := (ix_x08 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    scevgep32 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][tmp27]
    scevgep30 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][ix_x08]
    tmp32 := (ix_x08 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    tmp34 := (tmp32 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep29 := d[tmp34]
    tmp36 := (tmp32 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep27 := d[tmp36]
    tmp38 := (tmp32 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep25 := d[tmp38]
    scevgep23 := d[tmp32]
    // load 
    iNsTr_1 := ->(scevgep23) 
    iNsTr_2 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_1) )
    // load 
    iNsTr_3 := ->(scevgep25) 
    iNsTr_4 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_3) )
    iNsTr_5 := (iNsTr_4 + iNsTr_2)
    iNsTr_6 := (iNsTr_2 - iNsTr_4)
    // load 
    iNsTr_7 := ->(scevgep27) 
    iNsTr_8 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_7) )
    // load 
    iNsTr_9 := ->(scevgep29) 
    iNsTr_10 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_9) )
    iNsTr_11 := (iNsTr_10 + iNsTr_8)
    iNsTr_12 := (iNsTr_8 - iNsTr_10)
    iNsTr_13 := (iNsTr_11 + iNsTr_5)
    iNsTr_14 := ($cast ($uint<16>) iNsTr_13)
    ->(scevgep30) := iNsTr_14
    iNsTr_16 := (iNsTr_5 - iNsTr_11)
    iNsTr_17 := ($cast ($uint<16>) iNsTr_16)
    ->(scevgep32) := iNsTr_17
    iNsTr_19 := (iNsTr_6 - iNsTr_12)
    iNsTr_20 := ($cast ($uint<16>) iNsTr_19)
    ->(scevgep34) := iNsTr_20
    iNsTr_22 := (iNsTr_12 + iNsTr_6)
    iNsTr_23 := ($cast ($uint<16>) iNsTr_22)
    ->(scevgep36) := iNsTr_23
    iNsTr_25 := (ix_x08 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond := (iNsTr_25 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 )  )
    $if exitcond $then  $place [bb_1_bbx_xnphx_xpreheader] $else $place [bb_1_bb_1] $endif 
    //begin: basic-block bbx_xnphx_xpreheader
    $merge bb_1_bbx_xnphx_xpreheader
    $endmerge
    $place [bbx_xnphx_xpreheader_bbx_xnph]
    //begin: basic-block bbx_xnph
    $merge bbx_xnph_bbx_xnph bbx_xnphx_xpreheader_bbx_xnph
    $phi i1x_x07 :=  ( $cast ($uint<32>) iNsTr_58) $on bbx_xnph_bbx_xnph ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xpreheader_bbx_xnph 
    $endmerge
    tmp2 := (i1x_x07 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    scevgep17 := d[tmp2]
    tmp4 := (tmp2 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep20 := d[tmp4]
    scevgep16 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][tmp4]
    tmp7 := (tmp2 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep19 := d[tmp7]
    scevgep14 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][tmp7]
    tmp11 := (tmp2 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep18 := d[tmp11]
    scevgep12 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][tmp11]
    scevgep := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][tmp2]
    // load 
    iNsTr_28 := ->(scevgep) 
    iNsTr_29 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_28) )
    // load 
    iNsTr_30 := ->(scevgep12) 
    iNsTr_31 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_30) )
    iNsTr_32 := (iNsTr_31 + iNsTr_29)
    iNsTr_33 := (iNsTr_29 - iNsTr_31)
    // load 
    iNsTr_34 := ->(scevgep14) 
    iNsTr_35 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_34) )
    // load 
    iNsTr_36 := ->(scevgep16) 
    iNsTr_37 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_36) )
    iNsTr_38 := (iNsTr_37 + iNsTr_35)
    iNsTr_39 := (iNsTr_35 - iNsTr_37)
    iNsTr_40 := (iNsTr_32 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_41 := (iNsTr_40 + iNsTr_38)
    iNsTr_42 := (iNsTr_41 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_43 := ($cast ($uint<16>) iNsTr_42)
    ->(scevgep17) := iNsTr_43
    iNsTr_45 := (iNsTr_40 - iNsTr_38)
    iNsTr_46 := (iNsTr_45 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_47 := ($cast ($uint<16>) iNsTr_46)
    ->(scevgep18) := iNsTr_47
    iNsTr_49 := (iNsTr_33 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_50 := (iNsTr_49 - iNsTr_39)
    iNsTr_51 := (iNsTr_50 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_52 := ($cast ($uint<16>) iNsTr_51)
    ->(scevgep19) := iNsTr_52
    iNsTr_54 := (iNsTr_49 + iNsTr_39)
    iNsTr_55 := (iNsTr_54 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_56 := ($cast ($uint<16>) iNsTr_55)
    ->(scevgep20) := iNsTr_56
    iNsTr_58 := (i1x_x07 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (iNsTr_58 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 )  )
    $if exitcond1 $then  $place [bbx_xnph_xx_x_crit_edge] $else $place [bbx_xnph_bbx_xnph] $endif 
    //begin: basic-block xx_x_crit_edge
    $merge bbx_xnph_xx_x_crit_edge
    $endmerge
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [idct4x4dc] 
$in (d : $pointer< $uint<16> > )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bbx_xnph8
    $storage tmp_alloc : $array [16] $of $uint<16>
    tmp := @(tmp_alloc)
    $place [bbx_xnph8_bb_1]
    //begin: basic-block bb_1
    $merge bb_1_bb_1 bbx_xnph8_bb_1
    $phi ix_x07 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph8_bb_1 ( $cast ($uint<32>) iNsTr_25) $on bb_1_bb_1 
    $endmerge
    tmp2 := (ix_x07 + ( $bitcast ($uint<32> ) _b00000000000000000000000000001100 ) )
    scevgep34 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][tmp2]
    tmp4 := (ix_x07 + ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) )
    scevgep32 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][tmp4]
    tmp6 := (ix_x07 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    scevgep30 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][tmp6]
    scevgep28 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][ix_x07]
    tmp9 := (ix_x07 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    tmp10 := (tmp9 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep27 := d[tmp10]
    tmp13 := (tmp9 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep25 := d[tmp13]
    tmp15 := (tmp9 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep23 := d[tmp15]
    scevgep21 := d[tmp9]
    // load 
    iNsTr_1 := ->(scevgep21) 
    iNsTr_2 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_1) )
    // load 
    iNsTr_3 := ->(scevgep23) 
    iNsTr_4 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_3) )
    iNsTr_5 := (iNsTr_4 + iNsTr_2)
    iNsTr_6 := (iNsTr_2 - iNsTr_4)
    // load 
    iNsTr_7 := ->(scevgep25) 
    iNsTr_8 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_7) )
    // load 
    iNsTr_9 := ->(scevgep27) 
    iNsTr_10 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_9) )
    iNsTr_11 := (iNsTr_10 + iNsTr_8)
    iNsTr_12 := (iNsTr_8 - iNsTr_10)
    iNsTr_13 := (iNsTr_11 + iNsTr_5)
    iNsTr_14 := ($cast ($uint<16>) iNsTr_13)
    ->(scevgep28) := iNsTr_14
    iNsTr_16 := (iNsTr_5 - iNsTr_11)
    iNsTr_17 := ($cast ($uint<16>) iNsTr_16)
    ->(scevgep30) := iNsTr_17
    iNsTr_19 := (iNsTr_6 - iNsTr_12)
    iNsTr_20 := ($cast ($uint<16>) iNsTr_19)
    ->(scevgep32) := iNsTr_20
    iNsTr_22 := (iNsTr_12 + iNsTr_6)
    iNsTr_23 := ($cast ($uint<16>) iNsTr_22)
    ->(scevgep34) := iNsTr_23
    iNsTr_25 := (ix_x07 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (iNsTr_25 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 )  )
    $if exitcond1 $then  $place [bb_1_bb_2] $else $place [bb_1_bb_1] $endif 
    //begin: basic-block bb_2
    $merge bb_1_bb_2
    $endmerge
    scevgep := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    scevgep11 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    scevgep13 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    scevgep15 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    scevgep17 := d[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    scevgep18 := d[( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    scevgep19 := d[( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    iNsTr_27 := ->(scevgep) 
    iNsTr_28 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_27) )
    // load 
    iNsTr_29 := ->(scevgep11) 
    iNsTr_30 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_29) )
    iNsTr_31 := (iNsTr_30 + iNsTr_28)
    iNsTr_32 := (iNsTr_28 - iNsTr_30)
    // load 
    iNsTr_33 := ->(scevgep13) 
    iNsTr_34 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_33) )
    // load 
    iNsTr_35 := ->(scevgep15) 
    iNsTr_36 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_35) )
    iNsTr_37 := (iNsTr_36 + iNsTr_34)
    iNsTr_38 := (iNsTr_34 - iNsTr_36)
    iNsTr_39 := (iNsTr_37 + iNsTr_31)
    iNsTr_40 := ($cast ($uint<16>) iNsTr_39)
    ->(d) := iNsTr_40
    iNsTr_42 := (iNsTr_31 - iNsTr_37)
    iNsTr_43 := ($cast ($uint<16>) iNsTr_42)
    ->(scevgep17) := iNsTr_43
    iNsTr_45 := (iNsTr_32 - iNsTr_38)
    iNsTr_46 := ($cast ($uint<16>) iNsTr_45)
    ->(scevgep18) := iNsTr_46
    iNsTr_48 := (iNsTr_38 + iNsTr_32)
    iNsTr_49 := ($cast ($uint<16>) iNsTr_48)
    ->(scevgep19) := iNsTr_49
    scevgepx_x1 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ]
    scevgep11x_x1 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) ]
    scevgep13x_x1 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) ]
    scevgep15x_x1 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) ]
    scevgep16x_x1 := d[( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ]
    scevgep17x_x1 := d[( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) ]
    scevgep18x_x1 := d[( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) ]
    scevgep19x_x1 := d[( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) ]
    // load 
    iNsTr_51 := ->(scevgepx_x1) 
    iNsTr_52 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_51) )
    // load 
    iNsTr_53 := ->(scevgep11x_x1) 
    iNsTr_54 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_53) )
    iNsTr_55 := (iNsTr_54 + iNsTr_52)
    iNsTr_56 := (iNsTr_52 - iNsTr_54)
    // load 
    iNsTr_57 := ->(scevgep13x_x1) 
    iNsTr_58 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_57) )
    // load 
    iNsTr_59 := ->(scevgep15x_x1) 
    iNsTr_60 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_59) )
    iNsTr_61 := (iNsTr_60 + iNsTr_58)
    iNsTr_62 := (iNsTr_58 - iNsTr_60)
    iNsTr_63 := (iNsTr_61 + iNsTr_55)
    iNsTr_64 := ($cast ($uint<16>) iNsTr_63)
    ->(scevgep16x_x1) := iNsTr_64
    iNsTr_66 := (iNsTr_55 - iNsTr_61)
    iNsTr_67 := ($cast ($uint<16>) iNsTr_66)
    ->(scevgep17x_x1) := iNsTr_67
    iNsTr_69 := (iNsTr_56 - iNsTr_62)
    iNsTr_70 := ($cast ($uint<16>) iNsTr_69)
    ->(scevgep18x_x1) := iNsTr_70
    iNsTr_72 := (iNsTr_62 + iNsTr_56)
    iNsTr_73 := ($cast ($uint<16>) iNsTr_72)
    ->(scevgep19x_x1) := iNsTr_73
    scevgepx_x2 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) ]
    scevgep11x_x2 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000001001 ) ]
    scevgep13x_x2 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000001010 ) ]
    scevgep15x_x2 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000001011 ) ]
    scevgep16x_x2 := d[( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) ]
    scevgep17x_x2 := d[( $bitcast ($uint<32> ) _b00000000000000000000000000001001 ) ]
    scevgep18x_x2 := d[( $bitcast ($uint<32> ) _b00000000000000000000000000001010 ) ]
    scevgep19x_x2 := d[( $bitcast ($uint<32> ) _b00000000000000000000000000001011 ) ]
    // load 
    iNsTr_75 := ->(scevgepx_x2) 
    iNsTr_76 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_75) )
    // load 
    iNsTr_77 := ->(scevgep11x_x2) 
    iNsTr_78 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_77) )
    iNsTr_79 := (iNsTr_78 + iNsTr_76)
    iNsTr_80 := (iNsTr_76 - iNsTr_78)
    // load 
    iNsTr_81 := ->(scevgep13x_x2) 
    iNsTr_82 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_81) )
    // load 
    iNsTr_83 := ->(scevgep15x_x2) 
    iNsTr_84 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_83) )
    iNsTr_85 := (iNsTr_84 + iNsTr_82)
    iNsTr_86 := (iNsTr_82 - iNsTr_84)
    iNsTr_87 := (iNsTr_85 + iNsTr_79)
    iNsTr_88 := ($cast ($uint<16>) iNsTr_87)
    ->(scevgep16x_x2) := iNsTr_88
    iNsTr_90 := (iNsTr_79 - iNsTr_85)
    iNsTr_91 := ($cast ($uint<16>) iNsTr_90)
    ->(scevgep17x_x2) := iNsTr_91
    iNsTr_93 := (iNsTr_80 - iNsTr_86)
    iNsTr_94 := ($cast ($uint<16>) iNsTr_93)
    ->(scevgep18x_x2) := iNsTr_94
    iNsTr_96 := (iNsTr_86 + iNsTr_80)
    iNsTr_97 := ($cast ($uint<16>) iNsTr_96)
    ->(scevgep19x_x2) := iNsTr_97
    scevgepx_x3 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000001100 ) ]
    scevgep11x_x3 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000001101 ) ]
    scevgep13x_x3 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000001110 ) ]
    scevgep15x_x3 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000001111 ) ]
    scevgep16x_x3 := d[( $bitcast ($uint<32> ) _b00000000000000000000000000001100 ) ]
    scevgep17x_x3 := d[( $bitcast ($uint<32> ) _b00000000000000000000000000001101 ) ]
    scevgep18x_x3 := d[( $bitcast ($uint<32> ) _b00000000000000000000000000001110 ) ]
    scevgep19x_x3 := d[( $bitcast ($uint<32> ) _b00000000000000000000000000001111 ) ]
    // load 
    iNsTr_99 := ->(scevgepx_x3) 
    iNsTr_100 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_99) )
    // load 
    iNsTr_101 := ->(scevgep11x_x3) 
    iNsTr_102 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_101) )
    iNsTr_103 := (iNsTr_102 + iNsTr_100)
    iNsTr_104 := (iNsTr_100 - iNsTr_102)
    // load 
    iNsTr_105 := ->(scevgep13x_x3) 
    iNsTr_106 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_105) )
    // load 
    iNsTr_107 := ->(scevgep15x_x3) 
    iNsTr_108 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_107) )
    iNsTr_109 := (iNsTr_108 + iNsTr_106)
    iNsTr_110 := (iNsTr_106 - iNsTr_108)
    iNsTr_111 := (iNsTr_109 + iNsTr_103)
    iNsTr_112 := ($cast ($uint<16>) iNsTr_111)
    ->(scevgep16x_x3) := iNsTr_112
    iNsTr_114 := (iNsTr_103 - iNsTr_109)
    iNsTr_115 := ($cast ($uint<16>) iNsTr_114)
    ->(scevgep17x_x3) := iNsTr_115
    iNsTr_117 := (iNsTr_104 - iNsTr_110)
    iNsTr_118 := ($cast ($uint<16>) iNsTr_117)
    ->(scevgep18x_x3) := iNsTr_118
    iNsTr_120 := (iNsTr_110 + iNsTr_104)
    iNsTr_121 := ($cast ($uint<16>) iNsTr_120)
    ->(scevgep19x_x3) := iNsTr_121
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [sub4x4_dct] 
$in (dct : $pointer< $uint<16> > pix1 : $pointer< $uint<8> > pix2 : $pointer< $uint<8> > )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    $storage d_alloc : $array [16] $of $uint<16>
    $storage tmp_alloc : $array [16] $of $uint<16>
    d := @(d_alloc)
    tmp := @(tmp_alloc)
    $place [bb_0_bbx_xnphx_xusx_xi]
    //begin: basic-block bbx_xnphx_xusx_xi
    $merge bb_0_bbx_xnphx_xusx_xi bbx_xnphx_xusx_xi_bbx_xnphx_xusx_xi
    $phi yx_x05x_xusx_xi :=  ( $cast ($uint<32>) iNsTr_25) $on bbx_xnphx_xusx_xi_bbx_xnphx_xusx_xi ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bb_0_bbx_xnphx_xusx_xi 
    $endmerge
    tmp21 := (yx_x05x_xusx_xi * ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    scevgepx_xi := d[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][tmp21]
    tmp23 := (tmp21 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgepx_xix_x3 := d[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][tmp23]
    tmp25 := (tmp21 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgepx_xix_x2 := d[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][tmp25]
    tmp27 := (tmp21 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgepx_xix_x1 := d[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][tmp27]
    tmp30 := (yx_x05x_xusx_xi * ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    scevgep11x_xi := pix2[tmp30]
    tmp32 := (tmp30 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep11x_xix_x3 := pix2[tmp32]
    tmp34 := (tmp30 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep11x_xix_x2 := pix2[tmp34]
    tmp36 := (tmp30 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep11x_xix_x1 := pix2[tmp36]
    tmp38 := (yx_x05x_xusx_xi * ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    scevgep14x_xi := pix1[tmp38]
    tmp40 := (tmp38 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep14x_xix_x3 := pix1[tmp40]
    tmp42 := (tmp38 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep14x_xix_x2 := pix1[tmp42]
    tmp44 := (tmp38 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep14x_xix_x1 := pix1[tmp44]
    // load 
    iNsTr_1 := ->(scevgep14x_xi) 
    iNsTr_2 := ($cast ($uint<16>) iNsTr_1)
    // load 
    iNsTr_3 := ->(scevgep11x_xi) 
    iNsTr_4 := ($cast ($uint<16>) iNsTr_3)
    iNsTr_5 := (iNsTr_2 - iNsTr_4)
    ->(scevgepx_xi) := iNsTr_5
    // load 
    iNsTr_7 := ->(scevgep14x_xix_x1) 
    iNsTr_8 := ($cast ($uint<16>) iNsTr_7)
    // load 
    iNsTr_9 := ->(scevgep11x_xix_x1) 
    iNsTr_10 := ($cast ($uint<16>) iNsTr_9)
    iNsTr_11 := (iNsTr_8 - iNsTr_10)
    ->(scevgepx_xix_x1) := iNsTr_11
    // load 
    iNsTr_13 := ->(scevgep14x_xix_x2) 
    iNsTr_14 := ($cast ($uint<16>) iNsTr_13)
    // load 
    iNsTr_15 := ->(scevgep11x_xix_x2) 
    iNsTr_16 := ($cast ($uint<16>) iNsTr_15)
    iNsTr_17 := (iNsTr_14 - iNsTr_16)
    ->(scevgepx_xix_x2) := iNsTr_17
    // load 
    iNsTr_19 := ->(scevgep14x_xix_x3) 
    iNsTr_20 := ($cast ($uint<16>) iNsTr_19)
    // load 
    iNsTr_21 := ->(scevgep11x_xix_x3) 
    iNsTr_22 := ($cast ($uint<16>) iNsTr_21)
    iNsTr_23 := (iNsTr_20 - iNsTr_22)
    ->(scevgepx_xix_x3) := iNsTr_23
    iNsTr_25 := (yx_x05x_xusx_xi + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond := (iNsTr_25 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 )  )
    $if exitcond $then  $place [bbx_xnphx_xusx_xi_pixel_sub_wxhx_xexitx_xpreheader] $else $place [bbx_xnphx_xusx_xi_bbx_xnphx_xusx_xi] $endif 
    //begin: basic-block pixel_sub_wxhx_xexitx_xpreheader
    $merge bbx_xnphx_xusx_xi_pixel_sub_wxhx_xexitx_xpreheader
    $endmerge
    $place [pixel_sub_wxhx_xexitx_xpreheader_pixel_sub_wxhx_xexit]
    //begin: basic-block pixel_sub_wxhx_xexit
    $merge pixel_sub_wxhx_xexit_pixel_sub_wxhx_xexit pixel_sub_wxhx_xexitx_xpreheader_pixel_sub_wxhx_xexit
    $phi ix_x07 :=  ( $cast ($uint<32>) iNsTr_54) $on pixel_sub_wxhx_xexit_pixel_sub_wxhx_xexit ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on pixel_sub_wxhx_xexitx_xpreheader_pixel_sub_wxhx_xexit 
    $endmerge
    tmp2 := (ix_x07 + ( $bitcast ($uint<32> ) _b00000000000000000000000000001100 ) )
    scevgep34 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][tmp2]
    tmp4 := (ix_x07 + ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) )
    scevgep32 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][tmp4]
    tmp6 := (ix_x07 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    scevgep30 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][tmp6]
    scevgep28 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][ix_x07]
    tmp9 := (ix_x07 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    tmp10 := (tmp9 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep27 := d[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][tmp10]
    tmp13 := (tmp9 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep25 := d[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][tmp13]
    tmp15 := (tmp9 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep23 := d[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][tmp15]
    scevgep21 := d[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][tmp9]
    // load 
    iNsTr_28 := ->(scevgep21) 
    iNsTr_29 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_28) )
    // load 
    iNsTr_30 := ->(scevgep23) 
    iNsTr_31 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_30) )
    iNsTr_32 := (iNsTr_31 + iNsTr_29)
    // load 
    iNsTr_33 := ->(scevgep25) 
    iNsTr_34 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_33) )
    // load 
    iNsTr_35 := ->(scevgep27) 
    iNsTr_36 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_35) )
    iNsTr_37 := (iNsTr_36 + iNsTr_34)
    iNsTr_38 := (iNsTr_29 - iNsTr_31)
    iNsTr_39 := (iNsTr_34 - iNsTr_36)
    iNsTr_40 := (iNsTr_37 + iNsTr_32)
    iNsTr_41 := ($cast ($uint<16>) iNsTr_40)
    ->(scevgep28) := iNsTr_41
    iNsTr_43 := (iNsTr_38 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_44 := (iNsTr_39 + iNsTr_43)
    iNsTr_45 := ($cast ($uint<16>) iNsTr_44)
    ->(scevgep30) := iNsTr_45
    iNsTr_47 := (iNsTr_32 - iNsTr_37)
    iNsTr_48 := ($cast ($uint<16>) iNsTr_47)
    ->(scevgep32) := iNsTr_48
    iNsTr_50 := (iNsTr_39 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_51 := (iNsTr_38 - iNsTr_50)
    iNsTr_52 := ($cast ($uint<16>) iNsTr_51)
    ->(scevgep34) := iNsTr_52
    iNsTr_54 := (ix_x07 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (iNsTr_54 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 )  )
    $if exitcond1 $then  $place [pixel_sub_wxhx_xexit_bb_4] $else $place [pixel_sub_wxhx_xexit_pixel_sub_wxhx_xexit] $endif 
    //begin: basic-block bb_4
    $merge pixel_sub_wxhx_xexit_bb_4
    $endmerge
    scevgep := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    scevgep11 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    scevgep13 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    scevgep15 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    scevgep17 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    scevgep18 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    scevgep19 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    iNsTr_56 := ->(scevgep) 
    iNsTr_57 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_56) )
    // load 
    iNsTr_58 := ->(scevgep11) 
    iNsTr_59 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_58) )
    iNsTr_60 := (iNsTr_59 + iNsTr_57)
    // load 
    iNsTr_61 := ->(scevgep13) 
    iNsTr_62 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_61) )
    // load 
    iNsTr_63 := ->(scevgep15) 
    iNsTr_64 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_63) )
    iNsTr_65 := (iNsTr_64 + iNsTr_62)
    iNsTr_66 := (iNsTr_57 - iNsTr_59)
    iNsTr_67 := (iNsTr_62 - iNsTr_64)
    iNsTr_68 := (iNsTr_65 + iNsTr_60)
    iNsTr_69 := ($cast ($uint<16>) iNsTr_68)
    ->(dct) := iNsTr_69
    iNsTr_71 := (iNsTr_66 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_72 := (iNsTr_67 + iNsTr_71)
    iNsTr_73 := ($cast ($uint<16>) iNsTr_72)
    ->(scevgep17) := iNsTr_73
    iNsTr_75 := (iNsTr_60 - iNsTr_65)
    iNsTr_76 := ($cast ($uint<16>) iNsTr_75)
    ->(scevgep18) := iNsTr_76
    iNsTr_78 := (iNsTr_67 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_79 := (iNsTr_66 - iNsTr_78)
    iNsTr_80 := ($cast ($uint<16>) iNsTr_79)
    ->(scevgep19) := iNsTr_80
    scevgepx_x1 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ]
    scevgep11x_x1 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) ]
    scevgep13x_x1 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) ]
    scevgep15x_x1 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) ]
    scevgep16x_x1 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ]
    scevgep17x_x1 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) ]
    scevgep18x_x1 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) ]
    scevgep19x_x1 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) ]
    // load 
    iNsTr_82 := ->(scevgepx_x1) 
    iNsTr_83 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_82) )
    // load 
    iNsTr_84 := ->(scevgep11x_x1) 
    iNsTr_85 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_84) )
    iNsTr_86 := (iNsTr_85 + iNsTr_83)
    // load 
    iNsTr_87 := ->(scevgep13x_x1) 
    iNsTr_88 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_87) )
    // load 
    iNsTr_89 := ->(scevgep15x_x1) 
    iNsTr_90 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_89) )
    iNsTr_91 := (iNsTr_90 + iNsTr_88)
    iNsTr_92 := (iNsTr_83 - iNsTr_85)
    iNsTr_93 := (iNsTr_88 - iNsTr_90)
    iNsTr_94 := (iNsTr_91 + iNsTr_86)
    iNsTr_95 := ($cast ($uint<16>) iNsTr_94)
    ->(scevgep16x_x1) := iNsTr_95
    iNsTr_97 := (iNsTr_92 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_98 := (iNsTr_93 + iNsTr_97)
    iNsTr_99 := ($cast ($uint<16>) iNsTr_98)
    ->(scevgep17x_x1) := iNsTr_99
    iNsTr_101 := (iNsTr_86 - iNsTr_91)
    iNsTr_102 := ($cast ($uint<16>) iNsTr_101)
    ->(scevgep18x_x1) := iNsTr_102
    iNsTr_104 := (iNsTr_93 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_105 := (iNsTr_92 - iNsTr_104)
    iNsTr_106 := ($cast ($uint<16>) iNsTr_105)
    ->(scevgep19x_x1) := iNsTr_106
    scevgepx_x2 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) ]
    scevgep11x_x2 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000001011 ) ]
    scevgep13x_x2 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000001001 ) ]
    scevgep15x_x2 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000001010 ) ]
    scevgep16x_x2 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) ]
    scevgep17x_x2 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000001001 ) ]
    scevgep18x_x2 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000001010 ) ]
    scevgep19x_x2 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000001011 ) ]
    // load 
    iNsTr_108 := ->(scevgepx_x2) 
    iNsTr_109 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_108) )
    // load 
    iNsTr_110 := ->(scevgep11x_x2) 
    iNsTr_111 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_110) )
    iNsTr_112 := (iNsTr_111 + iNsTr_109)
    // load 
    iNsTr_113 := ->(scevgep13x_x2) 
    iNsTr_114 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_113) )
    // load 
    iNsTr_115 := ->(scevgep15x_x2) 
    iNsTr_116 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_115) )
    iNsTr_117 := (iNsTr_116 + iNsTr_114)
    iNsTr_118 := (iNsTr_109 - iNsTr_111)
    iNsTr_119 := (iNsTr_114 - iNsTr_116)
    iNsTr_120 := (iNsTr_117 + iNsTr_112)
    iNsTr_121 := ($cast ($uint<16>) iNsTr_120)
    ->(scevgep16x_x2) := iNsTr_121
    iNsTr_123 := (iNsTr_118 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_124 := (iNsTr_119 + iNsTr_123)
    iNsTr_125 := ($cast ($uint<16>) iNsTr_124)
    ->(scevgep17x_x2) := iNsTr_125
    iNsTr_127 := (iNsTr_112 - iNsTr_117)
    iNsTr_128 := ($cast ($uint<16>) iNsTr_127)
    ->(scevgep18x_x2) := iNsTr_128
    iNsTr_130 := (iNsTr_119 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_131 := (iNsTr_118 - iNsTr_130)
    iNsTr_132 := ($cast ($uint<16>) iNsTr_131)
    ->(scevgep19x_x2) := iNsTr_132
    scevgepx_x3 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000001100 ) ]
    scevgep11x_x3 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000001111 ) ]
    scevgep13x_x3 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000001101 ) ]
    scevgep15x_x3 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000001110 ) ]
    scevgep16x_x3 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000001100 ) ]
    scevgep17x_x3 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000001101 ) ]
    scevgep18x_x3 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000001110 ) ]
    scevgep19x_x3 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000001111 ) ]
    // load 
    iNsTr_134 := ->(scevgepx_x3) 
    iNsTr_135 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_134) )
    // load 
    iNsTr_136 := ->(scevgep11x_x3) 
    iNsTr_137 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_136) )
    iNsTr_138 := (iNsTr_137 + iNsTr_135)
    // load 
    iNsTr_139 := ->(scevgep13x_x3) 
    iNsTr_140 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_139) )
    // load 
    iNsTr_141 := ->(scevgep15x_x3) 
    iNsTr_142 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_141) )
    iNsTr_143 := (iNsTr_142 + iNsTr_140)
    iNsTr_144 := (iNsTr_135 - iNsTr_137)
    iNsTr_145 := (iNsTr_140 - iNsTr_142)
    iNsTr_146 := (iNsTr_143 + iNsTr_138)
    iNsTr_147 := ($cast ($uint<16>) iNsTr_146)
    ->(scevgep16x_x3) := iNsTr_147
    iNsTr_149 := (iNsTr_144 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_150 := (iNsTr_145 + iNsTr_149)
    iNsTr_151 := ($cast ($uint<16>) iNsTr_150)
    ->(scevgep17x_x3) := iNsTr_151
    iNsTr_153 := (iNsTr_138 - iNsTr_143)
    iNsTr_154 := ($cast ($uint<16>) iNsTr_153)
    ->(scevgep18x_x3) := iNsTr_154
    iNsTr_156 := (iNsTr_145 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_157 := (iNsTr_144 - iNsTr_156)
    iNsTr_158 := ($cast ($uint<16>) iNsTr_157)
    ->(scevgep19x_x3) := iNsTr_158
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [sub16x16_dct] 
$in (dct : $pointer< $array [16] $of $uint<16> > pix1 : $pointer< $uint<8> > pix2 : $pointer< $uint<8> > )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    iNsTr_0 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    $call sub4x4_dct (iNsTr_0 pix1 pix2 )  ()
    iNsTr_2 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    iNsTr_3 := pix1[( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ]
    iNsTr_4 := pix2[( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ]
    $call sub4x4_dct (iNsTr_2 iNsTr_3 iNsTr_4 )  ()
    iNsTr_6 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    iNsTr_7 := pix1[( $bitcast ($uint<32> ) _b00000000000000000000000001000000 ) ]
    iNsTr_8 := pix2[( $bitcast ($uint<32> ) _b00000000000000000000000010000000 ) ]
    $call sub4x4_dct (iNsTr_6 iNsTr_7 iNsTr_8 )  ()
    iNsTr_10 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    iNsTr_11 := pix1[( $bitcast ($uint<32> ) _b00000000000000000000000001000100 ) ]
    iNsTr_12 := pix2[( $bitcast ($uint<32> ) _b00000000000000000000000010000100 ) ]
    $call sub4x4_dct (iNsTr_10 iNsTr_11 iNsTr_12 )  ()
    iNsTr_14 := pix1[( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) ]
    iNsTr_15 := pix2[( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) ]
    iNsTr_16 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    $call sub4x4_dct (iNsTr_16 iNsTr_14 iNsTr_15 )  ()
    iNsTr_18 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    iNsTr_19 := pix1[( $bitcast ($uint<32> ) _b00000000000000000000000000001100 ) ]
    iNsTr_20 := pix2[( $bitcast ($uint<32> ) _b00000000000000000000000000001100 ) ]
    $call sub4x4_dct (iNsTr_18 iNsTr_19 iNsTr_20 )  ()
    iNsTr_22 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    iNsTr_23 := pix1[( $bitcast ($uint<32> ) _b00000000000000000000000001001000 ) ]
    iNsTr_24 := pix2[( $bitcast ($uint<32> ) _b00000000000000000000000010001000 ) ]
    $call sub4x4_dct (iNsTr_22 iNsTr_23 iNsTr_24 )  ()
    iNsTr_26 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    iNsTr_27 := pix1[( $bitcast ($uint<32> ) _b00000000000000000000000001001100 ) ]
    iNsTr_28 := pix2[( $bitcast ($uint<32> ) _b00000000000000000000000010001100 ) ]
    $call sub4x4_dct (iNsTr_26 iNsTr_27 iNsTr_28 )  ()
    iNsTr_30 := pix1[( $bitcast ($uint<32> ) _b00000000000000000000000010000000 ) ]
    iNsTr_31 := pix2[( $bitcast ($uint<32> ) _b00000000000000000000000100000000 ) ]
    iNsTr_32 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    $call sub4x4_dct (iNsTr_32 iNsTr_30 iNsTr_31 )  ()
    iNsTr_34 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000001001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    iNsTr_35 := pix1[( $bitcast ($uint<32> ) _b00000000000000000000000010000100 ) ]
    iNsTr_36 := pix2[( $bitcast ($uint<32> ) _b00000000000000000000000100000100 ) ]
    $call sub4x4_dct (iNsTr_34 iNsTr_35 iNsTr_36 )  ()
    iNsTr_38 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000001010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    iNsTr_39 := pix1[( $bitcast ($uint<32> ) _b00000000000000000000000011000000 ) ]
    iNsTr_40 := pix2[( $bitcast ($uint<32> ) _b00000000000000000000000110000000 ) ]
    $call sub4x4_dct (iNsTr_38 iNsTr_39 iNsTr_40 )  ()
    iNsTr_42 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000001011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    iNsTr_43 := pix1[( $bitcast ($uint<32> ) _b00000000000000000000000011000100 ) ]
    iNsTr_44 := pix2[( $bitcast ($uint<32> ) _b00000000000000000000000110000100 ) ]
    $call sub4x4_dct (iNsTr_42 iNsTr_43 iNsTr_44 )  ()
    iNsTr_46 := pix1[( $bitcast ($uint<32> ) _b00000000000000000000000010001000 ) ]
    iNsTr_47 := pix2[( $bitcast ($uint<32> ) _b00000000000000000000000100001000 ) ]
    iNsTr_48 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000001100 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    $call sub4x4_dct (iNsTr_48 iNsTr_46 iNsTr_47 )  ()
    iNsTr_50 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000001101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    iNsTr_51 := pix1[( $bitcast ($uint<32> ) _b00000000000000000000000010001100 ) ]
    iNsTr_52 := pix2[( $bitcast ($uint<32> ) _b00000000000000000000000100001100 ) ]
    $call sub4x4_dct (iNsTr_50 iNsTr_51 iNsTr_52 )  ()
    iNsTr_54 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000001110 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    iNsTr_55 := pix1[( $bitcast ($uint<32> ) _b00000000000000000000000011001000 ) ]
    iNsTr_56 := pix2[( $bitcast ($uint<32> ) _b00000000000000000000000110001000 ) ]
    $call sub4x4_dct (iNsTr_54 iNsTr_55 iNsTr_56 )  ()
    iNsTr_58 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000001111 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    iNsTr_59 := pix1[( $bitcast ($uint<32> ) _b00000000000000000000000011001100 ) ]
    iNsTr_60 := pix2[( $bitcast ($uint<32> ) _b00000000000000000000000110001100 ) ]
    $call sub4x4_dct (iNsTr_58 iNsTr_59 iNsTr_60 )  ()
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [sub4x4_dct_dc] 
$in (pix1 : $pointer< $uint<8> > pix2 : $pointer< $uint<8> > )
$out (ret_val__ : $uint<32>)
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    scevgep := pix1[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    scevgep11 := pix1[( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_0 := ->(pix1) 
    // load 
    iNsTr_1 := ->(scevgep) 
    scevgep13 := pix1[( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    iNsTr_2 := ($cast ($uint<32>) iNsTr_0)
    iNsTr_3 := ($cast ($uint<32>) iNsTr_1)
    // load 
    iNsTr_4 := ->(scevgep11) 
    iNsTr_5 := ($cast ($uint<32>) iNsTr_4)
    // load 
    iNsTr_6 := ->(scevgep13) 
    iNsTr_7 := (iNsTr_2 + iNsTr_3)
    scevgep17 := pix2[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    iNsTr_8 := ($cast ($uint<32>) iNsTr_6)
    // load 
    iNsTr_9 := ->(pix2) 
    iNsTr_10 := (iNsTr_7 + iNsTr_5)
    scevgep19 := pix2[( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    iNsTr_11 := ($cast ($uint<32>) iNsTr_9)
    // load 
    iNsTr_12 := ->(scevgep17) 
    iNsTr_13 := (iNsTr_10 + iNsTr_8)
    scevgep21 := pix2[( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    iNsTr_14 := ($cast ($uint<32>) iNsTr_12)
    // load 
    iNsTr_15 := ->(scevgep19) 
    iNsTr_16 := (iNsTr_13 - iNsTr_11)
    xx_x08x_x1 := pix1[( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) ]
    iNsTr_17 := ($cast ($uint<32>) iNsTr_15)
    // load 
    iNsTr_18 := ->(scevgep21) 
    iNsTr_19 := (iNsTr_16 - iNsTr_14)
    // load 
    iNsTr_20 := ->(xx_x08x_x1) 
    scevgepx_x1 := pix1[( $bitcast ($uint<32> ) _b00000000000000000000000000010001 ) ]
    iNsTr_21 := ($cast ($uint<32>) iNsTr_18)
    iNsTr_22 := (iNsTr_19 - iNsTr_17)
    // load 
    iNsTr_23 := ->(scevgepx_x1) 
    iNsTr_24 := ($cast ($uint<32>) iNsTr_20)
    scevgep11x_x1 := pix1[( $bitcast ($uint<32> ) _b00000000000000000000000000010010 ) ]
    iNsTr_25 := (iNsTr_22 - iNsTr_21)
    iNsTr_26 := (iNsTr_24 + iNsTr_25)
    // load 
    iNsTr_27 := ->(scevgep11x_x1) 
    iNsTr_28 := ($cast ($uint<32>) iNsTr_23)
    scevgep13x_x1 := pix1[( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ]
    iNsTr_29 := (iNsTr_26 + iNsTr_28)
    // load 
    iNsTr_30 := ->(scevgep13x_x1) 
    iNsTr_31 := ($cast ($uint<32>) iNsTr_27)
    xx_x017x_x1 := pix2[( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) ]
    iNsTr_32 := (iNsTr_29 + iNsTr_31)
    // load 
    iNsTr_33 := ->(xx_x017x_x1) 
    iNsTr_34 := ($cast ($uint<32>) iNsTr_30)
    scevgep17x_x1 := pix2[( $bitcast ($uint<32> ) _b00000000000000000000000000100001 ) ]
    iNsTr_35 := (iNsTr_32 + iNsTr_34)
    // load 
    iNsTr_36 := ->(scevgep17x_x1) 
    iNsTr_37 := ($cast ($uint<32>) iNsTr_33)
    scevgep19x_x1 := pix2[( $bitcast ($uint<32> ) _b00000000000000000000000000100010 ) ]
    iNsTr_38 := (iNsTr_35 - iNsTr_37)
    // load 
    iNsTr_39 := ->(scevgep19x_x1) 
    iNsTr_40 := ($cast ($uint<32>) iNsTr_36)
    scevgep21x_x1 := pix2[( $bitcast ($uint<32> ) _b00000000000000000000000000100011 ) ]
    iNsTr_41 := (iNsTr_38 - iNsTr_40)
    // load 
    iNsTr_42 := ->(scevgep21x_x1) 
    iNsTr_43 := ($cast ($uint<32>) iNsTr_39)
    xx_x08x_x2 := pix1[( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) ]
    iNsTr_44 := (iNsTr_41 - iNsTr_43)
    iNsTr_45 := ($cast ($uint<32>) iNsTr_42)
    scevgepx_x2 := pix1[( $bitcast ($uint<32> ) _b00000000000000000000000000100001 ) ]
    // load 
    iNsTr_46 := ->(xx_x08x_x2) 
    iNsTr_47 := (iNsTr_44 - iNsTr_45)
    scevgep11x_x2 := pix1[( $bitcast ($uint<32> ) _b00000000000000000000000000100010 ) ]
    iNsTr_48 := ($cast ($uint<32>) iNsTr_46)
    // load 
    iNsTr_49 := ->(scevgepx_x2) 
    scevgep13x_x2 := pix1[( $bitcast ($uint<32> ) _b00000000000000000000000000100011 ) ]
    iNsTr_50 := ($cast ($uint<32>) iNsTr_49)
    // load 
    iNsTr_51 := ->(scevgep11x_x2) 
    iNsTr_52 := (iNsTr_48 + iNsTr_47)
    xx_x017x_x2 := pix2[( $bitcast ($uint<32> ) _b00000000000000000000000001000000 ) ]
    iNsTr_53 := ($cast ($uint<32>) iNsTr_51)
    // load 
    iNsTr_54 := ->(scevgep13x_x2) 
    iNsTr_55 := (iNsTr_52 + iNsTr_50)
    scevgep17x_x2 := pix2[( $bitcast ($uint<32> ) _b00000000000000000000000001000001 ) ]
    iNsTr_56 := ($cast ($uint<32>) iNsTr_54)
    // load 
    iNsTr_57 := ->(xx_x017x_x2) 
    iNsTr_58 := (iNsTr_55 + iNsTr_53)
    scevgep19x_x2 := pix2[( $bitcast ($uint<32> ) _b00000000000000000000000001000010 ) ]
    iNsTr_59 := ($cast ($uint<32>) iNsTr_57)
    // load 
    iNsTr_60 := ->(scevgep17x_x2) 
    iNsTr_61 := (iNsTr_58 + iNsTr_56)
    scevgep21x_x2 := pix2[( $bitcast ($uint<32> ) _b00000000000000000000000001000011 ) ]
    iNsTr_62 := ($cast ($uint<32>) iNsTr_60)
    // load 
    iNsTr_63 := ->(scevgep19x_x2) 
    iNsTr_64 := (iNsTr_61 - iNsTr_59)
    xx_x08x_x3 := pix1[( $bitcast ($uint<32> ) _b00000000000000000000000000110000 ) ]
    iNsTr_65 := ($cast ($uint<32>) iNsTr_63)
    // load 
    iNsTr_66 := ->(scevgep21x_x2) 
    iNsTr_67 := (iNsTr_64 - iNsTr_62)
    // load 
    iNsTr_68 := ->(xx_x08x_x3) 
    scevgepx_x3 := pix1[( $bitcast ($uint<32> ) _b00000000000000000000000000110001 ) ]
    iNsTr_69 := ($cast ($uint<32>) iNsTr_66)
    iNsTr_70 := (iNsTr_67 - iNsTr_65)
    // load 
    iNsTr_71 := ->(scevgepx_x3) 
    iNsTr_72 := ($cast ($uint<32>) iNsTr_68)
    scevgep11x_x3 := pix1[( $bitcast ($uint<32> ) _b00000000000000000000000000110010 ) ]
    iNsTr_73 := (iNsTr_70 - iNsTr_69)
    iNsTr_74 := (iNsTr_72 + iNsTr_73)
    // load 
    iNsTr_75 := ->(scevgep11x_x3) 
    iNsTr_76 := ($cast ($uint<32>) iNsTr_71)
    scevgep13x_x3 := pix1[( $bitcast ($uint<32> ) _b00000000000000000000000000110011 ) ]
    iNsTr_77 := (iNsTr_74 + iNsTr_76)
    // load 
    iNsTr_78 := ->(scevgep13x_x3) 
    iNsTr_79 := ($cast ($uint<32>) iNsTr_75)
    xx_x017x_x3 := pix2[( $bitcast ($uint<32> ) _b00000000000000000000000001100000 ) ]
    iNsTr_80 := (iNsTr_77 + iNsTr_79)
    // load 
    iNsTr_81 := ->(xx_x017x_x3) 
    iNsTr_82 := ($cast ($uint<32>) iNsTr_78)
    scevgep17x_x3 := pix2[( $bitcast ($uint<32> ) _b00000000000000000000000001100001 ) ]
    iNsTr_83 := (iNsTr_80 + iNsTr_82)
    // load 
    iNsTr_84 := ->(scevgep17x_x3) 
    iNsTr_85 := ($cast ($uint<32>) iNsTr_81)
    scevgep19x_x3 := pix2[( $bitcast ($uint<32> ) _b00000000000000000000000001100010 ) ]
    iNsTr_86 := (iNsTr_83 - iNsTr_85)
    // load 
    iNsTr_87 := ->(scevgep19x_x3) 
    iNsTr_88 := ($cast ($uint<32>) iNsTr_84)
    scevgep21x_x3 := pix2[( $bitcast ($uint<32> ) _b00000000000000000000000001100011 ) ]
    iNsTr_89 := (iNsTr_86 - iNsTr_88)
    // load 
    iNsTr_90 := ->(scevgep21x_x3) 
    iNsTr_91 := ($cast ($uint<32>) iNsTr_87)
    iNsTr_92 := (iNsTr_89 - iNsTr_91)
    iNsTr_93 := ($cast ($uint<32>) iNsTr_90)
    ret_val__ := (iNsTr_92 - iNsTr_93)
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [sub8x16_dct_dc] 
$in (dct : $pointer< $uint<16> > pix1 : $pointer< $uint<8> > pix2 : $pointer< $uint<8> > )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    $call sub4x4_dct_dc (pix1 pix2 )  (iNsTr_0)
    iNsTr_1 := pix1[( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ]
    iNsTr_2 := pix2[( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ]
    $call sub4x4_dct_dc (iNsTr_1 iNsTr_2 )  (iNsTr_3)
    iNsTr_4 := pix1[( $bitcast ($uint<32> ) _b00000000000000000000000001000000 ) ]
    iNsTr_5 := pix2[( $bitcast ($uint<32> ) _b00000000000000000000000010000000 ) ]
    $call sub4x4_dct_dc (iNsTr_4 iNsTr_5 )  (iNsTr_6)
    iNsTr_7 := pix1[( $bitcast ($uint<32> ) _b00000000000000000000000001000100 ) ]
    iNsTr_8 := pix2[( $bitcast ($uint<32> ) _b00000000000000000000000010000100 ) ]
    $call sub4x4_dct_dc (iNsTr_7 iNsTr_8 )  (iNsTr_9)
    iNsTr_10 := pix1[( $bitcast ($uint<32> ) _b00000000000000000000000010000000 ) ]
    iNsTr_11 := pix2[( $bitcast ($uint<32> ) _b00000000000000000000000100000000 ) ]
    $call sub4x4_dct_dc (iNsTr_10 iNsTr_11 )  (iNsTr_12)
    iNsTr_13 := pix1[( $bitcast ($uint<32> ) _b00000000000000000000000010000100 ) ]
    iNsTr_14 := pix2[( $bitcast ($uint<32> ) _b00000000000000000000000100000100 ) ]
    $call sub4x4_dct_dc (iNsTr_13 iNsTr_14 )  (iNsTr_15)
    iNsTr_16 := pix1[( $bitcast ($uint<32> ) _b00000000000000000000000011000000 ) ]
    iNsTr_17 := pix2[( $bitcast ($uint<32> ) _b00000000000000000000000110000000 ) ]
    $call sub4x4_dct_dc (iNsTr_16 iNsTr_17 )  (iNsTr_18)
    iNsTr_19 := pix1[( $bitcast ($uint<32> ) _b00000000000000000000000011000100 ) ]
    iNsTr_20 := pix2[( $bitcast ($uint<32> ) _b00000000000000000000000110000100 ) ]
    $call sub4x4_dct_dc (iNsTr_19 iNsTr_20 )  (iNsTr_21)
    iNsTr_22 := (iNsTr_3 + iNsTr_0)
    iNsTr_23 := (iNsTr_9 + iNsTr_6)
    iNsTr_24 := (iNsTr_15 + iNsTr_12)
    iNsTr_25 := (iNsTr_21 + iNsTr_18)
    iNsTr_26 := (iNsTr_0 - iNsTr_3)
    iNsTr_27 := (iNsTr_6 - iNsTr_9)
    iNsTr_28 := (iNsTr_12 - iNsTr_15)
    iNsTr_29 := (iNsTr_18 - iNsTr_21)
    iNsTr_30 := (iNsTr_23 + iNsTr_22)
    iNsTr_31 := (iNsTr_25 + iNsTr_24)
    iNsTr_32 := (iNsTr_27 + iNsTr_26)
    iNsTr_33 := (iNsTr_29 + iNsTr_28)
    iNsTr_34 := (iNsTr_22 - iNsTr_23)
    iNsTr_35 := (iNsTr_24 - iNsTr_25)
    iNsTr_36 := (iNsTr_26 - iNsTr_27)
    iNsTr_37 := (iNsTr_28 - iNsTr_29)
    iNsTr_38 := (iNsTr_31 + iNsTr_30)
    iNsTr_39 := ($cast ($uint<16>) iNsTr_38)
    ->(dct) := iNsTr_39
    iNsTr_41 := (iNsTr_33 + iNsTr_32)
    iNsTr_42 := ($cast ($uint<16>) iNsTr_41)
    iNsTr_43 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    ->(iNsTr_43) := iNsTr_42
    iNsTr_45 := (iNsTr_30 - iNsTr_31)
    iNsTr_46 := ($cast ($uint<16>) iNsTr_45)
    iNsTr_47 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    ->(iNsTr_47) := iNsTr_46
    iNsTr_49 := (iNsTr_32 - iNsTr_33)
    iNsTr_50 := ($cast ($uint<16>) iNsTr_49)
    iNsTr_51 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    ->(iNsTr_51) := iNsTr_50
    iNsTr_53 := (iNsTr_34 - iNsTr_35)
    iNsTr_54 := ($cast ($uint<16>) iNsTr_53)
    iNsTr_55 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ]
    ->(iNsTr_55) := iNsTr_54
    iNsTr_57 := (iNsTr_36 - iNsTr_37)
    iNsTr_58 := ($cast ($uint<16>) iNsTr_57)
    iNsTr_59 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) ]
    ->(iNsTr_59) := iNsTr_58
    iNsTr_61 := (iNsTr_35 + iNsTr_34)
    iNsTr_62 := ($cast ($uint<16>) iNsTr_61)
    iNsTr_63 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) ]
    ->(iNsTr_63) := iNsTr_62
    iNsTr_65 := (iNsTr_37 + iNsTr_36)
    iNsTr_66 := ($cast ($uint<16>) iNsTr_65)
    iNsTr_67 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) ]
    ->(iNsTr_67) := iNsTr_66
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [add4x4_idct] 
$in (p_dst : $pointer< $uint<8> > dct : $pointer< $uint<16> > )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bbx_xnph17
    $storage d_alloc : $array [16] $of $uint<16>
    $storage tmp_alloc : $array [16] $of $uint<16>
    d := @(d_alloc)
    tmp := @(tmp_alloc)
    $place [bbx_xnph17_bb_1]
    //begin: basic-block bb_1
    $merge bb_1_bb_1 bbx_xnph17_bb_1
    $phi ix_x016 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph17_bb_1 ( $cast ($uint<32>) iNsTr_27) $on bb_1_bb_1 
    $endmerge
    tmp31 := (ix_x016 + ( $bitcast ($uint<32> ) _b00000000000000000000000000001100 ) )
    scevgep66 := dct[tmp31]
    tmp33 := (ix_x016 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    scevgep64 := dct[tmp33]
    tmp35 := (ix_x016 + ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) )
    scevgep62 := dct[tmp35]
    tmp37 := (ix_x016 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    tmp38 := (tmp37 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep60 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][tmp38]
    tmp40 := (tmp37 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep58 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][tmp40]
    tmp43 := (tmp37 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep56 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][tmp43]
    scevgep54 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][tmp37]
    scevgep52 := dct[ix_x016]
    // load 
    iNsTr_1 := ->(scevgep52) 
    iNsTr_2 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_1) )
    // load 
    iNsTr_3 := ->(scevgep62) 
    iNsTr_4 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_3) )
    iNsTr_5 := (iNsTr_4 + iNsTr_2)
    iNsTr_6 := (iNsTr_2 - iNsTr_4)
    // load 
    iNsTr_7 := ->(scevgep64) 
    iNsTr_8 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_7) )
    // load 
    iNsTr_9 := ->(scevgep66) 
    iNsTr_10 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_9) )
    iNsTr_11 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_10) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )))
    iNsTr_12 := (iNsTr_11 + iNsTr_8)
    iNsTr_13 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_8) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )))
    iNsTr_14 := (iNsTr_13 - iNsTr_10)
    iNsTr_15 := (iNsTr_12 + iNsTr_5)
    iNsTr_16 := ($cast ($uint<16>) iNsTr_15)
    ->(scevgep54) := iNsTr_16
    iNsTr_18 := (iNsTr_14 + iNsTr_6)
    iNsTr_19 := ($cast ($uint<16>) iNsTr_18)
    ->(scevgep56) := iNsTr_19
    iNsTr_21 := (iNsTr_6 - iNsTr_14)
    iNsTr_22 := ($cast ($uint<16>) iNsTr_21)
    ->(scevgep58) := iNsTr_22
    iNsTr_24 := (iNsTr_5 - iNsTr_12)
    iNsTr_25 := ($cast ($uint<16>) iNsTr_24)
    ->(scevgep60) := iNsTr_25
    iNsTr_27 := (ix_x016 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond30 := (iNsTr_27 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 )  )
    $if exitcond30 $then  $place [bb_1_bbx_xnph15x_xpreheader] $else $place [bb_1_bb_1] $endif 
    //begin: basic-block bbx_xnph15x_xpreheader
    $merge bb_1_bbx_xnph15x_xpreheader
    $endmerge
    $place [bbx_xnph15x_xpreheader_bbx_xnph15]
    //begin: basic-block bbx_xnph15
    $merge bbx_xnph15_bbx_xnph15 bbx_xnph15x_xpreheader_bbx_xnph15
    $phi i1x_x014 :=  ( $cast ($uint<32>) iNsTr_62) $on bbx_xnph15_bbx_xnph15 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph15x_xpreheader_bbx_xnph15 
    $endmerge
    tmp18 := (i1x_x014 + ( $bitcast ($uint<32> ) _b00000000000000000000000000001100 ) )
    scevgep50 := d[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][tmp18]
    scevgep47 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][tmp18]
    tmp21 := (i1x_x014 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    scevgep48 := d[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][tmp21]
    scevgep45 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][tmp21]
    tmp25 := (i1x_x014 + ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) )
    scevgep49 := d[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][tmp25]
    scevgep43 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][tmp25]
    scevgep41 := d[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][i1x_x014]
    scevgep40 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][i1x_x014]
    // load 
    iNsTr_30 := ->(scevgep40) 
    iNsTr_31 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_30) )
    // load 
    iNsTr_32 := ->(scevgep43) 
    iNsTr_33 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_32) )
    iNsTr_34 := (iNsTr_33 + iNsTr_31)
    iNsTr_35 := (iNsTr_31 - iNsTr_33)
    // load 
    iNsTr_36 := ->(scevgep45) 
    iNsTr_37 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_36) )
    // load 
    iNsTr_38 := ->(scevgep47) 
    iNsTr_39 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_38) )
    iNsTr_40 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_39) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )))
    iNsTr_41 := (iNsTr_40 + iNsTr_37)
    iNsTr_42 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_37) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )))
    iNsTr_43 := (iNsTr_42 - iNsTr_39)
    iNsTr_44 := (iNsTr_34 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    iNsTr_45 := (iNsTr_44 + iNsTr_41)
    iNsTr_46 := (iNsTr_45 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    iNsTr_47 := ($cast ($uint<16>) iNsTr_46)
    ->(scevgep41) := iNsTr_47
    iNsTr_49 := (iNsTr_35 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    iNsTr_50 := (iNsTr_49 + iNsTr_43)
    iNsTr_51 := (iNsTr_50 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    iNsTr_52 := ($cast ($uint<16>) iNsTr_51)
    ->(scevgep48) := iNsTr_52
    iNsTr_54 := (iNsTr_49 - iNsTr_43)
    iNsTr_55 := (iNsTr_54 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    iNsTr_56 := ($cast ($uint<16>) iNsTr_55)
    ->(scevgep49) := iNsTr_56
    iNsTr_58 := (iNsTr_44 - iNsTr_41)
    iNsTr_59 := (iNsTr_58 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    iNsTr_60 := ($cast ($uint<16>) iNsTr_59)
    ->(scevgep50) := iNsTr_60
    iNsTr_62 := (i1x_x014 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond := (iNsTr_62 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 )  )
    $if exitcond $then  $place [bbx_xnph15_bbx_xnphx_xpreheader] $else $place [bbx_xnph15_bbx_xnph15] $endif 
    //begin: basic-block bbx_xnphx_xpreheader
    $merge bbx_xnph15_bbx_xnphx_xpreheader
    $endmerge
    $place [bbx_xnphx_xpreheader_bbx_xnph]
    //begin: basic-block bbx_xnph
    $merge bb_8_bbx_xnph bbx_xnphx_xpreheader_bbx_xnph
    $phi yx_x09 :=  ( $cast ($uint<32>) iNsTr_121) $on bb_8_bbx_xnph ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xpreheader_bbx_xnph 
    $endmerge
    tmp2 := (yx_x09 * ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    scevgep := p_dst[tmp2]
    tmp4 := (tmp2 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgepx_x1 := p_dst[tmp4]
    tmp6 := (tmp2 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgepx_x2 := p_dst[tmp6]
    tmp8 := (tmp2 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgepx_x3 := p_dst[tmp8]
    tmp10 := (yx_x09 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    scevgep22 := d[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][tmp10]
    tmp12 := (tmp10 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep22x_x1 := d[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][tmp12]
    tmp14 := (tmp10 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep22x_x2 := d[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][tmp14]
    tmp16 := (tmp10 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep22x_x3 := d[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][tmp16]
    // load 
    iNsTr_65 := ->(scevgep) 
    iNsTr_66 := ($cast ($uint<32>) iNsTr_65)
    // load 
    iNsTr_67 := ->(scevgep22) 
    iNsTr_68 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_67) )
    iNsTr_69 := (iNsTr_68 + iNsTr_66)
    // compare instruction
    iNsTr_70 := (iNsTr_69 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_70 $then  $place [bbx_xnph_bb_6] $else $place [bbx_xnph_x264_clip_pixelx_xexit] $endif 
    //begin: basic-block bb_6
    $merge bbx_xnph_bb_6
    $endmerge
    iNsTr_72 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_69)
    iNsTr_73 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_72) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_74 := (iNsTr_73 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_6_x264_clip_pixelx_xexit]
    //begin: basic-block x264_clip_pixelx_xexit
    $merge bb_6_x264_clip_pixelx_xexit bbx_xnph_x264_clip_pixelx_xexit
    $phi iNsTr_76 :=  ( $cast ($uint<32>) iNsTr_74) $on bb_6_x264_clip_pixelx_xexit ( $cast ($uint<32>) iNsTr_69) $on bbx_xnph_x264_clip_pixelx_xexit 
    $endmerge
    iNsTr_77 := ($cast ($uint<8>) iNsTr_76)
    ->(scevgep) := iNsTr_77
    // load 
    iNsTr_79 := ->(scevgepx_x1) 
    iNsTr_80 := ($cast ($uint<32>) iNsTr_79)
    // load 
    iNsTr_81 := ->(scevgep22x_x1) 
    iNsTr_82 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_81) )
    iNsTr_83 := (iNsTr_82 + iNsTr_80)
    // compare instruction
    iNsTr_84 := (iNsTr_83 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_84 $then  $place [x264_clip_pixelx_xexit_bb_11] $else $place [x264_clip_pixelx_xexit_x264_clip_pixelx_xexitx_x1] $endif 
    //begin: basic-block bb_8
    $merge bb_14_bb_8 x264_clip_pixelx_xexitx_x2_bb_8
    $phi iNsTr_118 :=  ( $cast ($uint<32>) iNsTr_116) $on bb_14_bb_8 ( $cast ($uint<32>) iNsTr_111) $on x264_clip_pixelx_xexitx_x2_bb_8 
    $endmerge
    iNsTr_119 := ($cast ($uint<8>) iNsTr_118)
    ->(scevgepx_x3) := iNsTr_119
    iNsTr_121 := (yx_x09 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (iNsTr_121 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 )  )
    $if exitcond1 $then  $place [bb_8_xx_x_crit_edge12] $else $place [bb_8_bbx_xnph] $endif 
    //begin: basic-block xx_x_crit_edge12
    $merge bb_8_xx_x_crit_edge12
    $endmerge
    $place [return__]
    //begin: basic-block x264_clip_pixelx_xexitx_x1
    $merge bb_11_x264_clip_pixelx_xexitx_x1 x264_clip_pixelx_xexit_x264_clip_pixelx_xexitx_x1
    $phi iNsTr_90 :=  ( $cast ($uint<32>) iNsTr_88) $on bb_11_x264_clip_pixelx_xexitx_x1 ( $cast ($uint<32>) iNsTr_83) $on x264_clip_pixelx_xexit_x264_clip_pixelx_xexitx_x1 
    $endmerge
    iNsTr_91 := ($cast ($uint<8>) iNsTr_90)
    ->(scevgepx_x1) := iNsTr_91
    // load 
    iNsTr_93 := ->(scevgepx_x2) 
    iNsTr_94 := ($cast ($uint<32>) iNsTr_93)
    // load 
    iNsTr_95 := ->(scevgep22x_x2) 
    iNsTr_96 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_95) )
    iNsTr_97 := (iNsTr_96 + iNsTr_94)
    // compare instruction
    iNsTr_98 := (iNsTr_97 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_98 $then  $place [x264_clip_pixelx_xexitx_x1_bb_13] $else $place [x264_clip_pixelx_xexitx_x1_x264_clip_pixelx_xexitx_x2] $endif 
    //begin: basic-block bb_11
    $merge x264_clip_pixelx_xexit_bb_11
    $endmerge
    iNsTr_86 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_83)
    iNsTr_87 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_86) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_88 := (iNsTr_87 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_11_x264_clip_pixelx_xexitx_x1]
    //begin: basic-block x264_clip_pixelx_xexitx_x2
    $merge bb_13_x264_clip_pixelx_xexitx_x2 x264_clip_pixelx_xexitx_x1_x264_clip_pixelx_xexitx_x2
    $phi iNsTr_104 :=  ( $cast ($uint<32>) iNsTr_102) $on bb_13_x264_clip_pixelx_xexitx_x2 ( $cast ($uint<32>) iNsTr_97) $on x264_clip_pixelx_xexitx_x1_x264_clip_pixelx_xexitx_x2 
    $endmerge
    iNsTr_105 := ($cast ($uint<8>) iNsTr_104)
    ->(scevgepx_x2) := iNsTr_105
    // load 
    iNsTr_107 := ->(scevgepx_x3) 
    iNsTr_108 := ($cast ($uint<32>) iNsTr_107)
    // load 
    iNsTr_109 := ->(scevgep22x_x3) 
    iNsTr_110 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_109) )
    iNsTr_111 := (iNsTr_110 + iNsTr_108)
    // compare instruction
    iNsTr_112 := (iNsTr_111 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_112 $then  $place [x264_clip_pixelx_xexitx_x2_bb_14] $else $place [x264_clip_pixelx_xexitx_x2_bb_8] $endif 
    //begin: basic-block bb_13
    $merge x264_clip_pixelx_xexitx_x1_bb_13
    $endmerge
    iNsTr_100 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_97)
    iNsTr_101 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_100) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_102 := (iNsTr_101 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_13_x264_clip_pixelx_xexitx_x2]
    //begin: basic-block bb_14
    $merge x264_clip_pixelx_xexitx_x2_bb_14
    $endmerge
    iNsTr_114 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_111)
    iNsTr_115 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_114) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_116 := (iNsTr_115 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_14_bb_8]
    $merge return__ $endmerge
  }
}
$module [add16x16_idct] 
$in (p_dst : $pointer< $uint<8> > dct : $pointer< $array [16] $of $uint<16> > )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    iNsTr_0 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    $call add4x4_idct (p_dst iNsTr_0 )  ()
    iNsTr_2 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ]
    iNsTr_3 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    $call add4x4_idct (iNsTr_2 iNsTr_3 )  ()
    iNsTr_5 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000010000000 ) ]
    iNsTr_6 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    $call add4x4_idct (iNsTr_5 iNsTr_6 )  ()
    iNsTr_8 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000010000100 ) ]
    iNsTr_9 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    $call add4x4_idct (iNsTr_8 iNsTr_9 )  ()
    iNsTr_11 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) ]
    iNsTr_12 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    $call add4x4_idct (iNsTr_11 iNsTr_12 )  ()
    iNsTr_14 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000000001100 ) ]
    iNsTr_15 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    $call add4x4_idct (iNsTr_14 iNsTr_15 )  ()
    iNsTr_17 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000010001000 ) ]
    iNsTr_18 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    $call add4x4_idct (iNsTr_17 iNsTr_18 )  ()
    iNsTr_20 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000010001100 ) ]
    iNsTr_21 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    $call add4x4_idct (iNsTr_20 iNsTr_21 )  ()
    iNsTr_23 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000100000000 ) ]
    iNsTr_24 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    $call add4x4_idct (iNsTr_23 iNsTr_24 )  ()
    iNsTr_26 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000100000100 ) ]
    iNsTr_27 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000001001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    $call add4x4_idct (iNsTr_26 iNsTr_27 )  ()
    iNsTr_29 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000110000000 ) ]
    iNsTr_30 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000001010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    $call add4x4_idct (iNsTr_29 iNsTr_30 )  ()
    iNsTr_32 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000110000100 ) ]
    iNsTr_33 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000001011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    $call add4x4_idct (iNsTr_32 iNsTr_33 )  ()
    iNsTr_35 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000100001000 ) ]
    iNsTr_36 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000001100 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    $call add4x4_idct (iNsTr_35 iNsTr_36 )  ()
    iNsTr_38 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000100001100 ) ]
    iNsTr_39 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000001101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    $call add4x4_idct (iNsTr_38 iNsTr_39 )  ()
    iNsTr_41 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000110001000 ) ]
    iNsTr_42 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000001110 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    $call add4x4_idct (iNsTr_41 iNsTr_42 )  ()
    iNsTr_44 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000110001100 ) ]
    iNsTr_45 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000001111 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    $call add4x4_idct (iNsTr_44 iNsTr_45 )  ()
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [sub8x8_dct8] 
$in (dct : $pointer< $uint<16> > pix1 : $pointer< $uint<8> > pix2 : $pointer< $uint<8> > )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    $storage tmp_alloc : $array [64] $of $uint<16>
    tmp := @(tmp_alloc)
    $place [bb_0_bbx_xnphx_xusx_xi]
    //begin: basic-block bbx_xnphx_xusx_xi
    $merge bb_0_bbx_xnphx_xusx_xi bbx_xnphx_xusx_xi_bbx_xnphx_xusx_xi
    $phi yx_x05x_xusx_xi :=  ( $cast ($uint<32>) iNsTr_49) $on bbx_xnphx_xusx_xi_bbx_xnphx_xusx_xi ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bb_0_bbx_xnphx_xusx_xi 
    $endmerge
    tmp51 := (yx_x05x_xusx_xi * ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) )
    scevgepx_xi := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][tmp51]
    tmp54 := (tmp51 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    scevgepx_xix_x7 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][tmp54]
    tmp56 := (tmp51 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    scevgepx_xix_x6 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][tmp56]
    tmp58 := (tmp51 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) )
    scevgepx_xix_x5 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][tmp58]
    tmp60 := (tmp51 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    scevgepx_xix_x4 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][tmp60]
    tmp62 := (tmp51 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgepx_xix_x3 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][tmp62]
    tmp64 := (tmp51 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgepx_xix_x2 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][tmp64]
    tmp66 := (tmp51 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgepx_xix_x1 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][tmp66]
    tmp68 := (yx_x05x_xusx_xi * ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    scevgep11x_xi := pix2[tmp68]
    tmp70 := (tmp68 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    scevgep11x_xix_x7 := pix2[tmp70]
    tmp72 := (tmp68 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    scevgep11x_xix_x6 := pix2[tmp72]
    tmp74 := (tmp68 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) )
    scevgep11x_xix_x5 := pix2[tmp74]
    tmp76 := (tmp68 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    scevgep11x_xix_x4 := pix2[tmp76]
    tmp78 := (tmp68 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep11x_xix_x3 := pix2[tmp78]
    tmp80 := (tmp68 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep11x_xix_x2 := pix2[tmp80]
    tmp82 := (tmp68 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep11x_xix_x1 := pix2[tmp82]
    tmp84 := (yx_x05x_xusx_xi * ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    scevgep14x_xi := pix1[tmp84]
    tmp86 := (tmp84 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    scevgep14x_xix_x7 := pix1[tmp86]
    tmp88 := (tmp84 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    scevgep14x_xix_x6 := pix1[tmp88]
    tmp91 := (tmp84 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) )
    scevgep14x_xix_x5 := pix1[tmp91]
    tmp93 := (tmp84 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    scevgep14x_xix_x4 := pix1[tmp93]
    tmp95 := (tmp84 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep14x_xix_x3 := pix1[tmp95]
    tmp97 := (tmp84 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep14x_xix_x2 := pix1[tmp97]
    tmp99 := (tmp84 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep14x_xix_x1 := pix1[tmp99]
    // load 
    iNsTr_1 := ->(scevgep14x_xi) 
    iNsTr_2 := ($cast ($uint<16>) iNsTr_1)
    // load 
    iNsTr_3 := ->(scevgep11x_xi) 
    iNsTr_4 := ($cast ($uint<16>) iNsTr_3)
    iNsTr_5 := (iNsTr_2 - iNsTr_4)
    ->(scevgepx_xi) := iNsTr_5
    // load 
    iNsTr_7 := ->(scevgep14x_xix_x1) 
    iNsTr_8 := ($cast ($uint<16>) iNsTr_7)
    // load 
    iNsTr_9 := ->(scevgep11x_xix_x1) 
    iNsTr_10 := ($cast ($uint<16>) iNsTr_9)
    iNsTr_11 := (iNsTr_8 - iNsTr_10)
    ->(scevgepx_xix_x1) := iNsTr_11
    // load 
    iNsTr_13 := ->(scevgep14x_xix_x2) 
    iNsTr_14 := ($cast ($uint<16>) iNsTr_13)
    // load 
    iNsTr_15 := ->(scevgep11x_xix_x2) 
    iNsTr_16 := ($cast ($uint<16>) iNsTr_15)
    iNsTr_17 := (iNsTr_14 - iNsTr_16)
    ->(scevgepx_xix_x2) := iNsTr_17
    // load 
    iNsTr_19 := ->(scevgep14x_xix_x3) 
    iNsTr_20 := ($cast ($uint<16>) iNsTr_19)
    // load 
    iNsTr_21 := ->(scevgep11x_xix_x3) 
    iNsTr_22 := ($cast ($uint<16>) iNsTr_21)
    iNsTr_23 := (iNsTr_20 - iNsTr_22)
    ->(scevgepx_xix_x3) := iNsTr_23
    // load 
    iNsTr_25 := ->(scevgep14x_xix_x4) 
    iNsTr_26 := ($cast ($uint<16>) iNsTr_25)
    // load 
    iNsTr_27 := ->(scevgep11x_xix_x4) 
    iNsTr_28 := ($cast ($uint<16>) iNsTr_27)
    iNsTr_29 := (iNsTr_26 - iNsTr_28)
    ->(scevgepx_xix_x4) := iNsTr_29
    // load 
    iNsTr_31 := ->(scevgep14x_xix_x5) 
    iNsTr_32 := ($cast ($uint<16>) iNsTr_31)
    // load 
    iNsTr_33 := ->(scevgep11x_xix_x5) 
    iNsTr_34 := ($cast ($uint<16>) iNsTr_33)
    iNsTr_35 := (iNsTr_32 - iNsTr_34)
    ->(scevgepx_xix_x5) := iNsTr_35
    // load 
    iNsTr_37 := ->(scevgep14x_xix_x6) 
    iNsTr_38 := ($cast ($uint<16>) iNsTr_37)
    // load 
    iNsTr_39 := ->(scevgep11x_xix_x6) 
    iNsTr_40 := ($cast ($uint<16>) iNsTr_39)
    iNsTr_41 := (iNsTr_38 - iNsTr_40)
    ->(scevgepx_xix_x6) := iNsTr_41
    // load 
    iNsTr_43 := ->(scevgep14x_xix_x7) 
    iNsTr_44 := ($cast ($uint<16>) iNsTr_43)
    // load 
    iNsTr_45 := ->(scevgep11x_xix_x7) 
    iNsTr_46 := ($cast ($uint<16>) iNsTr_45)
    iNsTr_47 := (iNsTr_44 - iNsTr_46)
    ->(scevgepx_xix_x7) := iNsTr_47
    iNsTr_49 := (yx_x05x_xusx_xi + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond50 := (iNsTr_49 == ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 )  )
    $if exitcond50 $then  $place [bbx_xnphx_xusx_xi_pixel_sub_wxhx_xexitx_xpreheader] $else $place [bbx_xnphx_xusx_xi_bbx_xnphx_xusx_xi] $endif 
    //begin: basic-block pixel_sub_wxhx_xexitx_xpreheader
    $merge bbx_xnphx_xusx_xi_pixel_sub_wxhx_xexitx_xpreheader
    $endmerge
    $place [pixel_sub_wxhx_xexitx_xpreheader_pixel_sub_wxhx_xexit]
    //begin: basic-block pixel_sub_wxhx_xexit
    $merge pixel_sub_wxhx_xexit_pixel_sub_wxhx_xexit pixel_sub_wxhx_xexitx_xpreheader_pixel_sub_wxhx_xexit
    $phi ix_x030 :=  ( $cast ($uint<32>) iNsTr_124) $on pixel_sub_wxhx_xexit_pixel_sub_wxhx_xexit ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on pixel_sub_wxhx_xexitx_xpreheader_pixel_sub_wxhx_xexit 
    $endmerge
    tmp33 := (ix_x030 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    scevgep78 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][tmp33]
    tmp35 := (ix_x030 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    scevgep76 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][tmp35]
    tmp37 := (ix_x030 + ( $bitcast ($uint<32> ) _b00000000000000000000000000101000 ) )
    scevgep74 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][tmp37]
    tmp39 := (ix_x030 + ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    scevgep72 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][tmp39]
    tmp41 := (ix_x030 + ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 ) )
    scevgep70 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][tmp41]
    tmp43 := (ix_x030 + ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) )
    scevgep68 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][tmp43]
    tmp45 := (ix_x030 + ( $bitcast ($uint<32> ) _b00000000000000000000000000111000 ) )
    scevgep66 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][tmp45]
    scevgep64 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][ix_x030]
    // load 
    iNsTr_52 := ->(scevgep64) 
    iNsTr_53 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_52) )
    // load 
    iNsTr_54 := ->(scevgep66) 
    iNsTr_55 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_54) )
    iNsTr_56 := (iNsTr_55 + iNsTr_53)
    // load 
    iNsTr_57 := ->(scevgep68) 
    iNsTr_58 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_57) )
    // load 
    iNsTr_59 := ->(scevgep70) 
    iNsTr_60 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_59) )
    iNsTr_61 := (iNsTr_60 + iNsTr_58)
    // load 
    iNsTr_62 := ->(scevgep72) 
    iNsTr_63 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_62) )
    // load 
    iNsTr_64 := ->(scevgep74) 
    iNsTr_65 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_64) )
    iNsTr_66 := (iNsTr_65 + iNsTr_63)
    // load 
    iNsTr_67 := ->(scevgep76) 
    iNsTr_68 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_67) )
    // load 
    iNsTr_69 := ->(scevgep78) 
    iNsTr_70 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_69) )
    iNsTr_71 := (iNsTr_70 + iNsTr_68)
    iNsTr_72 := (iNsTr_71 + iNsTr_56)
    iNsTr_73 := (iNsTr_66 + iNsTr_61)
    iNsTr_74 := (iNsTr_56 - iNsTr_71)
    iNsTr_75 := (iNsTr_61 - iNsTr_66)
    iNsTr_76 := (iNsTr_53 - iNsTr_55)
    iNsTr_77 := (iNsTr_58 - iNsTr_60)
    iNsTr_78 := (iNsTr_63 - iNsTr_65)
    iNsTr_79 := (iNsTr_68 - iNsTr_70)
    iNsTr_80 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_76) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )))
    iNsTr_81 := (iNsTr_80 + iNsTr_76)
    iNsTr_82 := (iNsTr_81 + iNsTr_77)
    iNsTr_83 := (iNsTr_82 + iNsTr_78)
    iNsTr_84 := (iNsTr_76 - iNsTr_79)
    iNsTr_85 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_78) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )))
    sum := (iNsTr_85 + iNsTr_78)
    iNsTr_86 := (iNsTr_84 - sum)
    iNsTr_87 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_77) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )))
    iNsTr_88 := (iNsTr_76 - iNsTr_77)
    xx_xneg22 := (iNsTr_88 - iNsTr_87)
    iNsTr_89 := (xx_xneg22 + iNsTr_79)
    iNsTr_90 := (iNsTr_77 - iNsTr_78)
    iNsTr_91 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_79) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )))
    iNsTr_92 := (iNsTr_79 + iNsTr_90)
    iNsTr_93 := (iNsTr_92 + iNsTr_91)
    iNsTr_94 := (iNsTr_72 + iNsTr_73)
    iNsTr_95 := ($cast ($uint<16>) iNsTr_94)
    ->(scevgep64) := iNsTr_95
    iNsTr_97 := (iNsTr_93 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_98 := (iNsTr_97 + iNsTr_83)
    iNsTr_99 := ($cast ($uint<16>) iNsTr_98)
    ->(scevgep68) := iNsTr_99
    iNsTr_101 := (iNsTr_75 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_102 := (iNsTr_74 + iNsTr_101)
    iNsTr_103 := ($cast ($uint<16>) iNsTr_102)
    ->(scevgep72) := iNsTr_103
    iNsTr_105 := (iNsTr_89 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_106 := (iNsTr_86 + iNsTr_105)
    iNsTr_107 := ($cast ($uint<16>) iNsTr_106)
    ->(scevgep76) := iNsTr_107
    iNsTr_109 := (iNsTr_72 - iNsTr_73)
    iNsTr_110 := ($cast ($uint<16>) iNsTr_109)
    ->(scevgep78) := iNsTr_110
    iNsTr_112 := (iNsTr_86 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_113 := (iNsTr_89 - iNsTr_112)
    iNsTr_114 := ($cast ($uint<16>) iNsTr_113)
    ->(scevgep74) := iNsTr_114
    iNsTr_116 := (iNsTr_74 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_117 := (iNsTr_116 - iNsTr_75)
    iNsTr_118 := ($cast ($uint<16>) iNsTr_117)
    ->(scevgep70) := iNsTr_118
    iNsTr_120 := (iNsTr_83 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_121 := (iNsTr_120 - iNsTr_93)
    iNsTr_122 := ($cast ($uint<16>) iNsTr_121)
    ->(scevgep66) := iNsTr_122
    iNsTr_124 := (ix_x030 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond := (iNsTr_124 == ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 )  )
    $if exitcond $then  $place [pixel_sub_wxhx_xexit_bbx_xnphx_xpreheader] $else $place [pixel_sub_wxhx_xexit_pixel_sub_wxhx_xexit] $endif 
    //begin: basic-block bbx_xnphx_xpreheader
    $merge pixel_sub_wxhx_xexit_bbx_xnphx_xpreheader
    $endmerge
    $place [bbx_xnphx_xpreheader_bbx_xnph]
    //begin: basic-block bbx_xnph
    $merge bbx_xnph_bbx_xnph bbx_xnphx_xpreheader_bbx_xnph
    $phi i1x_x029 :=  ( $cast ($uint<32>) iNsTr_199) $on bbx_xnph_bbx_xnph ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xpreheader_bbx_xnph 
    $endmerge
    tmp2 := (i1x_x029 + ( $bitcast ($uint<32> ) _b00000000000000000000000000111000 ) )
    scevgep62 := dct[tmp2]
    tmp4 := (i1x_x029 + ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 ) )
    scevgep60 := dct[tmp4]
    tmp6 := (i1x_x029 + ( $bitcast ($uint<32> ) _b00000000000000000000000000101000 ) )
    scevgep58 := dct[tmp6]
    tmp8 := (i1x_x029 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    scevgep56 := dct[tmp8]
    tmp10 := (i1x_x029 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    scevgep54 := dct[tmp10]
    tmp12 := (i1x_x029 + ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    scevgep52 := dct[tmp12]
    tmp14 := (i1x_x029 + ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) )
    scevgep50 := dct[tmp14]
    scevgep48 := dct[i1x_x029]
    tmp17 := (i1x_x029 * ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) )
    tmp18 := (tmp17 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    scevgep47 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][tmp18]
    tmp20 := (tmp17 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep45 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][tmp20]
    tmp22 := (tmp17 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) )
    scevgep43 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][tmp22]
    tmp24 := (tmp17 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep41 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][tmp24]
    tmp26 := (tmp17 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    scevgep39 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][tmp26]
    tmp28 := (tmp17 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep37 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][tmp28]
    tmp30 := (tmp17 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    scevgep35 := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][tmp30]
    scevgep := tmp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][tmp17]
    // load 
    iNsTr_127 := ->(scevgep) 
    iNsTr_128 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_127) )
    // load 
    iNsTr_129 := ->(scevgep35) 
    iNsTr_130 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_129) )
    iNsTr_131 := (iNsTr_130 + iNsTr_128)
    // load 
    iNsTr_132 := ->(scevgep37) 
    iNsTr_133 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_132) )
    // load 
    iNsTr_134 := ->(scevgep39) 
    iNsTr_135 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_134) )
    iNsTr_136 := (iNsTr_135 + iNsTr_133)
    // load 
    iNsTr_137 := ->(scevgep41) 
    iNsTr_138 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_137) )
    // load 
    iNsTr_139 := ->(scevgep43) 
    iNsTr_140 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_139) )
    iNsTr_141 := (iNsTr_140 + iNsTr_138)
    // load 
    iNsTr_142 := ->(scevgep45) 
    iNsTr_143 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_142) )
    // load 
    iNsTr_144 := ->(scevgep47) 
    iNsTr_145 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_144) )
    iNsTr_146 := (iNsTr_145 + iNsTr_143)
    iNsTr_147 := (iNsTr_146 + iNsTr_131)
    iNsTr_148 := (iNsTr_141 + iNsTr_136)
    iNsTr_149 := (iNsTr_131 - iNsTr_146)
    iNsTr_150 := (iNsTr_136 - iNsTr_141)
    iNsTr_151 := (iNsTr_128 - iNsTr_130)
    iNsTr_152 := (iNsTr_133 - iNsTr_135)
    iNsTr_153 := (iNsTr_138 - iNsTr_140)
    iNsTr_154 := (iNsTr_143 - iNsTr_145)
    iNsTr_155 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_151) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )))
    iNsTr_156 := (iNsTr_155 + iNsTr_151)
    iNsTr_157 := (iNsTr_156 + iNsTr_152)
    iNsTr_158 := (iNsTr_157 + iNsTr_153)
    iNsTr_159 := (iNsTr_151 - iNsTr_154)
    iNsTr_160 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_153) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )))
    sum32 := (iNsTr_160 + iNsTr_153)
    iNsTr_161 := (iNsTr_159 - sum32)
    iNsTr_162 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_152) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )))
    iNsTr_163 := (iNsTr_151 - iNsTr_152)
    xx_xneg28 := (iNsTr_163 - iNsTr_162)
    iNsTr_164 := (xx_xneg28 + iNsTr_154)
    iNsTr_165 := (iNsTr_152 - iNsTr_153)
    iNsTr_166 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_154) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )))
    iNsTr_167 := (iNsTr_154 + iNsTr_165)
    iNsTr_168 := (iNsTr_167 + iNsTr_166)
    iNsTr_169 := (iNsTr_147 + iNsTr_148)
    iNsTr_170 := ($cast ($uint<16>) iNsTr_169)
    ->(scevgep48) := iNsTr_170
    iNsTr_172 := (iNsTr_168 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_173 := (iNsTr_172 + iNsTr_158)
    iNsTr_174 := ($cast ($uint<16>) iNsTr_173)
    ->(scevgep50) := iNsTr_174
    iNsTr_176 := (iNsTr_150 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_177 := (iNsTr_149 + iNsTr_176)
    iNsTr_178 := ($cast ($uint<16>) iNsTr_177)
    ->(scevgep52) := iNsTr_178
    iNsTr_180 := (iNsTr_164 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_181 := (iNsTr_161 + iNsTr_180)
    iNsTr_182 := ($cast ($uint<16>) iNsTr_181)
    ->(scevgep54) := iNsTr_182
    iNsTr_184 := (iNsTr_147 - iNsTr_148)
    iNsTr_185 := ($cast ($uint<16>) iNsTr_184)
    ->(scevgep56) := iNsTr_185
    iNsTr_187 := (iNsTr_161 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_188 := (iNsTr_164 - iNsTr_187)
    iNsTr_189 := ($cast ($uint<16>) iNsTr_188)
    ->(scevgep58) := iNsTr_189
    iNsTr_191 := (iNsTr_149 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_192 := (iNsTr_191 - iNsTr_150)
    iNsTr_193 := ($cast ($uint<16>) iNsTr_192)
    ->(scevgep60) := iNsTr_193
    iNsTr_195 := (iNsTr_158 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_196 := (iNsTr_195 - iNsTr_168)
    iNsTr_197 := ($cast ($uint<16>) iNsTr_196)
    ->(scevgep62) := iNsTr_197
    iNsTr_199 := (i1x_x029 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (iNsTr_199 == ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 )  )
    $if exitcond1 $then  $place [bbx_xnph_xx_x_crit_edge] $else $place [bbx_xnph_bbx_xnph] $endif 
    //begin: basic-block xx_x_crit_edge
    $merge bbx_xnph_xx_x_crit_edge
    $endmerge
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [add8x8_idct8] 
$in (dst : $pointer< $uint<8> > dct : $pointer< $uint<16> > )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bbx_xnph38
    // load 
    iNsTr_0 := ->(dct) 
    iNsTr_1 := (iNsTr_0 + ( $bitcast ($uint<16> ) _b0000000000100000 ) )
    ->(dct) := iNsTr_1
    $place [bbx_xnph38_bb_1]
    //begin: basic-block bb_1
    $merge bbx_xnph38_bb_1 xx_x_crit_edge91_bb_1
    $phi iNsTr_4 :=  ( $cast ($uint<16>) iNsTr_1) $on bbx_xnph38_bb_1 ( $cast ($uint<16>) xx_xpre) $on xx_x_crit_edge91_bb_1 
    $phi ix_x037 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph38_bb_1 ( $cast ($uint<32>) iNsTr_78) $on xx_x_crit_edge91_bb_1 
    $endmerge
    tmp := (ix_x037 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep69x_xphix_xtransx_xinsert := dct[tmp]
    tmp34 := (ix_x037 + ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) )
    scevgep83 := dct[tmp34]
    tmp36 := (ix_x037 + ( $bitcast ($uint<32> ) _b00000000000000000000000000111000 ) )
    scevgep81 := dct[tmp36]
    tmp38 := (ix_x037 + ( $bitcast ($uint<32> ) _b00000000000000000000000000101000 ) )
    scevgep79 := dct[tmp38]
    tmp40 := (ix_x037 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    scevgep77 := dct[tmp40]
    tmp42 := (ix_x037 + ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 ) )
    scevgep75 := dct[tmp42]
    tmp44 := (ix_x037 + ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    scevgep73 := dct[tmp44]
    tmp46 := (ix_x037 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    scevgep71 := dct[tmp46]
    scevgep69 := dct[ix_x037]
    iNsTr_5 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_4) )
    // load 
    iNsTr_6 := ->(scevgep71) 
    iNsTr_7 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_6) )
    iNsTr_8 := (iNsTr_7 + iNsTr_5)
    iNsTr_9 := (iNsTr_5 - iNsTr_7)
    // load 
    iNsTr_10 := ->(scevgep73) 
    iNsTr_11 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_10) )
    iNsTr_12 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_11) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )))
    // load 
    iNsTr_13 := ->(scevgep75) 
    iNsTr_14 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_13) )
    iNsTr_15 := (iNsTr_12 - iNsTr_14)
    iNsTr_16 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_14) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )))
    iNsTr_17 := (iNsTr_16 + iNsTr_11)
    iNsTr_18 := (iNsTr_17 + iNsTr_8)
    iNsTr_19 := (iNsTr_15 + iNsTr_9)
    iNsTr_20 := (iNsTr_9 - iNsTr_15)
    iNsTr_21 := (iNsTr_8 - iNsTr_17)
    // load 
    iNsTr_22 := ->(scevgep77) 
    iNsTr_23 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_22) )
    // load 
    iNsTr_24 := ->(scevgep79) 
    iNsTr_25 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_24) )
    // load 
    iNsTr_26 := ->(scevgep81) 
    iNsTr_27 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_26) )
    iNsTr_28 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_27) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )))
    iNsTr_29 := (iNsTr_25 - iNsTr_23)
    iNsTr_30 := (iNsTr_29 - iNsTr_27)
    iNsTr_31 := (iNsTr_30 - iNsTr_28)
    // load 
    iNsTr_32 := ->(scevgep83) 
    iNsTr_33 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_32) )
    iNsTr_34 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_23) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )))
    iNsTr_35 := (iNsTr_27 + iNsTr_33)
    iNsTr_36 := (iNsTr_35 - iNsTr_23)
    iNsTr_37 := (iNsTr_36 - iNsTr_34)
    iNsTr_38 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_25) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )))
    iNsTr_39 := (iNsTr_27 - iNsTr_33)
    iNsTr_40 := (iNsTr_39 + iNsTr_25)
    iNsTr_41 := (iNsTr_40 + iNsTr_38)
    iNsTr_42 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_33) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )))
    iNsTr_43 := (iNsTr_25 + iNsTr_23)
    iNsTr_44 := (iNsTr_43 + iNsTr_33)
    iNsTr_45 := (iNsTr_44 + iNsTr_42)
    iNsTr_46 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_45) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )))
    iNsTr_47 := (iNsTr_46 + iNsTr_31)
    iNsTr_48 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_41) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )))
    iNsTr_49 := (iNsTr_48 + iNsTr_37)
    iNsTr_50 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_37) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )))
    iNsTr_51 := (iNsTr_50 - iNsTr_41)
    iNsTr_52 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_31) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )))
    iNsTr_53 := (iNsTr_45 - iNsTr_52)
    iNsTr_54 := (iNsTr_53 + iNsTr_18)
    iNsTr_55 := ($cast ($uint<16>) iNsTr_54)
    ->(scevgep69) := iNsTr_55
    iNsTr_57 := (iNsTr_51 + iNsTr_19)
    iNsTr_58 := ($cast ($uint<16>) iNsTr_57)
    ->(scevgep83) := iNsTr_58
    iNsTr_60 := (iNsTr_49 + iNsTr_20)
    iNsTr_61 := ($cast ($uint<16>) iNsTr_60)
    ->(scevgep73) := iNsTr_61
    iNsTr_63 := (iNsTr_47 + iNsTr_21)
    iNsTr_64 := ($cast ($uint<16>) iNsTr_63)
    ->(scevgep77) := iNsTr_64
    iNsTr_66 := (iNsTr_21 - iNsTr_47)
    iNsTr_67 := ($cast ($uint<16>) iNsTr_66)
    ->(scevgep71) := iNsTr_67
    iNsTr_69 := (iNsTr_20 - iNsTr_49)
    iNsTr_70 := ($cast ($uint<16>) iNsTr_69)
    ->(scevgep79) := iNsTr_70
    iNsTr_72 := (iNsTr_19 - iNsTr_51)
    iNsTr_73 := ($cast ($uint<16>) iNsTr_72)
    ->(scevgep75) := iNsTr_73
    iNsTr_75 := (iNsTr_18 - iNsTr_53)
    iNsTr_76 := ($cast ($uint<16>) iNsTr_75)
    ->(scevgep81) := iNsTr_76
    iNsTr_78 := (ix_x037 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond := (ix_x037 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 )  )
    $if exitcond $then  $place [bb_1_bbx_xnphx_xpreheader] $else $place [bb_1_xx_x_crit_edge91] $endif 
    //begin: basic-block bbx_xnphx_xpreheader
    $merge bb_1_bbx_xnphx_xpreheader
    $endmerge
    $place [bbx_xnphx_xpreheader_bbx_xnph]
    //begin: basic-block xx_x_crit_edge91
    $merge bb_1_xx_x_crit_edge91
    $endmerge
    // load 
    xx_xpre := ->(scevgep69x_xphix_xtransx_xinsert) 
    $place [xx_x_crit_edge91_bb_1]
    //begin: basic-block bbx_xnph
    $merge bbx_xnphx_xpreheader_bbx_xnph x264_clip_pixelx_xexit18_bbx_xnph
    $phi i1x_x036 :=  ( $cast ($uint<32>) iNsTr_244) $on x264_clip_pixelx_xexit18_bbx_xnph ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xpreheader_bbx_xnph 
    $endmerge
    tmp2 := (i1x_x036 + ( $bitcast ($uint<32> ) _b00000000000000000000000011100000 ) )
    scevgep67 := dst[tmp2]
    tmp4 := (i1x_x036 + ( $bitcast ($uint<32> ) _b00000000000000000000000011000000 ) )
    scevgep65 := dst[tmp4]
    tmp6 := (i1x_x036 + ( $bitcast ($uint<32> ) _b00000000000000000000000010100000 ) )
    scevgep63 := dst[tmp6]
    tmp8 := (i1x_x036 + ( $bitcast ($uint<32> ) _b00000000000000000000000010000000 ) )
    scevgep61 := dst[tmp8]
    tmp10 := (i1x_x036 + ( $bitcast ($uint<32> ) _b00000000000000000000000001100000 ) )
    scevgep59 := dst[tmp10]
    tmp12 := (i1x_x036 + ( $bitcast ($uint<32> ) _b00000000000000000000000001000000 ) )
    scevgep57 := dst[tmp12]
    tmp14 := (i1x_x036 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    scevgep55 := dst[tmp14]
    scevgep53 := dst[i1x_x036]
    tmp17 := (i1x_x036 * ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) )
    tmp18 := (tmp17 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep52 := dct[tmp18]
    tmp20 := (tmp17 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    scevgep50 := dct[tmp20]
    tmp22 := (tmp17 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) )
    scevgep48 := dct[tmp22]
    tmp24 := (tmp17 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep46 := dct[tmp24]
    tmp26 := (tmp17 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    scevgep44 := dct[tmp26]
    tmp28 := (tmp17 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep42 := dct[tmp28]
    tmp30 := (tmp17 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    scevgep40 := dct[tmp30]
    scevgep := dct[tmp17]
    // load 
    iNsTr_82 := ->(scevgep) 
    iNsTr_83 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_82) )
    // load 
    iNsTr_84 := ->(scevgep40) 
    iNsTr_85 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_84) )
    iNsTr_86 := (iNsTr_85 + iNsTr_83)
    iNsTr_87 := (iNsTr_83 - iNsTr_85)
    // load 
    iNsTr_88 := ->(scevgep42) 
    iNsTr_89 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_88) )
    iNsTr_90 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_89) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )))
    // load 
    iNsTr_91 := ->(scevgep44) 
    iNsTr_92 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_91) )
    iNsTr_93 := (iNsTr_90 - iNsTr_92)
    iNsTr_94 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_92) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )))
    iNsTr_95 := (iNsTr_94 + iNsTr_89)
    iNsTr_96 := (iNsTr_95 + iNsTr_86)
    iNsTr_97 := (iNsTr_93 + iNsTr_87)
    iNsTr_98 := (iNsTr_87 - iNsTr_93)
    iNsTr_99 := (iNsTr_86 - iNsTr_95)
    // load 
    iNsTr_100 := ->(scevgep46) 
    iNsTr_101 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_100) )
    // load 
    iNsTr_102 := ->(scevgep48) 
    iNsTr_103 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_102) )
    // load 
    iNsTr_104 := ->(scevgep50) 
    iNsTr_105 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_104) )
    iNsTr_106 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_105) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )))
    iNsTr_107 := (iNsTr_103 - iNsTr_101)
    iNsTr_108 := (iNsTr_107 - iNsTr_105)
    iNsTr_109 := (iNsTr_108 - iNsTr_106)
    // load 
    iNsTr_110 := ->(scevgep52) 
    iNsTr_111 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_110) )
    iNsTr_112 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_101) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )))
    iNsTr_113 := (iNsTr_105 + iNsTr_111)
    iNsTr_114 := (iNsTr_113 - iNsTr_101)
    iNsTr_115 := (iNsTr_114 - iNsTr_112)
    iNsTr_116 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_103) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )))
    iNsTr_117 := (iNsTr_105 - iNsTr_111)
    iNsTr_118 := (iNsTr_117 + iNsTr_103)
    iNsTr_119 := (iNsTr_118 + iNsTr_116)
    iNsTr_120 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_111) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )))
    iNsTr_121 := (iNsTr_103 + iNsTr_101)
    iNsTr_122 := (iNsTr_121 + iNsTr_111)
    iNsTr_123 := (iNsTr_122 + iNsTr_120)
    iNsTr_124 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_123) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )))
    iNsTr_125 := (iNsTr_124 + iNsTr_109)
    iNsTr_126 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_119) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )))
    iNsTr_127 := (iNsTr_126 + iNsTr_115)
    iNsTr_128 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_115) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )))
    iNsTr_129 := (iNsTr_128 - iNsTr_119)
    iNsTr_130 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_109) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )))
    iNsTr_131 := (iNsTr_123 - iNsTr_130)
    // load 
    iNsTr_132 := ->(scevgep53) 
    iNsTr_133 := ($cast ($uint<32>) iNsTr_132)
    iNsTr_134 := (iNsTr_131 + iNsTr_96)
    iNsTr_135 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_134) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 )  )))
    iNsTr_136 := (iNsTr_135 + iNsTr_133)
    // compare instruction
    iNsTr_137 := (iNsTr_136 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_137 $then  $place [bbx_xnph_bb_5] $else $place [bbx_xnph_x264_clip_pixelx_xexit] $endif 
    //begin: basic-block bb_5
    $merge bbx_xnph_bb_5
    $endmerge
    iNsTr_139 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_136)
    iNsTr_140 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_139) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_141 := (iNsTr_140 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_5_x264_clip_pixelx_xexit]
    //begin: basic-block x264_clip_pixelx_xexit
    $merge bb_5_x264_clip_pixelx_xexit bbx_xnph_x264_clip_pixelx_xexit
    $phi iNsTr_143 :=  ( $cast ($uint<32>) iNsTr_141) $on bb_5_x264_clip_pixelx_xexit ( $cast ($uint<32>) iNsTr_136) $on bbx_xnph_x264_clip_pixelx_xexit 
    $endmerge
    iNsTr_144 := ($cast ($uint<8>) iNsTr_143)
    ->(scevgep53) := iNsTr_144
    // load 
    iNsTr_146 := ->(scevgep55) 
    iNsTr_147 := ($cast ($uint<32>) iNsTr_146)
    iNsTr_148 := (iNsTr_129 + iNsTr_97)
    iNsTr_149 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_148) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 )  )))
    iNsTr_150 := (iNsTr_147 + iNsTr_149)
    // compare instruction
    iNsTr_151 := (iNsTr_150 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_151 $then  $place [x264_clip_pixelx_xexit_bb_7] $else $place [x264_clip_pixelx_xexit_x264_clip_pixelx_xexit24] $endif 
    //begin: basic-block bb_7
    $merge x264_clip_pixelx_xexit_bb_7
    $endmerge
    iNsTr_153 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_150)
    iNsTr_154 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_153) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_155 := (iNsTr_154 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_7_x264_clip_pixelx_xexit24]
    //begin: basic-block x264_clip_pixelx_xexit24
    $merge bb_7_x264_clip_pixelx_xexit24 x264_clip_pixelx_xexit_x264_clip_pixelx_xexit24
    $phi iNsTr_157 :=  ( $cast ($uint<32>) iNsTr_155) $on bb_7_x264_clip_pixelx_xexit24 ( $cast ($uint<32>) iNsTr_150) $on x264_clip_pixelx_xexit_x264_clip_pixelx_xexit24 
    $endmerge
    iNsTr_158 := ($cast ($uint<8>) iNsTr_157)
    ->(scevgep55) := iNsTr_158
    // load 
    iNsTr_160 := ->(scevgep57) 
    iNsTr_161 := ($cast ($uint<32>) iNsTr_160)
    iNsTr_162 := (iNsTr_127 + iNsTr_98)
    iNsTr_163 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_162) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 )  )))
    iNsTr_164 := (iNsTr_161 + iNsTr_163)
    // compare instruction
    iNsTr_165 := (iNsTr_164 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_165 $then  $place [x264_clip_pixelx_xexit24_bb_9] $else $place [x264_clip_pixelx_xexit24_x264_clip_pixelx_xexit23] $endif 
    //begin: basic-block bb_9
    $merge x264_clip_pixelx_xexit24_bb_9
    $endmerge
    iNsTr_167 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_164)
    iNsTr_168 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_167) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_169 := (iNsTr_168 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_9_x264_clip_pixelx_xexit23]
    //begin: basic-block x264_clip_pixelx_xexit23
    $merge bb_9_x264_clip_pixelx_xexit23 x264_clip_pixelx_xexit24_x264_clip_pixelx_xexit23
    $phi iNsTr_171 :=  ( $cast ($uint<32>) iNsTr_169) $on bb_9_x264_clip_pixelx_xexit23 ( $cast ($uint<32>) iNsTr_164) $on x264_clip_pixelx_xexit24_x264_clip_pixelx_xexit23 
    $endmerge
    iNsTr_172 := ($cast ($uint<8>) iNsTr_171)
    ->(scevgep57) := iNsTr_172
    // load 
    iNsTr_174 := ->(scevgep59) 
    iNsTr_175 := ($cast ($uint<32>) iNsTr_174)
    iNsTr_176 := (iNsTr_125 + iNsTr_99)
    iNsTr_177 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_176) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 )  )))
    iNsTr_178 := (iNsTr_175 + iNsTr_177)
    // compare instruction
    iNsTr_179 := (iNsTr_178 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_179 $then  $place [x264_clip_pixelx_xexit23_bb_11] $else $place [x264_clip_pixelx_xexit23_x264_clip_pixelx_xexit22] $endif 
    //begin: basic-block bb_11
    $merge x264_clip_pixelx_xexit23_bb_11
    $endmerge
    iNsTr_181 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_178)
    iNsTr_182 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_181) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_183 := (iNsTr_182 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_11_x264_clip_pixelx_xexit22]
    //begin: basic-block x264_clip_pixelx_xexit22
    $merge bb_11_x264_clip_pixelx_xexit22 x264_clip_pixelx_xexit23_x264_clip_pixelx_xexit22
    $phi iNsTr_185 :=  ( $cast ($uint<32>) iNsTr_183) $on bb_11_x264_clip_pixelx_xexit22 ( $cast ($uint<32>) iNsTr_178) $on x264_clip_pixelx_xexit23_x264_clip_pixelx_xexit22 
    $endmerge
    iNsTr_186 := ($cast ($uint<8>) iNsTr_185)
    ->(scevgep59) := iNsTr_186
    // load 
    iNsTr_188 := ->(scevgep61) 
    iNsTr_189 := ($cast ($uint<32>) iNsTr_188)
    iNsTr_190 := (iNsTr_99 - iNsTr_125)
    iNsTr_191 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_190) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 )  )))
    iNsTr_192 := (iNsTr_189 + iNsTr_191)
    // compare instruction
    iNsTr_193 := (iNsTr_192 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_193 $then  $place [x264_clip_pixelx_xexit22_bb_13] $else $place [x264_clip_pixelx_xexit22_x264_clip_pixelx_xexit21] $endif 
    //begin: basic-block bb_13
    $merge x264_clip_pixelx_xexit22_bb_13
    $endmerge
    iNsTr_195 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_192)
    iNsTr_196 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_195) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_197 := (iNsTr_196 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_13_x264_clip_pixelx_xexit21]
    //begin: basic-block x264_clip_pixelx_xexit21
    $merge bb_13_x264_clip_pixelx_xexit21 x264_clip_pixelx_xexit22_x264_clip_pixelx_xexit21
    $phi iNsTr_199 :=  ( $cast ($uint<32>) iNsTr_197) $on bb_13_x264_clip_pixelx_xexit21 ( $cast ($uint<32>) iNsTr_192) $on x264_clip_pixelx_xexit22_x264_clip_pixelx_xexit21 
    $endmerge
    iNsTr_200 := ($cast ($uint<8>) iNsTr_199)
    ->(scevgep61) := iNsTr_200
    // load 
    iNsTr_202 := ->(scevgep63) 
    iNsTr_203 := ($cast ($uint<32>) iNsTr_202)
    iNsTr_204 := (iNsTr_98 - iNsTr_127)
    iNsTr_205 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_204) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 )  )))
    iNsTr_206 := (iNsTr_203 + iNsTr_205)
    // compare instruction
    iNsTr_207 := (iNsTr_206 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_207 $then  $place [x264_clip_pixelx_xexit21_bb_15] $else $place [x264_clip_pixelx_xexit21_x264_clip_pixelx_xexit20] $endif 
    //begin: basic-block bb_15
    $merge x264_clip_pixelx_xexit21_bb_15
    $endmerge
    iNsTr_209 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_206)
    iNsTr_210 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_209) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_211 := (iNsTr_210 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_15_x264_clip_pixelx_xexit20]
    //begin: basic-block x264_clip_pixelx_xexit20
    $merge bb_15_x264_clip_pixelx_xexit20 x264_clip_pixelx_xexit21_x264_clip_pixelx_xexit20
    $phi iNsTr_213 :=  ( $cast ($uint<32>) iNsTr_211) $on bb_15_x264_clip_pixelx_xexit20 ( $cast ($uint<32>) iNsTr_206) $on x264_clip_pixelx_xexit21_x264_clip_pixelx_xexit20 
    $endmerge
    iNsTr_214 := ($cast ($uint<8>) iNsTr_213)
    ->(scevgep63) := iNsTr_214
    // load 
    iNsTr_216 := ->(scevgep65) 
    iNsTr_217 := ($cast ($uint<32>) iNsTr_216)
    iNsTr_218 := (iNsTr_97 - iNsTr_129)
    iNsTr_219 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_218) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 )  )))
    iNsTr_220 := (iNsTr_217 + iNsTr_219)
    // compare instruction
    iNsTr_221 := (iNsTr_220 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_221 $then  $place [x264_clip_pixelx_xexit20_bb_17] $else $place [x264_clip_pixelx_xexit20_x264_clip_pixelx_xexit19] $endif 
    //begin: basic-block bb_17
    $merge x264_clip_pixelx_xexit20_bb_17
    $endmerge
    iNsTr_223 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_220)
    iNsTr_224 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_223) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_225 := (iNsTr_224 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_17_x264_clip_pixelx_xexit19]
    //begin: basic-block x264_clip_pixelx_xexit19
    $merge bb_17_x264_clip_pixelx_xexit19 x264_clip_pixelx_xexit20_x264_clip_pixelx_xexit19
    $phi iNsTr_227 :=  ( $cast ($uint<32>) iNsTr_225) $on bb_17_x264_clip_pixelx_xexit19 ( $cast ($uint<32>) iNsTr_220) $on x264_clip_pixelx_xexit20_x264_clip_pixelx_xexit19 
    $endmerge
    iNsTr_228 := ($cast ($uint<8>) iNsTr_227)
    ->(scevgep65) := iNsTr_228
    // load 
    iNsTr_230 := ->(scevgep67) 
    iNsTr_231 := ($cast ($uint<32>) iNsTr_230)
    iNsTr_232 := (iNsTr_96 - iNsTr_131)
    iNsTr_233 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_232) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 )  )))
    iNsTr_234 := (iNsTr_231 + iNsTr_233)
    // compare instruction
    iNsTr_235 := (iNsTr_234 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_235 $then  $place [x264_clip_pixelx_xexit19_bb_19] $else $place [x264_clip_pixelx_xexit19_x264_clip_pixelx_xexit18] $endif 
    //begin: basic-block bb_19
    $merge x264_clip_pixelx_xexit19_bb_19
    $endmerge
    iNsTr_237 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_234)
    iNsTr_238 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_237) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_239 := (iNsTr_238 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_19_x264_clip_pixelx_xexit18]
    //begin: basic-block x264_clip_pixelx_xexit18
    $merge bb_19_x264_clip_pixelx_xexit18 x264_clip_pixelx_xexit19_x264_clip_pixelx_xexit18
    $phi iNsTr_241 :=  ( $cast ($uint<32>) iNsTr_239) $on bb_19_x264_clip_pixelx_xexit18 ( $cast ($uint<32>) iNsTr_234) $on x264_clip_pixelx_xexit19_x264_clip_pixelx_xexit18 
    $endmerge
    iNsTr_242 := ($cast ($uint<8>) iNsTr_241)
    ->(scevgep67) := iNsTr_242
    iNsTr_244 := (i1x_x036 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (iNsTr_244 == ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 )  )
    $if exitcond1 $then  $place [x264_clip_pixelx_xexit18_xx_x_crit_edge] $else $place [x264_clip_pixelx_xexit18_bbx_xnph] $endif 
    //begin: basic-block xx_x_crit_edge
    $merge x264_clip_pixelx_xexit18_xx_x_crit_edge
    $endmerge
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [add8x8_idct_dc] 
$in (p_dst : $pointer< $uint<8> > dct : $pointer< $uint<16> > )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    // load 
    iNsTr_0 := ->(dct) 
    iNsTr_1 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_0) )
    iNsTr_2 := (iNsTr_1 << ( $bitcast ($uint<32> ) _b00000000000000000000000000001010 ) )
    iNsTr_3 := (iNsTr_2 + ( $bitcast ($uint<32> ) _b00000000000000001000000000000000 ) )
    iNsTr_4 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_3) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )))
    $place [bb_0_bb_1]
    //begin: basic-block bb_1
    $merge bb_0_bb_1 x264_clip_pixelx_xexit1x_xi_bb_1
    $phi ix_x04x_xi :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bb_0_bb_1 ( $cast ($uint<32>) iNsTr_54) $on x264_clip_pixelx_xexit1x_xi_bb_1 
    $endmerge
    tmp18 := (ix_x04x_xi * ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    xx_x05x_xi := p_dst[tmp18]
    tmp19 := (tmp18 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgepx_xi := p_dst[tmp19]
    tmp20 := (tmp18 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep8x_xi := p_dst[tmp20]
    tmp21 := (tmp18 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep10x_xi := p_dst[tmp21]
    // load 
    iNsTr_6 := ->(xx_x05x_xi) 
    iNsTr_7 := ($cast ($uint<32>) iNsTr_6)
    iNsTr_8 := (iNsTr_7 + iNsTr_4)
    // compare instruction
    iNsTr_9 := (iNsTr_8 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_9 $then  $place [bb_1_bb_2] $else $place [bb_1_x264_clip_pixelx_xexitx_xi] $endif 
    //begin: basic-block bb_2
    $merge bb_1_bb_2
    $endmerge
    iNsTr_11 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_8)
    iNsTr_12 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_11) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_13 := (iNsTr_12 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_2_x264_clip_pixelx_xexitx_xi]
    //begin: basic-block x264_clip_pixelx_xexitx_xi
    $merge bb_1_x264_clip_pixelx_xexitx_xi bb_2_x264_clip_pixelx_xexitx_xi
    $phi iNsTr_15 :=  ( $cast ($uint<32>) iNsTr_13) $on bb_2_x264_clip_pixelx_xexitx_xi ( $cast ($uint<32>) iNsTr_8) $on bb_1_x264_clip_pixelx_xexitx_xi 
    $endmerge
    iNsTr_16 := ($cast ($uint<8>) iNsTr_15)
    ->(xx_x05x_xi) := iNsTr_16
    // load 
    iNsTr_18 := ->(scevgepx_xi) 
    iNsTr_19 := ($cast ($uint<32>) iNsTr_18)
    iNsTr_20 := (iNsTr_19 + iNsTr_4)
    // compare instruction
    iNsTr_21 := (iNsTr_20 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_21 $then  $place [x264_clip_pixelx_xexitx_xi_bb_4] $else $place [x264_clip_pixelx_xexitx_xi_x264_clip_pixelx_xexit3x_xi] $endif 
    //begin: basic-block bb_4
    $merge x264_clip_pixelx_xexitx_xi_bb_4
    $endmerge
    iNsTr_23 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_20)
    iNsTr_24 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_23) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_25 := (iNsTr_24 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_4_x264_clip_pixelx_xexit3x_xi]
    //begin: basic-block x264_clip_pixelx_xexit3x_xi
    $merge bb_4_x264_clip_pixelx_xexit3x_xi x264_clip_pixelx_xexitx_xi_x264_clip_pixelx_xexit3x_xi
    $phi iNsTr_27 :=  ( $cast ($uint<32>) iNsTr_25) $on bb_4_x264_clip_pixelx_xexit3x_xi ( $cast ($uint<32>) iNsTr_20) $on x264_clip_pixelx_xexitx_xi_x264_clip_pixelx_xexit3x_xi 
    $endmerge
    iNsTr_28 := ($cast ($uint<8>) iNsTr_27)
    ->(scevgepx_xi) := iNsTr_28
    // load 
    iNsTr_30 := ->(scevgep8x_xi) 
    iNsTr_31 := ($cast ($uint<32>) iNsTr_30)
    iNsTr_32 := (iNsTr_31 + iNsTr_4)
    // compare instruction
    iNsTr_33 := (iNsTr_32 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_33 $then  $place [x264_clip_pixelx_xexit3x_xi_bb_6] $else $place [x264_clip_pixelx_xexit3x_xi_x264_clip_pixelx_xexit2x_xi] $endif 
    //begin: basic-block bb_6
    $merge x264_clip_pixelx_xexit3x_xi_bb_6
    $endmerge
    iNsTr_35 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_32)
    iNsTr_36 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_35) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_37 := (iNsTr_36 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_6_x264_clip_pixelx_xexit2x_xi]
    //begin: basic-block x264_clip_pixelx_xexit2x_xi
    $merge bb_6_x264_clip_pixelx_xexit2x_xi x264_clip_pixelx_xexit3x_xi_x264_clip_pixelx_xexit2x_xi
    $phi iNsTr_39 :=  ( $cast ($uint<32>) iNsTr_37) $on bb_6_x264_clip_pixelx_xexit2x_xi ( $cast ($uint<32>) iNsTr_32) $on x264_clip_pixelx_xexit3x_xi_x264_clip_pixelx_xexit2x_xi 
    $endmerge
    iNsTr_40 := ($cast ($uint<8>) iNsTr_39)
    ->(scevgep8x_xi) := iNsTr_40
    // load 
    iNsTr_42 := ->(scevgep10x_xi) 
    iNsTr_43 := ($cast ($uint<32>) iNsTr_42)
    iNsTr_44 := (iNsTr_43 + iNsTr_4)
    // compare instruction
    iNsTr_45 := (iNsTr_44 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_45 $then  $place [x264_clip_pixelx_xexit2x_xi_bb_8] $else $place [x264_clip_pixelx_xexit2x_xi_x264_clip_pixelx_xexit1x_xi] $endif 
    //begin: basic-block bb_8
    $merge x264_clip_pixelx_xexit2x_xi_bb_8
    $endmerge
    iNsTr_47 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_44)
    iNsTr_48 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_47) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_49 := (iNsTr_48 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_8_x264_clip_pixelx_xexit1x_xi]
    //begin: basic-block x264_clip_pixelx_xexit1x_xi
    $merge bb_8_x264_clip_pixelx_xexit1x_xi x264_clip_pixelx_xexit2x_xi_x264_clip_pixelx_xexit1x_xi
    $phi iNsTr_51 :=  ( $cast ($uint<32>) iNsTr_49) $on bb_8_x264_clip_pixelx_xexit1x_xi ( $cast ($uint<32>) iNsTr_44) $on x264_clip_pixelx_xexit2x_xi_x264_clip_pixelx_xexit1x_xi 
    $endmerge
    iNsTr_52 := ($cast ($uint<8>) iNsTr_51)
    ->(scevgep10x_xi) := iNsTr_52
    iNsTr_54 := (ix_x04x_xi + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond17 := (iNsTr_54 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 )  )
    $if exitcond17 $then  $place [x264_clip_pixelx_xexit1x_xi_add4x4_idct_dcx_xexit] $else $place [x264_clip_pixelx_xexit1x_xi_bb_1] $endif 
    //begin: basic-block add4x4_idct_dcx_xexit
    $merge x264_clip_pixelx_xexit1x_xi_add4x4_idct_dcx_xexit
    $endmerge
    iNsTr_56 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_57 := ->(iNsTr_56) 
    iNsTr_58 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_57) )
    iNsTr_59 := (iNsTr_58 << ( $bitcast ($uint<32> ) _b00000000000000000000000000001010 ) )
    iNsTr_60 := (iNsTr_59 + ( $bitcast ($uint<32> ) _b00000000000000001000000000000000 ) )
    iNsTr_61 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_60) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )))
    $place [add4x4_idct_dcx_xexit_bb_11]
    //begin: basic-block bb_11
    $merge add4x4_idct_dcx_xexit_bb_11 x264_clip_pixelx_xexit1x_xi44_bb_11
    $phi ix_x04x_xi31 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on add4x4_idct_dcx_xexit_bb_11 ( $cast ($uint<32>) iNsTr_111) $on x264_clip_pixelx_xexit1x_xi44_bb_11 
    $endmerge
    tmp12 := (ix_x04x_xi31 * ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    tmp13 := (tmp12 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) )
    scevgepx_xi34 := p_dst[tmp13]
    tmp14 := (tmp12 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    scevgep8x_xi36 := p_dst[tmp14]
    tmp15 := (tmp12 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    scevgep10x_xi38 := p_dst[tmp15]
    tmp16 := (tmp12 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    xx_x05x_xi39 := p_dst[tmp16]
    // load 
    iNsTr_63 := ->(xx_x05x_xi39) 
    iNsTr_64 := ($cast ($uint<32>) iNsTr_63)
    iNsTr_65 := (iNsTr_64 + iNsTr_61)
    // compare instruction
    iNsTr_66 := (iNsTr_65 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_66 $then  $place [bb_11_bb_12] $else $place [bb_11_x264_clip_pixelx_xexitx_xi40] $endif 
    //begin: basic-block bb_12
    $merge bb_11_bb_12
    $endmerge
    iNsTr_68 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_65)
    iNsTr_69 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_68) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_70 := (iNsTr_69 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_12_x264_clip_pixelx_xexitx_xi40]
    //begin: basic-block x264_clip_pixelx_xexitx_xi40
    $merge bb_11_x264_clip_pixelx_xexitx_xi40 bb_12_x264_clip_pixelx_xexitx_xi40
    $phi iNsTr_72 :=  ( $cast ($uint<32>) iNsTr_70) $on bb_12_x264_clip_pixelx_xexitx_xi40 ( $cast ($uint<32>) iNsTr_65) $on bb_11_x264_clip_pixelx_xexitx_xi40 
    $endmerge
    iNsTr_73 := ($cast ($uint<8>) iNsTr_72)
    ->(xx_x05x_xi39) := iNsTr_73
    // load 
    iNsTr_75 := ->(scevgepx_xi34) 
    iNsTr_76 := ($cast ($uint<32>) iNsTr_75)
    iNsTr_77 := (iNsTr_76 + iNsTr_61)
    // compare instruction
    iNsTr_78 := (iNsTr_77 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_78 $then  $place [x264_clip_pixelx_xexitx_xi40_bb_14] $else $place [x264_clip_pixelx_xexitx_xi40_x264_clip_pixelx_xexit3x_xi41] $endif 
    //begin: basic-block bb_14
    $merge x264_clip_pixelx_xexitx_xi40_bb_14
    $endmerge
    iNsTr_80 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_77)
    iNsTr_81 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_80) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_82 := (iNsTr_81 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_14_x264_clip_pixelx_xexit3x_xi41]
    //begin: basic-block x264_clip_pixelx_xexit3x_xi41
    $merge bb_14_x264_clip_pixelx_xexit3x_xi41 x264_clip_pixelx_xexitx_xi40_x264_clip_pixelx_xexit3x_xi41
    $phi iNsTr_84 :=  ( $cast ($uint<32>) iNsTr_82) $on bb_14_x264_clip_pixelx_xexit3x_xi41 ( $cast ($uint<32>) iNsTr_77) $on x264_clip_pixelx_xexitx_xi40_x264_clip_pixelx_xexit3x_xi41 
    $endmerge
    iNsTr_85 := ($cast ($uint<8>) iNsTr_84)
    ->(scevgepx_xi34) := iNsTr_85
    // load 
    iNsTr_87 := ->(scevgep8x_xi36) 
    iNsTr_88 := ($cast ($uint<32>) iNsTr_87)
    iNsTr_89 := (iNsTr_88 + iNsTr_61)
    // compare instruction
    iNsTr_90 := (iNsTr_89 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_90 $then  $place [x264_clip_pixelx_xexit3x_xi41_bb_16] $else $place [x264_clip_pixelx_xexit3x_xi41_x264_clip_pixelx_xexit2x_xi42] $endif 
    //begin: basic-block bb_16
    $merge x264_clip_pixelx_xexit3x_xi41_bb_16
    $endmerge
    iNsTr_92 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_89)
    iNsTr_93 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_92) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_94 := (iNsTr_93 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_16_x264_clip_pixelx_xexit2x_xi42]
    //begin: basic-block x264_clip_pixelx_xexit2x_xi42
    $merge bb_16_x264_clip_pixelx_xexit2x_xi42 x264_clip_pixelx_xexit3x_xi41_x264_clip_pixelx_xexit2x_xi42
    $phi iNsTr_96 :=  ( $cast ($uint<32>) iNsTr_94) $on bb_16_x264_clip_pixelx_xexit2x_xi42 ( $cast ($uint<32>) iNsTr_89) $on x264_clip_pixelx_xexit3x_xi41_x264_clip_pixelx_xexit2x_xi42 
    $endmerge
    iNsTr_97 := ($cast ($uint<8>) iNsTr_96)
    ->(scevgep8x_xi36) := iNsTr_97
    // load 
    iNsTr_99 := ->(scevgep10x_xi38) 
    iNsTr_100 := ($cast ($uint<32>) iNsTr_99)
    iNsTr_101 := (iNsTr_100 + iNsTr_61)
    // compare instruction
    iNsTr_102 := (iNsTr_101 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_102 $then  $place [x264_clip_pixelx_xexit2x_xi42_bb_18] $else $place [x264_clip_pixelx_xexit2x_xi42_x264_clip_pixelx_xexit1x_xi44] $endif 
    //begin: basic-block bb_18
    $merge x264_clip_pixelx_xexit2x_xi42_bb_18
    $endmerge
    iNsTr_104 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_101)
    iNsTr_105 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_104) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_106 := (iNsTr_105 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_18_x264_clip_pixelx_xexit1x_xi44]
    //begin: basic-block x264_clip_pixelx_xexit1x_xi44
    $merge bb_18_x264_clip_pixelx_xexit1x_xi44 x264_clip_pixelx_xexit2x_xi42_x264_clip_pixelx_xexit1x_xi44
    $phi iNsTr_108 :=  ( $cast ($uint<32>) iNsTr_106) $on bb_18_x264_clip_pixelx_xexit1x_xi44 ( $cast ($uint<32>) iNsTr_101) $on x264_clip_pixelx_xexit2x_xi42_x264_clip_pixelx_xexit1x_xi44 
    $endmerge
    iNsTr_109 := ($cast ($uint<8>) iNsTr_108)
    ->(scevgep10x_xi38) := iNsTr_109
    iNsTr_111 := (ix_x04x_xi31 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond11 := (iNsTr_111 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 )  )
    $if exitcond11 $then  $place [x264_clip_pixelx_xexit1x_xi44_add4x4_idct_dcx_xexit45] $else $place [x264_clip_pixelx_xexit1x_xi44_bb_11] $endif 
    //begin: basic-block add4x4_idct_dcx_xexit45
    $merge x264_clip_pixelx_xexit1x_xi44_add4x4_idct_dcx_xexit45
    $endmerge
    iNsTr_113 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_114 := ->(iNsTr_113) 
    iNsTr_115 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_114) )
    iNsTr_116 := (iNsTr_115 << ( $bitcast ($uint<32> ) _b00000000000000000000000000001010 ) )
    iNsTr_117 := (iNsTr_116 + ( $bitcast ($uint<32> ) _b00000000000000001000000000000000 ) )
    iNsTr_118 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_117) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )))
    $place [add4x4_idct_dcx_xexit45_bb_21]
    //begin: basic-block bb_21
    $merge add4x4_idct_dcx_xexit45_bb_21 x264_clip_pixelx_xexit1x_xi29_bb_21
    $phi ix_x04x_xi16 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on add4x4_idct_dcx_xexit45_bb_21 ( $cast ($uint<32>) iNsTr_168) $on x264_clip_pixelx_xexit1x_xi29_bb_21 
    $endmerge
    tmp := (ix_x04x_xi16 * ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    tmp7 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000010000001 ) )
    scevgepx_xi19 := p_dst[tmp7]
    tmp8 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000010000010 ) )
    scevgep8x_xi21 := p_dst[tmp8]
    tmp9 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000010000011 ) )
    scevgep10x_xi23 := p_dst[tmp9]
    tmp10 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000010000000 ) )
    xx_x05x_xi24 := p_dst[tmp10]
    // load 
    iNsTr_120 := ->(xx_x05x_xi24) 
    iNsTr_121 := ($cast ($uint<32>) iNsTr_120)
    iNsTr_122 := (iNsTr_121 + iNsTr_118)
    // compare instruction
    iNsTr_123 := (iNsTr_122 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_123 $then  $place [bb_21_bb_22] $else $place [bb_21_x264_clip_pixelx_xexitx_xi25] $endif 
    //begin: basic-block bb_22
    $merge bb_21_bb_22
    $endmerge
    iNsTr_125 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_122)
    iNsTr_126 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_125) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_127 := (iNsTr_126 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_22_x264_clip_pixelx_xexitx_xi25]
    //begin: basic-block x264_clip_pixelx_xexitx_xi25
    $merge bb_21_x264_clip_pixelx_xexitx_xi25 bb_22_x264_clip_pixelx_xexitx_xi25
    $phi iNsTr_129 :=  ( $cast ($uint<32>) iNsTr_127) $on bb_22_x264_clip_pixelx_xexitx_xi25 ( $cast ($uint<32>) iNsTr_122) $on bb_21_x264_clip_pixelx_xexitx_xi25 
    $endmerge
    iNsTr_130 := ($cast ($uint<8>) iNsTr_129)
    ->(xx_x05x_xi24) := iNsTr_130
    // load 
    iNsTr_132 := ->(scevgepx_xi19) 
    iNsTr_133 := ($cast ($uint<32>) iNsTr_132)
    iNsTr_134 := (iNsTr_133 + iNsTr_118)
    // compare instruction
    iNsTr_135 := (iNsTr_134 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_135 $then  $place [x264_clip_pixelx_xexitx_xi25_bb_24] $else $place [x264_clip_pixelx_xexitx_xi25_x264_clip_pixelx_xexit3x_xi26] $endif 
    //begin: basic-block bb_24
    $merge x264_clip_pixelx_xexitx_xi25_bb_24
    $endmerge
    iNsTr_137 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_134)
    iNsTr_138 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_137) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_139 := (iNsTr_138 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_24_x264_clip_pixelx_xexit3x_xi26]
    //begin: basic-block x264_clip_pixelx_xexit3x_xi26
    $merge bb_24_x264_clip_pixelx_xexit3x_xi26 x264_clip_pixelx_xexitx_xi25_x264_clip_pixelx_xexit3x_xi26
    $phi iNsTr_141 :=  ( $cast ($uint<32>) iNsTr_139) $on bb_24_x264_clip_pixelx_xexit3x_xi26 ( $cast ($uint<32>) iNsTr_134) $on x264_clip_pixelx_xexitx_xi25_x264_clip_pixelx_xexit3x_xi26 
    $endmerge
    iNsTr_142 := ($cast ($uint<8>) iNsTr_141)
    ->(scevgepx_xi19) := iNsTr_142
    // load 
    iNsTr_144 := ->(scevgep8x_xi21) 
    iNsTr_145 := ($cast ($uint<32>) iNsTr_144)
    iNsTr_146 := (iNsTr_145 + iNsTr_118)
    // compare instruction
    iNsTr_147 := (iNsTr_146 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_147 $then  $place [x264_clip_pixelx_xexit3x_xi26_bb_26] $else $place [x264_clip_pixelx_xexit3x_xi26_x264_clip_pixelx_xexit2x_xi27] $endif 
    //begin: basic-block bb_26
    $merge x264_clip_pixelx_xexit3x_xi26_bb_26
    $endmerge
    iNsTr_149 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_146)
    iNsTr_150 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_149) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_151 := (iNsTr_150 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_26_x264_clip_pixelx_xexit2x_xi27]
    //begin: basic-block x264_clip_pixelx_xexit2x_xi27
    $merge bb_26_x264_clip_pixelx_xexit2x_xi27 x264_clip_pixelx_xexit3x_xi26_x264_clip_pixelx_xexit2x_xi27
    $phi iNsTr_153 :=  ( $cast ($uint<32>) iNsTr_151) $on bb_26_x264_clip_pixelx_xexit2x_xi27 ( $cast ($uint<32>) iNsTr_146) $on x264_clip_pixelx_xexit3x_xi26_x264_clip_pixelx_xexit2x_xi27 
    $endmerge
    iNsTr_154 := ($cast ($uint<8>) iNsTr_153)
    ->(scevgep8x_xi21) := iNsTr_154
    // load 
    iNsTr_156 := ->(scevgep10x_xi23) 
    iNsTr_157 := ($cast ($uint<32>) iNsTr_156)
    iNsTr_158 := (iNsTr_157 + iNsTr_118)
    // compare instruction
    iNsTr_159 := (iNsTr_158 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_159 $then  $place [x264_clip_pixelx_xexit2x_xi27_bb_28] $else $place [x264_clip_pixelx_xexit2x_xi27_x264_clip_pixelx_xexit1x_xi29] $endif 
    //begin: basic-block bb_28
    $merge x264_clip_pixelx_xexit2x_xi27_bb_28
    $endmerge
    iNsTr_161 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_158)
    iNsTr_162 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_161) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_163 := (iNsTr_162 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_28_x264_clip_pixelx_xexit1x_xi29]
    //begin: basic-block x264_clip_pixelx_xexit1x_xi29
    $merge bb_28_x264_clip_pixelx_xexit1x_xi29 x264_clip_pixelx_xexit2x_xi27_x264_clip_pixelx_xexit1x_xi29
    $phi iNsTr_165 :=  ( $cast ($uint<32>) iNsTr_163) $on bb_28_x264_clip_pixelx_xexit1x_xi29 ( $cast ($uint<32>) iNsTr_158) $on x264_clip_pixelx_xexit2x_xi27_x264_clip_pixelx_xexit1x_xi29 
    $endmerge
    iNsTr_166 := ($cast ($uint<8>) iNsTr_165)
    ->(scevgep10x_xi23) := iNsTr_166
    iNsTr_168 := (ix_x04x_xi16 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond := (iNsTr_168 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 )  )
    $if exitcond $then  $place [x264_clip_pixelx_xexit1x_xi29_add4x4_idct_dcx_xexit30] $else $place [x264_clip_pixelx_xexit1x_xi29_bb_21] $endif 
    //begin: basic-block add4x4_idct_dcx_xexit30
    $merge x264_clip_pixelx_xexit1x_xi29_add4x4_idct_dcx_xexit30
    $endmerge
    iNsTr_170 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    iNsTr_171 := ->(iNsTr_170) 
    iNsTr_172 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_171) )
    iNsTr_173 := (iNsTr_172 << ( $bitcast ($uint<32> ) _b00000000000000000000000000001010 ) )
    iNsTr_174 := (iNsTr_173 + ( $bitcast ($uint<32> ) _b00000000000000001000000000000000 ) )
    iNsTr_175 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_174) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )))
    $place [add4x4_idct_dcx_xexit30_bb_31]
    //begin: basic-block bb_31
    $merge add4x4_idct_dcx_xexit30_bb_31 x264_clip_pixelx_xexit1x_xi14_bb_31
    $phi ix_x04x_xi1 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on add4x4_idct_dcx_xexit30_bb_31 ( $cast ($uint<32>) iNsTr_225) $on x264_clip_pixelx_xexit1x_xi14_bb_31 
    $endmerge
    tmp2 := (ix_x04x_xi1 * ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    tmp3 := (tmp2 + ( $bitcast ($uint<32> ) _b00000000000000000000000010000101 ) )
    scevgepx_xi4 := p_dst[tmp3]
    tmp4 := (tmp2 + ( $bitcast ($uint<32> ) _b00000000000000000000000010000110 ) )
    scevgep8x_xi6 := p_dst[tmp4]
    tmp5 := (tmp2 + ( $bitcast ($uint<32> ) _b00000000000000000000000010000111 ) )
    scevgep10x_xi8 := p_dst[tmp5]
    tmp6 := (tmp2 + ( $bitcast ($uint<32> ) _b00000000000000000000000010000100 ) )
    xx_x05x_xi9 := p_dst[tmp6]
    // load 
    iNsTr_177 := ->(xx_x05x_xi9) 
    iNsTr_178 := ($cast ($uint<32>) iNsTr_177)
    iNsTr_179 := (iNsTr_178 + iNsTr_175)
    // compare instruction
    iNsTr_180 := (iNsTr_179 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_180 $then  $place [bb_31_bb_32] $else $place [bb_31_x264_clip_pixelx_xexitx_xi10] $endif 
    //begin: basic-block bb_32
    $merge bb_31_bb_32
    $endmerge
    iNsTr_182 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_179)
    iNsTr_183 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_182) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_184 := (iNsTr_183 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_32_x264_clip_pixelx_xexitx_xi10]
    //begin: basic-block x264_clip_pixelx_xexitx_xi10
    $merge bb_31_x264_clip_pixelx_xexitx_xi10 bb_32_x264_clip_pixelx_xexitx_xi10
    $phi iNsTr_186 :=  ( $cast ($uint<32>) iNsTr_184) $on bb_32_x264_clip_pixelx_xexitx_xi10 ( $cast ($uint<32>) iNsTr_179) $on bb_31_x264_clip_pixelx_xexitx_xi10 
    $endmerge
    iNsTr_187 := ($cast ($uint<8>) iNsTr_186)
    ->(xx_x05x_xi9) := iNsTr_187
    // load 
    iNsTr_189 := ->(scevgepx_xi4) 
    iNsTr_190 := ($cast ($uint<32>) iNsTr_189)
    iNsTr_191 := (iNsTr_190 + iNsTr_175)
    // compare instruction
    iNsTr_192 := (iNsTr_191 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_192 $then  $place [x264_clip_pixelx_xexitx_xi10_bb_34] $else $place [x264_clip_pixelx_xexitx_xi10_x264_clip_pixelx_xexit3x_xi11] $endif 
    //begin: basic-block bb_34
    $merge x264_clip_pixelx_xexitx_xi10_bb_34
    $endmerge
    iNsTr_194 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_191)
    iNsTr_195 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_194) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_196 := (iNsTr_195 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_34_x264_clip_pixelx_xexit3x_xi11]
    //begin: basic-block x264_clip_pixelx_xexit3x_xi11
    $merge bb_34_x264_clip_pixelx_xexit3x_xi11 x264_clip_pixelx_xexitx_xi10_x264_clip_pixelx_xexit3x_xi11
    $phi iNsTr_198 :=  ( $cast ($uint<32>) iNsTr_196) $on bb_34_x264_clip_pixelx_xexit3x_xi11 ( $cast ($uint<32>) iNsTr_191) $on x264_clip_pixelx_xexitx_xi10_x264_clip_pixelx_xexit3x_xi11 
    $endmerge
    iNsTr_199 := ($cast ($uint<8>) iNsTr_198)
    ->(scevgepx_xi4) := iNsTr_199
    // load 
    iNsTr_201 := ->(scevgep8x_xi6) 
    iNsTr_202 := ($cast ($uint<32>) iNsTr_201)
    iNsTr_203 := (iNsTr_202 + iNsTr_175)
    // compare instruction
    iNsTr_204 := (iNsTr_203 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_204 $then  $place [x264_clip_pixelx_xexit3x_xi11_bb_36] $else $place [x264_clip_pixelx_xexit3x_xi11_x264_clip_pixelx_xexit2x_xi12] $endif 
    //begin: basic-block bb_36
    $merge x264_clip_pixelx_xexit3x_xi11_bb_36
    $endmerge
    iNsTr_206 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_203)
    iNsTr_207 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_206) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_208 := (iNsTr_207 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_36_x264_clip_pixelx_xexit2x_xi12]
    //begin: basic-block x264_clip_pixelx_xexit2x_xi12
    $merge bb_36_x264_clip_pixelx_xexit2x_xi12 x264_clip_pixelx_xexit3x_xi11_x264_clip_pixelx_xexit2x_xi12
    $phi iNsTr_210 :=  ( $cast ($uint<32>) iNsTr_208) $on bb_36_x264_clip_pixelx_xexit2x_xi12 ( $cast ($uint<32>) iNsTr_203) $on x264_clip_pixelx_xexit3x_xi11_x264_clip_pixelx_xexit2x_xi12 
    $endmerge
    iNsTr_211 := ($cast ($uint<8>) iNsTr_210)
    ->(scevgep8x_xi6) := iNsTr_211
    // load 
    iNsTr_213 := ->(scevgep10x_xi8) 
    iNsTr_214 := ($cast ($uint<32>) iNsTr_213)
    iNsTr_215 := (iNsTr_214 + iNsTr_175)
    // compare instruction
    iNsTr_216 := (iNsTr_215 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_216 $then  $place [x264_clip_pixelx_xexit2x_xi12_bb_38] $else $place [x264_clip_pixelx_xexit2x_xi12_x264_clip_pixelx_xexit1x_xi14] $endif 
    //begin: basic-block bb_38
    $merge x264_clip_pixelx_xexit2x_xi12_bb_38
    $endmerge
    iNsTr_218 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_215)
    iNsTr_219 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_218) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_220 := (iNsTr_219 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_38_x264_clip_pixelx_xexit1x_xi14]
    //begin: basic-block x264_clip_pixelx_xexit1x_xi14
    $merge bb_38_x264_clip_pixelx_xexit1x_xi14 x264_clip_pixelx_xexit2x_xi12_x264_clip_pixelx_xexit1x_xi14
    $phi iNsTr_222 :=  ( $cast ($uint<32>) iNsTr_220) $on bb_38_x264_clip_pixelx_xexit1x_xi14 ( $cast ($uint<32>) iNsTr_215) $on x264_clip_pixelx_xexit2x_xi12_x264_clip_pixelx_xexit1x_xi14 
    $endmerge
    iNsTr_223 := ($cast ($uint<8>) iNsTr_222)
    ->(scevgep10x_xi8) := iNsTr_223
    iNsTr_225 := (ix_x04x_xi1 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (iNsTr_225 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 )  )
    $if exitcond1 $then  $place [x264_clip_pixelx_xexit1x_xi14_add4x4_idct_dcx_xexit15] $else $place [x264_clip_pixelx_xexit1x_xi14_bb_31] $endif 
    //begin: basic-block add4x4_idct_dcx_xexit15
    $merge x264_clip_pixelx_xexit1x_xi14_add4x4_idct_dcx_xexit15
    $endmerge
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [add16x16_idct_dc] 
$in (p_dst : $pointer< $uint<8> > dct : $pointer< $uint<16> > )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bbx_xnph
    $place [bbx_xnph_bb_1]
    //begin: basic-block bb_1
    $merge add4x4_idct_dcx_xexit16_bb_1 bbx_xnph_bb_1
    $phi ix_x059 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph_bb_1 ( $cast ($uint<32>) iNsTr_225) $on add4x4_idct_dcx_xexit16_bb_1 
    $endmerge
    tmp60 := (ix_x059 * ( $bitcast ($uint<32> ) _b00000000000000000000000010000000 ) )
    tmp61 := (tmp60 + ( $bitcast ($uint<32> ) _b00000000000000000000000000001101 ) )
    tmp64 := (tmp60 + ( $bitcast ($uint<32> ) _b00000000000000000000000000001110 ) )
    tmp67 := (tmp60 + ( $bitcast ($uint<32> ) _b00000000000000000000000000001111 ) )
    tmp70 := (tmp60 + ( $bitcast ($uint<32> ) _b00000000000000000000000000001100 ) )
    tmp74 := (tmp60 + ( $bitcast ($uint<32> ) _b00000000000000000000000000001001 ) )
    tmp77 := (tmp60 + ( $bitcast ($uint<32> ) _b00000000000000000000000000001010 ) )
    tmp80 := (tmp60 + ( $bitcast ($uint<32> ) _b00000000000000000000000000001011 ) )
    tmp83 := (tmp60 + ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) )
    tmp87 := (tmp60 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) )
    tmp90 := (tmp60 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    tmp93 := (tmp60 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    tmp96 := (tmp60 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    tmp102 := (tmp60 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    tmp105 := (tmp60 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    tmp109 := (tmp60 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    tmp112 := (ix_x059 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    xx_x0160 := dct[tmp112]
    tmp114 := (tmp112 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep109 := dct[tmp114]
    tmp116 := (tmp112 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep107 := dct[tmp116]
    tmp118 := (tmp112 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep := dct[tmp118]
    // load 
    iNsTr_1 := ->(xx_x0160) 
    iNsTr_2 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_1) )
    iNsTr_3 := (iNsTr_2 << ( $bitcast ($uint<32> ) _b00000000000000000000000000001010 ) )
    iNsTr_4 := (iNsTr_3 + ( $bitcast ($uint<32> ) _b00000000000000001000000000000000 ) )
    iNsTr_5 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_4) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )))
    $place [bb_1_bb_2]
    //begin: basic-block bb_2
    $merge bb_1_bb_2 x264_clip_pixelx_xexit1x_xi_bb_2
    $phi ix_x04x_xi :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bb_1_bb_2 ( $cast ($uint<32>) iNsTr_55) $on x264_clip_pixelx_xexit1x_xi_bb_2 
    $endmerge
    tmp99 := (ix_x04x_xi * ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    tmp100 := (tmp60 + tmp99)
    xx_x05x_xi := p_dst[tmp100]
    tmp103 := (tmp102 + tmp99)
    scevgepx_xi := p_dst[tmp103]
    tmp106 := (tmp105 + tmp99)
    scevgep8x_xi := p_dst[tmp106]
    tmp110 := (tmp109 + tmp99)
    scevgep10x_xi := p_dst[tmp110]
    // load 
    iNsTr_7 := ->(xx_x05x_xi) 
    iNsTr_8 := ($cast ($uint<32>) iNsTr_7)
    iNsTr_9 := (iNsTr_8 + iNsTr_5)
    // compare instruction
    iNsTr_10 := (iNsTr_9 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_10 $then  $place [bb_2_bb_3] $else $place [bb_2_x264_clip_pixelx_xexitx_xi] $endif 
    //begin: basic-block bb_3
    $merge bb_2_bb_3
    $endmerge
    iNsTr_12 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_9)
    iNsTr_13 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_12) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_14 := (iNsTr_13 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_3_x264_clip_pixelx_xexitx_xi]
    //begin: basic-block x264_clip_pixelx_xexitx_xi
    $merge bb_2_x264_clip_pixelx_xexitx_xi bb_3_x264_clip_pixelx_xexitx_xi
    $phi iNsTr_16 :=  ( $cast ($uint<32>) iNsTr_14) $on bb_3_x264_clip_pixelx_xexitx_xi ( $cast ($uint<32>) iNsTr_9) $on bb_2_x264_clip_pixelx_xexitx_xi 
    $endmerge
    iNsTr_17 := ($cast ($uint<8>) iNsTr_16)
    ->(xx_x05x_xi) := iNsTr_17
    // load 
    iNsTr_19 := ->(scevgepx_xi) 
    iNsTr_20 := ($cast ($uint<32>) iNsTr_19)
    iNsTr_21 := (iNsTr_20 + iNsTr_5)
    // compare instruction
    iNsTr_22 := (iNsTr_21 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_22 $then  $place [x264_clip_pixelx_xexitx_xi_bb_5] $else $place [x264_clip_pixelx_xexitx_xi_x264_clip_pixelx_xexit3x_xi] $endif 
    //begin: basic-block bb_5
    $merge x264_clip_pixelx_xexitx_xi_bb_5
    $endmerge
    iNsTr_24 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_21)
    iNsTr_25 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_24) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_26 := (iNsTr_25 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_5_x264_clip_pixelx_xexit3x_xi]
    //begin: basic-block x264_clip_pixelx_xexit3x_xi
    $merge bb_5_x264_clip_pixelx_xexit3x_xi x264_clip_pixelx_xexitx_xi_x264_clip_pixelx_xexit3x_xi
    $phi iNsTr_28 :=  ( $cast ($uint<32>) iNsTr_26) $on bb_5_x264_clip_pixelx_xexit3x_xi ( $cast ($uint<32>) iNsTr_21) $on x264_clip_pixelx_xexitx_xi_x264_clip_pixelx_xexit3x_xi 
    $endmerge
    iNsTr_29 := ($cast ($uint<8>) iNsTr_28)
    ->(scevgepx_xi) := iNsTr_29
    // load 
    iNsTr_31 := ->(scevgep8x_xi) 
    iNsTr_32 := ($cast ($uint<32>) iNsTr_31)
    iNsTr_33 := (iNsTr_32 + iNsTr_5)
    // compare instruction
    iNsTr_34 := (iNsTr_33 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_34 $then  $place [x264_clip_pixelx_xexit3x_xi_bb_7] $else $place [x264_clip_pixelx_xexit3x_xi_x264_clip_pixelx_xexit2x_xi] $endif 
    //begin: basic-block bb_7
    $merge x264_clip_pixelx_xexit3x_xi_bb_7
    $endmerge
    iNsTr_36 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_33)
    iNsTr_37 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_36) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_38 := (iNsTr_37 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_7_x264_clip_pixelx_xexit2x_xi]
    //begin: basic-block x264_clip_pixelx_xexit2x_xi
    $merge bb_7_x264_clip_pixelx_xexit2x_xi x264_clip_pixelx_xexit3x_xi_x264_clip_pixelx_xexit2x_xi
    $phi iNsTr_40 :=  ( $cast ($uint<32>) iNsTr_38) $on bb_7_x264_clip_pixelx_xexit2x_xi ( $cast ($uint<32>) iNsTr_33) $on x264_clip_pixelx_xexit3x_xi_x264_clip_pixelx_xexit2x_xi 
    $endmerge
    iNsTr_41 := ($cast ($uint<8>) iNsTr_40)
    ->(scevgep8x_xi) := iNsTr_41
    // load 
    iNsTr_43 := ->(scevgep10x_xi) 
    iNsTr_44 := ($cast ($uint<32>) iNsTr_43)
    iNsTr_45 := (iNsTr_44 + iNsTr_5)
    // compare instruction
    iNsTr_46 := (iNsTr_45 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_46 $then  $place [x264_clip_pixelx_xexit2x_xi_bb_9] $else $place [x264_clip_pixelx_xexit2x_xi_x264_clip_pixelx_xexit1x_xi] $endif 
    //begin: basic-block bb_9
    $merge x264_clip_pixelx_xexit2x_xi_bb_9
    $endmerge
    iNsTr_48 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_45)
    iNsTr_49 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_48) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_50 := (iNsTr_49 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_9_x264_clip_pixelx_xexit1x_xi]
    //begin: basic-block x264_clip_pixelx_xexit1x_xi
    $merge bb_9_x264_clip_pixelx_xexit1x_xi x264_clip_pixelx_xexit2x_xi_x264_clip_pixelx_xexit1x_xi
    $phi iNsTr_52 :=  ( $cast ($uint<32>) iNsTr_50) $on bb_9_x264_clip_pixelx_xexit1x_xi ( $cast ($uint<32>) iNsTr_45) $on x264_clip_pixelx_xexit2x_xi_x264_clip_pixelx_xexit1x_xi 
    $endmerge
    iNsTr_53 := ($cast ($uint<8>) iNsTr_52)
    ->(scevgep10x_xi) := iNsTr_53
    iNsTr_55 := (ix_x04x_xi + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (iNsTr_55 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 )  )
    $if exitcond1 $then  $place [x264_clip_pixelx_xexit1x_xi_add4x4_idct_dcx_xexit] $else $place [x264_clip_pixelx_xexit1x_xi_bb_2] $endif 
    //begin: basic-block add4x4_idct_dcx_xexit
    $merge x264_clip_pixelx_xexit1x_xi_add4x4_idct_dcx_xexit
    $endmerge
    // load 
    iNsTr_57 := ->(scevgep) 
    iNsTr_58 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_57) )
    iNsTr_59 := (iNsTr_58 << ( $bitcast ($uint<32> ) _b00000000000000000000000000001010 ) )
    iNsTr_60 := (iNsTr_59 + ( $bitcast ($uint<32> ) _b00000000000000001000000000000000 ) )
    iNsTr_61 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_60) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )))
    $place [add4x4_idct_dcx_xexit_bb_12]
    //begin: basic-block bb_12
    $merge add4x4_idct_dcx_xexit_bb_12 x264_clip_pixelx_xexit1x_xi45_bb_12
    $phi ix_x04x_xi32 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on add4x4_idct_dcx_xexit_bb_12 ( $cast ($uint<32>) iNsTr_111) $on x264_clip_pixelx_xexit1x_xi45_bb_12 
    $endmerge
    tmp86 := (ix_x04x_xi32 * ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    tmp88 := (tmp87 + tmp86)
    scevgepx_xi35 := p_dst[tmp88]
    tmp91 := (tmp90 + tmp86)
    scevgep8x_xi37 := p_dst[tmp91]
    tmp94 := (tmp93 + tmp86)
    scevgep10x_xi39 := p_dst[tmp94]
    tmp97 := (tmp96 + tmp86)
    xx_x05x_xi40 := p_dst[tmp97]
    // load 
    iNsTr_63 := ->(xx_x05x_xi40) 
    iNsTr_64 := ($cast ($uint<32>) iNsTr_63)
    iNsTr_65 := (iNsTr_64 + iNsTr_61)
    // compare instruction
    iNsTr_66 := (iNsTr_65 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_66 $then  $place [bb_12_bb_13] $else $place [bb_12_x264_clip_pixelx_xexitx_xi41] $endif 
    //begin: basic-block bb_13
    $merge bb_12_bb_13
    $endmerge
    iNsTr_68 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_65)
    iNsTr_69 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_68) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_70 := (iNsTr_69 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_13_x264_clip_pixelx_xexitx_xi41]
    //begin: basic-block x264_clip_pixelx_xexitx_xi41
    $merge bb_12_x264_clip_pixelx_xexitx_xi41 bb_13_x264_clip_pixelx_xexitx_xi41
    $phi iNsTr_72 :=  ( $cast ($uint<32>) iNsTr_70) $on bb_13_x264_clip_pixelx_xexitx_xi41 ( $cast ($uint<32>) iNsTr_65) $on bb_12_x264_clip_pixelx_xexitx_xi41 
    $endmerge
    iNsTr_73 := ($cast ($uint<8>) iNsTr_72)
    ->(xx_x05x_xi40) := iNsTr_73
    // load 
    iNsTr_75 := ->(scevgepx_xi35) 
    iNsTr_76 := ($cast ($uint<32>) iNsTr_75)
    iNsTr_77 := (iNsTr_76 + iNsTr_61)
    // compare instruction
    iNsTr_78 := (iNsTr_77 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_78 $then  $place [x264_clip_pixelx_xexitx_xi41_bb_15] $else $place [x264_clip_pixelx_xexitx_xi41_x264_clip_pixelx_xexit3x_xi42] $endif 
    //begin: basic-block bb_15
    $merge x264_clip_pixelx_xexitx_xi41_bb_15
    $endmerge
    iNsTr_80 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_77)
    iNsTr_81 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_80) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_82 := (iNsTr_81 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_15_x264_clip_pixelx_xexit3x_xi42]
    //begin: basic-block x264_clip_pixelx_xexit3x_xi42
    $merge bb_15_x264_clip_pixelx_xexit3x_xi42 x264_clip_pixelx_xexitx_xi41_x264_clip_pixelx_xexit3x_xi42
    $phi iNsTr_84 :=  ( $cast ($uint<32>) iNsTr_82) $on bb_15_x264_clip_pixelx_xexit3x_xi42 ( $cast ($uint<32>) iNsTr_77) $on x264_clip_pixelx_xexitx_xi41_x264_clip_pixelx_xexit3x_xi42 
    $endmerge
    iNsTr_85 := ($cast ($uint<8>) iNsTr_84)
    ->(scevgepx_xi35) := iNsTr_85
    // load 
    iNsTr_87 := ->(scevgep8x_xi37) 
    iNsTr_88 := ($cast ($uint<32>) iNsTr_87)
    iNsTr_89 := (iNsTr_88 + iNsTr_61)
    // compare instruction
    iNsTr_90 := (iNsTr_89 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_90 $then  $place [x264_clip_pixelx_xexit3x_xi42_bb_17] $else $place [x264_clip_pixelx_xexit3x_xi42_x264_clip_pixelx_xexit2x_xi43] $endif 
    //begin: basic-block bb_17
    $merge x264_clip_pixelx_xexit3x_xi42_bb_17
    $endmerge
    iNsTr_92 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_89)
    iNsTr_93 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_92) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_94 := (iNsTr_93 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_17_x264_clip_pixelx_xexit2x_xi43]
    //begin: basic-block x264_clip_pixelx_xexit2x_xi43
    $merge bb_17_x264_clip_pixelx_xexit2x_xi43 x264_clip_pixelx_xexit3x_xi42_x264_clip_pixelx_xexit2x_xi43
    $phi iNsTr_96 :=  ( $cast ($uint<32>) iNsTr_94) $on bb_17_x264_clip_pixelx_xexit2x_xi43 ( $cast ($uint<32>) iNsTr_89) $on x264_clip_pixelx_xexit3x_xi42_x264_clip_pixelx_xexit2x_xi43 
    $endmerge
    iNsTr_97 := ($cast ($uint<8>) iNsTr_96)
    ->(scevgep8x_xi37) := iNsTr_97
    // load 
    iNsTr_99 := ->(scevgep10x_xi39) 
    iNsTr_100 := ($cast ($uint<32>) iNsTr_99)
    iNsTr_101 := (iNsTr_100 + iNsTr_61)
    // compare instruction
    iNsTr_102 := (iNsTr_101 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_102 $then  $place [x264_clip_pixelx_xexit2x_xi43_bb_19] $else $place [x264_clip_pixelx_xexit2x_xi43_x264_clip_pixelx_xexit1x_xi45] $endif 
    //begin: basic-block bb_19
    $merge x264_clip_pixelx_xexit2x_xi43_bb_19
    $endmerge
    iNsTr_104 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_101)
    iNsTr_105 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_104) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_106 := (iNsTr_105 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_19_x264_clip_pixelx_xexit1x_xi45]
    //begin: basic-block x264_clip_pixelx_xexit1x_xi45
    $merge bb_19_x264_clip_pixelx_xexit1x_xi45 x264_clip_pixelx_xexit2x_xi43_x264_clip_pixelx_xexit1x_xi45
    $phi iNsTr_108 :=  ( $cast ($uint<32>) iNsTr_106) $on bb_19_x264_clip_pixelx_xexit1x_xi45 ( $cast ($uint<32>) iNsTr_101) $on x264_clip_pixelx_xexit2x_xi43_x264_clip_pixelx_xexit1x_xi45 
    $endmerge
    iNsTr_109 := ($cast ($uint<8>) iNsTr_108)
    ->(scevgep10x_xi39) := iNsTr_109
    iNsTr_111 := (ix_x04x_xi32 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond := (iNsTr_111 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 )  )
    $if exitcond $then  $place [x264_clip_pixelx_xexit1x_xi45_add4x4_idct_dcx_xexit46] $else $place [x264_clip_pixelx_xexit1x_xi45_bb_12] $endif 
    //begin: basic-block add4x4_idct_dcx_xexit46
    $merge x264_clip_pixelx_xexit1x_xi45_add4x4_idct_dcx_xexit46
    $endmerge
    // load 
    iNsTr_113 := ->(scevgep107) 
    iNsTr_114 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_113) )
    iNsTr_115 := (iNsTr_114 << ( $bitcast ($uint<32> ) _b00000000000000000000000000001010 ) )
    iNsTr_116 := (iNsTr_115 + ( $bitcast ($uint<32> ) _b00000000000000001000000000000000 ) )
    iNsTr_117 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_116) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )))
    $place [add4x4_idct_dcx_xexit46_bb_22]
    //begin: basic-block bb_22
    $merge add4x4_idct_dcx_xexit46_bb_22 x264_clip_pixelx_xexit1x_xi30_bb_22
    $phi ix_x04x_xi17 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on add4x4_idct_dcx_xexit46_bb_22 ( $cast ($uint<32>) iNsTr_167) $on x264_clip_pixelx_xexit1x_xi30_bb_22 
    $endmerge
    tmp73 := (ix_x04x_xi17 * ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    tmp75 := (tmp74 + tmp73)
    scevgepx_xi20 := p_dst[tmp75]
    tmp78 := (tmp77 + tmp73)
    scevgep8x_xi22 := p_dst[tmp78]
    tmp81 := (tmp80 + tmp73)
    scevgep10x_xi24 := p_dst[tmp81]
    tmp84 := (tmp83 + tmp73)
    xx_x05x_xi25 := p_dst[tmp84]
    // load 
    iNsTr_119 := ->(xx_x05x_xi25) 
    iNsTr_120 := ($cast ($uint<32>) iNsTr_119)
    iNsTr_121 := (iNsTr_120 + iNsTr_117)
    // compare instruction
    iNsTr_122 := (iNsTr_121 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_122 $then  $place [bb_22_bb_23] $else $place [bb_22_x264_clip_pixelx_xexitx_xi26] $endif 
    //begin: basic-block bb_23
    $merge bb_22_bb_23
    $endmerge
    iNsTr_124 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_121)
    iNsTr_125 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_124) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_126 := (iNsTr_125 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_23_x264_clip_pixelx_xexitx_xi26]
    //begin: basic-block x264_clip_pixelx_xexitx_xi26
    $merge bb_22_x264_clip_pixelx_xexitx_xi26 bb_23_x264_clip_pixelx_xexitx_xi26
    $phi iNsTr_128 :=  ( $cast ($uint<32>) iNsTr_126) $on bb_23_x264_clip_pixelx_xexitx_xi26 ( $cast ($uint<32>) iNsTr_121) $on bb_22_x264_clip_pixelx_xexitx_xi26 
    $endmerge
    iNsTr_129 := ($cast ($uint<8>) iNsTr_128)
    ->(xx_x05x_xi25) := iNsTr_129
    // load 
    iNsTr_131 := ->(scevgepx_xi20) 
    iNsTr_132 := ($cast ($uint<32>) iNsTr_131)
    iNsTr_133 := (iNsTr_132 + iNsTr_117)
    // compare instruction
    iNsTr_134 := (iNsTr_133 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_134 $then  $place [x264_clip_pixelx_xexitx_xi26_bb_25] $else $place [x264_clip_pixelx_xexitx_xi26_x264_clip_pixelx_xexit3x_xi27] $endif 
    //begin: basic-block bb_25
    $merge x264_clip_pixelx_xexitx_xi26_bb_25
    $endmerge
    iNsTr_136 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_133)
    iNsTr_137 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_136) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_138 := (iNsTr_137 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_25_x264_clip_pixelx_xexit3x_xi27]
    //begin: basic-block x264_clip_pixelx_xexit3x_xi27
    $merge bb_25_x264_clip_pixelx_xexit3x_xi27 x264_clip_pixelx_xexitx_xi26_x264_clip_pixelx_xexit3x_xi27
    $phi iNsTr_140 :=  ( $cast ($uint<32>) iNsTr_138) $on bb_25_x264_clip_pixelx_xexit3x_xi27 ( $cast ($uint<32>) iNsTr_133) $on x264_clip_pixelx_xexitx_xi26_x264_clip_pixelx_xexit3x_xi27 
    $endmerge
    iNsTr_141 := ($cast ($uint<8>) iNsTr_140)
    ->(scevgepx_xi20) := iNsTr_141
    // load 
    iNsTr_143 := ->(scevgep8x_xi22) 
    iNsTr_144 := ($cast ($uint<32>) iNsTr_143)
    iNsTr_145 := (iNsTr_144 + iNsTr_117)
    // compare instruction
    iNsTr_146 := (iNsTr_145 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_146 $then  $place [x264_clip_pixelx_xexit3x_xi27_bb_27] $else $place [x264_clip_pixelx_xexit3x_xi27_x264_clip_pixelx_xexit2x_xi28] $endif 
    //begin: basic-block bb_27
    $merge x264_clip_pixelx_xexit3x_xi27_bb_27
    $endmerge
    iNsTr_148 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_145)
    iNsTr_149 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_148) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_150 := (iNsTr_149 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_27_x264_clip_pixelx_xexit2x_xi28]
    //begin: basic-block x264_clip_pixelx_xexit2x_xi28
    $merge bb_27_x264_clip_pixelx_xexit2x_xi28 x264_clip_pixelx_xexit3x_xi27_x264_clip_pixelx_xexit2x_xi28
    $phi iNsTr_152 :=  ( $cast ($uint<32>) iNsTr_150) $on bb_27_x264_clip_pixelx_xexit2x_xi28 ( $cast ($uint<32>) iNsTr_145) $on x264_clip_pixelx_xexit3x_xi27_x264_clip_pixelx_xexit2x_xi28 
    $endmerge
    iNsTr_153 := ($cast ($uint<8>) iNsTr_152)
    ->(scevgep8x_xi22) := iNsTr_153
    // load 
    iNsTr_155 := ->(scevgep10x_xi24) 
    iNsTr_156 := ($cast ($uint<32>) iNsTr_155)
    iNsTr_157 := (iNsTr_156 + iNsTr_117)
    // compare instruction
    iNsTr_158 := (iNsTr_157 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_158 $then  $place [x264_clip_pixelx_xexit2x_xi28_bb_29] $else $place [x264_clip_pixelx_xexit2x_xi28_x264_clip_pixelx_xexit1x_xi30] $endif 
    //begin: basic-block bb_29
    $merge x264_clip_pixelx_xexit2x_xi28_bb_29
    $endmerge
    iNsTr_160 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_157)
    iNsTr_161 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_160) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_162 := (iNsTr_161 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_29_x264_clip_pixelx_xexit1x_xi30]
    //begin: basic-block x264_clip_pixelx_xexit1x_xi30
    $merge bb_29_x264_clip_pixelx_xexit1x_xi30 x264_clip_pixelx_xexit2x_xi28_x264_clip_pixelx_xexit1x_xi30
    $phi iNsTr_164 :=  ( $cast ($uint<32>) iNsTr_162) $on bb_29_x264_clip_pixelx_xexit1x_xi30 ( $cast ($uint<32>) iNsTr_157) $on x264_clip_pixelx_xexit2x_xi28_x264_clip_pixelx_xexit1x_xi30 
    $endmerge
    iNsTr_165 := ($cast ($uint<8>) iNsTr_164)
    ->(scevgep10x_xi24) := iNsTr_165
    iNsTr_167 := (ix_x04x_xi17 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond28 := (iNsTr_167 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 )  )
    $if exitcond28 $then  $place [x264_clip_pixelx_xexit1x_xi30_add4x4_idct_dcx_xexit31] $else $place [x264_clip_pixelx_xexit1x_xi30_bb_22] $endif 
    //begin: basic-block add4x4_idct_dcx_xexit31
    $merge x264_clip_pixelx_xexit1x_xi30_add4x4_idct_dcx_xexit31
    $endmerge
    // load 
    iNsTr_169 := ->(scevgep109) 
    iNsTr_170 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_169) )
    iNsTr_171 := (iNsTr_170 << ( $bitcast ($uint<32> ) _b00000000000000000000000000001010 ) )
    iNsTr_172 := (iNsTr_171 + ( $bitcast ($uint<32> ) _b00000000000000001000000000000000 ) )
    iNsTr_173 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_172) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )))
    $place [add4x4_idct_dcx_xexit31_bb_32]
    //begin: basic-block bb_32
    $merge add4x4_idct_dcx_xexit31_bb_32 x264_clip_pixelx_xexit1x_xi15_bb_32
    $phi ix_x04x_xi2 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on add4x4_idct_dcx_xexit31_bb_32 ( $cast ($uint<32>) iNsTr_223) $on x264_clip_pixelx_xexit1x_xi15_bb_32 
    $endmerge
    tmp59 := (ix_x04x_xi2 * ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    tmp62 := (tmp61 + tmp59)
    scevgepx_xi5 := p_dst[tmp62]
    tmp65 := (tmp64 + tmp59)
    scevgep8x_xi7 := p_dst[tmp65]
    tmp68 := (tmp67 + tmp59)
    scevgep10x_xi9 := p_dst[tmp68]
    tmp71 := (tmp70 + tmp59)
    xx_x05x_xi10 := p_dst[tmp71]
    // load 
    iNsTr_175 := ->(xx_x05x_xi10) 
    iNsTr_176 := ($cast ($uint<32>) iNsTr_175)
    iNsTr_177 := (iNsTr_176 + iNsTr_173)
    // compare instruction
    iNsTr_178 := (iNsTr_177 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_178 $then  $place [bb_32_bb_33] $else $place [bb_32_x264_clip_pixelx_xexitx_xi11] $endif 
    //begin: basic-block bb_33
    $merge bb_32_bb_33
    $endmerge
    iNsTr_180 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_177)
    iNsTr_181 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_180) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_182 := (iNsTr_181 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_33_x264_clip_pixelx_xexitx_xi11]
    //begin: basic-block x264_clip_pixelx_xexitx_xi11
    $merge bb_32_x264_clip_pixelx_xexitx_xi11 bb_33_x264_clip_pixelx_xexitx_xi11
    $phi iNsTr_184 :=  ( $cast ($uint<32>) iNsTr_182) $on bb_33_x264_clip_pixelx_xexitx_xi11 ( $cast ($uint<32>) iNsTr_177) $on bb_32_x264_clip_pixelx_xexitx_xi11 
    $endmerge
    iNsTr_185 := ($cast ($uint<8>) iNsTr_184)
    ->(xx_x05x_xi10) := iNsTr_185
    // load 
    iNsTr_187 := ->(scevgepx_xi5) 
    iNsTr_188 := ($cast ($uint<32>) iNsTr_187)
    iNsTr_189 := (iNsTr_188 + iNsTr_173)
    // compare instruction
    iNsTr_190 := (iNsTr_189 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_190 $then  $place [x264_clip_pixelx_xexitx_xi11_bb_35] $else $place [x264_clip_pixelx_xexitx_xi11_x264_clip_pixelx_xexit3x_xi12] $endif 
    //begin: basic-block bb_35
    $merge x264_clip_pixelx_xexitx_xi11_bb_35
    $endmerge
    iNsTr_192 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_189)
    iNsTr_193 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_192) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_194 := (iNsTr_193 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_35_x264_clip_pixelx_xexit3x_xi12]
    //begin: basic-block x264_clip_pixelx_xexit3x_xi12
    $merge bb_35_x264_clip_pixelx_xexit3x_xi12 x264_clip_pixelx_xexitx_xi11_x264_clip_pixelx_xexit3x_xi12
    $phi iNsTr_196 :=  ( $cast ($uint<32>) iNsTr_194) $on bb_35_x264_clip_pixelx_xexit3x_xi12 ( $cast ($uint<32>) iNsTr_189) $on x264_clip_pixelx_xexitx_xi11_x264_clip_pixelx_xexit3x_xi12 
    $endmerge
    iNsTr_197 := ($cast ($uint<8>) iNsTr_196)
    ->(scevgepx_xi5) := iNsTr_197
    // load 
    iNsTr_199 := ->(scevgep8x_xi7) 
    iNsTr_200 := ($cast ($uint<32>) iNsTr_199)
    iNsTr_201 := (iNsTr_200 + iNsTr_173)
    // compare instruction
    iNsTr_202 := (iNsTr_201 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_202 $then  $place [x264_clip_pixelx_xexit3x_xi12_bb_37] $else $place [x264_clip_pixelx_xexit3x_xi12_x264_clip_pixelx_xexit2x_xi13] $endif 
    //begin: basic-block bb_37
    $merge x264_clip_pixelx_xexit3x_xi12_bb_37
    $endmerge
    iNsTr_204 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_201)
    iNsTr_205 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_204) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_206 := (iNsTr_205 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_37_x264_clip_pixelx_xexit2x_xi13]
    //begin: basic-block x264_clip_pixelx_xexit2x_xi13
    $merge bb_37_x264_clip_pixelx_xexit2x_xi13 x264_clip_pixelx_xexit3x_xi12_x264_clip_pixelx_xexit2x_xi13
    $phi iNsTr_208 :=  ( $cast ($uint<32>) iNsTr_206) $on bb_37_x264_clip_pixelx_xexit2x_xi13 ( $cast ($uint<32>) iNsTr_201) $on x264_clip_pixelx_xexit3x_xi12_x264_clip_pixelx_xexit2x_xi13 
    $endmerge
    iNsTr_209 := ($cast ($uint<8>) iNsTr_208)
    ->(scevgep8x_xi7) := iNsTr_209
    // load 
    iNsTr_211 := ->(scevgep10x_xi9) 
    iNsTr_212 := ($cast ($uint<32>) iNsTr_211)
    iNsTr_213 := (iNsTr_212 + iNsTr_173)
    // compare instruction
    iNsTr_214 := (iNsTr_213 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_214 $then  $place [x264_clip_pixelx_xexit2x_xi13_bb_39] $else $place [x264_clip_pixelx_xexit2x_xi13_x264_clip_pixelx_xexit1x_xi15] $endif 
    //begin: basic-block bb_39
    $merge x264_clip_pixelx_xexit2x_xi13_bb_39
    $endmerge
    iNsTr_216 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_213)
    iNsTr_217 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_216) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_218 := (iNsTr_217 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_39_x264_clip_pixelx_xexit1x_xi15]
    //begin: basic-block x264_clip_pixelx_xexit1x_xi15
    $merge bb_39_x264_clip_pixelx_xexit1x_xi15 x264_clip_pixelx_xexit2x_xi13_x264_clip_pixelx_xexit1x_xi15
    $phi iNsTr_220 :=  ( $cast ($uint<32>) iNsTr_218) $on bb_39_x264_clip_pixelx_xexit1x_xi15 ( $cast ($uint<32>) iNsTr_213) $on x264_clip_pixelx_xexit2x_xi13_x264_clip_pixelx_xexit1x_xi15 
    $endmerge
    iNsTr_221 := ($cast ($uint<8>) iNsTr_220)
    ->(scevgep10x_xi9) := iNsTr_221
    iNsTr_223 := (ix_x04x_xi2 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond43 := (iNsTr_223 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 )  )
    $if exitcond43 $then  $place [x264_clip_pixelx_xexit1x_xi15_add4x4_idct_dcx_xexit16] $else $place [x264_clip_pixelx_xexit1x_xi15_bb_32] $endif 
    //begin: basic-block add4x4_idct_dcx_xexit16
    $merge x264_clip_pixelx_xexit1x_xi15_add4x4_idct_dcx_xexit16
    $endmerge
    iNsTr_225 := (ix_x059 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond58 := (iNsTr_225 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 )  )
    $if exitcond58 $then  $place [add4x4_idct_dcx_xexit16_xx_x_crit_edge] $else $place [add4x4_idct_dcx_xexit16_bb_1] $endif 
    //begin: basic-block xx_x_crit_edge
    $merge add4x4_idct_dcx_xexit16_xx_x_crit_edge
    $endmerge
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [zigzag_scan_8x8_frame] 
$in (level : $pointer< $uint<16> > dct : $pointer< $uint<16> > )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    // load 
    iNsTr_0 := ->(dct) 
    ->(level) := iNsTr_0
    iNsTr_2 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) ]
    // load 
    iNsTr_3 := ->(iNsTr_2) 
    iNsTr_4 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    ->(iNsTr_4) := iNsTr_3
    iNsTr_6 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_7 := ->(iNsTr_6) 
    iNsTr_8 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    ->(iNsTr_8) := iNsTr_7
    iNsTr_10 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_11 := ->(iNsTr_10) 
    iNsTr_12 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    ->(iNsTr_12) := iNsTr_11
    iNsTr_14 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000001001 ) ]
    // load 
    iNsTr_15 := ->(iNsTr_14) 
    iNsTr_16 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ]
    ->(iNsTr_16) := iNsTr_15
    iNsTr_18 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) ]
    // load 
    iNsTr_19 := ->(iNsTr_18) 
    iNsTr_20 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) ]
    ->(iNsTr_20) := iNsTr_19
    iNsTr_22 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) ]
    // load 
    iNsTr_23 := ->(iNsTr_22) 
    iNsTr_24 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) ]
    ->(iNsTr_24) := iNsTr_23
    iNsTr_26 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000010001 ) ]
    // load 
    iNsTr_27 := ->(iNsTr_26) 
    iNsTr_28 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) ]
    ->(iNsTr_28) := iNsTr_27
    iNsTr_30 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000001010 ) ]
    // load 
    iNsTr_31 := ->(iNsTr_30) 
    iNsTr_32 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) ]
    ->(iNsTr_32) := iNsTr_31
    iNsTr_34 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    iNsTr_35 := ->(iNsTr_34) 
    iNsTr_36 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000001001 ) ]
    ->(iNsTr_36) := iNsTr_35
    iNsTr_38 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ]
    // load 
    iNsTr_39 := ->(iNsTr_38) 
    iNsTr_40 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000001010 ) ]
    ->(iNsTr_40) := iNsTr_39
    iNsTr_42 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000001011 ) ]
    // load 
    iNsTr_43 := ->(iNsTr_42) 
    iNsTr_44 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000001011 ) ]
    ->(iNsTr_44) := iNsTr_43
    iNsTr_46 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000010010 ) ]
    // load 
    iNsTr_47 := ->(iNsTr_46) 
    iNsTr_48 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000001100 ) ]
    ->(iNsTr_48) := iNsTr_47
    iNsTr_50 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000011001 ) ]
    // load 
    iNsTr_51 := ->(iNsTr_50) 
    iNsTr_52 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000001101 ) ]
    ->(iNsTr_52) := iNsTr_51
    iNsTr_54 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) ]
    // load 
    iNsTr_55 := ->(iNsTr_54) 
    iNsTr_56 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000001110 ) ]
    ->(iNsTr_56) := iNsTr_55
    iNsTr_58 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000101000 ) ]
    // load 
    iNsTr_59 := ->(iNsTr_58) 
    iNsTr_60 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000001111 ) ]
    ->(iNsTr_60) := iNsTr_59
    iNsTr_62 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000100001 ) ]
    // load 
    iNsTr_63 := ->(iNsTr_62) 
    iNsTr_64 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) ]
    ->(iNsTr_64) := iNsTr_63
    iNsTr_66 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000011010 ) ]
    // load 
    iNsTr_67 := ->(iNsTr_66) 
    iNsTr_68 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000010001 ) ]
    ->(iNsTr_68) := iNsTr_67
    iNsTr_70 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ]
    // load 
    iNsTr_71 := ->(iNsTr_70) 
    iNsTr_72 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000010010 ) ]
    ->(iNsTr_72) := iNsTr_71
    iNsTr_74 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000001100 ) ]
    // load 
    iNsTr_75 := ->(iNsTr_74) 
    iNsTr_76 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ]
    ->(iNsTr_76) := iNsTr_75
    iNsTr_78 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) ]
    // load 
    iNsTr_79 := ->(iNsTr_78) 
    iNsTr_80 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000010100 ) ]
    ->(iNsTr_80) := iNsTr_79
    iNsTr_82 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) ]
    // load 
    iNsTr_83 := ->(iNsTr_82) 
    iNsTr_84 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000010101 ) ]
    ->(iNsTr_84) := iNsTr_83
    iNsTr_86 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000001101 ) ]
    // load 
    iNsTr_87 := ->(iNsTr_86) 
    iNsTr_88 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000010110 ) ]
    ->(iNsTr_88) := iNsTr_87
    iNsTr_90 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000010100 ) ]
    // load 
    iNsTr_91 := ->(iNsTr_90) 
    iNsTr_92 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000010111 ) ]
    ->(iNsTr_92) := iNsTr_91
    iNsTr_94 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000011011 ) ]
    // load 
    iNsTr_95 := ->(iNsTr_94) 
    iNsTr_96 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) ]
    ->(iNsTr_96) := iNsTr_95
    iNsTr_98 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000100010 ) ]
    // load 
    iNsTr_99 := ->(iNsTr_98) 
    iNsTr_100 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000011001 ) ]
    ->(iNsTr_100) := iNsTr_99
    iNsTr_102 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000101001 ) ]
    // load 
    iNsTr_103 := ->(iNsTr_102) 
    iNsTr_104 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000011010 ) ]
    ->(iNsTr_104) := iNsTr_103
    iNsTr_106 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000110000 ) ]
    // load 
    iNsTr_107 := ->(iNsTr_106) 
    iNsTr_108 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000011011 ) ]
    ->(iNsTr_108) := iNsTr_107
    iNsTr_110 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000111000 ) ]
    // load 
    iNsTr_111 := ->(iNsTr_110) 
    iNsTr_112 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000011100 ) ]
    ->(iNsTr_112) := iNsTr_111
    iNsTr_114 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000110001 ) ]
    // load 
    iNsTr_115 := ->(iNsTr_114) 
    iNsTr_116 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000011101 ) ]
    ->(iNsTr_116) := iNsTr_115
    iNsTr_118 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000101010 ) ]
    // load 
    iNsTr_119 := ->(iNsTr_118) 
    iNsTr_120 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000011110 ) ]
    ->(iNsTr_120) := iNsTr_119
    iNsTr_122 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000100011 ) ]
    // load 
    iNsTr_123 := ->(iNsTr_122) 
    iNsTr_124 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000011111 ) ]
    ->(iNsTr_124) := iNsTr_123
    iNsTr_126 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000011100 ) ]
    // load 
    iNsTr_127 := ->(iNsTr_126) 
    iNsTr_128 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) ]
    ->(iNsTr_128) := iNsTr_127
    iNsTr_130 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000010101 ) ]
    // load 
    iNsTr_131 := ->(iNsTr_130) 
    iNsTr_132 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000100001 ) ]
    ->(iNsTr_132) := iNsTr_131
    iNsTr_134 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000001110 ) ]
    // load 
    iNsTr_135 := ->(iNsTr_134) 
    iNsTr_136 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000100010 ) ]
    ->(iNsTr_136) := iNsTr_135
    iNsTr_138 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) ]
    // load 
    iNsTr_139 := ->(iNsTr_138) 
    iNsTr_140 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000100011 ) ]
    ->(iNsTr_140) := iNsTr_139
    iNsTr_142 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000001111 ) ]
    // load 
    iNsTr_143 := ->(iNsTr_142) 
    iNsTr_144 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000100100 ) ]
    ->(iNsTr_144) := iNsTr_143
    iNsTr_146 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000010110 ) ]
    // load 
    iNsTr_147 := ->(iNsTr_146) 
    iNsTr_148 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000100101 ) ]
    ->(iNsTr_148) := iNsTr_147
    iNsTr_150 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000011101 ) ]
    // load 
    iNsTr_151 := ->(iNsTr_150) 
    iNsTr_152 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000100110 ) ]
    ->(iNsTr_152) := iNsTr_151
    iNsTr_154 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000100100 ) ]
    // load 
    iNsTr_155 := ->(iNsTr_154) 
    iNsTr_156 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000100111 ) ]
    ->(iNsTr_156) := iNsTr_155
    iNsTr_158 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000101011 ) ]
    // load 
    iNsTr_159 := ->(iNsTr_158) 
    iNsTr_160 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000101000 ) ]
    ->(iNsTr_160) := iNsTr_159
    iNsTr_162 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000110010 ) ]
    // load 
    iNsTr_163 := ->(iNsTr_162) 
    iNsTr_164 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000101001 ) ]
    ->(iNsTr_164) := iNsTr_163
    iNsTr_166 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000111001 ) ]
    // load 
    iNsTr_167 := ->(iNsTr_166) 
    iNsTr_168 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000101010 ) ]
    ->(iNsTr_168) := iNsTr_167
    iNsTr_170 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000111010 ) ]
    // load 
    iNsTr_171 := ->(iNsTr_170) 
    iNsTr_172 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000101011 ) ]
    ->(iNsTr_172) := iNsTr_171
    iNsTr_174 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000110011 ) ]
    // load 
    iNsTr_175 := ->(iNsTr_174) 
    iNsTr_176 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000101100 ) ]
    ->(iNsTr_176) := iNsTr_175
    iNsTr_178 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000101100 ) ]
    // load 
    iNsTr_179 := ->(iNsTr_178) 
    iNsTr_180 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000101101 ) ]
    ->(iNsTr_180) := iNsTr_179
    iNsTr_182 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000100101 ) ]
    // load 
    iNsTr_183 := ->(iNsTr_182) 
    iNsTr_184 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000101110 ) ]
    ->(iNsTr_184) := iNsTr_183
    iNsTr_186 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000011110 ) ]
    // load 
    iNsTr_187 := ->(iNsTr_186) 
    iNsTr_188 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000101111 ) ]
    ->(iNsTr_188) := iNsTr_187
    iNsTr_190 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000010111 ) ]
    // load 
    iNsTr_191 := ->(iNsTr_190) 
    iNsTr_192 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000110000 ) ]
    ->(iNsTr_192) := iNsTr_191
    iNsTr_194 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000011111 ) ]
    // load 
    iNsTr_195 := ->(iNsTr_194) 
    iNsTr_196 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000110001 ) ]
    ->(iNsTr_196) := iNsTr_195
    iNsTr_198 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000100110 ) ]
    // load 
    iNsTr_199 := ->(iNsTr_198) 
    iNsTr_200 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000110010 ) ]
    ->(iNsTr_200) := iNsTr_199
    iNsTr_202 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000101101 ) ]
    // load 
    iNsTr_203 := ->(iNsTr_202) 
    iNsTr_204 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000110011 ) ]
    ->(iNsTr_204) := iNsTr_203
    iNsTr_206 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000110100 ) ]
    // load 
    iNsTr_207 := ->(iNsTr_206) 
    iNsTr_208 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000110100 ) ]
    ->(iNsTr_208) := iNsTr_207
    iNsTr_210 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000111011 ) ]
    // load 
    iNsTr_211 := ->(iNsTr_210) 
    iNsTr_212 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000110101 ) ]
    ->(iNsTr_212) := iNsTr_211
    iNsTr_214 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000111100 ) ]
    // load 
    iNsTr_215 := ->(iNsTr_214) 
    iNsTr_216 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000110110 ) ]
    ->(iNsTr_216) := iNsTr_215
    iNsTr_218 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000110101 ) ]
    // load 
    iNsTr_219 := ->(iNsTr_218) 
    iNsTr_220 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000110111 ) ]
    ->(iNsTr_220) := iNsTr_219
    iNsTr_222 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000101110 ) ]
    // load 
    iNsTr_223 := ->(iNsTr_222) 
    iNsTr_224 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000111000 ) ]
    ->(iNsTr_224) := iNsTr_223
    iNsTr_226 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000100111 ) ]
    // load 
    iNsTr_227 := ->(iNsTr_226) 
    iNsTr_228 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000111001 ) ]
    ->(iNsTr_228) := iNsTr_227
    iNsTr_230 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000101111 ) ]
    // load 
    iNsTr_231 := ->(iNsTr_230) 
    iNsTr_232 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000111010 ) ]
    ->(iNsTr_232) := iNsTr_231
    iNsTr_234 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000110110 ) ]
    // load 
    iNsTr_235 := ->(iNsTr_234) 
    iNsTr_236 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000111011 ) ]
    ->(iNsTr_236) := iNsTr_235
    iNsTr_238 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000111101 ) ]
    // load 
    iNsTr_239 := ->(iNsTr_238) 
    iNsTr_240 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000111100 ) ]
    ->(iNsTr_240) := iNsTr_239
    iNsTr_242 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000111110 ) ]
    // load 
    iNsTr_243 := ->(iNsTr_242) 
    iNsTr_244 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000111101 ) ]
    ->(iNsTr_244) := iNsTr_243
    iNsTr_246 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000110111 ) ]
    // load 
    iNsTr_247 := ->(iNsTr_246) 
    iNsTr_248 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000111110 ) ]
    ->(iNsTr_248) := iNsTr_247
    iNsTr_250 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000111111 ) ]
    // load 
    iNsTr_251 := ->(iNsTr_250) 
    iNsTr_252 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000111111 ) ]
    ->(iNsTr_252) := iNsTr_251
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [zigzag_sub_4x4_frame] 
$in (level : $pointer< $uint<16> > p_src : $pointer< $uint<8> > p_dst : $pointer< $uint<8> > )
$out (ret_val__ : $uint<32>)
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    // load 
    iNsTr_0 := ->(p_src) 
    iNsTr_1 := ($cast ($uint<16>) iNsTr_0)
    // load 
    iNsTr_2 := ->(p_dst) 
    iNsTr_3 := ($cast ($uint<16>) iNsTr_2)
    iNsTr_4 := (iNsTr_1 - iNsTr_3)
    ->(level) := iNsTr_4
    iNsTr_6 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_7 := ->(iNsTr_6) 
    iNsTr_8 := ($cast ($uint<16>) iNsTr_7)
    iNsTr_9 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_10 := ->(iNsTr_9) 
    iNsTr_11 := ($cast ($uint<16>) iNsTr_10)
    iNsTr_12 := (iNsTr_8 - iNsTr_11)
    iNsTr_13 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    ->(iNsTr_13) := iNsTr_12
    iNsTr_15 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) ]
    // load 
    iNsTr_16 := ->(iNsTr_15) 
    iNsTr_17 := ($cast ($uint<16>) iNsTr_16)
    iNsTr_18 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) ]
    // load 
    iNsTr_19 := ->(iNsTr_18) 
    iNsTr_20 := ($cast ($uint<16>) iNsTr_19)
    iNsTr_21 := (iNsTr_17 - iNsTr_20)
    iNsTr_22 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    ->(iNsTr_22) := iNsTr_21
    iNsTr_24 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) ]
    // load 
    iNsTr_25 := ->(iNsTr_24) 
    iNsTr_26 := ($cast ($uint<16>) iNsTr_25)
    iNsTr_27 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000001000000 ) ]
    // load 
    iNsTr_28 := ->(iNsTr_27) 
    iNsTr_29 := ($cast ($uint<16>) iNsTr_28)
    iNsTr_30 := (iNsTr_26 - iNsTr_29)
    iNsTr_31 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    ->(iNsTr_31) := iNsTr_30
    iNsTr_33 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000000010001 ) ]
    // load 
    iNsTr_34 := ->(iNsTr_33) 
    iNsTr_35 := ($cast ($uint<16>) iNsTr_34)
    iNsTr_36 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000000100001 ) ]
    // load 
    iNsTr_37 := ->(iNsTr_36) 
    iNsTr_38 := ($cast ($uint<16>) iNsTr_37)
    iNsTr_39 := (iNsTr_35 - iNsTr_38)
    iNsTr_40 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ]
    ->(iNsTr_40) := iNsTr_39
    iNsTr_42 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_43 := ->(iNsTr_42) 
    iNsTr_44 := ($cast ($uint<16>) iNsTr_43)
    iNsTr_45 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_46 := ->(iNsTr_45) 
    iNsTr_47 := ($cast ($uint<16>) iNsTr_46)
    iNsTr_48 := (iNsTr_44 - iNsTr_47)
    iNsTr_49 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) ]
    ->(iNsTr_49) := iNsTr_48
    iNsTr_51 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    iNsTr_52 := ->(iNsTr_51) 
    iNsTr_53 := ($cast ($uint<16>) iNsTr_52)
    iNsTr_54 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    iNsTr_55 := ->(iNsTr_54) 
    iNsTr_56 := ($cast ($uint<16>) iNsTr_55)
    iNsTr_57 := (iNsTr_53 - iNsTr_56)
    iNsTr_58 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) ]
    ->(iNsTr_58) := iNsTr_57
    iNsTr_60 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000000010010 ) ]
    // load 
    iNsTr_61 := ->(iNsTr_60) 
    iNsTr_62 := ($cast ($uint<16>) iNsTr_61)
    iNsTr_63 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000000100010 ) ]
    // load 
    iNsTr_64 := ->(iNsTr_63) 
    iNsTr_65 := ($cast ($uint<16>) iNsTr_64)
    iNsTr_66 := (iNsTr_62 - iNsTr_65)
    iNsTr_67 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) ]
    ->(iNsTr_67) := iNsTr_66
    iNsTr_69 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000000100001 ) ]
    // load 
    iNsTr_70 := ->(iNsTr_69) 
    iNsTr_71 := ($cast ($uint<16>) iNsTr_70)
    iNsTr_72 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000001000001 ) ]
    // load 
    iNsTr_73 := ->(iNsTr_72) 
    iNsTr_74 := ($cast ($uint<16>) iNsTr_73)
    iNsTr_75 := (iNsTr_71 - iNsTr_74)
    iNsTr_76 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) ]
    ->(iNsTr_76) := iNsTr_75
    iNsTr_78 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000000110000 ) ]
    // load 
    iNsTr_79 := ->(iNsTr_78) 
    iNsTr_80 := ($cast ($uint<16>) iNsTr_79)
    iNsTr_81 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000001100000 ) ]
    // load 
    iNsTr_82 := ->(iNsTr_81) 
    iNsTr_83 := ($cast ($uint<16>) iNsTr_82)
    iNsTr_84 := (iNsTr_80 - iNsTr_83)
    iNsTr_85 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000001001 ) ]
    ->(iNsTr_85) := iNsTr_84
    iNsTr_87 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000000110001 ) ]
    // load 
    iNsTr_88 := ->(iNsTr_87) 
    iNsTr_89 := ($cast ($uint<16>) iNsTr_88)
    iNsTr_90 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000001100001 ) ]
    // load 
    iNsTr_91 := ->(iNsTr_90) 
    iNsTr_92 := ($cast ($uint<16>) iNsTr_91)
    iNsTr_93 := (iNsTr_89 - iNsTr_92)
    iNsTr_94 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000001010 ) ]
    ->(iNsTr_94) := iNsTr_93
    iNsTr_96 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000000100010 ) ]
    // load 
    iNsTr_97 := ->(iNsTr_96) 
    iNsTr_98 := ($cast ($uint<16>) iNsTr_97)
    iNsTr_99 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000001000010 ) ]
    // load 
    iNsTr_100 := ->(iNsTr_99) 
    iNsTr_101 := ($cast ($uint<16>) iNsTr_100)
    iNsTr_102 := (iNsTr_98 - iNsTr_101)
    iNsTr_103 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000001011 ) ]
    ->(iNsTr_103) := iNsTr_102
    iNsTr_105 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ]
    // load 
    iNsTr_106 := ->(iNsTr_105) 
    iNsTr_107 := ($cast ($uint<16>) iNsTr_106)
    iNsTr_108 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000000100011 ) ]
    // load 
    iNsTr_109 := ->(iNsTr_108) 
    iNsTr_110 := ($cast ($uint<16>) iNsTr_109)
    iNsTr_111 := (iNsTr_107 - iNsTr_110)
    iNsTr_112 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000001100 ) ]
    ->(iNsTr_112) := iNsTr_111
    iNsTr_114 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000000100011 ) ]
    // load 
    iNsTr_115 := ->(iNsTr_114) 
    iNsTr_116 := ($cast ($uint<16>) iNsTr_115)
    iNsTr_117 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000001000011 ) ]
    // load 
    iNsTr_118 := ->(iNsTr_117) 
    iNsTr_119 := ($cast ($uint<16>) iNsTr_118)
    iNsTr_120 := (iNsTr_116 - iNsTr_119)
    iNsTr_121 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000001101 ) ]
    ->(iNsTr_121) := iNsTr_120
    iNsTr_123 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000000110010 ) ]
    // load 
    iNsTr_124 := ->(iNsTr_123) 
    iNsTr_125 := ($cast ($uint<16>) iNsTr_124)
    iNsTr_126 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000001100010 ) ]
    // load 
    iNsTr_127 := ->(iNsTr_126) 
    iNsTr_128 := ($cast ($uint<16>) iNsTr_127)
    iNsTr_129 := (iNsTr_125 - iNsTr_128)
    iNsTr_130 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000001110 ) ]
    ->(iNsTr_130) := iNsTr_129
    iNsTr_132 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000000110011 ) ]
    // load 
    iNsTr_133 := ->(iNsTr_132) 
    iNsTr_134 := ($cast ($uint<16>) iNsTr_133)
    iNsTr_135 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000001100011 ) ]
    // load 
    iNsTr_136 := ->(iNsTr_135) 
    iNsTr_137 := ($cast ($uint<16>) iNsTr_136)
    iNsTr_138 := (iNsTr_134 - iNsTr_137)
    iNsTr_139 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000001111 ) ]
    ->(iNsTr_139) := iNsTr_138
    iNsTr_141 := (iNsTr_12 | iNsTr_4)
    iNsTr_142 := (iNsTr_141 | iNsTr_21)
    iNsTr_143 := (iNsTr_142 | iNsTr_30)
    iNsTr_144 := (iNsTr_143 | iNsTr_39)
    iNsTr_145 := (iNsTr_144 | iNsTr_48)
    iNsTr_146 := (iNsTr_145 | iNsTr_57)
    iNsTr_147 := (iNsTr_146 | iNsTr_66)
    iNsTr_148 := (iNsTr_147 | iNsTr_75)
    iNsTr_149 := (iNsTr_148 | iNsTr_84)
    iNsTr_150 := (iNsTr_149 | iNsTr_93)
    iNsTr_151 := (iNsTr_150 | iNsTr_102)
    iNsTr_152 := (iNsTr_151 | iNsTr_111)
    iNsTr_153 := (iNsTr_152 | iNsTr_120)
    iNsTr_154 := (iNsTr_153 | iNsTr_129)
    iNsTr_155 := (iNsTr_154 | iNsTr_138)
    iNsTr_156 := ($bitcast ($pointer< $uint<32> >) p_src)
    // load 
    iNsTr_157 := ->(iNsTr_156) 
    iNsTr_158 := ($bitcast ($pointer< $uint<32> >) p_dst)
    ->(iNsTr_158) := iNsTr_157
    iNsTr_160 := ($bitcast ($pointer< $uint<32> >) iNsTr_15)
    // load 
    iNsTr_161 := ->(iNsTr_160) 
    iNsTr_162 := ($bitcast ($pointer< $uint<32> >) iNsTr_18)
    ->(iNsTr_162) := iNsTr_161
    iNsTr_164 := ($bitcast ($pointer< $uint<32> >) iNsTr_24)
    // load 
    iNsTr_165 := ->(iNsTr_164) 
    iNsTr_166 := ($bitcast ($pointer< $uint<32> >) iNsTr_27)
    ->(iNsTr_166) := iNsTr_165
    iNsTr_168 := ($bitcast ($pointer< $uint<32> >) iNsTr_78)
    // load 
    iNsTr_169 := ->(iNsTr_168) 
    iNsTr_170 := ($bitcast ($pointer< $uint<32> >) iNsTr_81)
    ->(iNsTr_170) := iNsTr_169
    // compare instruction
    iNsTr_172 := ( ($bitcast ( $int<16>) iNsTr_155) !=   ($bitcast ( $int<16>) ( $bitcast ($uint<16> ) _b0000000000000000 )  ) )
    ret_val__ := ($cast ($uint<32>) iNsTr_172)
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [zigzag_sub_4x4ac_frame] 
$in (level : $pointer< $uint<16> > p_src : $pointer< $uint<8> > p_dst : $pointer< $uint<8> > dc : $pointer< $uint<16> > )
$out (ret_val__ : $uint<32>)
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    // load 
    iNsTr_0 := ->(p_src) 
    iNsTr_1 := ($cast ($uint<16>) iNsTr_0)
    // load 
    iNsTr_2 := ->(p_dst) 
    iNsTr_3 := ($cast ($uint<16>) iNsTr_2)
    iNsTr_4 := (iNsTr_1 - iNsTr_3)
    ->(dc) := iNsTr_4
    ->(level) := ( $bitcast ($uint<16> ) _b0000000000000000 ) 
    iNsTr_7 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_8 := ->(iNsTr_7) 
    iNsTr_9 := ($cast ($uint<16>) iNsTr_8)
    iNsTr_10 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_11 := ->(iNsTr_10) 
    iNsTr_12 := ($cast ($uint<16>) iNsTr_11)
    iNsTr_13 := (iNsTr_9 - iNsTr_12)
    iNsTr_14 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    ->(iNsTr_14) := iNsTr_13
    iNsTr_16 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) ]
    // load 
    iNsTr_17 := ->(iNsTr_16) 
    iNsTr_18 := ($cast ($uint<16>) iNsTr_17)
    iNsTr_19 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) ]
    // load 
    iNsTr_20 := ->(iNsTr_19) 
    iNsTr_21 := ($cast ($uint<16>) iNsTr_20)
    iNsTr_22 := (iNsTr_18 - iNsTr_21)
    iNsTr_23 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    ->(iNsTr_23) := iNsTr_22
    iNsTr_25 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) ]
    // load 
    iNsTr_26 := ->(iNsTr_25) 
    iNsTr_27 := ($cast ($uint<16>) iNsTr_26)
    iNsTr_28 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000001000000 ) ]
    // load 
    iNsTr_29 := ->(iNsTr_28) 
    iNsTr_30 := ($cast ($uint<16>) iNsTr_29)
    iNsTr_31 := (iNsTr_27 - iNsTr_30)
    iNsTr_32 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    ->(iNsTr_32) := iNsTr_31
    iNsTr_34 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000000010001 ) ]
    // load 
    iNsTr_35 := ->(iNsTr_34) 
    iNsTr_36 := ($cast ($uint<16>) iNsTr_35)
    iNsTr_37 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000000100001 ) ]
    // load 
    iNsTr_38 := ->(iNsTr_37) 
    iNsTr_39 := ($cast ($uint<16>) iNsTr_38)
    iNsTr_40 := (iNsTr_36 - iNsTr_39)
    iNsTr_41 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ]
    ->(iNsTr_41) := iNsTr_40
    iNsTr_43 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_44 := ->(iNsTr_43) 
    iNsTr_45 := ($cast ($uint<16>) iNsTr_44)
    iNsTr_46 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_47 := ->(iNsTr_46) 
    iNsTr_48 := ($cast ($uint<16>) iNsTr_47)
    iNsTr_49 := (iNsTr_45 - iNsTr_48)
    iNsTr_50 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) ]
    ->(iNsTr_50) := iNsTr_49
    iNsTr_52 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    iNsTr_53 := ->(iNsTr_52) 
    iNsTr_54 := ($cast ($uint<16>) iNsTr_53)
    iNsTr_55 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    iNsTr_56 := ->(iNsTr_55) 
    iNsTr_57 := ($cast ($uint<16>) iNsTr_56)
    iNsTr_58 := (iNsTr_54 - iNsTr_57)
    iNsTr_59 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) ]
    ->(iNsTr_59) := iNsTr_58
    iNsTr_61 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000000010010 ) ]
    // load 
    iNsTr_62 := ->(iNsTr_61) 
    iNsTr_63 := ($cast ($uint<16>) iNsTr_62)
    iNsTr_64 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000000100010 ) ]
    // load 
    iNsTr_65 := ->(iNsTr_64) 
    iNsTr_66 := ($cast ($uint<16>) iNsTr_65)
    iNsTr_67 := (iNsTr_63 - iNsTr_66)
    iNsTr_68 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) ]
    ->(iNsTr_68) := iNsTr_67
    iNsTr_70 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000000100001 ) ]
    // load 
    iNsTr_71 := ->(iNsTr_70) 
    iNsTr_72 := ($cast ($uint<16>) iNsTr_71)
    iNsTr_73 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000001000001 ) ]
    // load 
    iNsTr_74 := ->(iNsTr_73) 
    iNsTr_75 := ($cast ($uint<16>) iNsTr_74)
    iNsTr_76 := (iNsTr_72 - iNsTr_75)
    iNsTr_77 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) ]
    ->(iNsTr_77) := iNsTr_76
    iNsTr_79 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000000110000 ) ]
    // load 
    iNsTr_80 := ->(iNsTr_79) 
    iNsTr_81 := ($cast ($uint<16>) iNsTr_80)
    iNsTr_82 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000001100000 ) ]
    // load 
    iNsTr_83 := ->(iNsTr_82) 
    iNsTr_84 := ($cast ($uint<16>) iNsTr_83)
    iNsTr_85 := (iNsTr_81 - iNsTr_84)
    iNsTr_86 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000001001 ) ]
    ->(iNsTr_86) := iNsTr_85
    iNsTr_88 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000000110001 ) ]
    // load 
    iNsTr_89 := ->(iNsTr_88) 
    iNsTr_90 := ($cast ($uint<16>) iNsTr_89)
    iNsTr_91 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000001100001 ) ]
    // load 
    iNsTr_92 := ->(iNsTr_91) 
    iNsTr_93 := ($cast ($uint<16>) iNsTr_92)
    iNsTr_94 := (iNsTr_90 - iNsTr_93)
    iNsTr_95 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000001010 ) ]
    ->(iNsTr_95) := iNsTr_94
    iNsTr_97 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000000100010 ) ]
    // load 
    iNsTr_98 := ->(iNsTr_97) 
    iNsTr_99 := ($cast ($uint<16>) iNsTr_98)
    iNsTr_100 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000001000010 ) ]
    // load 
    iNsTr_101 := ->(iNsTr_100) 
    iNsTr_102 := ($cast ($uint<16>) iNsTr_101)
    iNsTr_103 := (iNsTr_99 - iNsTr_102)
    iNsTr_104 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000001011 ) ]
    ->(iNsTr_104) := iNsTr_103
    iNsTr_106 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ]
    // load 
    iNsTr_107 := ->(iNsTr_106) 
    iNsTr_108 := ($cast ($uint<16>) iNsTr_107)
    iNsTr_109 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000000100011 ) ]
    // load 
    iNsTr_110 := ->(iNsTr_109) 
    iNsTr_111 := ($cast ($uint<16>) iNsTr_110)
    iNsTr_112 := (iNsTr_108 - iNsTr_111)
    iNsTr_113 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000001100 ) ]
    ->(iNsTr_113) := iNsTr_112
    iNsTr_115 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000000100011 ) ]
    // load 
    iNsTr_116 := ->(iNsTr_115) 
    iNsTr_117 := ($cast ($uint<16>) iNsTr_116)
    iNsTr_118 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000001000011 ) ]
    // load 
    iNsTr_119 := ->(iNsTr_118) 
    iNsTr_120 := ($cast ($uint<16>) iNsTr_119)
    iNsTr_121 := (iNsTr_117 - iNsTr_120)
    iNsTr_122 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000001101 ) ]
    ->(iNsTr_122) := iNsTr_121
    iNsTr_124 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000000110010 ) ]
    // load 
    iNsTr_125 := ->(iNsTr_124) 
    iNsTr_126 := ($cast ($uint<16>) iNsTr_125)
    iNsTr_127 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000001100010 ) ]
    // load 
    iNsTr_128 := ->(iNsTr_127) 
    iNsTr_129 := ($cast ($uint<16>) iNsTr_128)
    iNsTr_130 := (iNsTr_126 - iNsTr_129)
    iNsTr_131 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000001110 ) ]
    ->(iNsTr_131) := iNsTr_130
    iNsTr_133 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000000110011 ) ]
    // load 
    iNsTr_134 := ->(iNsTr_133) 
    iNsTr_135 := ($cast ($uint<16>) iNsTr_134)
    iNsTr_136 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000001100011 ) ]
    // load 
    iNsTr_137 := ->(iNsTr_136) 
    iNsTr_138 := ($cast ($uint<16>) iNsTr_137)
    iNsTr_139 := (iNsTr_135 - iNsTr_138)
    iNsTr_140 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000001111 ) ]
    ->(iNsTr_140) := iNsTr_139
    iNsTr_142 := (iNsTr_22 | iNsTr_13)
    iNsTr_143 := (iNsTr_142 | iNsTr_31)
    iNsTr_144 := (iNsTr_143 | iNsTr_40)
    iNsTr_145 := (iNsTr_144 | iNsTr_49)
    iNsTr_146 := (iNsTr_145 | iNsTr_58)
    iNsTr_147 := (iNsTr_146 | iNsTr_67)
    iNsTr_148 := (iNsTr_147 | iNsTr_76)
    iNsTr_149 := (iNsTr_148 | iNsTr_85)
    iNsTr_150 := (iNsTr_149 | iNsTr_94)
    iNsTr_151 := (iNsTr_150 | iNsTr_103)
    iNsTr_152 := (iNsTr_151 | iNsTr_112)
    iNsTr_153 := (iNsTr_152 | iNsTr_121)
    iNsTr_154 := (iNsTr_153 | iNsTr_130)
    iNsTr_155 := (iNsTr_154 | iNsTr_139)
    iNsTr_156 := ($bitcast ($pointer< $uint<32> >) p_src)
    // load 
    iNsTr_157 := ->(iNsTr_156) 
    iNsTr_158 := ($bitcast ($pointer< $uint<32> >) p_dst)
    ->(iNsTr_158) := iNsTr_157
    iNsTr_160 := ($bitcast ($pointer< $uint<32> >) iNsTr_16)
    // load 
    iNsTr_161 := ->(iNsTr_160) 
    iNsTr_162 := ($bitcast ($pointer< $uint<32> >) iNsTr_19)
    ->(iNsTr_162) := iNsTr_161
    iNsTr_164 := ($bitcast ($pointer< $uint<32> >) iNsTr_25)
    // load 
    iNsTr_165 := ->(iNsTr_164) 
    iNsTr_166 := ($bitcast ($pointer< $uint<32> >) iNsTr_28)
    ->(iNsTr_166) := iNsTr_165
    iNsTr_168 := ($bitcast ($pointer< $uint<32> >) iNsTr_79)
    // load 
    iNsTr_169 := ->(iNsTr_168) 
    iNsTr_170 := ($bitcast ($pointer< $uint<32> >) iNsTr_82)
    ->(iNsTr_170) := iNsTr_169
    // compare instruction
    iNsTr_172 := ( ($bitcast ( $int<16>) iNsTr_155) !=   ($bitcast ( $int<16>) ( $bitcast ($uint<16> ) _b0000000000000000 )  ) )
    ret_val__ := ($cast ($uint<32>) iNsTr_172)
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [zigzag_sub_8x8_frame] 
$in (level : $pointer< $uint<16> > p_src : $pointer< $uint<8> > p_dst : $pointer< $uint<8> > )
$out (ret_val__ : $uint<32>)
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    // load 
    iNsTr_0 := ->(p_src) 
    iNsTr_1 := ($cast ($uint<16>) iNsTr_0)
    // load 
    iNsTr_2 := ->(p_dst) 
    iNsTr_3 := ($cast ($uint<16>) iNsTr_2)
    iNsTr_4 := (iNsTr_1 - iNsTr_3)
    ->(level) := iNsTr_4
    iNsTr_6 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_7 := ->(iNsTr_6) 
    iNsTr_8 := ($cast ($uint<16>) iNsTr_7)
    iNsTr_9 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_10 := ->(iNsTr_9) 
    iNsTr_11 := ($cast ($uint<16>) iNsTr_10)
    iNsTr_12 := (iNsTr_8 - iNsTr_11)
    iNsTr_13 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    ->(iNsTr_13) := iNsTr_12
    iNsTr_15 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) ]
    // load 
    iNsTr_16 := ->(iNsTr_15) 
    iNsTr_17 := ($cast ($uint<16>) iNsTr_16)
    iNsTr_18 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) ]
    // load 
    iNsTr_19 := ->(iNsTr_18) 
    iNsTr_20 := ($cast ($uint<16>) iNsTr_19)
    iNsTr_21 := (iNsTr_17 - iNsTr_20)
    iNsTr_22 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    ->(iNsTr_22) := iNsTr_21
    iNsTr_24 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) ]
    // load 
    iNsTr_25 := ->(iNsTr_24) 
    iNsTr_26 := ($cast ($uint<16>) iNsTr_25)
    iNsTr_27 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000001000000 ) ]
    // load 
    iNsTr_28 := ->(iNsTr_27) 
    iNsTr_29 := ($cast ($uint<16>) iNsTr_28)
    iNsTr_30 := (iNsTr_26 - iNsTr_29)
    iNsTr_31 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    ->(iNsTr_31) := iNsTr_30
    iNsTr_33 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000000010001 ) ]
    // load 
    iNsTr_34 := ->(iNsTr_33) 
    iNsTr_35 := ($cast ($uint<16>) iNsTr_34)
    iNsTr_36 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000000100001 ) ]
    // load 
    iNsTr_37 := ->(iNsTr_36) 
    iNsTr_38 := ($cast ($uint<16>) iNsTr_37)
    iNsTr_39 := (iNsTr_35 - iNsTr_38)
    iNsTr_40 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ]
    ->(iNsTr_40) := iNsTr_39
    iNsTr_42 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_43 := ->(iNsTr_42) 
    iNsTr_44 := ($cast ($uint<16>) iNsTr_43)
    iNsTr_45 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_46 := ->(iNsTr_45) 
    iNsTr_47 := ($cast ($uint<16>) iNsTr_46)
    iNsTr_48 := (iNsTr_44 - iNsTr_47)
    iNsTr_49 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) ]
    ->(iNsTr_49) := iNsTr_48
    iNsTr_51 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    iNsTr_52 := ->(iNsTr_51) 
    iNsTr_53 := ($cast ($uint<16>) iNsTr_52)
    iNsTr_54 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    iNsTr_55 := ->(iNsTr_54) 
    iNsTr_56 := ($cast ($uint<16>) iNsTr_55)
    iNsTr_57 := (iNsTr_53 - iNsTr_56)
    iNsTr_58 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) ]
    ->(iNsTr_58) := iNsTr_57
    iNsTr_60 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000000010010 ) ]
    // load 
    iNsTr_61 := ->(iNsTr_60) 
    iNsTr_62 := ($cast ($uint<16>) iNsTr_61)
    iNsTr_63 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000000100010 ) ]
    // load 
    iNsTr_64 := ->(iNsTr_63) 
    iNsTr_65 := ($cast ($uint<16>) iNsTr_64)
    iNsTr_66 := (iNsTr_62 - iNsTr_65)
    iNsTr_67 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) ]
    ->(iNsTr_67) := iNsTr_66
    iNsTr_69 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000000100001 ) ]
    // load 
    iNsTr_70 := ->(iNsTr_69) 
    iNsTr_71 := ($cast ($uint<16>) iNsTr_70)
    iNsTr_72 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000001000001 ) ]
    // load 
    iNsTr_73 := ->(iNsTr_72) 
    iNsTr_74 := ($cast ($uint<16>) iNsTr_73)
    iNsTr_75 := (iNsTr_71 - iNsTr_74)
    iNsTr_76 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) ]
    ->(iNsTr_76) := iNsTr_75
    iNsTr_78 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000000110000 ) ]
    // load 
    iNsTr_79 := ->(iNsTr_78) 
    iNsTr_80 := ($cast ($uint<16>) iNsTr_79)
    iNsTr_81 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000001100000 ) ]
    // load 
    iNsTr_82 := ->(iNsTr_81) 
    iNsTr_83 := ($cast ($uint<16>) iNsTr_82)
    iNsTr_84 := (iNsTr_80 - iNsTr_83)
    iNsTr_85 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000001001 ) ]
    ->(iNsTr_85) := iNsTr_84
    iNsTr_87 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000001000000 ) ]
    // load 
    iNsTr_88 := ->(iNsTr_87) 
    iNsTr_89 := ($cast ($uint<16>) iNsTr_88)
    iNsTr_90 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000010000000 ) ]
    // load 
    iNsTr_91 := ->(iNsTr_90) 
    iNsTr_92 := ($cast ($uint<16>) iNsTr_91)
    iNsTr_93 := (iNsTr_89 - iNsTr_92)
    iNsTr_94 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000001010 ) ]
    ->(iNsTr_94) := iNsTr_93
    iNsTr_96 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000000110001 ) ]
    // load 
    iNsTr_97 := ->(iNsTr_96) 
    iNsTr_98 := ($cast ($uint<16>) iNsTr_97)
    iNsTr_99 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000001100001 ) ]
    // load 
    iNsTr_100 := ->(iNsTr_99) 
    iNsTr_101 := ($cast ($uint<16>) iNsTr_100)
    iNsTr_102 := (iNsTr_98 - iNsTr_101)
    iNsTr_103 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000001011 ) ]
    ->(iNsTr_103) := iNsTr_102
    iNsTr_105 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000000100010 ) ]
    // load 
    iNsTr_106 := ->(iNsTr_105) 
    iNsTr_107 := ($cast ($uint<16>) iNsTr_106)
    iNsTr_108 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000001000010 ) ]
    // load 
    iNsTr_109 := ->(iNsTr_108) 
    iNsTr_110 := ($cast ($uint<16>) iNsTr_109)
    iNsTr_111 := (iNsTr_107 - iNsTr_110)
    iNsTr_112 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000001100 ) ]
    ->(iNsTr_112) := iNsTr_111
    iNsTr_114 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ]
    // load 
    iNsTr_115 := ->(iNsTr_114) 
    iNsTr_116 := ($cast ($uint<16>) iNsTr_115)
    iNsTr_117 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000000100011 ) ]
    // load 
    iNsTr_118 := ->(iNsTr_117) 
    iNsTr_119 := ($cast ($uint<16>) iNsTr_118)
    iNsTr_120 := (iNsTr_116 - iNsTr_119)
    iNsTr_121 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000001101 ) ]
    ->(iNsTr_121) := iNsTr_120
    iNsTr_123 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ]
    // load 
    iNsTr_124 := ->(iNsTr_123) 
    iNsTr_125 := ($cast ($uint<16>) iNsTr_124)
    iNsTr_126 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ]
    // load 
    iNsTr_127 := ->(iNsTr_126) 
    iNsTr_128 := ($cast ($uint<16>) iNsTr_127)
    iNsTr_129 := (iNsTr_125 - iNsTr_128)
    iNsTr_130 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000001110 ) ]
    ->(iNsTr_130) := iNsTr_129
    iNsTr_132 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) ]
    // load 
    iNsTr_133 := ->(iNsTr_132) 
    iNsTr_134 := ($cast ($uint<16>) iNsTr_133)
    iNsTr_135 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) ]
    // load 
    iNsTr_136 := ->(iNsTr_135) 
    iNsTr_137 := ($cast ($uint<16>) iNsTr_136)
    iNsTr_138 := (iNsTr_134 - iNsTr_137)
    iNsTr_139 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000001111 ) ]
    ->(iNsTr_139) := iNsTr_138
    iNsTr_141 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000000010100 ) ]
    // load 
    iNsTr_142 := ->(iNsTr_141) 
    iNsTr_143 := ($cast ($uint<16>) iNsTr_142)
    iNsTr_144 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000000100100 ) ]
    // load 
    iNsTr_145 := ->(iNsTr_144) 
    iNsTr_146 := ($cast ($uint<16>) iNsTr_145)
    iNsTr_147 := (iNsTr_143 - iNsTr_146)
    iNsTr_148 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) ]
    ->(iNsTr_148) := iNsTr_147
    iNsTr_150 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000000100011 ) ]
    // load 
    iNsTr_151 := ->(iNsTr_150) 
    iNsTr_152 := ($cast ($uint<16>) iNsTr_151)
    iNsTr_153 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000001000011 ) ]
    // load 
    iNsTr_154 := ->(iNsTr_153) 
    iNsTr_155 := ($cast ($uint<16>) iNsTr_154)
    iNsTr_156 := (iNsTr_152 - iNsTr_155)
    iNsTr_157 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000010001 ) ]
    ->(iNsTr_157) := iNsTr_156
    iNsTr_159 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000000110010 ) ]
    // load 
    iNsTr_160 := ->(iNsTr_159) 
    iNsTr_161 := ($cast ($uint<16>) iNsTr_160)
    iNsTr_162 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000001100010 ) ]
    // load 
    iNsTr_163 := ->(iNsTr_162) 
    iNsTr_164 := ($cast ($uint<16>) iNsTr_163)
    iNsTr_165 := (iNsTr_161 - iNsTr_164)
    iNsTr_166 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000010010 ) ]
    ->(iNsTr_166) := iNsTr_165
    iNsTr_168 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000001000001 ) ]
    // load 
    iNsTr_169 := ->(iNsTr_168) 
    iNsTr_170 := ($cast ($uint<16>) iNsTr_169)
    iNsTr_171 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000010000001 ) ]
    // load 
    iNsTr_172 := ->(iNsTr_171) 
    iNsTr_173 := ($cast ($uint<16>) iNsTr_172)
    iNsTr_174 := (iNsTr_170 - iNsTr_173)
    iNsTr_175 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) ]
    ->(iNsTr_175) := iNsTr_174
    iNsTr_177 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000001010000 ) ]
    // load 
    iNsTr_178 := ->(iNsTr_177) 
    iNsTr_179 := ($cast ($uint<16>) iNsTr_178)
    iNsTr_180 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000010100000 ) ]
    // load 
    iNsTr_181 := ->(iNsTr_180) 
    iNsTr_182 := ($cast ($uint<16>) iNsTr_181)
    iNsTr_183 := (iNsTr_179 - iNsTr_182)
    iNsTr_184 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000010100 ) ]
    ->(iNsTr_184) := iNsTr_183
    iNsTr_186 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000001100000 ) ]
    // load 
    iNsTr_187 := ->(iNsTr_186) 
    iNsTr_188 := ($cast ($uint<16>) iNsTr_187)
    iNsTr_189 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000011000000 ) ]
    // load 
    iNsTr_190 := ->(iNsTr_189) 
    iNsTr_191 := ($cast ($uint<16>) iNsTr_190)
    iNsTr_192 := (iNsTr_188 - iNsTr_191)
    iNsTr_193 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000010101 ) ]
    ->(iNsTr_193) := iNsTr_192
    iNsTr_195 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000001010001 ) ]
    // load 
    iNsTr_196 := ->(iNsTr_195) 
    iNsTr_197 := ($cast ($uint<16>) iNsTr_196)
    iNsTr_198 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000010100001 ) ]
    // load 
    iNsTr_199 := ->(iNsTr_198) 
    iNsTr_200 := ($cast ($uint<16>) iNsTr_199)
    iNsTr_201 := (iNsTr_197 - iNsTr_200)
    iNsTr_202 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000010110 ) ]
    ->(iNsTr_202) := iNsTr_201
    iNsTr_204 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000001000010 ) ]
    // load 
    iNsTr_205 := ->(iNsTr_204) 
    iNsTr_206 := ($cast ($uint<16>) iNsTr_205)
    iNsTr_207 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000010000010 ) ]
    // load 
    iNsTr_208 := ->(iNsTr_207) 
    iNsTr_209 := ($cast ($uint<16>) iNsTr_208)
    iNsTr_210 := (iNsTr_206 - iNsTr_209)
    iNsTr_211 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000010111 ) ]
    ->(iNsTr_211) := iNsTr_210
    iNsTr_213 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000000110011 ) ]
    // load 
    iNsTr_214 := ->(iNsTr_213) 
    iNsTr_215 := ($cast ($uint<16>) iNsTr_214)
    iNsTr_216 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000001100011 ) ]
    // load 
    iNsTr_217 := ->(iNsTr_216) 
    iNsTr_218 := ($cast ($uint<16>) iNsTr_217)
    iNsTr_219 := (iNsTr_215 - iNsTr_218)
    iNsTr_220 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) ]
    ->(iNsTr_220) := iNsTr_219
    iNsTr_222 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000000100100 ) ]
    // load 
    iNsTr_223 := ->(iNsTr_222) 
    iNsTr_224 := ($cast ($uint<16>) iNsTr_223)
    iNsTr_225 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000001000100 ) ]
    // load 
    iNsTr_226 := ->(iNsTr_225) 
    iNsTr_227 := ($cast ($uint<16>) iNsTr_226)
    iNsTr_228 := (iNsTr_224 - iNsTr_227)
    iNsTr_229 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000011001 ) ]
    ->(iNsTr_229) := iNsTr_228
    iNsTr_231 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000000010101 ) ]
    // load 
    iNsTr_232 := ->(iNsTr_231) 
    iNsTr_233 := ($cast ($uint<16>) iNsTr_232)
    iNsTr_234 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000000100101 ) ]
    // load 
    iNsTr_235 := ->(iNsTr_234) 
    iNsTr_236 := ($cast ($uint<16>) iNsTr_235)
    iNsTr_237 := (iNsTr_233 - iNsTr_236)
    iNsTr_238 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000011010 ) ]
    ->(iNsTr_238) := iNsTr_237
    iNsTr_240 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) ]
    // load 
    iNsTr_241 := ->(iNsTr_240) 
    iNsTr_242 := ($cast ($uint<16>) iNsTr_241)
    iNsTr_243 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) ]
    // load 
    iNsTr_244 := ->(iNsTr_243) 
    iNsTr_245 := ($cast ($uint<16>) iNsTr_244)
    iNsTr_246 := (iNsTr_242 - iNsTr_245)
    iNsTr_247 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000011011 ) ]
    ->(iNsTr_247) := iNsTr_246
    iNsTr_249 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) ]
    // load 
    iNsTr_250 := ->(iNsTr_249) 
    iNsTr_251 := ($cast ($uint<16>) iNsTr_250)
    iNsTr_252 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) ]
    // load 
    iNsTr_253 := ->(iNsTr_252) 
    iNsTr_254 := ($cast ($uint<16>) iNsTr_253)
    iNsTr_255 := (iNsTr_251 - iNsTr_254)
    iNsTr_256 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000011100 ) ]
    ->(iNsTr_256) := iNsTr_255
    iNsTr_258 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000000010110 ) ]
    // load 
    iNsTr_259 := ->(iNsTr_258) 
    iNsTr_260 := ($cast ($uint<16>) iNsTr_259)
    iNsTr_261 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000000100110 ) ]
    // load 
    iNsTr_262 := ->(iNsTr_261) 
    iNsTr_263 := ($cast ($uint<16>) iNsTr_262)
    iNsTr_264 := (iNsTr_260 - iNsTr_263)
    iNsTr_265 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000011101 ) ]
    ->(iNsTr_265) := iNsTr_264
    iNsTr_267 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000000100101 ) ]
    // load 
    iNsTr_268 := ->(iNsTr_267) 
    iNsTr_269 := ($cast ($uint<16>) iNsTr_268)
    iNsTr_270 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ]
    // load 
    iNsTr_271 := ->(iNsTr_270) 
    iNsTr_272 := ($cast ($uint<16>) iNsTr_271)
    iNsTr_273 := (iNsTr_269 - iNsTr_272)
    iNsTr_274 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000011110 ) ]
    ->(iNsTr_274) := iNsTr_273
    iNsTr_276 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000000110100 ) ]
    // load 
    iNsTr_277 := ->(iNsTr_276) 
    iNsTr_278 := ($cast ($uint<16>) iNsTr_277)
    iNsTr_279 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000001100100 ) ]
    // load 
    iNsTr_280 := ->(iNsTr_279) 
    iNsTr_281 := ($cast ($uint<16>) iNsTr_280)
    iNsTr_282 := (iNsTr_278 - iNsTr_281)
    iNsTr_283 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000011111 ) ]
    ->(iNsTr_283) := iNsTr_282
    iNsTr_285 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000001000011 ) ]
    // load 
    iNsTr_286 := ->(iNsTr_285) 
    iNsTr_287 := ($cast ($uint<16>) iNsTr_286)
    iNsTr_288 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000010000011 ) ]
    // load 
    iNsTr_289 := ->(iNsTr_288) 
    iNsTr_290 := ($cast ($uint<16>) iNsTr_289)
    iNsTr_291 := (iNsTr_287 - iNsTr_290)
    iNsTr_292 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) ]
    ->(iNsTr_292) := iNsTr_291
    iNsTr_294 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000001010010 ) ]
    // load 
    iNsTr_295 := ->(iNsTr_294) 
    iNsTr_296 := ($cast ($uint<16>) iNsTr_295)
    iNsTr_297 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000010100010 ) ]
    // load 
    iNsTr_298 := ->(iNsTr_297) 
    iNsTr_299 := ($cast ($uint<16>) iNsTr_298)
    iNsTr_300 := (iNsTr_296 - iNsTr_299)
    iNsTr_301 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000100001 ) ]
    ->(iNsTr_301) := iNsTr_300
    iNsTr_303 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000001100001 ) ]
    // load 
    iNsTr_304 := ->(iNsTr_303) 
    iNsTr_305 := ($cast ($uint<16>) iNsTr_304)
    iNsTr_306 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000011000001 ) ]
    // load 
    iNsTr_307 := ->(iNsTr_306) 
    iNsTr_308 := ($cast ($uint<16>) iNsTr_307)
    iNsTr_309 := (iNsTr_305 - iNsTr_308)
    iNsTr_310 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000100010 ) ]
    ->(iNsTr_310) := iNsTr_309
    iNsTr_312 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000001110000 ) ]
    // load 
    iNsTr_313 := ->(iNsTr_312) 
    iNsTr_314 := ($cast ($uint<16>) iNsTr_313)
    iNsTr_315 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000011100000 ) ]
    // load 
    iNsTr_316 := ->(iNsTr_315) 
    iNsTr_317 := ($cast ($uint<16>) iNsTr_316)
    iNsTr_318 := (iNsTr_314 - iNsTr_317)
    iNsTr_319 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000100011 ) ]
    ->(iNsTr_319) := iNsTr_318
    iNsTr_321 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000001110001 ) ]
    // load 
    iNsTr_322 := ->(iNsTr_321) 
    iNsTr_323 := ($cast ($uint<16>) iNsTr_322)
    iNsTr_324 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000011100001 ) ]
    // load 
    iNsTr_325 := ->(iNsTr_324) 
    iNsTr_326 := ($cast ($uint<16>) iNsTr_325)
    iNsTr_327 := (iNsTr_323 - iNsTr_326)
    iNsTr_328 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000100100 ) ]
    ->(iNsTr_328) := iNsTr_327
    iNsTr_330 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000001100010 ) ]
    // load 
    iNsTr_331 := ->(iNsTr_330) 
    iNsTr_332 := ($cast ($uint<16>) iNsTr_331)
    iNsTr_333 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000011000010 ) ]
    // load 
    iNsTr_334 := ->(iNsTr_333) 
    iNsTr_335 := ($cast ($uint<16>) iNsTr_334)
    iNsTr_336 := (iNsTr_332 - iNsTr_335)
    iNsTr_337 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000100101 ) ]
    ->(iNsTr_337) := iNsTr_336
    iNsTr_339 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000001010011 ) ]
    // load 
    iNsTr_340 := ->(iNsTr_339) 
    iNsTr_341 := ($cast ($uint<16>) iNsTr_340)
    iNsTr_342 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000010100011 ) ]
    // load 
    iNsTr_343 := ->(iNsTr_342) 
    iNsTr_344 := ($cast ($uint<16>) iNsTr_343)
    iNsTr_345 := (iNsTr_341 - iNsTr_344)
    iNsTr_346 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000100110 ) ]
    ->(iNsTr_346) := iNsTr_345
    iNsTr_348 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000001000100 ) ]
    // load 
    iNsTr_349 := ->(iNsTr_348) 
    iNsTr_350 := ($cast ($uint<16>) iNsTr_349)
    iNsTr_351 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000010000100 ) ]
    // load 
    iNsTr_352 := ->(iNsTr_351) 
    iNsTr_353 := ($cast ($uint<16>) iNsTr_352)
    iNsTr_354 := (iNsTr_350 - iNsTr_353)
    iNsTr_355 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000100111 ) ]
    ->(iNsTr_355) := iNsTr_354
    iNsTr_357 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000000110101 ) ]
    // load 
    iNsTr_358 := ->(iNsTr_357) 
    iNsTr_359 := ($cast ($uint<16>) iNsTr_358)
    iNsTr_360 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000001100101 ) ]
    // load 
    iNsTr_361 := ->(iNsTr_360) 
    iNsTr_362 := ($cast ($uint<16>) iNsTr_361)
    iNsTr_363 := (iNsTr_359 - iNsTr_362)
    iNsTr_364 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000101000 ) ]
    ->(iNsTr_364) := iNsTr_363
    iNsTr_366 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000000100110 ) ]
    // load 
    iNsTr_367 := ->(iNsTr_366) 
    iNsTr_368 := ($cast ($uint<16>) iNsTr_367)
    iNsTr_369 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000001000110 ) ]
    // load 
    iNsTr_370 := ->(iNsTr_369) 
    iNsTr_371 := ($cast ($uint<16>) iNsTr_370)
    iNsTr_372 := (iNsTr_368 - iNsTr_371)
    iNsTr_373 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000101001 ) ]
    ->(iNsTr_373) := iNsTr_372
    iNsTr_375 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000000010111 ) ]
    // load 
    iNsTr_376 := ->(iNsTr_375) 
    iNsTr_377 := ($cast ($uint<16>) iNsTr_376)
    iNsTr_378 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000000100111 ) ]
    // load 
    iNsTr_379 := ->(iNsTr_378) 
    iNsTr_380 := ($cast ($uint<16>) iNsTr_379)
    iNsTr_381 := (iNsTr_377 - iNsTr_380)
    iNsTr_382 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000101010 ) ]
    ->(iNsTr_382) := iNsTr_381
    iNsTr_384 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000000100111 ) ]
    // load 
    iNsTr_385 := ->(iNsTr_384) 
    iNsTr_386 := ($cast ($uint<16>) iNsTr_385)
    iNsTr_387 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000001000111 ) ]
    // load 
    iNsTr_388 := ->(iNsTr_387) 
    iNsTr_389 := ($cast ($uint<16>) iNsTr_388)
    iNsTr_390 := (iNsTr_386 - iNsTr_389)
    iNsTr_391 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000101011 ) ]
    ->(iNsTr_391) := iNsTr_390
    iNsTr_393 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000000110110 ) ]
    // load 
    iNsTr_394 := ->(iNsTr_393) 
    iNsTr_395 := ($cast ($uint<16>) iNsTr_394)
    iNsTr_396 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000001100110 ) ]
    // load 
    iNsTr_397 := ->(iNsTr_396) 
    iNsTr_398 := ($cast ($uint<16>) iNsTr_397)
    iNsTr_399 := (iNsTr_395 - iNsTr_398)
    iNsTr_400 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000101100 ) ]
    ->(iNsTr_400) := iNsTr_399
    iNsTr_402 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ]
    // load 
    iNsTr_403 := ->(iNsTr_402) 
    iNsTr_404 := ($cast ($uint<16>) iNsTr_403)
    iNsTr_405 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000010000101 ) ]
    // load 
    iNsTr_406 := ->(iNsTr_405) 
    iNsTr_407 := ($cast ($uint<16>) iNsTr_406)
    iNsTr_408 := (iNsTr_404 - iNsTr_407)
    iNsTr_409 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000101101 ) ]
    ->(iNsTr_409) := iNsTr_408
    iNsTr_411 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000001010100 ) ]
    // load 
    iNsTr_412 := ->(iNsTr_411) 
    iNsTr_413 := ($cast ($uint<16>) iNsTr_412)
    iNsTr_414 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000010100100 ) ]
    // load 
    iNsTr_415 := ->(iNsTr_414) 
    iNsTr_416 := ($cast ($uint<16>) iNsTr_415)
    iNsTr_417 := (iNsTr_413 - iNsTr_416)
    iNsTr_418 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000101110 ) ]
    ->(iNsTr_418) := iNsTr_417
    iNsTr_420 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000001100011 ) ]
    // load 
    iNsTr_421 := ->(iNsTr_420) 
    iNsTr_422 := ($cast ($uint<16>) iNsTr_421)
    iNsTr_423 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000011000011 ) ]
    // load 
    iNsTr_424 := ->(iNsTr_423) 
    iNsTr_425 := ($cast ($uint<16>) iNsTr_424)
    iNsTr_426 := (iNsTr_422 - iNsTr_425)
    iNsTr_427 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000101111 ) ]
    ->(iNsTr_427) := iNsTr_426
    iNsTr_429 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000001110010 ) ]
    // load 
    iNsTr_430 := ->(iNsTr_429) 
    iNsTr_431 := ($cast ($uint<16>) iNsTr_430)
    iNsTr_432 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000011100010 ) ]
    // load 
    iNsTr_433 := ->(iNsTr_432) 
    iNsTr_434 := ($cast ($uint<16>) iNsTr_433)
    iNsTr_435 := (iNsTr_431 - iNsTr_434)
    iNsTr_436 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000110000 ) ]
    ->(iNsTr_436) := iNsTr_435
    iNsTr_438 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000001110011 ) ]
    // load 
    iNsTr_439 := ->(iNsTr_438) 
    iNsTr_440 := ($cast ($uint<16>) iNsTr_439)
    iNsTr_441 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000011100011 ) ]
    // load 
    iNsTr_442 := ->(iNsTr_441) 
    iNsTr_443 := ($cast ($uint<16>) iNsTr_442)
    iNsTr_444 := (iNsTr_440 - iNsTr_443)
    iNsTr_445 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000110001 ) ]
    ->(iNsTr_445) := iNsTr_444
    iNsTr_447 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000001100100 ) ]
    // load 
    iNsTr_448 := ->(iNsTr_447) 
    iNsTr_449 := ($cast ($uint<16>) iNsTr_448)
    iNsTr_450 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000011000100 ) ]
    // load 
    iNsTr_451 := ->(iNsTr_450) 
    iNsTr_452 := ($cast ($uint<16>) iNsTr_451)
    iNsTr_453 := (iNsTr_449 - iNsTr_452)
    iNsTr_454 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000110010 ) ]
    ->(iNsTr_454) := iNsTr_453
    iNsTr_456 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000001010101 ) ]
    // load 
    iNsTr_457 := ->(iNsTr_456) 
    iNsTr_458 := ($cast ($uint<16>) iNsTr_457)
    iNsTr_459 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000010100101 ) ]
    // load 
    iNsTr_460 := ->(iNsTr_459) 
    iNsTr_461 := ($cast ($uint<16>) iNsTr_460)
    iNsTr_462 := (iNsTr_458 - iNsTr_461)
    iNsTr_463 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000110011 ) ]
    ->(iNsTr_463) := iNsTr_462
    iNsTr_465 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000001000110 ) ]
    // load 
    iNsTr_466 := ->(iNsTr_465) 
    iNsTr_467 := ($cast ($uint<16>) iNsTr_466)
    iNsTr_468 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000010000110 ) ]
    // load 
    iNsTr_469 := ->(iNsTr_468) 
    iNsTr_470 := ($cast ($uint<16>) iNsTr_469)
    iNsTr_471 := (iNsTr_467 - iNsTr_470)
    iNsTr_472 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000110100 ) ]
    ->(iNsTr_472) := iNsTr_471
    iNsTr_474 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000000110111 ) ]
    // load 
    iNsTr_475 := ->(iNsTr_474) 
    iNsTr_476 := ($cast ($uint<16>) iNsTr_475)
    iNsTr_477 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000001100111 ) ]
    // load 
    iNsTr_478 := ->(iNsTr_477) 
    iNsTr_479 := ($cast ($uint<16>) iNsTr_478)
    iNsTr_480 := (iNsTr_476 - iNsTr_479)
    iNsTr_481 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000110101 ) ]
    ->(iNsTr_481) := iNsTr_480
    iNsTr_483 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000001000111 ) ]
    // load 
    iNsTr_484 := ->(iNsTr_483) 
    iNsTr_485 := ($cast ($uint<16>) iNsTr_484)
    iNsTr_486 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000010000111 ) ]
    // load 
    iNsTr_487 := ->(iNsTr_486) 
    iNsTr_488 := ($cast ($uint<16>) iNsTr_487)
    iNsTr_489 := (iNsTr_485 - iNsTr_488)
    iNsTr_490 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000110110 ) ]
    ->(iNsTr_490) := iNsTr_489
    iNsTr_492 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000001010110 ) ]
    // load 
    iNsTr_493 := ->(iNsTr_492) 
    iNsTr_494 := ($cast ($uint<16>) iNsTr_493)
    iNsTr_495 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000010100110 ) ]
    // load 
    iNsTr_496 := ->(iNsTr_495) 
    iNsTr_497 := ($cast ($uint<16>) iNsTr_496)
    iNsTr_498 := (iNsTr_494 - iNsTr_497)
    iNsTr_499 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000110111 ) ]
    ->(iNsTr_499) := iNsTr_498
    iNsTr_501 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000001100101 ) ]
    // load 
    iNsTr_502 := ->(iNsTr_501) 
    iNsTr_503 := ($cast ($uint<16>) iNsTr_502)
    iNsTr_504 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000011000101 ) ]
    // load 
    iNsTr_505 := ->(iNsTr_504) 
    iNsTr_506 := ($cast ($uint<16>) iNsTr_505)
    iNsTr_507 := (iNsTr_503 - iNsTr_506)
    iNsTr_508 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000111000 ) ]
    ->(iNsTr_508) := iNsTr_507
    iNsTr_510 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000001110100 ) ]
    // load 
    iNsTr_511 := ->(iNsTr_510) 
    iNsTr_512 := ($cast ($uint<16>) iNsTr_511)
    iNsTr_513 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000011100100 ) ]
    // load 
    iNsTr_514 := ->(iNsTr_513) 
    iNsTr_515 := ($cast ($uint<16>) iNsTr_514)
    iNsTr_516 := (iNsTr_512 - iNsTr_515)
    iNsTr_517 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000111001 ) ]
    ->(iNsTr_517) := iNsTr_516
    iNsTr_519 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000001110101 ) ]
    // load 
    iNsTr_520 := ->(iNsTr_519) 
    iNsTr_521 := ($cast ($uint<16>) iNsTr_520)
    iNsTr_522 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000011100101 ) ]
    // load 
    iNsTr_523 := ->(iNsTr_522) 
    iNsTr_524 := ($cast ($uint<16>) iNsTr_523)
    iNsTr_525 := (iNsTr_521 - iNsTr_524)
    iNsTr_526 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000111010 ) ]
    ->(iNsTr_526) := iNsTr_525
    iNsTr_528 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000001100110 ) ]
    // load 
    iNsTr_529 := ->(iNsTr_528) 
    iNsTr_530 := ($cast ($uint<16>) iNsTr_529)
    iNsTr_531 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000011000110 ) ]
    // load 
    iNsTr_532 := ->(iNsTr_531) 
    iNsTr_533 := ($cast ($uint<16>) iNsTr_532)
    iNsTr_534 := (iNsTr_530 - iNsTr_533)
    iNsTr_535 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000111011 ) ]
    ->(iNsTr_535) := iNsTr_534
    iNsTr_537 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000001010111 ) ]
    // load 
    iNsTr_538 := ->(iNsTr_537) 
    iNsTr_539 := ($cast ($uint<16>) iNsTr_538)
    iNsTr_540 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000010100111 ) ]
    // load 
    iNsTr_541 := ->(iNsTr_540) 
    iNsTr_542 := ($cast ($uint<16>) iNsTr_541)
    iNsTr_543 := (iNsTr_539 - iNsTr_542)
    iNsTr_544 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000111100 ) ]
    ->(iNsTr_544) := iNsTr_543
    iNsTr_546 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000001100111 ) ]
    // load 
    iNsTr_547 := ->(iNsTr_546) 
    iNsTr_548 := ($cast ($uint<16>) iNsTr_547)
    iNsTr_549 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000011000111 ) ]
    // load 
    iNsTr_550 := ->(iNsTr_549) 
    iNsTr_551 := ($cast ($uint<16>) iNsTr_550)
    iNsTr_552 := (iNsTr_548 - iNsTr_551)
    iNsTr_553 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000111101 ) ]
    ->(iNsTr_553) := iNsTr_552
    iNsTr_555 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000001110110 ) ]
    // load 
    iNsTr_556 := ->(iNsTr_555) 
    iNsTr_557 := ($cast ($uint<16>) iNsTr_556)
    iNsTr_558 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000011100110 ) ]
    // load 
    iNsTr_559 := ->(iNsTr_558) 
    iNsTr_560 := ($cast ($uint<16>) iNsTr_559)
    iNsTr_561 := (iNsTr_557 - iNsTr_560)
    iNsTr_562 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000111110 ) ]
    ->(iNsTr_562) := iNsTr_561
    iNsTr_564 := p_src[( $bitcast ($uint<32> ) _b00000000000000000000000001110111 ) ]
    // load 
    iNsTr_565 := ->(iNsTr_564) 
    iNsTr_566 := ($cast ($uint<16>) iNsTr_565)
    iNsTr_567 := p_dst[( $bitcast ($uint<32> ) _b00000000000000000000000011100111 ) ]
    // load 
    iNsTr_568 := ->(iNsTr_567) 
    iNsTr_569 := ($cast ($uint<16>) iNsTr_568)
    iNsTr_570 := (iNsTr_566 - iNsTr_569)
    iNsTr_571 := level[( $bitcast ($uint<32> ) _b00000000000000000000000000111111 ) ]
    ->(iNsTr_571) := iNsTr_570
    iNsTr_573 := (iNsTr_12 | iNsTr_4)
    iNsTr_574 := (iNsTr_573 | iNsTr_21)
    iNsTr_575 := (iNsTr_574 | iNsTr_30)
    iNsTr_576 := (iNsTr_575 | iNsTr_39)
    iNsTr_577 := (iNsTr_576 | iNsTr_48)
    iNsTr_578 := (iNsTr_577 | iNsTr_57)
    iNsTr_579 := (iNsTr_578 | iNsTr_66)
    iNsTr_580 := (iNsTr_579 | iNsTr_75)
    iNsTr_581 := (iNsTr_580 | iNsTr_84)
    iNsTr_582 := (iNsTr_581 | iNsTr_93)
    iNsTr_583 := (iNsTr_582 | iNsTr_102)
    iNsTr_584 := (iNsTr_583 | iNsTr_111)
    iNsTr_585 := (iNsTr_584 | iNsTr_120)
    iNsTr_586 := (iNsTr_585 | iNsTr_129)
    iNsTr_587 := (iNsTr_586 | iNsTr_138)
    iNsTr_588 := (iNsTr_587 | iNsTr_147)
    iNsTr_589 := (iNsTr_588 | iNsTr_156)
    iNsTr_590 := (iNsTr_589 | iNsTr_165)
    iNsTr_591 := (iNsTr_590 | iNsTr_174)
    iNsTr_592 := (iNsTr_591 | iNsTr_183)
    iNsTr_593 := (iNsTr_592 | iNsTr_192)
    iNsTr_594 := (iNsTr_593 | iNsTr_201)
    iNsTr_595 := (iNsTr_594 | iNsTr_210)
    iNsTr_596 := (iNsTr_595 | iNsTr_219)
    iNsTr_597 := (iNsTr_596 | iNsTr_228)
    iNsTr_598 := (iNsTr_597 | iNsTr_237)
    iNsTr_599 := (iNsTr_598 | iNsTr_246)
    iNsTr_600 := (iNsTr_599 | iNsTr_255)
    iNsTr_601 := (iNsTr_600 | iNsTr_264)
    iNsTr_602 := (iNsTr_601 | iNsTr_273)
    iNsTr_603 := (iNsTr_602 | iNsTr_282)
    iNsTr_604 := (iNsTr_603 | iNsTr_291)
    iNsTr_605 := (iNsTr_604 | iNsTr_300)
    iNsTr_606 := (iNsTr_605 | iNsTr_309)
    iNsTr_607 := (iNsTr_606 | iNsTr_318)
    iNsTr_608 := (iNsTr_607 | iNsTr_327)
    iNsTr_609 := (iNsTr_608 | iNsTr_336)
    iNsTr_610 := (iNsTr_609 | iNsTr_345)
    iNsTr_611 := (iNsTr_610 | iNsTr_354)
    iNsTr_612 := (iNsTr_611 | iNsTr_363)
    iNsTr_613 := (iNsTr_612 | iNsTr_372)
    iNsTr_614 := (iNsTr_613 | iNsTr_381)
    iNsTr_615 := (iNsTr_614 | iNsTr_390)
    iNsTr_616 := (iNsTr_615 | iNsTr_399)
    iNsTr_617 := (iNsTr_616 | iNsTr_408)
    iNsTr_618 := (iNsTr_617 | iNsTr_417)
    iNsTr_619 := (iNsTr_618 | iNsTr_426)
    iNsTr_620 := (iNsTr_619 | iNsTr_435)
    iNsTr_621 := (iNsTr_620 | iNsTr_444)
    iNsTr_622 := (iNsTr_621 | iNsTr_453)
    iNsTr_623 := (iNsTr_622 | iNsTr_462)
    iNsTr_624 := (iNsTr_623 | iNsTr_471)
    iNsTr_625 := (iNsTr_624 | iNsTr_480)
    iNsTr_626 := (iNsTr_625 | iNsTr_489)
    iNsTr_627 := (iNsTr_626 | iNsTr_498)
    iNsTr_628 := (iNsTr_627 | iNsTr_507)
    iNsTr_629 := (iNsTr_628 | iNsTr_516)
    iNsTr_630 := (iNsTr_629 | iNsTr_525)
    iNsTr_631 := (iNsTr_630 | iNsTr_534)
    iNsTr_632 := (iNsTr_631 | iNsTr_543)
    iNsTr_633 := (iNsTr_632 | iNsTr_552)
    iNsTr_634 := (iNsTr_633 | iNsTr_561)
    iNsTr_635 := (iNsTr_634 | iNsTr_570)
    iNsTr_636 := ($bitcast ($pointer< $uint<32> >) p_src)
    // load 
    iNsTr_637 := ->(iNsTr_636) 
    iNsTr_638 := ($bitcast ($pointer< $uint<32> >) p_dst)
    ->(iNsTr_638) := iNsTr_637
    iNsTr_640 := ($bitcast ($pointer< $uint<32> >) iNsTr_123)
    // load 
    iNsTr_641 := ->(iNsTr_640) 
    iNsTr_642 := ($bitcast ($pointer< $uint<32> >) iNsTr_126)
    ->(iNsTr_642) := iNsTr_641
    iNsTr_644 := ($bitcast ($pointer< $uint<32> >) iNsTr_15)
    // load 
    iNsTr_645 := ->(iNsTr_644) 
    iNsTr_646 := ($bitcast ($pointer< $uint<32> >) iNsTr_18)
    ->(iNsTr_646) := iNsTr_645
    iNsTr_648 := ($bitcast ($pointer< $uint<32> >) iNsTr_141)
    // load 
    iNsTr_649 := ->(iNsTr_648) 
    iNsTr_650 := ($bitcast ($pointer< $uint<32> >) iNsTr_144)
    ->(iNsTr_650) := iNsTr_649
    iNsTr_652 := ($bitcast ($pointer< $uint<32> >) iNsTr_24)
    // load 
    iNsTr_653 := ->(iNsTr_652) 
    iNsTr_654 := ($bitcast ($pointer< $uint<32> >) iNsTr_27)
    ->(iNsTr_654) := iNsTr_653
    iNsTr_656 := ($bitcast ($pointer< $uint<32> >) iNsTr_222)
    // load 
    iNsTr_657 := ->(iNsTr_656) 
    iNsTr_658 := ($bitcast ($pointer< $uint<32> >) iNsTr_225)
    ->(iNsTr_658) := iNsTr_657
    iNsTr_660 := ($bitcast ($pointer< $uint<32> >) iNsTr_78)
    // load 
    iNsTr_661 := ->(iNsTr_660) 
    iNsTr_662 := ($bitcast ($pointer< $uint<32> >) iNsTr_81)
    ->(iNsTr_662) := iNsTr_661
    iNsTr_664 := ($bitcast ($pointer< $uint<32> >) iNsTr_276)
    // load 
    iNsTr_665 := ->(iNsTr_664) 
    iNsTr_666 := ($bitcast ($pointer< $uint<32> >) iNsTr_279)
    ->(iNsTr_666) := iNsTr_665
    iNsTr_668 := ($bitcast ($pointer< $uint<32> >) iNsTr_87)
    // load 
    iNsTr_669 := ->(iNsTr_668) 
    iNsTr_670 := ($bitcast ($pointer< $uint<32> >) iNsTr_90)
    ->(iNsTr_670) := iNsTr_669
    iNsTr_672 := ($bitcast ($pointer< $uint<32> >) iNsTr_348)
    // load 
    iNsTr_673 := ->(iNsTr_672) 
    iNsTr_674 := ($bitcast ($pointer< $uint<32> >) iNsTr_351)
    ->(iNsTr_674) := iNsTr_673
    iNsTr_676 := ($bitcast ($pointer< $uint<32> >) iNsTr_177)
    // load 
    iNsTr_677 := ->(iNsTr_676) 
    iNsTr_678 := ($bitcast ($pointer< $uint<32> >) iNsTr_180)
    ->(iNsTr_678) := iNsTr_677
    iNsTr_680 := ($bitcast ($pointer< $uint<32> >) iNsTr_411)
    // load 
    iNsTr_681 := ->(iNsTr_680) 
    iNsTr_682 := ($bitcast ($pointer< $uint<32> >) iNsTr_414)
    ->(iNsTr_682) := iNsTr_681
    iNsTr_684 := ($bitcast ($pointer< $uint<32> >) iNsTr_186)
    // load 
    iNsTr_685 := ->(iNsTr_684) 
    iNsTr_686 := ($bitcast ($pointer< $uint<32> >) iNsTr_189)
    ->(iNsTr_686) := iNsTr_685
    iNsTr_688 := ($bitcast ($pointer< $uint<32> >) iNsTr_447)
    // load 
    iNsTr_689 := ->(iNsTr_688) 
    iNsTr_690 := ($bitcast ($pointer< $uint<32> >) iNsTr_450)
    ->(iNsTr_690) := iNsTr_689
    iNsTr_692 := ($bitcast ($pointer< $uint<32> >) iNsTr_312)
    // load 
    iNsTr_693 := ->(iNsTr_692) 
    iNsTr_694 := ($bitcast ($pointer< $uint<32> >) iNsTr_315)
    ->(iNsTr_694) := iNsTr_693
    iNsTr_696 := ($bitcast ($pointer< $uint<32> >) iNsTr_510)
    // load 
    iNsTr_697 := ->(iNsTr_696) 
    iNsTr_698 := ($bitcast ($pointer< $uint<32> >) iNsTr_513)
    ->(iNsTr_698) := iNsTr_697
    // compare instruction
    iNsTr_700 := ( ($bitcast ( $int<16>) iNsTr_635) !=   ($bitcast ( $int<16>) ( $bitcast ($uint<16> ) _b0000000000000000 )  ) )
    ret_val__ := ($cast ($uint<32>) iNsTr_700)
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [zigzag_interleave_8x8_cavlc] 
$in (dst : $pointer< $uint<16> > src : $pointer< $uint<16> > nnz : $pointer< $uint<8> > )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bbx_xnph
    $place [bbx_xnph_bb_1]
    //begin: basic-block bb_1
    $merge bb_1_bb_1 bbx_xnph_bb_1
    $phi jx_x02 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph_bb_1 ( $cast ($uint<32>) iNsTr_5) $on bb_1_bb_1 
    $phi nzx_x01 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph_bb_1 ( $cast ($uint<32>) iNsTr_3) $on bb_1_bb_1 
    $endmerge
    tmp22 := (jx_x02 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    scevgep := src[tmp22]
    scevgep9 := dst[jx_x02]
    // load 
    iNsTr_1 := ->(scevgep) 
    iNsTr_2 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_1) )
    iNsTr_3 := (iNsTr_2 | nzx_x01)
    ->(scevgep9) := iNsTr_1
    iNsTr_5 := (jx_x02 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond21 := (iNsTr_5 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond21 $then  $place [bb_1_bbx_xnphx_x1] $else $place [bb_1_bb_1] $endif 
    //begin: basic-block bb_2
    $merge bb_7_bb_2
    $phi xx_xlcssa :=  ( $cast ($uint<32>) iNsTr_32) $on bb_7_bb_2 
    $endmerge
    // compare instruction
    phitmpx_x3 := ( ($bitcast ( $int<32>) xx_xlcssa) !=   ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    iNsTr_36 := ($cast ($uint<8>) phitmpx_x3)
    iNsTr_37 := nnz[( $bitcast ($uint<32> ) _b00000000000000000000000000001001 ) ]
    ->(iNsTr_37) := iNsTr_36
    $place [return__]
    //begin: basic-block bb_3
    $merge bb_3_bb_3 bbx_xnphx_x1_bb_3
    $phi jx_x02x_x1 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_x1_bb_3 ( $cast ($uint<32>) iNsTr_14) $on bb_3_bb_3 
    $phi nzx_x01x_x1 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_x1_bb_3 ( $cast ($uint<32>) iNsTr_12) $on bb_3_bb_3 
    $endmerge
    tmp15 := (jx_x02x_x1 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    tmp16 := (tmp15 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgepx_x1 := src[tmp16]
    tmp18 := (jx_x02x_x1 + ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    scevgep9x_x1 := dst[tmp18]
    // load 
    iNsTr_10 := ->(scevgepx_x1) 
    iNsTr_11 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_10) )
    iNsTr_12 := (iNsTr_11 | nzx_x01x_x1)
    ->(scevgep9x_x1) := iNsTr_10
    iNsTr_14 := (jx_x02x_x1 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond14 := (iNsTr_14 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond14 $then  $place [bb_3_bbx_xnphx_x2] $else $place [bb_3_bb_3] $endif 
    //begin: basic-block bbx_xnphx_x1
    $merge bb_1_bbx_xnphx_x1
    $phi xx_xlcssa20 :=  ( $cast ($uint<32>) iNsTr_3) $on bb_1_bbx_xnphx_x1 
    $endmerge
    // compare instruction
    phitmp := ( ($bitcast ( $int<32>) xx_xlcssa20) !=   ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    iNsTr_7 := ($cast ($uint<8>) phitmp)
    ->(nnz) := iNsTr_7
    $place [bbx_xnphx_x1_bb_3]
    //begin: basic-block bb_5
    $merge bb_5_bb_5 bbx_xnphx_x2_bb_5
    $phi jx_x02x_x2 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_x2_bb_5 ( $cast ($uint<32>) iNsTr_24) $on bb_5_bb_5 
    $phi nzx_x01x_x2 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_x2_bb_5 ( $cast ($uint<32>) iNsTr_22) $on bb_5_bb_5 
    $endmerge
    tmp8 := (jx_x02x_x2 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    tmp9 := (tmp8 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgepx_x2 := src[tmp9]
    tmp11 := (jx_x02x_x2 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    scevgep9x_x2 := dst[tmp11]
    // load 
    iNsTr_20 := ->(scevgepx_x2) 
    iNsTr_21 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_20) )
    iNsTr_22 := (iNsTr_21 | nzx_x01x_x2)
    ->(scevgep9x_x2) := iNsTr_20
    iNsTr_24 := (jx_x02x_x2 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond7 := (iNsTr_24 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond7 $then  $place [bb_5_bbx_xnphx_x3] $else $place [bb_5_bb_5] $endif 
    //begin: basic-block bbx_xnphx_x2
    $merge bb_3_bbx_xnphx_x2
    $phi xx_xlcssa13 :=  ( $cast ($uint<32>) iNsTr_12) $on bb_3_bbx_xnphx_x2 
    $endmerge
    // compare instruction
    phitmpx_x1 := ( ($bitcast ( $int<32>) xx_xlcssa13) !=   ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    iNsTr_16 := ($cast ($uint<8>) phitmpx_x1)
    iNsTr_17 := nnz[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    ->(iNsTr_17) := iNsTr_16
    $place [bbx_xnphx_x2_bb_5]
    //begin: basic-block bb_7
    $merge bb_7_bb_7 bbx_xnphx_x3_bb_7
    $phi jx_x02x_x3 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_x3_bb_7 ( $cast ($uint<32>) iNsTr_34) $on bb_7_bb_7 
    $phi nzx_x01x_x3 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_x3_bb_7 ( $cast ($uint<32>) iNsTr_32) $on bb_7_bb_7 
    $endmerge
    tmp := (jx_x02x_x3 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    tmp2 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgepx_x3 := src[tmp2]
    tmp4 := (jx_x02x_x3 + ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 ) )
    scevgep9x_x3 := dst[tmp4]
    // load 
    iNsTr_30 := ->(scevgepx_x3) 
    iNsTr_31 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_30) )
    iNsTr_32 := (iNsTr_31 | nzx_x01x_x3)
    ->(scevgep9x_x3) := iNsTr_30
    iNsTr_34 := (jx_x02x_x3 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (iNsTr_34 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond1 $then  $place [bb_7_bb_2] $else $place [bb_7_bb_7] $endif 
    //begin: basic-block bbx_xnphx_x3
    $merge bb_5_bbx_xnphx_x3
    $phi xx_xlcssa6 :=  ( $cast ($uint<32>) iNsTr_22) $on bb_5_bbx_xnphx_x3 
    $endmerge
    // compare instruction
    phitmpx_x2 := ( ($bitcast ( $int<32>) xx_xlcssa6) !=   ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    iNsTr_26 := ($cast ($uint<8>) phitmpx_x2)
    iNsTr_27 := nnz[( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) ]
    ->(iNsTr_27) := iNsTr_26
    $place [bbx_xnphx_x3_bb_7]
    $merge return__ $endmerge
  }
}
$module [x264_cabac_encode_decision_c] 
$in (cb : $pointer< $record < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $pointer< $uint<8> > > < $pointer< $uint<8> > > < $pointer< $uint<8> > > < $array [4] $of $uint<8> > < $uint<32> > < $array [1024] $of $uint<8> > < $array [12] $of $uint<8> >  > i_ctx : $uint<32> b : $uint<32> )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    iNsTr_0 := cb[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000001001 ) ][i_ctx]
    // load 
    iNsTr_1 := ->(iNsTr_0) 
    iNsTr_2 := ($cast ($uint<32>) iNsTr_1)
    iNsTr_3 := cb[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_4 := ->(iNsTr_3) 
    iNsTr_5 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_4) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 )  )))
    iNsTr_6 := (iNsTr_5 + ( $bitcast ($uint<32> ) _b11111111111111111111111111111100 ) )
    iNsTr_7 := (iNsTr_2 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_8 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_range_lps[iNsTr_7][iNsTr_6])
    // load 
    iNsTr_9 := ->(iNsTr_8) 
    iNsTr_10 := ($cast ($uint<32>) iNsTr_9)
    iNsTr_11 := (iNsTr_4 - iNsTr_10)
    ->(iNsTr_3) := iNsTr_11
    iNsTr_13 := (iNsTr_2 & ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    iNsTr_14 := (iNsTr_13 == b )
    $if iNsTr_14 $then  $place [bb_0_xx_x_crit_edge] $else $place [bb_0_bb_1] $endif 
    //begin: basic-block bb_1
    $merge bb_0_bb_1
    $endmerge
    iNsTr_36 := cb[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    // load 
    iNsTr_37 := ->(iNsTr_36) 
    iNsTr_38 := (iNsTr_37 + iNsTr_11)
    ->(iNsTr_36) := iNsTr_38
    ->(iNsTr_3) := iNsTr_10
    $place [bb_1_xx_x_crit_edge]
    //begin: basic-block xx_x_crit_edge
    $merge bb_0_xx_x_crit_edge bb_1_xx_x_crit_edge
    $endmerge
    iNsTr_16 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_transition[iNsTr_2][b])
    // load 
    iNsTr_17 := ->(iNsTr_16) 
    ->(iNsTr_0) := iNsTr_17
    // load 
    iNsTr_19 := ->(iNsTr_3) 
    iNsTr_20 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_19) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 )  )))
    iNsTr_21 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_renorm_shift[iNsTr_20])
    // load 
    iNsTr_22 := ->(iNsTr_21) 
    iNsTr_23 := ($cast ($uint<32>) iNsTr_22)
    iNsTr_24 := (iNsTr_19 << iNsTr_23)
    ->(iNsTr_3) := iNsTr_24
    iNsTr_26 := cb[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    // load 
    iNsTr_27 := ->(iNsTr_26) 
    iNsTr_28 := (iNsTr_27 << iNsTr_23)
    ->(iNsTr_26) := iNsTr_28
    iNsTr_30 := cb[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_31 := ->(iNsTr_30) 
    iNsTr_32 := (iNsTr_31 + iNsTr_23)
    ->(iNsTr_30) := iNsTr_32
    // compare instruction
    iNsTr_34 := ( ($bitcast ( $int<32>) iNsTr_32) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    $if iNsTr_34 $then  $place [xx_x_crit_edge_bb_3] $else $place [xx_x_crit_edge_x264_cabac_encode_renormx_xexit] $endif 
    //begin: basic-block bb_3
    $merge xx_x_crit_edge_bb_3
    $endmerge
    iNsTr_42 := (iNsTr_32 + ( $bitcast ($uint<32> ) _b00000000000000000000000000001010 ) )
    iNsTr_43 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_28) >>  ($bitcast ( $int<32>) iNsTr_42 )))
    iNsTr_44 := (( $bitcast ($uint<32> ) _b00000000000000000000010000000000 )  << iNsTr_32)
    iNsTr_45 := (iNsTr_44 + ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) )
    iNsTr_46 := (iNsTr_45 & iNsTr_28)
    ->(iNsTr_26) := iNsTr_46
    iNsTr_48 := (iNsTr_32 + ( $bitcast ($uint<32> ) _b11111111111111111111111111111000 ) )
    ->(iNsTr_30) := iNsTr_48
    iNsTr_50 := (iNsTr_43 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    // compare instruction
    iNsTr_51 := (iNsTr_50 == ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_51 $then  $place [bb_3_bb_4] $else $place [bb_3_bb_5] $endif 
    //begin: basic-block bb_4
    $merge bb_3_bb_4
    $endmerge
    iNsTr_54 := cb[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    iNsTr_55 := ->(iNsTr_54) 
    iNsTr_56 := (iNsTr_55 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    ->(iNsTr_54) := iNsTr_56
    $place [bb_4_UnifiedReturnBlock]
    //begin: basic-block bb_5
    $merge bb_3_bb_5
    $endmerge
    iNsTr_59 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_43) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 )  )))
    iNsTr_60 := cb[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    iNsTr_61 := ->(iNsTr_60) 
    iNsTr_62 := cb[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) ]
    // load 
    iNsTr_63 := ->(iNsTr_62) 
    iNsTr_64 := iNsTr_63[( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) ]
    // load 
    iNsTr_65 := ->(iNsTr_64) 
    iNsTr_66 := ($cast ($uint<32>) iNsTr_65)
    iNsTr_67 := (iNsTr_66 + iNsTr_59)
    iNsTr_68 := ($cast ($uint<8>) iNsTr_67)
    ->(iNsTr_64) := iNsTr_68
    // compare instruction
    iNsTr_70 := ( ($bitcast ( $int<32>) iNsTr_61) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    $if iNsTr_70 $then  $place [bb_5_bbx_xnphx_xix_xi] $else $place [bb_5_xx_x_crit_edgex_xix_xi] $endif 
    //begin: basic-block bbx_xnphx_xix_xi
    $merge bb_5_bbx_xnphx_xix_xi
    $endmerge
    iNsTr_73 := (iNsTr_59 + ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    iNsTr_74 := ($cast ($uint<8>) iNsTr_73)
    $place [bbx_xnphx_xix_xi_bb_7]
    //begin: basic-block bb_7
    $merge bb_7_bb_7 bbx_xnphx_xix_xi_bb_7
    $phi indvarx_xix_xi :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xix_xi_bb_7 ( $cast ($uint<32>) indvarx_xnextx_xix_xi) $on bb_7_bb_7 
    $endmerge
    // load 
    iNsTr_83 := ->(iNsTr_62) 
    iNsTr_84 := iNsTr_83[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    ->(iNsTr_62) := iNsTr_84
    ->(iNsTr_83) := iNsTr_74
    indvarx_xnextx_xix_xi := (indvarx_xix_xi + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (indvarx_xnextx_xix_xi == iNsTr_61 )
    $if exitcond1 $then  $place [bb_7_xx_x_crit_edgex_xix_xix_xloopexit] $else $place [bb_7_bb_7] $endif 
    //begin: basic-block xx_x_crit_edgex_xix_xix_xloopexit
    $merge bb_7_xx_x_crit_edgex_xix_xix_xloopexit
    $endmerge
    $place [xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi]
    //begin: basic-block xx_x_crit_edgex_xix_xi
    $merge bb_5_xx_x_crit_edgex_xix_xi xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi
    $endmerge
    iNsTr_76 := ($cast ($uint<8>) iNsTr_43)
    // load 
    iNsTr_77 := ->(iNsTr_62) 
    iNsTr_78 := iNsTr_77[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    ->(iNsTr_62) := iNsTr_78
    ->(iNsTr_77) := iNsTr_76
    ->(iNsTr_60) := ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) 
    $place [xx_x_crit_edgex_xix_xi_UnifiedReturnBlock]
    //begin: basic-block x264_cabac_encode_renormx_xexit
    $merge xx_x_crit_edge_x264_cabac_encode_renormx_xexit
    $endmerge
    $place [x264_cabac_encode_renormx_xexit_UnifiedReturnBlock]
    //begin: basic-block UnifiedReturnBlock
    $merge bb_4_UnifiedReturnBlock x264_cabac_encode_renormx_xexit_UnifiedReturnBlock xx_x_crit_edgex_xix_xi_UnifiedReturnBlock
    $endmerge
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [x264_cabac_encode_bypass_c] 
$in (cb : $pointer< $record < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $pointer< $uint<8> > > < $pointer< $uint<8> > > < $pointer< $uint<8> > > < $array [4] $of $uint<8> > < $uint<32> > < $array [1024] $of $uint<8> > < $array [12] $of $uint<8> >  > b : $uint<32> )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    iNsTr_0 := cb[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    // load 
    iNsTr_1 := ->(iNsTr_0) 
    iNsTr_2 := (iNsTr_1 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_3 := cb[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_4 := ->(iNsTr_3) 
    iNsTr_5 := (iNsTr_4 & b)
    iNsTr_6 := (iNsTr_5 + iNsTr_2)
    ->(iNsTr_0) := iNsTr_6
    iNsTr_8 := cb[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_9 := ->(iNsTr_8) 
    iNsTr_10 := (iNsTr_9 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    ->(iNsTr_8) := iNsTr_10
    // compare instruction
    iNsTr_12 := ( ($bitcast ( $int<32>) iNsTr_10) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    $if iNsTr_12 $then  $place [bb_0_bb_1] $else $place [bb_0_x264_cabac_putbytex_xexit] $endif 
    //begin: basic-block bb_1
    $merge bb_0_bb_1
    $endmerge
    iNsTr_14 := (iNsTr_9 + ( $bitcast ($uint<32> ) _b00000000000000000000000000001011 ) )
    iNsTr_15 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_6) >>  ($bitcast ( $int<32>) iNsTr_14 )))
    iNsTr_16 := (( $bitcast ($uint<32> ) _b00000000000000000000010000000000 )  << iNsTr_10)
    iNsTr_17 := (iNsTr_16 + ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) )
    iNsTr_18 := (iNsTr_6 & iNsTr_17)
    ->(iNsTr_0) := iNsTr_18
    iNsTr_20 := (iNsTr_9 + ( $bitcast ($uint<32> ) _b11111111111111111111111111111001 ) )
    ->(iNsTr_8) := iNsTr_20
    iNsTr_22 := (iNsTr_15 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    // compare instruction
    iNsTr_23 := (iNsTr_22 == ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_23 $then  $place [bb_1_bb_2] $else $place [bb_1_bb_3] $endif 
    //begin: basic-block bb_2
    $merge bb_1_bb_2
    $endmerge
    iNsTr_26 := cb[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    iNsTr_27 := ->(iNsTr_26) 
    iNsTr_28 := (iNsTr_27 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    ->(iNsTr_26) := iNsTr_28
    $place [bb_2_UnifiedReturnBlock]
    //begin: basic-block bb_3
    $merge bb_1_bb_3
    $endmerge
    iNsTr_31 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_15) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 )  )))
    iNsTr_32 := cb[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    iNsTr_33 := ->(iNsTr_32) 
    iNsTr_34 := cb[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) ]
    // load 
    iNsTr_35 := ->(iNsTr_34) 
    iNsTr_36 := iNsTr_35[( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) ]
    // load 
    iNsTr_37 := ->(iNsTr_36) 
    iNsTr_38 := ($cast ($uint<32>) iNsTr_37)
    iNsTr_39 := (iNsTr_38 + iNsTr_31)
    iNsTr_40 := ($cast ($uint<8>) iNsTr_39)
    ->(iNsTr_36) := iNsTr_40
    // compare instruction
    iNsTr_42 := ( ($bitcast ( $int<32>) iNsTr_33) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    $if iNsTr_42 $then  $place [bb_3_bbx_xnphx_xi] $else $place [bb_3_xx_x_crit_edgex_xi] $endif 
    //begin: basic-block bbx_xnphx_xi
    $merge bb_3_bbx_xnphx_xi
    $endmerge
    iNsTr_45 := (iNsTr_31 + ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    iNsTr_46 := ($cast ($uint<8>) iNsTr_45)
    $place [bbx_xnphx_xi_bb_5]
    //begin: basic-block bb_5
    $merge bb_5_bb_5 bbx_xnphx_xi_bb_5
    $phi indvarx_xi :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xi_bb_5 ( $cast ($uint<32>) indvarx_xnextx_xi) $on bb_5_bb_5 
    $endmerge
    // load 
    iNsTr_55 := ->(iNsTr_34) 
    iNsTr_56 := iNsTr_55[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    ->(iNsTr_34) := iNsTr_56
    ->(iNsTr_55) := iNsTr_46
    indvarx_xnextx_xi := (indvarx_xi + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (indvarx_xnextx_xi == iNsTr_33 )
    $if exitcond1 $then  $place [bb_5_xx_x_crit_edgex_xix_xloopexit] $else $place [bb_5_bb_5] $endif 
    //begin: basic-block xx_x_crit_edgex_xix_xloopexit
    $merge bb_5_xx_x_crit_edgex_xix_xloopexit
    $endmerge
    $place [xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi]
    //begin: basic-block xx_x_crit_edgex_xi
    $merge bb_3_xx_x_crit_edgex_xi xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi
    $endmerge
    iNsTr_48 := ($cast ($uint<8>) iNsTr_15)
    // load 
    iNsTr_49 := ->(iNsTr_34) 
    iNsTr_50 := iNsTr_49[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    ->(iNsTr_34) := iNsTr_50
    ->(iNsTr_49) := iNsTr_48
    ->(iNsTr_32) := ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) 
    $place [xx_x_crit_edgex_xi_UnifiedReturnBlock]
    //begin: basic-block x264_cabac_putbytex_xexit
    $merge bb_0_x264_cabac_putbytex_xexit
    $endmerge
    $place [x264_cabac_putbytex_xexit_UnifiedReturnBlock]
    //begin: basic-block UnifiedReturnBlock
    $merge bb_2_UnifiedReturnBlock x264_cabac_putbytex_xexit_UnifiedReturnBlock xx_x_crit_edgex_xi_UnifiedReturnBlock
    $endmerge
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [x264_cabac_encode_ue_bypass] 
$in (cb : $pointer< $record < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $pointer< $uint<8> > > < $pointer< $uint<8> > > < $pointer< $uint<8> > > < $array [4] $of $uint<8> > < $uint<32> > < $array [1024] $of $uint<8> > < $array [12] $of $uint<8> >  > exp_bits : $uint<32> val : $uint<32> )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    iNsTr_0 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  << exp_bits)
    iNsTr_1 := (iNsTr_0 + val)
    // ERROR: Unsupported intrinsic instruction.
    iNsTr_3 := (( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  - iNsTr_2)
    iNsTr_4 := (iNsTr_3 - exp_bits)
    iNsTr_5 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_bypass_lut[iNsTr_4])
    // load 
    iNsTr_6 := ->(iNsTr_5) 
    iNsTr_7 := (iNsTr_6 << exp_bits)
    iNsTr_8 := (iNsTr_7 + iNsTr_1)
    iNsTr_9 := (iNsTr_3 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_10 := (iNsTr_9 | ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_11 := (iNsTr_10 - exp_bits)
    iNsTr_12 := (iNsTr_11 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    iNsTr_13 := (iNsTr_12 & ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    iNsTr_14 := (iNsTr_13 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_15 := cb[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    iNsTr_16 := cb[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    iNsTr_17 := cb[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    iNsTr_18 := cb[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    iNsTr_19 := cb[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) ]
    $place [bb_0_x264_cabac_putbytex_xexitx_x_crit_edge]
    //begin: basic-block x264_cabac_putbytex_xexitx_x_crit_edge
    $merge bb_0_x264_cabac_putbytex_xexitx_x_crit_edge x264_cabac_putbytex_xexit_x264_cabac_putbytex_xexitx_x_crit_edge
    $phi kx_x0 :=  ( $cast ($uint<32>) iNsTr_11) $on bb_0_x264_cabac_putbytex_xexitx_x_crit_edge ( $cast ($uint<32>) iNsTr_21) $on x264_cabac_putbytex_xexit_x264_cabac_putbytex_xexitx_x_crit_edge 
    $phi ix_x0 :=  ( $cast ($uint<32>) iNsTr_14) $on bb_0_x264_cabac_putbytex_xexitx_x_crit_edge ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) ) $on x264_cabac_putbytex_xexit_x264_cabac_putbytex_xexitx_x_crit_edge 
    $endmerge
    iNsTr_21 := (kx_x0 - ix_x0)
    // load 
    iNsTr_22 := ->(iNsTr_15) 
    iNsTr_23 := (iNsTr_22 << ix_x0)
    iNsTr_24 := (iNsTr_8 >> iNsTr_21)
    iNsTr_25 := (iNsTr_24 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    // load 
    iNsTr_26 := ->(iNsTr_16) 
    iNsTr_27 := (iNsTr_25 * iNsTr_26)
    iNsTr_28 := (iNsTr_27 + iNsTr_23)
    ->(iNsTr_15) := iNsTr_28
    // load 
    iNsTr_30 := ->(iNsTr_17) 
    iNsTr_31 := (iNsTr_30 + ix_x0)
    ->(iNsTr_17) := iNsTr_31
    // compare instruction
    iNsTr_33 := ( ($bitcast ( $int<32>) iNsTr_31) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    $if iNsTr_33 $then  $place [x264_cabac_putbytex_xexitx_x_crit_edge_bb_2] $else $place [x264_cabac_putbytex_xexitx_x_crit_edge_x264_cabac_putbytex_xexit] $endif 
    //begin: basic-block bb_2
    $merge x264_cabac_putbytex_xexitx_x_crit_edge_bb_2
    $endmerge
    iNsTr_35 := (iNsTr_31 + ( $bitcast ($uint<32> ) _b00000000000000000000000000001010 ) )
    iNsTr_36 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_28) >>  ($bitcast ( $int<32>) iNsTr_35 )))
    iNsTr_37 := (( $bitcast ($uint<32> ) _b00000000000000000000010000000000 )  << iNsTr_31)
    iNsTr_38 := (iNsTr_37 + ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) )
    iNsTr_39 := (iNsTr_28 & iNsTr_38)
    ->(iNsTr_15) := iNsTr_39
    iNsTr_41 := (iNsTr_31 + ( $bitcast ($uint<32> ) _b11111111111111111111111111111000 ) )
    ->(iNsTr_17) := iNsTr_41
    iNsTr_43 := (iNsTr_36 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    // compare instruction
    iNsTr_44 := (iNsTr_43 == ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_44 $then  $place [bb_2_bb_3] $else $place [bb_2_bb_4] $endif 
    //begin: basic-block bb_3
    $merge bb_2_bb_3
    $endmerge
    // load 
    iNsTr_48 := ->(iNsTr_18) 
    iNsTr_49 := (iNsTr_48 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    ->(iNsTr_18) := iNsTr_49
    $place [bb_3_x264_cabac_putbytex_xexit]
    //begin: basic-block bb_4
    $merge bb_2_bb_4
    $endmerge
    iNsTr_52 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_36) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 )  )))
    // load 
    iNsTr_53 := ->(iNsTr_18) 
    // load 
    iNsTr_54 := ->(iNsTr_19) 
    iNsTr_55 := iNsTr_54[( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) ]
    // load 
    iNsTr_56 := ->(iNsTr_55) 
    iNsTr_57 := ($cast ($uint<32>) iNsTr_56)
    iNsTr_58 := (iNsTr_57 + iNsTr_52)
    iNsTr_59 := ($cast ($uint<8>) iNsTr_58)
    ->(iNsTr_55) := iNsTr_59
    // compare instruction
    iNsTr_61 := ( ($bitcast ( $int<32>) iNsTr_53) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    $if iNsTr_61 $then  $place [bb_4_bbx_xnphx_xi] $else $place [bb_4_xx_x_crit_edgex_xi] $endif 
    //begin: basic-block bbx_xnphx_xi
    $merge bb_4_bbx_xnphx_xi
    $endmerge
    iNsTr_64 := (iNsTr_52 + ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    iNsTr_65 := ($cast ($uint<8>) iNsTr_64)
    $place [bbx_xnphx_xi_bb_6]
    //begin: basic-block bb_6
    $merge bb_6_bb_6 bbx_xnphx_xi_bb_6
    $phi indvarx_xi :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xi_bb_6 ( $cast ($uint<32>) indvarx_xnextx_xi) $on bb_6_bb_6 
    $endmerge
    // load 
    iNsTr_74 := ->(iNsTr_19) 
    iNsTr_75 := iNsTr_74[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    ->(iNsTr_19) := iNsTr_75
    ->(iNsTr_74) := iNsTr_65
    indvarx_xnextx_xi := (indvarx_xi + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (indvarx_xnextx_xi == iNsTr_53 )
    $if exitcond1 $then  $place [bb_6_xx_x_crit_edgex_xix_xloopexit] $else $place [bb_6_bb_6] $endif 
    //begin: basic-block xx_x_crit_edgex_xix_xloopexit
    $merge bb_6_xx_x_crit_edgex_xix_xloopexit
    $endmerge
    $place [xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi]
    //begin: basic-block xx_x_crit_edgex_xi
    $merge bb_4_xx_x_crit_edgex_xi xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi
    $endmerge
    iNsTr_67 := ($cast ($uint<8>) iNsTr_36)
    // load 
    iNsTr_68 := ->(iNsTr_19) 
    iNsTr_69 := iNsTr_68[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    ->(iNsTr_19) := iNsTr_69
    ->(iNsTr_68) := iNsTr_67
    ->(iNsTr_18) := ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) 
    $place [xx_x_crit_edgex_xi_x264_cabac_putbytex_xexit]
    //begin: basic-block x264_cabac_putbytex_xexit
    $merge bb_3_x264_cabac_putbytex_xexit x264_cabac_putbytex_xexitx_x_crit_edge_x264_cabac_putbytex_xexit xx_x_crit_edgex_xi_x264_cabac_putbytex_xexit
    $endmerge
    // compare instruction
    iNsTr_46 := ( ($bitcast ( $int<32>) iNsTr_21) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    $if iNsTr_46 $then  $place [x264_cabac_putbytex_xexit_x264_cabac_putbytex_xexitx_x_crit_edge] $else $place [x264_cabac_putbytex_xexit_bb_10] $endif 
    //begin: basic-block bb_10
    $merge x264_cabac_putbytex_xexit_bb_10
    $endmerge
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [x264_cabac_encode_terminal_c] 
$in (cb : $pointer< $record < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $pointer< $uint<8> > > < $pointer< $uint<8> > > < $pointer< $uint<8> > > < $array [4] $of $uint<8> > < $uint<32> > < $array [1024] $of $uint<8> > < $array [12] $of $uint<8> >  > )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    iNsTr_0 := cb[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_1 := ->(iNsTr_0) 
    iNsTr_2 := (iNsTr_1 + ( $bitcast ($uint<32> ) _b11111111111111111111111111111110 ) )
    iNsTr_3 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_2) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 )  )))
    iNsTr_4 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_x264_cabac_renorm_shift[iNsTr_3])
    // load 
    iNsTr_5 := ->(iNsTr_4) 
    iNsTr_6 := ($cast ($uint<32>) iNsTr_5)
    iNsTr_7 := (iNsTr_2 << iNsTr_6)
    ->(iNsTr_0) := iNsTr_7
    iNsTr_9 := cb[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    // load 
    iNsTr_10 := ->(iNsTr_9) 
    iNsTr_11 := (iNsTr_10 << iNsTr_6)
    ->(iNsTr_9) := iNsTr_11
    iNsTr_13 := cb[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_14 := ->(iNsTr_13) 
    iNsTr_15 := (iNsTr_14 + iNsTr_6)
    ->(iNsTr_13) := iNsTr_15
    // compare instruction
    iNsTr_17 := ( ($bitcast ( $int<32>) iNsTr_15) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    $if iNsTr_17 $then  $place [bb_0_bb_1] $else $place [bb_0_x264_cabac_encode_renormx_xexit] $endif 
    //begin: basic-block bb_1
    $merge bb_0_bb_1
    $endmerge
    iNsTr_19 := (iNsTr_15 + ( $bitcast ($uint<32> ) _b00000000000000000000000000001010 ) )
    iNsTr_20 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_11) >>  ($bitcast ( $int<32>) iNsTr_19 )))
    iNsTr_21 := (( $bitcast ($uint<32> ) _b00000000000000000000010000000000 )  << iNsTr_15)
    iNsTr_22 := (iNsTr_21 + ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) )
    iNsTr_23 := (iNsTr_22 & iNsTr_11)
    ->(iNsTr_9) := iNsTr_23
    iNsTr_25 := (iNsTr_15 + ( $bitcast ($uint<32> ) _b11111111111111111111111111111000 ) )
    ->(iNsTr_13) := iNsTr_25
    iNsTr_27 := (iNsTr_20 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    // compare instruction
    iNsTr_28 := (iNsTr_27 == ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_28 $then  $place [bb_1_bb_2] $else $place [bb_1_bb_3] $endif 
    //begin: basic-block bb_2
    $merge bb_1_bb_2
    $endmerge
    iNsTr_31 := cb[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    iNsTr_32 := ->(iNsTr_31) 
    iNsTr_33 := (iNsTr_32 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    ->(iNsTr_31) := iNsTr_33
    $place [bb_2_UnifiedReturnBlock]
    //begin: basic-block bb_3
    $merge bb_1_bb_3
    $endmerge
    iNsTr_36 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_20) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 )  )))
    iNsTr_37 := cb[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    iNsTr_38 := ->(iNsTr_37) 
    iNsTr_39 := cb[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) ]
    // load 
    iNsTr_40 := ->(iNsTr_39) 
    iNsTr_41 := iNsTr_40[( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) ]
    // load 
    iNsTr_42 := ->(iNsTr_41) 
    iNsTr_43 := ($cast ($uint<32>) iNsTr_42)
    iNsTr_44 := (iNsTr_43 + iNsTr_36)
    iNsTr_45 := ($cast ($uint<8>) iNsTr_44)
    ->(iNsTr_41) := iNsTr_45
    // compare instruction
    iNsTr_47 := ( ($bitcast ( $int<32>) iNsTr_38) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    $if iNsTr_47 $then  $place [bb_3_bbx_xnphx_xix_xi] $else $place [bb_3_xx_x_crit_edgex_xix_xi] $endif 
    //begin: basic-block bbx_xnphx_xix_xi
    $merge bb_3_bbx_xnphx_xix_xi
    $endmerge
    iNsTr_50 := (iNsTr_36 + ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    iNsTr_51 := ($cast ($uint<8>) iNsTr_50)
    $place [bbx_xnphx_xix_xi_bb_5]
    //begin: basic-block bb_5
    $merge bb_5_bb_5 bbx_xnphx_xix_xi_bb_5
    $phi indvarx_xix_xi :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xix_xi_bb_5 ( $cast ($uint<32>) indvarx_xnextx_xix_xi) $on bb_5_bb_5 
    $endmerge
    // load 
    iNsTr_60 := ->(iNsTr_39) 
    iNsTr_61 := iNsTr_60[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    ->(iNsTr_39) := iNsTr_61
    ->(iNsTr_60) := iNsTr_51
    indvarx_xnextx_xix_xi := (indvarx_xix_xi + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (indvarx_xnextx_xix_xi == iNsTr_38 )
    $if exitcond1 $then  $place [bb_5_xx_x_crit_edgex_xix_xix_xloopexit] $else $place [bb_5_bb_5] $endif 
    //begin: basic-block xx_x_crit_edgex_xix_xix_xloopexit
    $merge bb_5_xx_x_crit_edgex_xix_xix_xloopexit
    $endmerge
    $place [xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi]
    //begin: basic-block xx_x_crit_edgex_xix_xi
    $merge bb_3_xx_x_crit_edgex_xix_xi xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi
    $endmerge
    iNsTr_53 := ($cast ($uint<8>) iNsTr_20)
    // load 
    iNsTr_54 := ->(iNsTr_39) 
    iNsTr_55 := iNsTr_54[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    ->(iNsTr_39) := iNsTr_55
    ->(iNsTr_54) := iNsTr_53
    ->(iNsTr_37) := ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) 
    $place [xx_x_crit_edgex_xix_xi_UnifiedReturnBlock]
    //begin: basic-block x264_cabac_encode_renormx_xexit
    $merge bb_0_x264_cabac_encode_renormx_xexit
    $endmerge
    $place [x264_cabac_encode_renormx_xexit_UnifiedReturnBlock]
    //begin: basic-block UnifiedReturnBlock
    $merge bb_2_UnifiedReturnBlock x264_cabac_encode_renormx_xexit_UnifiedReturnBlock xx_x_crit_edgex_xix_xi_UnifiedReturnBlock
    $endmerge
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [x264_cabac_encode_flush] 
$in (h : $pointer< structx_xx264_t > cb : $pointer< $record < $uint<32> > < $uint<32> > < $uint<32> > < $uint<32> > < $pointer< $uint<8> > > < $pointer< $uint<8> > > < $pointer< $uint<8> > > < $array [4] $of $uint<8> > < $uint<32> > < $array [1024] $of $uint<8> > < $array [12] $of $uint<8> >  > )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    iNsTr_0 := cb[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_1 := ->(iNsTr_0) 
    iNsTr_2 := cb[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    // load 
    iNsTr_3 := ->(iNsTr_2) 
    iNsTr_4 := (iNsTr_1 + ( $bitcast ($uint<32> ) _b00000000011111111111111111111110 ) )
    iNsTr_5 := (iNsTr_4 + iNsTr_3)
    iNsTr_6 := (iNsTr_5 << ( $bitcast ($uint<32> ) _b00000000000000000000000000001001 ) )
    iNsTr_7 := (iNsTr_6 | ( $bitcast ($uint<32> ) _b00000000000000000000001000000000 ) )
    ->(iNsTr_2) := iNsTr_7
    iNsTr_9 := cb[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_10 := ->(iNsTr_9) 
    iNsTr_11 := (iNsTr_10 + ( $bitcast ($uint<32> ) _b00000000000000000000000000001001 ) )
    ->(iNsTr_9) := iNsTr_11
    // compare instruction
    iNsTr_13 := ( ($bitcast ( $int<32>) iNsTr_11) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    $if iNsTr_13 $then  $place [bb_0_bb_1] $else $place [bb_0_x264_cabac_putbytex_xexitx_x_crit_edge] $endif 
    //begin: basic-block bb_1
    $merge bb_0_bb_1
    $endmerge
    iNsTr_15 := (iNsTr_10 + ( $bitcast ($uint<32> ) _b00000000000000000000000000010011 ) )
    iNsTr_16 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_7) >>  ($bitcast ( $int<32>) iNsTr_15 )))
    iNsTr_17 := (( $bitcast ($uint<32> ) _b00000000000000000000010000000000 )  << iNsTr_11)
    iNsTr_18 := (iNsTr_17 + ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) )
    iNsTr_19 := (iNsTr_7 & iNsTr_18)
    ->(iNsTr_2) := iNsTr_19
    iNsTr_21 := (iNsTr_10 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    ->(iNsTr_9) := iNsTr_21
    iNsTr_23 := (iNsTr_16 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    // compare instruction
    iNsTr_24 := (iNsTr_23 == ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_24 $then  $place [bb_1_bb_2] $else $place [bb_1_bb_3] $endif 
    //begin: basic-block bb_2
    $merge bb_1_bb_2
    $endmerge
    iNsTr_45 := cb[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    iNsTr_46 := ->(iNsTr_45) 
    iNsTr_47 := (iNsTr_46 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    ->(iNsTr_45) := iNsTr_47
    $place [bb_2_x264_cabac_putbytex_xexit]
    //begin: basic-block bb_3
    $merge bb_1_bb_3
    $endmerge
    iNsTr_50 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_16) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 )  )))
    iNsTr_51 := cb[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    iNsTr_52 := ->(iNsTr_51) 
    iNsTr_53 := cb[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) ]
    // load 
    iNsTr_54 := ->(iNsTr_53) 
    iNsTr_55 := iNsTr_54[( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) ]
    // load 
    iNsTr_56 := ->(iNsTr_55) 
    iNsTr_57 := ($cast ($uint<32>) iNsTr_56)
    iNsTr_58 := (iNsTr_57 + iNsTr_50)
    iNsTr_59 := ($cast ($uint<8>) iNsTr_58)
    ->(iNsTr_55) := iNsTr_59
    // compare instruction
    iNsTr_61 := ( ($bitcast ( $int<32>) iNsTr_52) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    $if iNsTr_61 $then  $place [bb_3_bbx_xnphx_xi] $else $place [bb_3_xx_x_crit_edgex_xi] $endif 
    //begin: basic-block bbx_xnphx_xi
    $merge bb_3_bbx_xnphx_xi
    $endmerge
    iNsTr_85 := (iNsTr_50 + ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    iNsTr_86 := ($cast ($uint<8>) iNsTr_85)
    $place [bbx_xnphx_xi_bb_5]
    //begin: basic-block bb_5
    $merge bb_5_bb_5 bbx_xnphx_xi_bb_5
    $phi indvarx_xi :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xi_bb_5 ( $cast ($uint<32>) indvarx_xnextx_xi) $on bb_5_bb_5 
    $endmerge
    // load 
    iNsTr_120 := ->(iNsTr_53) 
    iNsTr_121 := iNsTr_120[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    ->(iNsTr_53) := iNsTr_121
    ->(iNsTr_120) := iNsTr_86
    indvarx_xnextx_xi := (indvarx_xi + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (indvarx_xnextx_xi == iNsTr_52 )
    $if exitcond1 $then  $place [bb_5_xx_x_crit_edgex_xix_xloopexit] $else $place [bb_5_bb_5] $endif 
    //begin: basic-block xx_x_crit_edgex_xix_xloopexit
    $merge bb_5_xx_x_crit_edgex_xix_xloopexit
    $endmerge
    $place [xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi]
    //begin: basic-block xx_x_crit_edgex_xi
    $merge bb_3_xx_x_crit_edgex_xi xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi
    $endmerge
    iNsTr_88 := ($cast ($uint<8>) iNsTr_16)
    // load 
    iNsTr_89 := ->(iNsTr_53) 
    iNsTr_90 := iNsTr_89[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    ->(iNsTr_53) := iNsTr_90
    ->(iNsTr_89) := iNsTr_88
    ->(iNsTr_51) := ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) 
    // load 
    xx_xpre := ->(iNsTr_9) 
    $place [xx_x_crit_edgex_xi_x264_cabac_putbytex_xexit]
    //begin: basic-block x264_cabac_putbytex_xexit
    $merge bb_2_x264_cabac_putbytex_xexit xx_x_crit_edgex_xi_x264_cabac_putbytex_xexit
    $phi iNsTr_81 :=  ( $cast ($uint<32>) iNsTr_47) $on bb_2_x264_cabac_putbytex_xexit ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on xx_x_crit_edgex_xi_x264_cabac_putbytex_xexit 
    $phi iNsTr_82 :=  ( $cast ($uint<32>) iNsTr_21) $on bb_2_x264_cabac_putbytex_xexit ( $cast ($uint<32>) xx_xpre) $on xx_x_crit_edgex_xi_x264_cabac_putbytex_xexit 
    $endmerge
    // compare instruction
    iNsTr_83 := ( ($bitcast ( $int<32>) iNsTr_82) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    $if iNsTr_83 $then  $place [x264_cabac_putbytex_xexit_bb_9] $else $place [x264_cabac_putbytex_xexit_x264_cabac_putbytex_xexitx_x_crit_edge] $endif 
    //begin: basic-block bb_9
    $merge x264_cabac_putbytex_xexit_bb_9
    $endmerge
    // load 
    iNsTr_108 := ->(iNsTr_2) 
    iNsTr_109 := (iNsTr_82 + ( $bitcast ($uint<32> ) _b00000000000000000000000000001010 ) )
    iNsTr_110 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_108) >>  ($bitcast ( $int<32>) iNsTr_109 )))
    iNsTr_111 := (( $bitcast ($uint<32> ) _b00000000000000000000010000000000 )  << iNsTr_82)
    iNsTr_112 := (iNsTr_111 + ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) )
    iNsTr_113 := (iNsTr_108 & iNsTr_112)
    ->(iNsTr_2) := iNsTr_113
    iNsTr_115 := (iNsTr_82 + ( $bitcast ($uint<32> ) _b11111111111111111111111111111000 ) )
    ->(iNsTr_9) := iNsTr_115
    iNsTr_117 := (iNsTr_110 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    // compare instruction
    iNsTr_118 := (iNsTr_117 == ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_118 $then  $place [bb_9_bb_10] $else $place [bb_9_bb_11] $endif 
    //begin: basic-block bb_10
    $merge bb_9_bb_10
    $endmerge
    iNsTr_140 := cb[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    iNsTr_141 := (iNsTr_81 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    ->(iNsTr_140) := iNsTr_141
    $place [bb_10_x264_cabac_putbytex_xexitx_x_crit_edge]
    //begin: basic-block bb_11
    $merge bb_9_bb_11
    $endmerge
    iNsTr_144 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_110) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 )  )))
    iNsTr_145 := cb[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    iNsTr_146 := cb[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) ]
    // load 
    iNsTr_147 := ->(iNsTr_146) 
    iNsTr_148 := iNsTr_147[( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) ]
    // load 
    iNsTr_149 := ->(iNsTr_148) 
    iNsTr_150 := ($cast ($uint<32>) iNsTr_149)
    iNsTr_151 := (iNsTr_150 + iNsTr_144)
    iNsTr_152 := ($cast ($uint<8>) iNsTr_151)
    ->(iNsTr_148) := iNsTr_152
    // compare instruction
    iNsTr_154 := ( ($bitcast ( $int<32>) iNsTr_81) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    $if iNsTr_154 $then  $place [bb_11_bbx_xnphx_xi7] $else $place [bb_11_xx_x_crit_edgex_xi11] $endif 
    //begin: basic-block bbx_xnphx_xi7
    $merge bb_11_bbx_xnphx_xi7
    $endmerge
    iNsTr_159 := (iNsTr_144 + ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    iNsTr_160 := ($cast ($uint<8>) iNsTr_159)
    $place [bbx_xnphx_xi7_bb_13]
    //begin: basic-block bb_13
    $merge bb_13_bb_13 bbx_xnphx_xi7_bb_13
    $phi indvarx_xi8 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xi7_bb_13 ( $cast ($uint<32>) indvarx_xnextx_xi9) $on bb_13_bb_13 
    $endmerge
    // load 
    iNsTr_169 := ->(iNsTr_146) 
    iNsTr_170 := iNsTr_169[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    ->(iNsTr_146) := iNsTr_170
    ->(iNsTr_169) := iNsTr_160
    indvarx_xnextx_xi9 := (indvarx_xi8 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond := (indvarx_xnextx_xi9 == iNsTr_81 )
    $if exitcond $then  $place [bb_13_xx_x_crit_edgex_xi11x_xloopexit] $else $place [bb_13_bb_13] $endif 
    //begin: basic-block xx_x_crit_edgex_xi11x_xloopexit
    $merge bb_13_xx_x_crit_edgex_xi11x_xloopexit
    $endmerge
    $place [xx_x_crit_edgex_xi11x_xloopexit_xx_x_crit_edgex_xi11]
    //begin: basic-block xx_x_crit_edgex_xi11
    $merge bb_11_xx_x_crit_edgex_xi11 xx_x_crit_edgex_xi11x_xloopexit_xx_x_crit_edgex_xi11
    $endmerge
    iNsTr_162 := ($cast ($uint<8>) iNsTr_110)
    // load 
    iNsTr_163 := ->(iNsTr_146) 
    iNsTr_164 := iNsTr_163[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    ->(iNsTr_146) := iNsTr_164
    ->(iNsTr_163) := iNsTr_162
    ->(iNsTr_145) := ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) 
    // load 
    xx_xpre15 := ->(iNsTr_9) 
    $place [xx_x_crit_edgex_xi11_x264_cabac_putbytex_xexitx_x_crit_edge]
    //begin: basic-block x264_cabac_putbytex_xexitx_x_crit_edge
    $merge bb_0_x264_cabac_putbytex_xexitx_x_crit_edge bb_10_x264_cabac_putbytex_xexitx_x_crit_edge x264_cabac_putbytex_xexit_x264_cabac_putbytex_xexitx_x_crit_edge xx_x_crit_edgex_xi11_x264_cabac_putbytex_xexitx_x_crit_edge
    $phi iNsTr_26 :=  ( $cast ($uint<32>) xx_xpre15) $on xx_x_crit_edgex_xi11_x264_cabac_putbytex_xexitx_x_crit_edge ( $cast ($uint<32>) iNsTr_115) $on bb_10_x264_cabac_putbytex_xexitx_x_crit_edge ( $cast ($uint<32>) iNsTr_11) $on bb_0_x264_cabac_putbytex_xexitx_x_crit_edge ( $cast ($uint<32>) iNsTr_82) $on x264_cabac_putbytex_xexit_x264_cabac_putbytex_xexitx_x_crit_edge 
    $endmerge
    iNsTr_27 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_26)
    // load 
    iNsTr_28 := ->(iNsTr_2) 
    iNsTr_29 := (iNsTr_28 << iNsTr_27)
    ->(iNsTr_2) := iNsTr_29
    iNsTr_31 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010010 ) ]
    // load 
    iNsTr_32 := ->(iNsTr_31) 
    iNsTr_33 := (iNsTr_32 & ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 ) )
    iNsTr_34 := (( $bitcast ($uint<32> ) _b00110101101001001110010011110101 )  >> iNsTr_33)
    iNsTr_35 := (iNsTr_34 << ( $bitcast ($uint<32> ) _b00000000000000000000000000001010 ) )
    iNsTr_36 := (iNsTr_35 & ( $bitcast ($uint<32> ) _b00000000000000000000010000000000 ) )
    iNsTr_37 := (iNsTr_36 | iNsTr_29)
    iNsTr_38 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_37) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000001010 )  )))
    iNsTr_39 := (iNsTr_29 & ( $bitcast ($uint<32> ) _b00000000000000000000001111111111 ) )
    ->(iNsTr_2) := iNsTr_39
    ->(iNsTr_9) := ( $bitcast ($uint<32> ) _b11111111111111111111111111111000 ) 
    iNsTr_42 := (iNsTr_38 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    // compare instruction
    iNsTr_43 := (iNsTr_42 == ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_43 $then  $place [x264_cabac_putbytex_xexitx_x_crit_edge_x264_cabac_putbytex_xexit6x_xpreheader] $else $place [x264_cabac_putbytex_xexitx_x_crit_edge_bb_17] $endif 
    //begin: basic-block bb_17
    $merge x264_cabac_putbytex_xexitx_x_crit_edge_bb_17
    $endmerge
    iNsTr_68 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_29) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000010010 )  )))
    iNsTr_69 := cb[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    iNsTr_70 := ->(iNsTr_69) 
    iNsTr_71 := cb[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) ]
    // load 
    iNsTr_72 := ->(iNsTr_71) 
    iNsTr_73 := iNsTr_72[( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) ]
    // load 
    iNsTr_74 := ->(iNsTr_73) 
    iNsTr_75 := ($cast ($uint<32>) iNsTr_74)
    iNsTr_76 := (iNsTr_75 + iNsTr_68)
    iNsTr_77 := ($cast ($uint<8>) iNsTr_76)
    ->(iNsTr_73) := iNsTr_77
    // compare instruction
    iNsTr_79 := ( ($bitcast ( $int<32>) iNsTr_70) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    $if iNsTr_79 $then  $place [bb_17_bbx_xnphx_xi1] $else $place [bb_17_x264_cabac_putbytex_xexit6x_xpreheaderx_xthread] $endif 
    //begin: basic-block bbx_xnphx_xi1
    $merge bb_17_bbx_xnphx_xi1
    $endmerge
    iNsTr_98 := (iNsTr_68 + ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    iNsTr_99 := ($cast ($uint<8>) iNsTr_98)
    $place [bbx_xnphx_xi1_bb_19]
    //begin: basic-block bb_19
    $merge bb_19_bb_19 bbx_xnphx_xi1_bb_19
    $phi indvarx_xi2 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xi1_bb_19 ( $cast ($uint<32>) indvarx_xnextx_xi3) $on bb_19_bb_19 
    $endmerge
    // load 
    iNsTr_135 := ->(iNsTr_71) 
    iNsTr_136 := iNsTr_135[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    ->(iNsTr_71) := iNsTr_136
    ->(iNsTr_135) := iNsTr_99
    indvarx_xnextx_xi3 := (indvarx_xi2 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond2 := (indvarx_xnextx_xi3 == iNsTr_70 )
    $if exitcond2 $then  $place [bb_19_x264_cabac_putbytex_xexit6x_xpreheaderx_xthreadx_xloopexit] $else $place [bb_19_bb_19] $endif 
    //begin: basic-block x264_cabac_putbytex_xexit6x_xpreheaderx_xthreadx_xloopexit
    $merge bb_19_x264_cabac_putbytex_xexit6x_xpreheaderx_xthreadx_xloopexit
    $endmerge
    $place [x264_cabac_putbytex_xexit6x_xpreheaderx_xthreadx_xloopexit_x264_cabac_putbytex_xexit6x_xpreheaderx_xthread]
    //begin: basic-block x264_cabac_putbytex_xexit6x_xpreheaderx_xthread
    $merge bb_17_x264_cabac_putbytex_xexit6x_xpreheaderx_xthread x264_cabac_putbytex_xexit6x_xpreheaderx_xthreadx_xloopexit_x264_cabac_putbytex_xexit6x_xpreheaderx_xthread
    $endmerge
    iNsTr_101 := ($cast ($uint<8>) iNsTr_38)
    // load 
    iNsTr_102 := ->(iNsTr_71) 
    iNsTr_103 := iNsTr_102[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    ->(iNsTr_71) := iNsTr_103
    ->(iNsTr_102) := iNsTr_101
    ->(iNsTr_69) := ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) 
    $place [x264_cabac_putbytex_xexit6x_xpreheaderx_xthread_UnifiedReturnBlock]
    //begin: basic-block x264_cabac_putbytex_xexit6x_xpreheader
    $merge x264_cabac_putbytex_xexitx_x_crit_edge_x264_cabac_putbytex_xexit6x_xpreheader
    $endmerge
    iNsTr_63 := cb[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    iNsTr_64 := ->(iNsTr_63) 
    iNsTr_65 := (iNsTr_64 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    ->(iNsTr_63) := iNsTr_65
    // compare instruction
    phitmp := ( ($bitcast ( $int<32>) iNsTr_65) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    $if phitmp $then  $place [x264_cabac_putbytex_xexit6x_xpreheader_bbx_xnph] $else $place [x264_cabac_putbytex_xexit6x_xpreheader_x264_cabac_putbytex_xexit6x_x_crit_edge] $endif 
    //begin: basic-block bbx_xnph
    $merge x264_cabac_putbytex_xexit6x_xpreheader_bbx_xnph
    $endmerge
    iNsTr_95 := cb[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) ]
    $place [bbx_xnph_x264_cabac_putbytex_xexit6]
    //begin: basic-block x264_cabac_putbytex_xexit6
    $merge bbx_xnph_x264_cabac_putbytex_xexit6 x264_cabac_putbytex_xexit6_x264_cabac_putbytex_xexit6
    $endmerge
    // load 
    iNsTr_125 := ->(iNsTr_95) 
    iNsTr_126 := iNsTr_125[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    ->(iNsTr_95) := iNsTr_126
    ->(iNsTr_125) := ( $bitcast ($uint<8> ) _b11111111 ) 
    // load 
    iNsTr_129 := ->(iNsTr_63) 
    iNsTr_130 := (iNsTr_129 + ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) )
    ->(iNsTr_63) := iNsTr_130
    // compare instruction
    iNsTr_132 := ( ($bitcast ( $int<32>) iNsTr_130) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    $if iNsTr_132 $then  $place [x264_cabac_putbytex_xexit6_x264_cabac_putbytex_xexit6] $else $place [x264_cabac_putbytex_xexit6_x264_cabac_putbytex_xexit6x_x_crit_edgex_xloopexit] $endif 
    //begin: basic-block x264_cabac_putbytex_xexit6x_x_crit_edgex_xloopexit
    $merge x264_cabac_putbytex_xexit6_x264_cabac_putbytex_xexit6x_x_crit_edgex_xloopexit
    $endmerge
    $place [x264_cabac_putbytex_xexit6x_x_crit_edgex_xloopexit_x264_cabac_putbytex_xexit6x_x_crit_edge]
    //begin: basic-block x264_cabac_putbytex_xexit6x_x_crit_edge
    $merge x264_cabac_putbytex_xexit6x_x_crit_edgex_xloopexit_x264_cabac_putbytex_xexit6x_x_crit_edge x264_cabac_putbytex_xexit6x_xpreheader_x264_cabac_putbytex_xexit6x_x_crit_edge
    $endmerge
    $place [x264_cabac_putbytex_xexit6x_x_crit_edge_UnifiedReturnBlock]
    //begin: basic-block UnifiedReturnBlock
    $merge x264_cabac_putbytex_xexit6x_x_crit_edge_UnifiedReturnBlock x264_cabac_putbytex_xexit6x_xpreheaderx_xthread_UnifiedReturnBlock
    $endmerge
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [x264_macroblock_cache_mv_1_1] 
$in (target : $pointer< $uint<8> > val : $uint<32> )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block x264_macroblock_cache_rectx_xexit
    iNsTr_0 := ($bitcast ($pointer< $uint<32> >) target)
    ->(iNsTr_0) := val
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [x264_macroblock_cache_mv_2_1] 
$in (target : $pointer< $uint<8> > val : $uint<32> )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block x264_macroblock_cache_rectx_xexit
    iNsTr_0 := ($bitcast ($pointer< $uint<32> >) target)
    ->(iNsTr_0) := val
    iNsTr_2 := target[( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ]
    iNsTr_3 := ($bitcast ($pointer< $uint<32> >) iNsTr_2)
    ->(iNsTr_3) := val
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [x264_macroblock_cache_mv_1_2] 
$in (target : $pointer< $uint<8> > val : $uint<32> )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block x264_macroblock_cache_rectx_xexit
    iNsTr_0 := ($bitcast ($pointer< $uint<32> >) target)
    ->(iNsTr_0) := val
    iNsTr_2 := target[( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) ]
    iNsTr_3 := ($bitcast ($pointer< $uint<32> >) iNsTr_2)
    ->(iNsTr_3) := val
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [x264_macroblock_cache_mv_2_2] 
$in (target : $pointer< $uint<8> > val : $uint<32> )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block x264_macroblock_cache_rectx_xexit
    iNsTr_0 := ($bitcast ($pointer< $uint<32> >) target)
    ->(iNsTr_0) := val
    iNsTr_2 := target[( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ]
    iNsTr_3 := ($bitcast ($pointer< $uint<32> >) iNsTr_2)
    ->(iNsTr_3) := val
    iNsTr_5 := target[( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) ]
    iNsTr_6 := ($bitcast ($pointer< $uint<32> >) iNsTr_5)
    ->(iNsTr_6) := val
    iNsTr_8 := target[( $bitcast ($uint<32> ) _b00000000000000000000000000100100 ) ]
    iNsTr_9 := ($bitcast ($pointer< $uint<32> >) iNsTr_8)
    ->(iNsTr_9) := val
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [x264_macroblock_cache_mv_4_2] 
$in (target : $pointer< $uint<8> > val : $uint<32> )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block x264_macroblock_cache_rectx_xexit
    scevgep := target[( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ]
    scevgep1314x_xi := ($bitcast ($pointer< $uint<32> >) scevgep)
    scevgep6 := target[( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) ]
    scevgep1011x_xi := ($bitcast ($pointer< $uint<32> >) scevgep6)
    scevgep9 := target[( $bitcast ($uint<32> ) _b00000000000000000000000000001100 ) ]
    scevgep78x_xi := ($bitcast ($pointer< $uint<32> >) scevgep9)
    scevgep5x_xi := ($bitcast ($pointer< $uint<32> >) target)
    ->(scevgep5x_xi) := val
    ->(scevgep1314x_xi) := val
    ->(scevgep1011x_xi) := val
    ->(scevgep78x_xi) := val
    scevgepx_x1 := target[( $bitcast ($uint<32> ) _b00000000000000000000000000100100 ) ]
    scevgep1314x_xix_x1 := ($bitcast ($pointer< $uint<32> >) scevgepx_x1)
    scevgep6x_x1 := target[( $bitcast ($uint<32> ) _b00000000000000000000000000101000 ) ]
    scevgep1011x_xix_x1 := ($bitcast ($pointer< $uint<32> >) scevgep6x_x1)
    scevgep9x_x1 := target[( $bitcast ($uint<32> ) _b00000000000000000000000000101100 ) ]
    scevgep78x_xix_x1 := ($bitcast ($pointer< $uint<32> >) scevgep9x_x1)
    scevgep11x_x1 := target[( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) ]
    scevgep5x_xix_x1 := ($bitcast ($pointer< $uint<32> >) scevgep11x_x1)
    ->(scevgep5x_xix_x1) := val
    ->(scevgep1314x_xix_x1) := val
    ->(scevgep1011x_xix_x1) := val
    ->(scevgep78x_xix_x1) := val
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [x264_macroblock_cache_mv_2_4] 
$in (target : $pointer< $uint<8> > val : $uint<32> )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block x264_macroblock_cache_rectx_xexit
    iNsTr_0 := ($bitcast ($pointer< $uint<32> >) target)
    ->(iNsTr_0) := val
    iNsTr_2 := target[( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ]
    iNsTr_3 := ($bitcast ($pointer< $uint<32> >) iNsTr_2)
    ->(iNsTr_3) := val
    iNsTr_5 := target[( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) ]
    iNsTr_6 := ($bitcast ($pointer< $uint<32> >) iNsTr_5)
    ->(iNsTr_6) := val
    iNsTr_8 := target[( $bitcast ($uint<32> ) _b00000000000000000000000000100100 ) ]
    iNsTr_9 := ($bitcast ($pointer< $uint<32> >) iNsTr_8)
    ->(iNsTr_9) := val
    iNsTr_11 := target[( $bitcast ($uint<32> ) _b00000000000000000000000001000000 ) ]
    iNsTr_12 := ($bitcast ($pointer< $uint<32> >) iNsTr_11)
    ->(iNsTr_12) := val
    iNsTr_14 := target[( $bitcast ($uint<32> ) _b00000000000000000000000001000100 ) ]
    iNsTr_15 := ($bitcast ($pointer< $uint<32> >) iNsTr_14)
    ->(iNsTr_15) := val
    iNsTr_17 := target[( $bitcast ($uint<32> ) _b00000000000000000000000001100000 ) ]
    iNsTr_18 := ($bitcast ($pointer< $uint<32> >) iNsTr_17)
    ->(iNsTr_18) := val
    iNsTr_20 := target[( $bitcast ($uint<32> ) _b00000000000000000000000001100100 ) ]
    iNsTr_21 := ($bitcast ($pointer< $uint<32> >) iNsTr_20)
    ->(iNsTr_21) := val
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [x264_macroblock_cache_mv_4_4] 
$in (target : $pointer< $uint<8> > val : $uint<32> )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block x264_macroblock_cache_rectx_xexit
    scevgep := target[( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ]
    scevgep1314x_xi := ($bitcast ($pointer< $uint<32> >) scevgep)
    scevgep6 := target[( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) ]
    scevgep1011x_xi := ($bitcast ($pointer< $uint<32> >) scevgep6)
    scevgep9 := target[( $bitcast ($uint<32> ) _b00000000000000000000000000001100 ) ]
    scevgep78x_xi := ($bitcast ($pointer< $uint<32> >) scevgep9)
    scevgep5x_xi := ($bitcast ($pointer< $uint<32> >) target)
    ->(scevgep5x_xi) := val
    ->(scevgep1314x_xi) := val
    ->(scevgep1011x_xi) := val
    ->(scevgep78x_xi) := val
    scevgepx_x1 := target[( $bitcast ($uint<32> ) _b00000000000000000000000000100100 ) ]
    scevgep1314x_xix_x1 := ($bitcast ($pointer< $uint<32> >) scevgepx_x1)
    scevgep6x_x1 := target[( $bitcast ($uint<32> ) _b00000000000000000000000000101000 ) ]
    scevgep1011x_xix_x1 := ($bitcast ($pointer< $uint<32> >) scevgep6x_x1)
    scevgep9x_x1 := target[( $bitcast ($uint<32> ) _b00000000000000000000000000101100 ) ]
    scevgep78x_xix_x1 := ($bitcast ($pointer< $uint<32> >) scevgep9x_x1)
    scevgep11x_x1 := target[( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) ]
    scevgep5x_xix_x1 := ($bitcast ($pointer< $uint<32> >) scevgep11x_x1)
    ->(scevgep5x_xix_x1) := val
    ->(scevgep1314x_xix_x1) := val
    ->(scevgep1011x_xix_x1) := val
    ->(scevgep78x_xix_x1) := val
    scevgepx_x2 := target[( $bitcast ($uint<32> ) _b00000000000000000000000001000100 ) ]
    scevgep1314x_xix_x2 := ($bitcast ($pointer< $uint<32> >) scevgepx_x2)
    scevgep6x_x2 := target[( $bitcast ($uint<32> ) _b00000000000000000000000001001000 ) ]
    scevgep1011x_xix_x2 := ($bitcast ($pointer< $uint<32> >) scevgep6x_x2)
    scevgep9x_x2 := target[( $bitcast ($uint<32> ) _b00000000000000000000000001001100 ) ]
    scevgep78x_xix_x2 := ($bitcast ($pointer< $uint<32> >) scevgep9x_x2)
    scevgep11x_x2 := target[( $bitcast ($uint<32> ) _b00000000000000000000000001000000 ) ]
    scevgep5x_xix_x2 := ($bitcast ($pointer< $uint<32> >) scevgep11x_x2)
    ->(scevgep5x_xix_x2) := val
    ->(scevgep1314x_xix_x2) := val
    ->(scevgep1011x_xix_x2) := val
    ->(scevgep78x_xix_x2) := val
    scevgepx_x3 := target[( $bitcast ($uint<32> ) _b00000000000000000000000001100100 ) ]
    scevgep1314x_xix_x3 := ($bitcast ($pointer< $uint<32> >) scevgepx_x3)
    scevgep6x_x3 := target[( $bitcast ($uint<32> ) _b00000000000000000000000001101000 ) ]
    scevgep1011x_xix_x3 := ($bitcast ($pointer< $uint<32> >) scevgep6x_x3)
    scevgep9x_x3 := target[( $bitcast ($uint<32> ) _b00000000000000000000000001101100 ) ]
    scevgep78x_xix_x3 := ($bitcast ($pointer< $uint<32> >) scevgep9x_x3)
    scevgep11x_x3 := target[( $bitcast ($uint<32> ) _b00000000000000000000000001100000 ) ]
    scevgep5x_xix_x3 := ($bitcast ($pointer< $uint<32> >) scevgep11x_x3)
    ->(scevgep5x_xix_x3) := val
    ->(scevgep1314x_xix_x3) := val
    ->(scevgep1011x_xix_x3) := val
    ->(scevgep78x_xix_x3) := val
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [x264_macroblock_cache_mvd_1_1] 
$in (target : $pointer< $uint<8> > val : $uint<32> )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block x264_macroblock_cache_rectx_xexit
    iNsTr_0 := ($cast ($uint<16>) val)
    iNsTr_1 := ($bitcast ($pointer< $uint<16> >) target)
    ->(iNsTr_1) := iNsTr_0
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [x264_macroblock_cache_mvd_2_1] 
$in (target : $pointer< $uint<8> > val : $uint<32> )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block x264_macroblock_cache_rectx_xexit
    iNsTr_0 := (val * ( $bitcast ($uint<32> ) _b00000000000000010000000000000001 ) )
    iNsTr_1 := ($bitcast ($pointer< $uint<32> >) target)
    ->(iNsTr_1) := iNsTr_0
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [x264_macroblock_cache_mvd_1_2] 
$in (target : $pointer< $uint<8> > val : $uint<32> )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block x264_macroblock_cache_rectx_xexit
    iNsTr_0 := ($cast ($uint<16>) val)
    iNsTr_1 := ($bitcast ($pointer< $uint<16> >) target)
    ->(iNsTr_1) := iNsTr_0
    iNsTr_3 := target[( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) ]
    iNsTr_4 := ($bitcast ($pointer< $uint<16> >) iNsTr_3)
    ->(iNsTr_4) := iNsTr_0
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [x264_macroblock_cache_mvd_2_2] 
$in (target : $pointer< $uint<8> > val : $uint<32> )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block x264_macroblock_cache_rectx_xexit
    iNsTr_0 := (val * ( $bitcast ($uint<32> ) _b00000000000000010000000000000001 ) )
    iNsTr_1 := ($bitcast ($pointer< $uint<32> >) target)
    ->(iNsTr_1) := iNsTr_0
    iNsTr_3 := target[( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) ]
    iNsTr_4 := ($bitcast ($pointer< $uint<32> >) iNsTr_3)
    ->(iNsTr_4) := iNsTr_0
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [x264_macroblock_cache_mvd_4_2] 
$in (target : $pointer< $uint<8> > val : $uint<32> )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block x264_macroblock_cache_rectx_xexit
    iNsTr_0 := (val * ( $bitcast ($uint<32> ) _b00000000000000010000000000000001 ) )
    iNsTr_1 := ($bitcast ($pointer< $uint<32> >) target)
    ->(iNsTr_1) := iNsTr_0
    iNsTr_3 := target[( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ]
    iNsTr_4 := ($bitcast ($pointer< $uint<32> >) iNsTr_3)
    ->(iNsTr_4) := iNsTr_0
    iNsTr_6 := target[( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) ]
    iNsTr_7 := ($bitcast ($pointer< $uint<32> >) iNsTr_6)
    ->(iNsTr_7) := iNsTr_0
    iNsTr_9 := target[( $bitcast ($uint<32> ) _b00000000000000000000000000010100 ) ]
    iNsTr_10 := ($bitcast ($pointer< $uint<32> >) iNsTr_9)
    ->(iNsTr_10) := iNsTr_0
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [x264_macroblock_cache_mvd_2_4] 
$in (target : $pointer< $uint<8> > val : $uint<32> )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block x264_macroblock_cache_rectx_xexit
    iNsTr_0 := (val * ( $bitcast ($uint<32> ) _b00000000000000010000000000000001 ) )
    iNsTr_1 := ($bitcast ($pointer< $uint<32> >) target)
    ->(iNsTr_1) := iNsTr_0
    iNsTr_3 := target[( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) ]
    iNsTr_4 := ($bitcast ($pointer< $uint<32> >) iNsTr_3)
    ->(iNsTr_4) := iNsTr_0
    iNsTr_6 := target[( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) ]
    iNsTr_7 := ($bitcast ($pointer< $uint<32> >) iNsTr_6)
    ->(iNsTr_7) := iNsTr_0
    iNsTr_9 := target[( $bitcast ($uint<32> ) _b00000000000000000000000000110000 ) ]
    iNsTr_10 := ($bitcast ($pointer< $uint<32> >) iNsTr_9)
    ->(iNsTr_10) := iNsTr_0
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [x264_macroblock_cache_mvd_4_4] 
$in (target : $pointer< $uint<8> > val : $uint<32> )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block x264_macroblock_cache_rectx_xexit
    iNsTr_0 := (val * ( $bitcast ($uint<32> ) _b00000000000000010000000000000001 ) )
    iNsTr_1 := ($bitcast ($pointer< $uint<32> >) target)
    ->(iNsTr_1) := iNsTr_0
    iNsTr_3 := target[( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ]
    iNsTr_4 := ($bitcast ($pointer< $uint<32> >) iNsTr_3)
    ->(iNsTr_4) := iNsTr_0
    iNsTr_6 := target[( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) ]
    iNsTr_7 := ($bitcast ($pointer< $uint<32> >) iNsTr_6)
    ->(iNsTr_7) := iNsTr_0
    iNsTr_9 := target[( $bitcast ($uint<32> ) _b00000000000000000000000000010100 ) ]
    iNsTr_10 := ($bitcast ($pointer< $uint<32> >) iNsTr_9)
    ->(iNsTr_10) := iNsTr_0
    iNsTr_12 := target[( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) ]
    iNsTr_13 := ($bitcast ($pointer< $uint<32> >) iNsTr_12)
    ->(iNsTr_13) := iNsTr_0
    iNsTr_15 := target[( $bitcast ($uint<32> ) _b00000000000000000000000000100100 ) ]
    iNsTr_16 := ($bitcast ($pointer< $uint<32> >) iNsTr_15)
    ->(iNsTr_16) := iNsTr_0
    iNsTr_18 := target[( $bitcast ($uint<32> ) _b00000000000000000000000000110000 ) ]
    iNsTr_19 := ($bitcast ($pointer< $uint<32> >) iNsTr_18)
    ->(iNsTr_19) := iNsTr_0
    iNsTr_21 := target[( $bitcast ($uint<32> ) _b00000000000000000000000000110100 ) ]
    iNsTr_22 := ($bitcast ($pointer< $uint<32> >) iNsTr_21)
    ->(iNsTr_22) := iNsTr_0
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [x264_macroblock_cache_ref_1_1] 
$in (target : $pointer< $uint<8> > val : $uint<32> )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    iNsTr_0 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr2[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ])
    iNsTr_1 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr13[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ])
    iNsTr_2 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_cache_rect[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ])
    $call x__assert_fail (iNsTr_0 iNsTr_1 ( $bitcast ($uint<32> ) _b00000000000000000000000001110111 )  iNsTr_2 )  ()
  }
}
$module [x264_macroblock_cache_ref_2_1] 
$in (target : $pointer< $uint<8> > val : $uint<32> )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block x264_macroblock_cache_rectx_xexit
    iNsTr_0 := (val * ( $bitcast ($uint<32> ) _b00000000000000000000000100000001 ) )
    iNsTr_1 := ($cast ($uint<16>) iNsTr_0)
    iNsTr_2 := ($bitcast ($pointer< $uint<16> >) target)
    ->(iNsTr_2) := iNsTr_1
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [x264_macroblock_cache_ref_1_2] 
$in (target : $pointer< $uint<8> > val : $uint<32> )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    iNsTr_0 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr2[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ])
    iNsTr_1 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_xx_xstr13[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ])
    iNsTr_2 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_x__PRETTY_FUNCTION__x_xx264_macroblock_cache_rect[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ])
    $call x__assert_fail (iNsTr_0 iNsTr_1 ( $bitcast ($uint<32> ) _b00000000000000000000000001110111 )  iNsTr_2 )  ()
  }
}
$module [x264_macroblock_cache_ref_2_2] 
$in (target : $pointer< $uint<8> > val : $uint<32> )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block x264_macroblock_cache_rectx_xexit
    iNsTr_0 := (val * ( $bitcast ($uint<32> ) _b00000000000000000000000100000001 ) )
    iNsTr_1 := ($cast ($uint<16>) iNsTr_0)
    iNsTr_2 := ($bitcast ($pointer< $uint<16> >) target)
    ->(iNsTr_2) := iNsTr_1
    iNsTr_4 := target[( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) ]
    iNsTr_5 := ($bitcast ($pointer< $uint<16> >) iNsTr_4)
    ->(iNsTr_5) := iNsTr_1
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [x264_macroblock_cache_ref_4_2] 
$in (target : $pointer< $uint<8> > val : $uint<32> )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block x264_macroblock_cache_rectx_xexit
    iNsTr_0 := (val * ( $bitcast ($uint<32> ) _b00000001000000010000000100000001 ) )
    iNsTr_1 := ($bitcast ($pointer< $uint<32> >) target)
    ->(iNsTr_1) := iNsTr_0
    iNsTr_3 := target[( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) ]
    iNsTr_4 := ($bitcast ($pointer< $uint<32> >) iNsTr_3)
    ->(iNsTr_4) := iNsTr_0
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [x264_macroblock_cache_ref_2_4] 
$in (target : $pointer< $uint<8> > val : $uint<32> )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block x264_macroblock_cache_rectx_xexit
    iNsTr_0 := (val * ( $bitcast ($uint<32> ) _b00000000000000000000000100000001 ) )
    iNsTr_1 := ($cast ($uint<16>) iNsTr_0)
    iNsTr_2 := ($bitcast ($pointer< $uint<16> >) target)
    ->(iNsTr_2) := iNsTr_1
    iNsTr_4 := target[( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) ]
    iNsTr_5 := ($bitcast ($pointer< $uint<16> >) iNsTr_4)
    ->(iNsTr_5) := iNsTr_1
    iNsTr_7 := target[( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) ]
    iNsTr_8 := ($bitcast ($pointer< $uint<16> >) iNsTr_7)
    ->(iNsTr_8) := iNsTr_1
    iNsTr_10 := target[( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) ]
    iNsTr_11 := ($bitcast ($pointer< $uint<16> >) iNsTr_10)
    ->(iNsTr_11) := iNsTr_1
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [x264_macroblock_cache_ref_4_4] 
$in (target : $pointer< $uint<8> > val : $uint<32> )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block x264_macroblock_cache_rectx_xexit
    iNsTr_0 := (val * ( $bitcast ($uint<32> ) _b00000001000000010000000100000001 ) )
    iNsTr_1 := ($bitcast ($pointer< $uint<32> >) target)
    ->(iNsTr_1) := iNsTr_0
    iNsTr_3 := target[( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) ]
    iNsTr_4 := ($bitcast ($pointer< $uint<32> >) iNsTr_3)
    ->(iNsTr_4) := iNsTr_0
    iNsTr_6 := target[( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) ]
    iNsTr_7 := ($bitcast ($pointer< $uint<32> >) iNsTr_6)
    ->(iNsTr_7) := iNsTr_0
    iNsTr_9 := target[( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) ]
    iNsTr_10 := ($bitcast ($pointer< $uint<32> >) iNsTr_9)
    ->(iNsTr_10) := iNsTr_0
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [quant_4x4x4] 
$in (dct : $pointer< $array [16] $of $uint<16> > mf : $pointer< $uint<16> > bias : $pointer< $uint<16> > )
$out (ret_val__ : $uint<32>)
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bbx_xnph
    $place [bbx_xnph_bb_1]
    //begin: basic-block bb_1
    $merge bb_4_bb_1 bbx_xnph_bb_1
    $phi ix_x02 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph_bb_1 ( $cast ($uint<32>) iNsTr_23) $on bb_4_bb_1 
    $phi nzx_x01 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph_bb_1 ( $cast ($uint<32>) iNsTr_22) $on bb_4_bb_1 
    $endmerge
    scevgep9 := mf[ix_x02]
    scevgep8 := bias[ix_x02]
    scevgep := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][ix_x02]
    // load 
    iNsTr_1 := ->(scevgep) 
    // compare instruction
    iNsTr_2 := ( ($bitcast ( $int<16>) iNsTr_1) >  ($bitcast ( $int<16>) ( $bitcast ($uint<16> ) _b0000000000000000 )  ) )
    // load 
    iNsTr_3 := ->(scevgep8) 
    iNsTr_4 := ($cast ($uint<32>) iNsTr_3)
    iNsTr_5 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_1) )
    $if iNsTr_2 $then  $place [bb_1_bb_2] $else $place [bb_1_bb_3] $endif 
    //begin: basic-block bb_2
    $merge bb_1_bb_2
    $endmerge
    iNsTr_7 := (iNsTr_4 + iNsTr_5)
    // load 
    iNsTr_8 := ->(scevgep9) 
    iNsTr_9 := ($cast ($uint<32>) iNsTr_8)
    iNsTr_10 := (iNsTr_9 * iNsTr_7)
    iNsTr_11 := (iNsTr_10 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    $place [bb_2_bb_4]
    //begin: basic-block bb_3
    $merge bb_1_bb_3
    $endmerge
    iNsTr_13 := (iNsTr_4 - iNsTr_5)
    // load 
    iNsTr_14 := ->(scevgep9) 
    iNsTr_15 := ($cast ($uint<32>) iNsTr_14)
    iNsTr_16 := (iNsTr_15 * iNsTr_13)
    iNsTr_17 := (iNsTr_16 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    iNsTr_18 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_17)
    $place [bb_3_bb_4]
    //begin: basic-block bb_4
    $merge bb_2_bb_4 bb_3_bb_4
    $phi storemergex_xin :=  ( $cast ($uint<32>) iNsTr_18) $on bb_3_bb_4 ( $cast ($uint<32>) iNsTr_11) $on bb_2_bb_4 
    $endmerge
    storemerge := ($cast ($uint<16>) storemergex_xin)
    ->(scevgep) := storemerge
    iNsTr_21 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) storemerge) )
    iNsTr_22 := (iNsTr_21 | nzx_x01)
    iNsTr_23 := (ix_x02 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond18 := (iNsTr_23 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond18 $then  $place [bb_4_bbx_xnphx_x1] $else $place [bb_4_bb_1] $endif 
    //begin: basic-block bb_5
    $merge bb_16_bb_5
    $phi xx_xlcssa :=  ( $cast ($uint<32>) iNsTr_103) $on bb_16_bb_5 
    $endmerge
    iNsTr_106 := (iNsTr_80 | iNsTr_78)
    // compare instruction
    phitmpx_x3 := ( ($bitcast ( $int<32>) xx_xlcssa) !=   ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    iNsTr_107 := ($cast ($uint<32>) phitmpx_x3)
    iNsTr_108 := (iNsTr_107 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    ret_val__ := (iNsTr_108 | iNsTr_106)
    $place [return__]
    //begin: basic-block bb_6
    $merge bb_7_bb_6 bb_9_bb_6
    $phi storemerge13x_xin :=  ( $cast ($uint<32>) iNsTr_43) $on bb_9_bb_6 ( $cast ($uint<32>) iNsTr_36) $on bb_7_bb_6 
    $endmerge
    storemerge13 := ($cast ($uint<16>) storemerge13x_xin)
    ->(scevgepx_x1) := storemerge13
    iNsTr_46 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) storemerge13) )
    iNsTr_47 := (iNsTr_46 | nzx_x01x_x1)
    iNsTr_48 := (ix_x02x_x1 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond13 := (iNsTr_48 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond13 $then  $place [bb_6_bbx_xnphx_x2] $else $place [bb_6_bb_8] $endif 
    //begin: basic-block bb_7
    $merge bb_8_bb_7
    $endmerge
    iNsTr_32 := (iNsTr_29 + iNsTr_30)
    // load 
    iNsTr_33 := ->(scevgep9x_x1) 
    iNsTr_34 := ($cast ($uint<32>) iNsTr_33)
    iNsTr_35 := (iNsTr_34 * iNsTr_32)
    iNsTr_36 := (iNsTr_35 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    $place [bb_7_bb_6]
    //begin: basic-block bb_8
    $merge bb_6_bb_8 bbx_xnphx_x1_bb_8
    $phi ix_x02x_x1 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_x1_bb_8 ( $cast ($uint<32>) iNsTr_48) $on bb_6_bb_8 
    $phi nzx_x01x_x1 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_x1_bb_8 ( $cast ($uint<32>) iNsTr_47) $on bb_6_bb_8 
    $endmerge
    scevgep9x_x1 := mf[ix_x02x_x1]
    scevgep8x_x1 := bias[ix_x02x_x1]
    scevgepx_x1 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][ix_x02x_x1]
    // load 
    iNsTr_26 := ->(scevgepx_x1) 
    // compare instruction
    iNsTr_27 := ( ($bitcast ( $int<16>) iNsTr_26) >  ($bitcast ( $int<16>) ( $bitcast ($uint<16> ) _b0000000000000000 )  ) )
    // load 
    iNsTr_28 := ->(scevgep8x_x1) 
    iNsTr_29 := ($cast ($uint<32>) iNsTr_28)
    iNsTr_30 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_26) )
    $if iNsTr_27 $then  $place [bb_8_bb_7] $else $place [bb_8_bb_9] $endif 
    //begin: basic-block bb_9
    $merge bb_8_bb_9
    $endmerge
    iNsTr_38 := (iNsTr_29 - iNsTr_30)
    // load 
    iNsTr_39 := ->(scevgep9x_x1) 
    iNsTr_40 := ($cast ($uint<32>) iNsTr_39)
    iNsTr_41 := (iNsTr_40 * iNsTr_38)
    iNsTr_42 := (iNsTr_41 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    iNsTr_43 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_42)
    $place [bb_9_bb_6]
    //begin: basic-block bbx_xnphx_x1
    $merge bb_4_bbx_xnphx_x1
    $phi xx_xlcssa17 :=  ( $cast ($uint<32>) iNsTr_22) $on bb_4_bbx_xnphx_x1 
    $endmerge
    // compare instruction
    phitmp := ( ($bitcast ( $int<32>) xx_xlcssa17) !=   ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    $place [bbx_xnphx_x1_bb_8]
    //begin: basic-block bb_11
    $merge bb_12_bb_11 bb_14_bb_11
    $phi storemerge14x_xin :=  ( $cast ($uint<32>) iNsTr_71) $on bb_14_bb_11 ( $cast ($uint<32>) iNsTr_64) $on bb_12_bb_11 
    $endmerge
    storemerge14 := ($cast ($uint<16>) storemerge14x_xin)
    ->(scevgepx_x2) := storemerge14
    iNsTr_74 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) storemerge14) )
    iNsTr_75 := (iNsTr_74 | nzx_x01x_x2)
    iNsTr_76 := (ix_x02x_x2 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond6 := (iNsTr_76 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond6 $then  $place [bb_11_bbx_xnphx_x3] $else $place [bb_11_bb_13] $endif 
    //begin: basic-block bb_12
    $merge bb_13_bb_12
    $endmerge
    iNsTr_60 := (iNsTr_57 + iNsTr_58)
    // load 
    iNsTr_61 := ->(scevgep9x_x2) 
    iNsTr_62 := ($cast ($uint<32>) iNsTr_61)
    iNsTr_63 := (iNsTr_62 * iNsTr_60)
    iNsTr_64 := (iNsTr_63 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    $place [bb_12_bb_11]
    //begin: basic-block bb_13
    $merge bb_11_bb_13 bbx_xnphx_x2_bb_13
    $phi ix_x02x_x2 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_x2_bb_13 ( $cast ($uint<32>) iNsTr_76) $on bb_11_bb_13 
    $phi nzx_x01x_x2 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_x2_bb_13 ( $cast ($uint<32>) iNsTr_75) $on bb_11_bb_13 
    $endmerge
    scevgep9x_x2 := mf[ix_x02x_x2]
    scevgep8x_x2 := bias[ix_x02x_x2]
    scevgepx_x2 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ][ix_x02x_x2]
    // load 
    iNsTr_54 := ->(scevgepx_x2) 
    // compare instruction
    iNsTr_55 := ( ($bitcast ( $int<16>) iNsTr_54) >  ($bitcast ( $int<16>) ( $bitcast ($uint<16> ) _b0000000000000000 )  ) )
    // load 
    iNsTr_56 := ->(scevgep8x_x2) 
    iNsTr_57 := ($cast ($uint<32>) iNsTr_56)
    iNsTr_58 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_54) )
    $if iNsTr_55 $then  $place [bb_13_bb_12] $else $place [bb_13_bb_14] $endif 
    //begin: basic-block bb_14
    $merge bb_13_bb_14
    $endmerge
    iNsTr_66 := (iNsTr_57 - iNsTr_58)
    // load 
    iNsTr_67 := ->(scevgep9x_x2) 
    iNsTr_68 := ($cast ($uint<32>) iNsTr_67)
    iNsTr_69 := (iNsTr_68 * iNsTr_66)
    iNsTr_70 := (iNsTr_69 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    iNsTr_71 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_70)
    $place [bb_14_bb_11]
    //begin: basic-block bbx_xnphx_x2
    $merge bb_6_bbx_xnphx_x2
    $phi xx_xlcssa12 :=  ( $cast ($uint<32>) iNsTr_47) $on bb_6_bbx_xnphx_x2 
    $endmerge
    iNsTr_50 := ($cast ($uint<32>) phitmp)
    // compare instruction
    phitmpx_x1 := ( ($bitcast ( $int<32>) xx_xlcssa12) !=   ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    iNsTr_51 := ($cast ($uint<32>) phitmpx_x1)
    iNsTr_52 := (iNsTr_51 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    $place [bbx_xnphx_x2_bb_13]
    //begin: basic-block bb_16
    $merge bb_17_bb_16 bb_19_bb_16
    $phi storemerge15x_xin :=  ( $cast ($uint<32>) iNsTr_99) $on bb_19_bb_16 ( $cast ($uint<32>) iNsTr_92) $on bb_17_bb_16 
    $endmerge
    storemerge15 := ($cast ($uint<16>) storemerge15x_xin)
    ->(scevgepx_x3) := storemerge15
    iNsTr_102 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) storemerge15) )
    iNsTr_103 := (iNsTr_102 | nzx_x01x_x3)
    iNsTr_104 := (ix_x02x_x3 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (iNsTr_104 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond1 $then  $place [bb_16_bb_5] $else $place [bb_16_bb_18] $endif 
    //begin: basic-block bb_17
    $merge bb_18_bb_17
    $endmerge
    iNsTr_88 := (iNsTr_85 + iNsTr_86)
    // load 
    iNsTr_89 := ->(scevgep9x_x3) 
    iNsTr_90 := ($cast ($uint<32>) iNsTr_89)
    iNsTr_91 := (iNsTr_90 * iNsTr_88)
    iNsTr_92 := (iNsTr_91 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    $place [bb_17_bb_16]
    //begin: basic-block bb_18
    $merge bb_16_bb_18 bbx_xnphx_x3_bb_18
    $phi ix_x02x_x3 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_x3_bb_18 ( $cast ($uint<32>) iNsTr_104) $on bb_16_bb_18 
    $phi nzx_x01x_x3 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_x3_bb_18 ( $cast ($uint<32>) iNsTr_103) $on bb_16_bb_18 
    $endmerge
    scevgep9x_x3 := mf[ix_x02x_x3]
    scevgep8x_x3 := bias[ix_x02x_x3]
    scevgepx_x3 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][ix_x02x_x3]
    // load 
    iNsTr_82 := ->(scevgepx_x3) 
    // compare instruction
    iNsTr_83 := ( ($bitcast ( $int<16>) iNsTr_82) >  ($bitcast ( $int<16>) ( $bitcast ($uint<16> ) _b0000000000000000 )  ) )
    // load 
    iNsTr_84 := ->(scevgep8x_x3) 
    iNsTr_85 := ($cast ($uint<32>) iNsTr_84)
    iNsTr_86 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_82) )
    $if iNsTr_83 $then  $place [bb_18_bb_17] $else $place [bb_18_bb_19] $endif 
    //begin: basic-block bb_19
    $merge bb_18_bb_19
    $endmerge
    iNsTr_94 := (iNsTr_85 - iNsTr_86)
    // load 
    iNsTr_95 := ->(scevgep9x_x3) 
    iNsTr_96 := ($cast ($uint<32>) iNsTr_95)
    iNsTr_97 := (iNsTr_96 * iNsTr_94)
    iNsTr_98 := (iNsTr_97 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    iNsTr_99 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_98)
    $place [bb_19_bb_16]
    //begin: basic-block bbx_xnphx_x3
    $merge bb_11_bbx_xnphx_x3
    $phi xx_xlcssa5 :=  ( $cast ($uint<32>) iNsTr_75) $on bb_11_bbx_xnphx_x3 
    $endmerge
    iNsTr_78 := (iNsTr_52 | iNsTr_50)
    // compare instruction
    phitmpx_x2 := ( ($bitcast ( $int<32>) xx_xlcssa5) !=   ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    iNsTr_79 := ($cast ($uint<32>) phitmpx_x2)
    iNsTr_80 := (iNsTr_79 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    $place [bbx_xnphx_x3_bb_18]
    $merge return__ $endmerge
  }
}
$module [quant_2x2_dc] 
$in (dct : $pointer< $uint<16> > mf : $uint<32> bias : $uint<32> )
$out (ret_val__ : $uint<32>)
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    // load 
    iNsTr_0 := ->(dct) 
    // compare instruction
    iNsTr_1 := ( ($bitcast ( $int<16>) iNsTr_0) >  ($bitcast ( $int<16>) ( $bitcast ($uint<16> ) _b0000000000000000 )  ) )
    iNsTr_2 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_0) )
    $if iNsTr_1 $then  $place [bb_0_bb_1] $else $place [bb_0_bb_2] $endif 
    //begin: basic-block bb_1
    $merge bb_0_bb_1
    $endmerge
    iNsTr_4 := (iNsTr_2 + bias)
    iNsTr_5 := (iNsTr_4 * mf)
    iNsTr_6 := (iNsTr_5 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    $place [bb_1_bb_3]
    //begin: basic-block bb_2
    $merge bb_0_bb_2
    $endmerge
    iNsTr_8 := (bias - iNsTr_2)
    iNsTr_9 := (iNsTr_8 * mf)
    iNsTr_10 := (iNsTr_9 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    iNsTr_11 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_10)
    $place [bb_2_bb_3]
    //begin: basic-block bb_3
    $merge bb_1_bb_3 bb_2_bb_3
    $phi storemergex_xin :=  ( $cast ($uint<32>) iNsTr_6) $on bb_1_bb_3 ( $cast ($uint<32>) iNsTr_11) $on bb_2_bb_3 
    $endmerge
    storemerge := ($cast ($uint<16>) storemergex_xin)
    ->(dct) := storemerge
    iNsTr_14 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_15 := ->(iNsTr_14) 
    // compare instruction
    iNsTr_16 := ( ($bitcast ( $int<16>) iNsTr_15) >  ($bitcast ( $int<16>) ( $bitcast ($uint<16> ) _b0000000000000000 )  ) )
    iNsTr_17 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_15) )
    $if iNsTr_16 $then  $place [bb_3_bb_4] $else $place [bb_3_bb_5] $endif 
    //begin: basic-block bb_4
    $merge bb_3_bb_4
    $endmerge
    iNsTr_19 := (iNsTr_17 + bias)
    iNsTr_20 := (iNsTr_19 * mf)
    iNsTr_21 := (iNsTr_20 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    $place [bb_4_bb_6]
    //begin: basic-block bb_5
    $merge bb_3_bb_5
    $endmerge
    iNsTr_23 := (bias - iNsTr_17)
    iNsTr_24 := (iNsTr_23 * mf)
    iNsTr_25 := (iNsTr_24 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    iNsTr_26 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_25)
    $place [bb_5_bb_6]
    //begin: basic-block bb_6
    $merge bb_4_bb_6 bb_5_bb_6
    $phi storemerge1x_xin :=  ( $cast ($uint<32>) iNsTr_26) $on bb_5_bb_6 ( $cast ($uint<32>) iNsTr_21) $on bb_4_bb_6 
    $endmerge
    storemerge1 := ($cast ($uint<16>) storemerge1x_xin)
    ->(iNsTr_14) := storemerge1
    iNsTr_29 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_30 := ->(iNsTr_29) 
    // compare instruction
    iNsTr_31 := ( ($bitcast ( $int<16>) iNsTr_30) >  ($bitcast ( $int<16>) ( $bitcast ($uint<16> ) _b0000000000000000 )  ) )
    iNsTr_32 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_30) )
    $if iNsTr_31 $then  $place [bb_6_bb_7] $else $place [bb_6_bb_8] $endif 
    //begin: basic-block bb_7
    $merge bb_6_bb_7
    $endmerge
    iNsTr_34 := (iNsTr_32 + bias)
    iNsTr_35 := (iNsTr_34 * mf)
    iNsTr_36 := (iNsTr_35 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    $place [bb_7_bb_9]
    //begin: basic-block bb_8
    $merge bb_6_bb_8
    $endmerge
    iNsTr_38 := (bias - iNsTr_32)
    iNsTr_39 := (iNsTr_38 * mf)
    iNsTr_40 := (iNsTr_39 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    iNsTr_41 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_40)
    $place [bb_8_bb_9]
    //begin: basic-block bb_9
    $merge bb_7_bb_9 bb_8_bb_9
    $phi storemerge2x_xin :=  ( $cast ($uint<32>) iNsTr_41) $on bb_8_bb_9 ( $cast ($uint<32>) iNsTr_36) $on bb_7_bb_9 
    $endmerge
    storemerge2 := ($cast ($uint<16>) storemerge2x_xin)
    ->(iNsTr_29) := storemerge2
    iNsTr_44 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    iNsTr_45 := ->(iNsTr_44) 
    // compare instruction
    iNsTr_46 := ( ($bitcast ( $int<16>) iNsTr_45) >  ($bitcast ( $int<16>) ( $bitcast ($uint<16> ) _b0000000000000000 )  ) )
    iNsTr_47 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_45) )
    $if iNsTr_46 $then  $place [bb_9_bb_10] $else $place [bb_9_bb_11] $endif 
    //begin: basic-block bb_10
    $merge bb_9_bb_10
    $endmerge
    iNsTr_49 := (iNsTr_47 + bias)
    iNsTr_50 := (iNsTr_49 * mf)
    iNsTr_51 := (iNsTr_50 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    $place [bb_10_bb_12]
    //begin: basic-block bb_11
    $merge bb_9_bb_11
    $endmerge
    iNsTr_53 := (bias - iNsTr_47)
    iNsTr_54 := (iNsTr_53 * mf)
    iNsTr_55 := (iNsTr_54 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    iNsTr_56 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_55)
    $place [bb_11_bb_12]
    //begin: basic-block bb_12
    $merge bb_10_bb_12 bb_11_bb_12
    $phi storemerge3x_xin :=  ( $cast ($uint<32>) iNsTr_56) $on bb_11_bb_12 ( $cast ($uint<32>) iNsTr_51) $on bb_10_bb_12 
    $endmerge
    storemerge3 := ($cast ($uint<16>) storemerge3x_xin)
    ->(iNsTr_44) := storemerge3
    iNsTr_59 := (storemerge1x_xin | storemergex_xin)
    iNsTr_60 := (iNsTr_59 | storemerge2x_xin)
    iNsTr_61 := (iNsTr_60 | storemerge3x_xin)
    iNsTr_62 := ($cast ($uint<16>) iNsTr_61)
    // compare instruction
    iNsTr_63 := ( ($bitcast ( $int<16>) iNsTr_62) !=   ($bitcast ( $int<16>) ( $bitcast ($uint<16> ) _b0000000000000000 )  ) )
    ret_val__ := ($cast ($uint<32>) iNsTr_63)
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [dequant_4x4_dc] 
$in (dct : $pointer< $uint<16> > dequant_mf : $pointer< $array [16] $of $uint<32> > i_qp : $uint<32> )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    iNsTr_0 := (i_qp / ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    iNsTr_1 := (iNsTr_0 + ( $bitcast ($uint<32> ) _b11111111111111111111111111111010 ) )
    // compare instruction
    iNsTr_2 := ( ($bitcast ( $int<32>) iNsTr_1) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    iNsTr_3 := (i_qp UNSUPPORTED_REM ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    iNsTr_4 := dequant_mf[iNsTr_3][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    // load 
    iNsTr_5 := ->(iNsTr_4) 
    $if iNsTr_2 $then  $place [bb_0_xx_xloopexit4] $else $place [bb_0_xx_xloopexit] $endif 
    //begin: basic-block xx_xloopexit
    $merge bb_0_xx_xloopexit
    $endmerge
    iNsTr_89 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000101 )  - iNsTr_0)
    iNsTr_90 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  << iNsTr_89)
    iNsTr_91 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000110 )  - iNsTr_0)
    // load 
    iNsTr_92 := ->(dct) 
    iNsTr_93 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_92) )
    iNsTr_94 := (iNsTr_93 * iNsTr_5)
    iNsTr_95 := (iNsTr_94 + iNsTr_90)
    iNsTr_96 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_95) >>  ($bitcast ( $int<32>) iNsTr_91 )))
    iNsTr_97 := ($cast ($uint<16>) iNsTr_96)
    ->(dct) := iNsTr_97
    scevgepx_x1 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_99 := ->(scevgepx_x1) 
    iNsTr_100 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_99) )
    iNsTr_101 := (iNsTr_100 * iNsTr_5)
    iNsTr_102 := (iNsTr_101 + iNsTr_90)
    iNsTr_103 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_102) >>  ($bitcast ( $int<32>) iNsTr_91 )))
    iNsTr_104 := ($cast ($uint<16>) iNsTr_103)
    ->(scevgepx_x1) := iNsTr_104
    scevgepx_x2 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_106 := ->(scevgepx_x2) 
    iNsTr_107 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_106) )
    iNsTr_108 := (iNsTr_107 * iNsTr_5)
    iNsTr_109 := (iNsTr_108 + iNsTr_90)
    iNsTr_110 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_109) >>  ($bitcast ( $int<32>) iNsTr_91 )))
    iNsTr_111 := ($cast ($uint<16>) iNsTr_110)
    ->(scevgepx_x2) := iNsTr_111
    scevgepx_x3 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    iNsTr_113 := ->(scevgepx_x3) 
    iNsTr_114 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_113) )
    iNsTr_115 := (iNsTr_114 * iNsTr_5)
    iNsTr_116 := (iNsTr_115 + iNsTr_90)
    iNsTr_117 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_116) >>  ($bitcast ( $int<32>) iNsTr_91 )))
    iNsTr_118 := ($cast ($uint<16>) iNsTr_117)
    ->(scevgepx_x3) := iNsTr_118
    scevgepx_x4 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ]
    // load 
    iNsTr_120 := ->(scevgepx_x4) 
    iNsTr_121 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_120) )
    iNsTr_122 := (iNsTr_121 * iNsTr_5)
    iNsTr_123 := (iNsTr_122 + iNsTr_90)
    iNsTr_124 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_123) >>  ($bitcast ( $int<32>) iNsTr_91 )))
    iNsTr_125 := ($cast ($uint<16>) iNsTr_124)
    ->(scevgepx_x4) := iNsTr_125
    scevgepx_x5 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) ]
    // load 
    iNsTr_127 := ->(scevgepx_x5) 
    iNsTr_128 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_127) )
    iNsTr_129 := (iNsTr_128 * iNsTr_5)
    iNsTr_130 := (iNsTr_129 + iNsTr_90)
    iNsTr_131 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_130) >>  ($bitcast ( $int<32>) iNsTr_91 )))
    iNsTr_132 := ($cast ($uint<16>) iNsTr_131)
    ->(scevgepx_x5) := iNsTr_132
    scevgepx_x6 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) ]
    // load 
    iNsTr_134 := ->(scevgepx_x6) 
    iNsTr_135 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_134) )
    iNsTr_136 := (iNsTr_135 * iNsTr_5)
    iNsTr_137 := (iNsTr_136 + iNsTr_90)
    iNsTr_138 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_137) >>  ($bitcast ( $int<32>) iNsTr_91 )))
    iNsTr_139 := ($cast ($uint<16>) iNsTr_138)
    ->(scevgepx_x6) := iNsTr_139
    scevgepx_x7 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) ]
    // load 
    iNsTr_141 := ->(scevgepx_x7) 
    iNsTr_142 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_141) )
    iNsTr_143 := (iNsTr_142 * iNsTr_5)
    iNsTr_144 := (iNsTr_143 + iNsTr_90)
    iNsTr_145 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_144) >>  ($bitcast ( $int<32>) iNsTr_91 )))
    iNsTr_146 := ($cast ($uint<16>) iNsTr_145)
    ->(scevgepx_x7) := iNsTr_146
    scevgepx_x8 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) ]
    // load 
    iNsTr_148 := ->(scevgepx_x8) 
    iNsTr_149 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_148) )
    iNsTr_150 := (iNsTr_149 * iNsTr_5)
    iNsTr_151 := (iNsTr_150 + iNsTr_90)
    iNsTr_152 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_151) >>  ($bitcast ( $int<32>) iNsTr_91 )))
    iNsTr_153 := ($cast ($uint<16>) iNsTr_152)
    ->(scevgepx_x8) := iNsTr_153
    scevgepx_x9 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000001001 ) ]
    // load 
    iNsTr_155 := ->(scevgepx_x9) 
    iNsTr_156 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_155) )
    iNsTr_157 := (iNsTr_156 * iNsTr_5)
    iNsTr_158 := (iNsTr_157 + iNsTr_90)
    iNsTr_159 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_158) >>  ($bitcast ( $int<32>) iNsTr_91 )))
    iNsTr_160 := ($cast ($uint<16>) iNsTr_159)
    ->(scevgepx_x9) := iNsTr_160
    scevgepx_x10 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000001010 ) ]
    // load 
    iNsTr_162 := ->(scevgepx_x10) 
    iNsTr_163 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_162) )
    iNsTr_164 := (iNsTr_163 * iNsTr_5)
    iNsTr_165 := (iNsTr_164 + iNsTr_90)
    iNsTr_166 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_165) >>  ($bitcast ( $int<32>) iNsTr_91 )))
    iNsTr_167 := ($cast ($uint<16>) iNsTr_166)
    ->(scevgepx_x10) := iNsTr_167
    scevgepx_x11 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000001011 ) ]
    // load 
    iNsTr_169 := ->(scevgepx_x11) 
    iNsTr_170 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_169) )
    iNsTr_171 := (iNsTr_170 * iNsTr_5)
    iNsTr_172 := (iNsTr_171 + iNsTr_90)
    iNsTr_173 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_172) >>  ($bitcast ( $int<32>) iNsTr_91 )))
    iNsTr_174 := ($cast ($uint<16>) iNsTr_173)
    ->(scevgepx_x11) := iNsTr_174
    scevgepx_x12 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000001100 ) ]
    // load 
    iNsTr_176 := ->(scevgepx_x12) 
    iNsTr_177 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_176) )
    iNsTr_178 := (iNsTr_177 * iNsTr_5)
    iNsTr_179 := (iNsTr_178 + iNsTr_90)
    iNsTr_180 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_179) >>  ($bitcast ( $int<32>) iNsTr_91 )))
    iNsTr_181 := ($cast ($uint<16>) iNsTr_180)
    ->(scevgepx_x12) := iNsTr_181
    scevgepx_x13 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000001101 ) ]
    // load 
    iNsTr_183 := ->(scevgepx_x13) 
    iNsTr_184 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_183) )
    iNsTr_185 := (iNsTr_184 * iNsTr_5)
    iNsTr_186 := (iNsTr_185 + iNsTr_90)
    iNsTr_187 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_186) >>  ($bitcast ( $int<32>) iNsTr_91 )))
    iNsTr_188 := ($cast ($uint<16>) iNsTr_187)
    ->(scevgepx_x13) := iNsTr_188
    scevgepx_x14 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000001110 ) ]
    // load 
    iNsTr_190 := ->(scevgepx_x14) 
    iNsTr_191 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_190) )
    iNsTr_192 := (iNsTr_191 * iNsTr_5)
    iNsTr_193 := (iNsTr_192 + iNsTr_90)
    iNsTr_194 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_193) >>  ($bitcast ( $int<32>) iNsTr_91 )))
    iNsTr_195 := ($cast ($uint<16>) iNsTr_194)
    ->(scevgepx_x14) := iNsTr_195
    scevgepx_x15 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000001111 ) ]
    // load 
    iNsTr_197 := ->(scevgepx_x15) 
    iNsTr_198 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_197) )
    iNsTr_199 := (iNsTr_198 * iNsTr_5)
    iNsTr_200 := (iNsTr_199 + iNsTr_90)
    iNsTr_201 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_200) >>  ($bitcast ( $int<32>) iNsTr_91 )))
    iNsTr_202 := ($cast ($uint<16>) iNsTr_201)
    ->(scevgepx_x15) := iNsTr_202
    $place [xx_xloopexit_UnifiedReturnBlock]
    //begin: basic-block xx_xloopexit4
    $merge bb_0_xx_xloopexit4
    $endmerge
    iNsTr_7 := (iNsTr_5 << iNsTr_1)
    // load 
    iNsTr_8 := ->(dct) 
    iNsTr_9 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_8) )
    iNsTr_10 := (iNsTr_9 * iNsTr_7)
    iNsTr_11 := ($cast ($uint<16>) iNsTr_10)
    ->(dct) := iNsTr_11
    scevgep7x_x1 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_13 := ->(scevgep7x_x1) 
    iNsTr_14 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_13) )
    iNsTr_15 := (iNsTr_14 * iNsTr_7)
    iNsTr_16 := ($cast ($uint<16>) iNsTr_15)
    ->(scevgep7x_x1) := iNsTr_16
    scevgep7x_x2 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_18 := ->(scevgep7x_x2) 
    iNsTr_19 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_18) )
    iNsTr_20 := (iNsTr_19 * iNsTr_7)
    iNsTr_21 := ($cast ($uint<16>) iNsTr_20)
    ->(scevgep7x_x2) := iNsTr_21
    scevgep7x_x3 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    iNsTr_23 := ->(scevgep7x_x3) 
    iNsTr_24 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_23) )
    iNsTr_25 := (iNsTr_24 * iNsTr_7)
    iNsTr_26 := ($cast ($uint<16>) iNsTr_25)
    ->(scevgep7x_x3) := iNsTr_26
    scevgep7x_x4 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ]
    // load 
    iNsTr_28 := ->(scevgep7x_x4) 
    iNsTr_29 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_28) )
    iNsTr_30 := (iNsTr_29 * iNsTr_7)
    iNsTr_31 := ($cast ($uint<16>) iNsTr_30)
    ->(scevgep7x_x4) := iNsTr_31
    scevgep7x_x5 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) ]
    // load 
    iNsTr_33 := ->(scevgep7x_x5) 
    iNsTr_34 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_33) )
    iNsTr_35 := (iNsTr_34 * iNsTr_7)
    iNsTr_36 := ($cast ($uint<16>) iNsTr_35)
    ->(scevgep7x_x5) := iNsTr_36
    scevgep7x_x6 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) ]
    // load 
    iNsTr_38 := ->(scevgep7x_x6) 
    iNsTr_39 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_38) )
    iNsTr_40 := (iNsTr_39 * iNsTr_7)
    iNsTr_41 := ($cast ($uint<16>) iNsTr_40)
    ->(scevgep7x_x6) := iNsTr_41
    scevgep7x_x7 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) ]
    // load 
    iNsTr_43 := ->(scevgep7x_x7) 
    iNsTr_44 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_43) )
    iNsTr_45 := (iNsTr_44 * iNsTr_7)
    iNsTr_46 := ($cast ($uint<16>) iNsTr_45)
    ->(scevgep7x_x7) := iNsTr_46
    scevgep7x_x8 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) ]
    // load 
    iNsTr_48 := ->(scevgep7x_x8) 
    iNsTr_49 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_48) )
    iNsTr_50 := (iNsTr_49 * iNsTr_7)
    iNsTr_51 := ($cast ($uint<16>) iNsTr_50)
    ->(scevgep7x_x8) := iNsTr_51
    scevgep7x_x9 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000001001 ) ]
    // load 
    iNsTr_53 := ->(scevgep7x_x9) 
    iNsTr_54 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_53) )
    iNsTr_55 := (iNsTr_54 * iNsTr_7)
    iNsTr_56 := ($cast ($uint<16>) iNsTr_55)
    ->(scevgep7x_x9) := iNsTr_56
    scevgep7x_x10 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000001010 ) ]
    // load 
    iNsTr_58 := ->(scevgep7x_x10) 
    iNsTr_59 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_58) )
    iNsTr_60 := (iNsTr_59 * iNsTr_7)
    iNsTr_61 := ($cast ($uint<16>) iNsTr_60)
    ->(scevgep7x_x10) := iNsTr_61
    scevgep7x_x11 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000001011 ) ]
    // load 
    iNsTr_63 := ->(scevgep7x_x11) 
    iNsTr_64 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_63) )
    iNsTr_65 := (iNsTr_64 * iNsTr_7)
    iNsTr_66 := ($cast ($uint<16>) iNsTr_65)
    ->(scevgep7x_x11) := iNsTr_66
    scevgep7x_x12 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000001100 ) ]
    // load 
    iNsTr_68 := ->(scevgep7x_x12) 
    iNsTr_69 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_68) )
    iNsTr_70 := (iNsTr_69 * iNsTr_7)
    iNsTr_71 := ($cast ($uint<16>) iNsTr_70)
    ->(scevgep7x_x12) := iNsTr_71
    scevgep7x_x13 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000001101 ) ]
    // load 
    iNsTr_73 := ->(scevgep7x_x13) 
    iNsTr_74 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_73) )
    iNsTr_75 := (iNsTr_74 * iNsTr_7)
    iNsTr_76 := ($cast ($uint<16>) iNsTr_75)
    ->(scevgep7x_x13) := iNsTr_76
    scevgep7x_x14 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000001110 ) ]
    // load 
    iNsTr_78 := ->(scevgep7x_x14) 
    iNsTr_79 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_78) )
    iNsTr_80 := (iNsTr_79 * iNsTr_7)
    iNsTr_81 := ($cast ($uint<16>) iNsTr_80)
    ->(scevgep7x_x14) := iNsTr_81
    scevgep7x_x15 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000001111 ) ]
    // load 
    iNsTr_83 := ->(scevgep7x_x15) 
    iNsTr_84 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_83) )
    iNsTr_85 := (iNsTr_84 * iNsTr_7)
    iNsTr_86 := ($cast ($uint<16>) iNsTr_85)
    ->(scevgep7x_x15) := iNsTr_86
    $place [xx_xloopexit4_UnifiedReturnBlock]
    //begin: basic-block UnifiedReturnBlock
    $merge xx_xloopexit_UnifiedReturnBlock xx_xloopexit4_UnifiedReturnBlock
    $endmerge
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [idct_dequant_2x4_dc] 
$in (dct : $pointer< $uint<16> > dct4x4 : $pointer< $array [16] $of $uint<16> > dequant_mf : $pointer< $array [16] $of $uint<32> > i_qp : $uint<32> )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    // load 
    iNsTr_0 := ->(dct) 
    iNsTr_1 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_0) )
    iNsTr_2 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_3 := ->(iNsTr_2) 
    iNsTr_4 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_3) )
    iNsTr_5 := (iNsTr_4 + iNsTr_1)
    iNsTr_6 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_7 := ->(iNsTr_6) 
    iNsTr_8 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_7) )
    iNsTr_9 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    iNsTr_10 := ->(iNsTr_9) 
    iNsTr_11 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_10) )
    iNsTr_12 := (iNsTr_11 + iNsTr_8)
    iNsTr_13 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ]
    // load 
    iNsTr_14 := ->(iNsTr_13) 
    iNsTr_15 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_14) )
    iNsTr_16 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) ]
    // load 
    iNsTr_17 := ->(iNsTr_16) 
    iNsTr_18 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_17) )
    iNsTr_19 := (iNsTr_18 + iNsTr_15)
    iNsTr_20 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) ]
    // load 
    iNsTr_21 := ->(iNsTr_20) 
    iNsTr_22 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_21) )
    iNsTr_23 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) ]
    // load 
    iNsTr_24 := ->(iNsTr_23) 
    iNsTr_25 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_24) )
    iNsTr_26 := (iNsTr_25 + iNsTr_22)
    iNsTr_27 := (iNsTr_1 - iNsTr_4)
    iNsTr_28 := (iNsTr_8 - iNsTr_11)
    iNsTr_29 := (iNsTr_15 - iNsTr_18)
    iNsTr_30 := (iNsTr_22 - iNsTr_25)
    iNsTr_31 := (iNsTr_12 + iNsTr_5)
    iNsTr_32 := (iNsTr_26 + iNsTr_19)
    iNsTr_33 := (iNsTr_28 + iNsTr_27)
    iNsTr_34 := (iNsTr_30 + iNsTr_29)
    iNsTr_35 := (iNsTr_5 - iNsTr_12)
    iNsTr_36 := (iNsTr_19 - iNsTr_26)
    iNsTr_37 := (iNsTr_27 - iNsTr_28)
    iNsTr_38 := (iNsTr_29 - iNsTr_30)
    iNsTr_39 := (i_qp UNSUPPORTED_REM ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    iNsTr_40 := dequant_mf[iNsTr_39][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    // load 
    iNsTr_41 := ->(iNsTr_40) 
    iNsTr_42 := (i_qp / ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    iNsTr_43 := (iNsTr_41 << iNsTr_42)
    iNsTr_44 := (iNsTr_32 + iNsTr_31)
    iNsTr_45 := (iNsTr_43 * iNsTr_44)
    iNsTr_46 := (iNsTr_45 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    iNsTr_47 := (iNsTr_46 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    iNsTr_48 := ($cast ($uint<16>) iNsTr_47)
    iNsTr_49 := dct4x4[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    ->(iNsTr_49) := iNsTr_48
    iNsTr_51 := (iNsTr_34 + iNsTr_33)
    iNsTr_52 := (iNsTr_51 * iNsTr_43)
    iNsTr_53 := (iNsTr_52 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    iNsTr_54 := (iNsTr_53 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    iNsTr_55 := ($cast ($uint<16>) iNsTr_54)
    iNsTr_56 := dct4x4[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    ->(iNsTr_56) := iNsTr_55
    iNsTr_58 := (iNsTr_31 - iNsTr_32)
    iNsTr_59 := (iNsTr_43 * iNsTr_58)
    iNsTr_60 := (iNsTr_59 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    iNsTr_61 := (iNsTr_60 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    iNsTr_62 := ($cast ($uint<16>) iNsTr_61)
    iNsTr_63 := dct4x4[( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    ->(iNsTr_63) := iNsTr_62
    iNsTr_65 := (iNsTr_33 - iNsTr_34)
    iNsTr_66 := (iNsTr_65 * iNsTr_43)
    iNsTr_67 := (iNsTr_66 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    iNsTr_68 := (iNsTr_67 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    iNsTr_69 := ($cast ($uint<16>) iNsTr_68)
    iNsTr_70 := dct4x4[( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    ->(iNsTr_70) := iNsTr_69
    iNsTr_72 := (iNsTr_35 - iNsTr_36)
    iNsTr_73 := (iNsTr_43 * iNsTr_72)
    iNsTr_74 := (iNsTr_73 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    iNsTr_75 := (iNsTr_74 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    iNsTr_76 := ($cast ($uint<16>) iNsTr_75)
    iNsTr_77 := dct4x4[( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    ->(iNsTr_77) := iNsTr_76
    iNsTr_79 := (iNsTr_37 - iNsTr_38)
    iNsTr_80 := (iNsTr_79 * iNsTr_43)
    iNsTr_81 := (iNsTr_80 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    iNsTr_82 := (iNsTr_81 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    iNsTr_83 := ($cast ($uint<16>) iNsTr_82)
    iNsTr_84 := dct4x4[( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    ->(iNsTr_84) := iNsTr_83
    iNsTr_86 := (iNsTr_36 + iNsTr_35)
    iNsTr_87 := (iNsTr_43 * iNsTr_86)
    iNsTr_88 := (iNsTr_87 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    iNsTr_89 := (iNsTr_88 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    iNsTr_90 := ($cast ($uint<16>) iNsTr_89)
    iNsTr_91 := dct4x4[( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    ->(iNsTr_91) := iNsTr_90
    iNsTr_93 := (iNsTr_38 + iNsTr_37)
    iNsTr_94 := (iNsTr_93 * iNsTr_43)
    iNsTr_95 := (iNsTr_94 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    iNsTr_96 := (iNsTr_95 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    iNsTr_97 := ($cast ($uint<16>) iNsTr_96)
    iNsTr_98 := dct4x4[( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    ->(iNsTr_98) := iNsTr_97
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [idct_dequant_2x4_dconly] 
$in (dct : $pointer< $uint<16> > dequant_mf : $pointer< $array [16] $of $uint<32> > i_qp : $uint<32> )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    // load 
    iNsTr_0 := ->(dct) 
    iNsTr_1 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_0) )
    iNsTr_2 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_3 := ->(iNsTr_2) 
    iNsTr_4 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_3) )
    iNsTr_5 := (iNsTr_4 + iNsTr_1)
    iNsTr_6 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_7 := ->(iNsTr_6) 
    iNsTr_8 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_7) )
    iNsTr_9 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    iNsTr_10 := ->(iNsTr_9) 
    iNsTr_11 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_10) )
    iNsTr_12 := (iNsTr_11 + iNsTr_8)
    iNsTr_13 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ]
    // load 
    iNsTr_14 := ->(iNsTr_13) 
    iNsTr_15 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_14) )
    iNsTr_16 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) ]
    // load 
    iNsTr_17 := ->(iNsTr_16) 
    iNsTr_18 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_17) )
    iNsTr_19 := (iNsTr_18 + iNsTr_15)
    iNsTr_20 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) ]
    // load 
    iNsTr_21 := ->(iNsTr_20) 
    iNsTr_22 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_21) )
    iNsTr_23 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) ]
    // load 
    iNsTr_24 := ->(iNsTr_23) 
    iNsTr_25 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_24) )
    iNsTr_26 := (iNsTr_25 + iNsTr_22)
    iNsTr_27 := (iNsTr_1 - iNsTr_4)
    iNsTr_28 := (iNsTr_8 - iNsTr_11)
    iNsTr_29 := (iNsTr_15 - iNsTr_18)
    iNsTr_30 := (iNsTr_22 - iNsTr_25)
    iNsTr_31 := (iNsTr_12 + iNsTr_5)
    iNsTr_32 := (iNsTr_26 + iNsTr_19)
    iNsTr_33 := (iNsTr_28 + iNsTr_27)
    iNsTr_34 := (iNsTr_30 + iNsTr_29)
    iNsTr_35 := (iNsTr_5 - iNsTr_12)
    iNsTr_36 := (iNsTr_19 - iNsTr_26)
    iNsTr_37 := (iNsTr_27 - iNsTr_28)
    iNsTr_38 := (iNsTr_29 - iNsTr_30)
    iNsTr_39 := (i_qp UNSUPPORTED_REM ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    iNsTr_40 := dequant_mf[iNsTr_39][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    // load 
    iNsTr_41 := ->(iNsTr_40) 
    iNsTr_42 := (i_qp / ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    iNsTr_43 := (iNsTr_41 << iNsTr_42)
    iNsTr_44 := (iNsTr_32 + iNsTr_31)
    iNsTr_45 := (iNsTr_43 * iNsTr_44)
    iNsTr_46 := (iNsTr_45 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    iNsTr_47 := (iNsTr_46 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    iNsTr_48 := ($cast ($uint<16>) iNsTr_47)
    ->(dct) := iNsTr_48
    iNsTr_50 := (iNsTr_34 + iNsTr_33)
    iNsTr_51 := (iNsTr_50 * iNsTr_43)
    iNsTr_52 := (iNsTr_51 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    iNsTr_53 := (iNsTr_52 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    iNsTr_54 := ($cast ($uint<16>) iNsTr_53)
    ->(iNsTr_2) := iNsTr_54
    iNsTr_56 := (iNsTr_31 - iNsTr_32)
    iNsTr_57 := (iNsTr_43 * iNsTr_56)
    iNsTr_58 := (iNsTr_57 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    iNsTr_59 := (iNsTr_58 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    iNsTr_60 := ($cast ($uint<16>) iNsTr_59)
    ->(iNsTr_6) := iNsTr_60
    iNsTr_62 := (iNsTr_33 - iNsTr_34)
    iNsTr_63 := (iNsTr_62 * iNsTr_43)
    iNsTr_64 := (iNsTr_63 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    iNsTr_65 := (iNsTr_64 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    iNsTr_66 := ($cast ($uint<16>) iNsTr_65)
    ->(iNsTr_9) := iNsTr_66
    iNsTr_68 := (iNsTr_35 - iNsTr_36)
    iNsTr_69 := (iNsTr_43 * iNsTr_68)
    iNsTr_70 := (iNsTr_69 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    iNsTr_71 := (iNsTr_70 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    iNsTr_72 := ($cast ($uint<16>) iNsTr_71)
    ->(iNsTr_13) := iNsTr_72
    iNsTr_74 := (iNsTr_37 - iNsTr_38)
    iNsTr_75 := (iNsTr_74 * iNsTr_43)
    iNsTr_76 := (iNsTr_75 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    iNsTr_77 := (iNsTr_76 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    iNsTr_78 := ($cast ($uint<16>) iNsTr_77)
    ->(iNsTr_16) := iNsTr_78
    iNsTr_80 := (iNsTr_36 + iNsTr_35)
    iNsTr_81 := (iNsTr_43 * iNsTr_80)
    iNsTr_82 := (iNsTr_81 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    iNsTr_83 := (iNsTr_82 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    iNsTr_84 := ($cast ($uint<16>) iNsTr_83)
    ->(iNsTr_20) := iNsTr_84
    iNsTr_86 := (iNsTr_38 + iNsTr_37)
    iNsTr_87 := (iNsTr_86 * iNsTr_43)
    iNsTr_88 := (iNsTr_87 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    iNsTr_89 := (iNsTr_88 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    iNsTr_90 := ($cast ($uint<16>) iNsTr_89)
    ->(iNsTr_23) := iNsTr_90
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [optimize_chroma_2x2_dc] 
$in (dct : $pointer< $uint<16> > dequant_mf : $uint<32> )
$out (ret_val__ : $uint<32>)
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    // load 
    iNsTr_0 := ->(dct) 
    iNsTr_1 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_0) )
    iNsTr_2 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_3 := ->(iNsTr_2) 
    iNsTr_4 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_3) )
    iNsTr_5 := (iNsTr_4 + iNsTr_1)
    iNsTr_6 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_7 := ->(iNsTr_6) 
    iNsTr_8 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_7) )
    iNsTr_9 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    iNsTr_10 := ->(iNsTr_9) 
    iNsTr_11 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_10) )
    iNsTr_12 := (iNsTr_11 + iNsTr_8)
    iNsTr_13 := (iNsTr_1 - iNsTr_4)
    iNsTr_14 := (iNsTr_8 - iNsTr_11)
    iNsTr_15 := (iNsTr_12 + iNsTr_5)
    iNsTr_16 := (iNsTr_15 * dequant_mf)
    iNsTr_17 := (iNsTr_16 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) )
    iNsTr_18 := (iNsTr_17 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    iNsTr_19 := (iNsTr_5 - iNsTr_12)
    iNsTr_20 := (iNsTr_19 * dequant_mf)
    iNsTr_21 := (iNsTr_20 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) )
    iNsTr_22 := (iNsTr_21 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    iNsTr_23 := (iNsTr_14 + iNsTr_13)
    iNsTr_24 := (iNsTr_23 * dequant_mf)
    iNsTr_25 := (iNsTr_24 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) )
    iNsTr_26 := (iNsTr_25 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    iNsTr_27 := (iNsTr_13 - iNsTr_14)
    iNsTr_28 := (iNsTr_27 * dequant_mf)
    iNsTr_29 := (iNsTr_28 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) )
    iNsTr_30 := (iNsTr_29 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    iNsTr_31 := (iNsTr_18 | iNsTr_22)
    iNsTr_32 := (iNsTr_31 | iNsTr_26)
    iNsTr_33 := (iNsTr_32 | iNsTr_30)
    iNsTr_34 := ($cast ($uint<16>) iNsTr_33)
    // compare instruction
    phitmpx_xi := (iNsTr_34 > ( $bitcast ($uint<16> ) _b0000000000111111 )  )
    $if phitmpx_xi $then  $place [bb_0_bbx_xnph7x_xix_xpreheader] $else $place [bb_0_optimize_chroma_dc_internalx_xexit] $endif 
    //begin: basic-block bbx_xnph7x_xix_xpreheader
    $merge bb_0_bbx_xnph7x_xix_xpreheader
    $endmerge
    $place [bbx_xnph7x_xix_xpreheader_bbx_xnph7x_xi]
    //begin: basic-block bbx_xnph7x_xi
    $merge bbx_xnph7x_xix_xpreheader_bbx_xnph7x_xi xx_xloopexitx_xi_bbx_xnph7x_xi
    $phi indvar26x_xi :=  ( $cast ($uint<32>) indvarx_xnext27x_xi) $on xx_xloopexitx_xi_bbx_xnph7x_xi ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph7x_xix_xpreheader_bbx_xnph7x_xi 
    $phi nzx_x15x_xi :=  ( $cast ($uint<32>) nzx_x0x_xi) $on xx_xloopexitx_xi_bbx_xnph7x_xi ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph7x_xix_xpreheader_bbx_xnph7x_xi 
    $endmerge
    tmp := (indvar26x_xi * ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) )
    tmp10 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgepx_xi := dct[tmp10]
    // load 
    iNsTr_38 := ->(scevgepx_xi) 
    iNsTr_39 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_38) )
    iNsTr_40 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_39) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_41 := (iNsTr_40 | ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    tmp2 := (iNsTr_41 * ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) )
    tmp4 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_38) )
    tmp5 := (tmp4 - iNsTr_41)
    $place [bbx_xnph7x_xi_bb_3]
    //begin: basic-block bb_3
    $merge bb_6_bb_3 bbx_xnph7x_xi_bb_3
    $phi indvar17x_xi :=  ( $cast ($uint<32>) indvarx_xnext18x_xi) $on bb_6_bb_3 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph7x_xi_bb_3 
    $endmerge
    tmp3 := (tmp2 * indvar17x_xi)
    tmp6 := (tmp5 + tmp3)
    tmp25x_xi := ($cast ($uint<16>) tmp6)
    levelx_x0x_xi := (tmp4 + tmp3)
    // compare instruction
    iNsTr_43 := (levelx_x0x_xi == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if iNsTr_43 $then  $place [bb_3_xx_xloopexitx_xix_xloopexit] $else $place [bb_3_optimize_chroma_roundx_xexitx_xi] $endif 
    //begin: basic-block optimize_chroma_roundx_xexitx_xi
    $merge bb_3_optimize_chroma_roundx_xexitx_xi
    $endmerge
    ->(scevgepx_xi) := tmp25x_xi
    // load 
    iNsTr_47 := ->(dct) 
    iNsTr_48 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_47) )
    // load 
    iNsTr_49 := ->(iNsTr_2) 
    iNsTr_50 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_49) )
    iNsTr_51 := (iNsTr_50 + iNsTr_48)
    // load 
    iNsTr_52 := ->(iNsTr_6) 
    iNsTr_53 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_52) )
    // load 
    iNsTr_54 := ->(iNsTr_9) 
    iNsTr_55 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_54) )
    iNsTr_56 := (iNsTr_55 + iNsTr_53)
    iNsTr_57 := (iNsTr_48 - iNsTr_50)
    iNsTr_58 := (iNsTr_53 - iNsTr_55)
    iNsTr_59 := (iNsTr_56 + iNsTr_51)
    iNsTr_60 := (iNsTr_59 * dequant_mf)
    iNsTr_61 := (iNsTr_60 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) )
    iNsTr_62 := (iNsTr_61 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    iNsTr_63 := (iNsTr_51 - iNsTr_56)
    iNsTr_64 := (iNsTr_63 * dequant_mf)
    iNsTr_65 := (iNsTr_64 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) )
    iNsTr_66 := (iNsTr_65 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    iNsTr_67 := (iNsTr_58 + iNsTr_57)
    iNsTr_68 := (iNsTr_67 * dequant_mf)
    iNsTr_69 := (iNsTr_68 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) )
    iNsTr_70 := (iNsTr_69 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    iNsTr_71 := (iNsTr_57 - iNsTr_58)
    iNsTr_72 := (iNsTr_71 * dequant_mf)
    iNsTr_73 := (iNsTr_72 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) )
    iNsTr_74 := (iNsTr_73 + ( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) )
    iNsTr_75 := (iNsTr_62 ^ iNsTr_18)
    iNsTr_76 := (iNsTr_22 ^ iNsTr_66)
    sext2526 := (iNsTr_76 | iNsTr_75)
    iNsTr_77 := (iNsTr_26 ^ iNsTr_70)
    sext2728 := (iNsTr_77 | sext2526)
    iNsTr_78 := (iNsTr_30 ^ iNsTr_74)
    sext29 := (iNsTr_78 | sext2728)
    xx_xlcssax_xin := (sext29 << ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    xx_xlcssa :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) xx_xlcssax_xin) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )))
    // compare instruction
    iNsTr_79 := (xx_xlcssa < ( $bitcast ($uint<32> ) _b00000000000000000000000001000000 )  )
    $if iNsTr_79 $then  $place [optimize_chroma_roundx_xexitx_xi_bb_6] $else $place [optimize_chroma_roundx_xexitx_xi_bb_5] $endif 
    //begin: basic-block bb_5
    $merge optimize_chroma_roundx_xexitx_xi_bb_5
    $phi levelx_x0x_xix_xlcssa1 :=  ( $cast ($uint<32>) levelx_x0x_xi) $on optimize_chroma_roundx_xexitx_xi_bb_5 
    $endmerge
    iNsTr_83 := ($cast ($uint<16>) levelx_x0x_xix_xlcssa1)
    ->(scevgepx_xi) := iNsTr_83
    $place [bb_5_xx_xloopexitx_xi]
    //begin: basic-block bb_6
    $merge optimize_chroma_roundx_xexitx_xi_bb_6
    $endmerge
    indvarx_xnext18x_xi := (indvar17x_xi + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    $place [bb_6_bb_3]
    //begin: basic-block xx_xloopexitx_xix_xloopexit
    $merge bb_3_xx_xloopexitx_xix_xloopexit
    $endmerge
    $place [xx_xloopexitx_xix_xloopexit_xx_xloopexitx_xi]
    //begin: basic-block xx_xloopexitx_xi
    $merge bb_5_xx_xloopexitx_xi xx_xloopexitx_xix_xloopexit_xx_xloopexitx_xi
    $phi nzx_x0x_xi :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ) $on bb_5_xx_xloopexitx_xi ( $cast ($uint<32>) nzx_x15x_xi) $on xx_xloopexitx_xix_xloopexit_xx_xloopexitx_xi 
    $endmerge
    indvarx_xnext27x_xi := (indvar26x_xi + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond9 := (indvarx_xnext27x_xi == ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 )  )
    $if exitcond9 $then  $place [xx_xloopexitx_xi_optimize_chroma_dc_internalx_xexitx_xloopexit] $else $place [xx_xloopexitx_xi_bbx_xnph7x_xi] $endif 
    //begin: basic-block optimize_chroma_dc_internalx_xexitx_xloopexit
    $merge xx_xloopexitx_xi_optimize_chroma_dc_internalx_xexitx_xloopexit
    $phi nzx_x0x_xix_xlcssa :=  ( $cast ($uint<32>) nzx_x0x_xi) $on xx_xloopexitx_xi_optimize_chroma_dc_internalx_xexitx_xloopexit 
    $endmerge
    $place [optimize_chroma_dc_internalx_xexitx_xloopexit_optimize_chroma_dc_internalx_xexit]
    //begin: basic-block optimize_chroma_dc_internalx_xexit
    $merge bb_0_optimize_chroma_dc_internalx_xexit optimize_chroma_dc_internalx_xexitx_xloopexit_optimize_chroma_dc_internalx_xexit
    $phi ret_val__ :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bb_0_optimize_chroma_dc_internalx_xexit ( $cast ($uint<32>) nzx_x0x_xix_xlcssa) $on optimize_chroma_dc_internalx_xexitx_xloopexit_optimize_chroma_dc_internalx_xexit 
    $endmerge
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [optimize_chroma_2x4_dc] 
$in (dct : $pointer< $uint<16> > dequant_mf : $uint<32> )
$out (ret_val__ : $uint<32>)
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    // load 
    iNsTr_0 := ->(dct) 
    iNsTr_1 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_0) )
    iNsTr_2 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_3 := ->(iNsTr_2) 
    iNsTr_4 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_3) )
    iNsTr_5 := (iNsTr_4 + iNsTr_1)
    iNsTr_6 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_7 := ->(iNsTr_6) 
    iNsTr_8 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_7) )
    iNsTr_9 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    iNsTr_10 := ->(iNsTr_9) 
    iNsTr_11 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_10) )
    iNsTr_12 := (iNsTr_11 + iNsTr_8)
    iNsTr_13 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ]
    // load 
    iNsTr_14 := ->(iNsTr_13) 
    iNsTr_15 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_14) )
    iNsTr_16 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) ]
    // load 
    iNsTr_17 := ->(iNsTr_16) 
    iNsTr_18 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_17) )
    iNsTr_19 := (iNsTr_18 + iNsTr_15)
    iNsTr_20 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) ]
    // load 
    iNsTr_21 := ->(iNsTr_20) 
    iNsTr_22 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_21) )
    iNsTr_23 := dct[( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) ]
    // load 
    iNsTr_24 := ->(iNsTr_23) 
    iNsTr_25 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_24) )
    iNsTr_26 := (iNsTr_25 + iNsTr_22)
    iNsTr_27 := (iNsTr_1 - iNsTr_4)
    iNsTr_28 := (iNsTr_8 - iNsTr_11)
    iNsTr_29 := (iNsTr_15 - iNsTr_18)
    iNsTr_30 := (iNsTr_22 - iNsTr_25)
    iNsTr_31 := (iNsTr_12 + iNsTr_5)
    iNsTr_32 := (iNsTr_26 + iNsTr_19)
    iNsTr_33 := (iNsTr_28 + iNsTr_27)
    iNsTr_34 := (iNsTr_30 + iNsTr_29)
    iNsTr_35 := (iNsTr_5 - iNsTr_12)
    iNsTr_36 := (iNsTr_19 - iNsTr_26)
    iNsTr_37 := (iNsTr_27 - iNsTr_28)
    iNsTr_38 := (iNsTr_29 - iNsTr_30)
    iNsTr_39 := (iNsTr_32 + iNsTr_31)
    iNsTr_40 := (iNsTr_39 * dequant_mf)
    iNsTr_41 := (iNsTr_40 + ( $bitcast ($uint<32> ) _b00000000000000000000100000100000 ) )
    iNsTr_42 := (iNsTr_34 + iNsTr_33)
    iNsTr_43 := (iNsTr_42 * dequant_mf)
    iNsTr_44 := (iNsTr_43 + ( $bitcast ($uint<32> ) _b00000000000000000000100000100000 ) )
    iNsTr_45 := (iNsTr_31 - iNsTr_32)
    iNsTr_46 := (iNsTr_45 * dequant_mf)
    iNsTr_47 := (iNsTr_46 + ( $bitcast ($uint<32> ) _b00000000000000000000100000100000 ) )
    iNsTr_48 := (iNsTr_33 - iNsTr_34)
    iNsTr_49 := (iNsTr_48 * dequant_mf)
    iNsTr_50 := (iNsTr_49 + ( $bitcast ($uint<32> ) _b00000000000000000000100000100000 ) )
    iNsTr_51 := (iNsTr_35 - iNsTr_36)
    iNsTr_52 := (iNsTr_51 * dequant_mf)
    iNsTr_53 := (iNsTr_52 + ( $bitcast ($uint<32> ) _b00000000000000000000100000100000 ) )
    iNsTr_54 := (iNsTr_37 - iNsTr_38)
    iNsTr_55 := (iNsTr_54 * dequant_mf)
    iNsTr_56 := (iNsTr_55 + ( $bitcast ($uint<32> ) _b00000000000000000000100000100000 ) )
    iNsTr_57 := (iNsTr_36 + iNsTr_35)
    iNsTr_58 := (iNsTr_57 * dequant_mf)
    iNsTr_59 := (iNsTr_58 + ( $bitcast ($uint<32> ) _b00000000000000000000100000100000 ) )
    iNsTr_60 := (iNsTr_38 + iNsTr_37)
    iNsTr_61 := (iNsTr_60 * dequant_mf)
    iNsTr_62 := (iNsTr_61 + ( $bitcast ($uint<32> ) _b00000000000000000000100000100000 ) )
    iNsTr_63 := (iNsTr_41 | iNsTr_44)
    iNsTr_64 := (iNsTr_63 | iNsTr_47)
    iNsTr_65 := (iNsTr_64 | iNsTr_50)
    iNsTr_66 := (iNsTr_65 | iNsTr_53)
    iNsTr_67 := (iNsTr_66 | iNsTr_56)
    iNsTr_68 := (iNsTr_67 | iNsTr_59)
    iNsTr_69 := (iNsTr_68 | iNsTr_62)
    iNsTr_70 := (iNsTr_69 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 ) )
    iNsTr_71 := ($cast ($uint<16>) iNsTr_70)
    // compare instruction
    phitmpx_xi := (iNsTr_71 > ( $bitcast ($uint<16> ) _b0000000000111111 )  )
    $if phitmpx_xi $then  $place [bb_0_bbx_xnph7x_xix_xpreheader] $else $place [bb_0_optimize_chroma_dc_internalx_xexit] $endif 
    //begin: basic-block bbx_xnph7x_xix_xpreheader
    $merge bb_0_bbx_xnph7x_xix_xpreheader
    $endmerge
    $place [bbx_xnph7x_xix_xpreheader_bbx_xnph7x_xi]
    //begin: basic-block bbx_xnph7x_xi
    $merge bbx_xnph7x_xix_xpreheader_bbx_xnph7x_xi xx_xloopexitx_xi_bbx_xnph7x_xi
    $phi indvar26x_xi :=  ( $cast ($uint<32>) indvarx_xnext27x_xi) $on xx_xloopexitx_xi_bbx_xnph7x_xi ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph7x_xix_xpreheader_bbx_xnph7x_xi 
    $phi nzx_x15x_xi :=  ( $cast ($uint<32>) nzx_x0x_xi) $on xx_xloopexitx_xi_bbx_xnph7x_xi ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph7x_xix_xpreheader_bbx_xnph7x_xi 
    $endmerge
    tmp := (indvar26x_xi * ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) )
    tmp10 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    scevgepx_xi := dct[tmp10]
    // load 
    iNsTr_75 := ->(scevgepx_xi) 
    iNsTr_76 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_75) )
    iNsTr_77 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_76) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_78 := (iNsTr_77 | ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    tmp2 := (iNsTr_78 * ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) )
    tmp4 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_75) )
    tmp5 := (tmp4 - iNsTr_78)
    $place [bbx_xnph7x_xi_bb_3]
    //begin: basic-block bb_3
    $merge bb_6_bb_3 bbx_xnph7x_xi_bb_3
    $phi indvar17x_xi :=  ( $cast ($uint<32>) indvarx_xnext18x_xi) $on bb_6_bb_3 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph7x_xi_bb_3 
    $endmerge
    tmp3 := (tmp2 * indvar17x_xi)
    tmp6 := (tmp5 + tmp3)
    tmp25x_xi := ($cast ($uint<16>) tmp6)
    levelx_x0x_xi := (tmp4 + tmp3)
    // compare instruction
    iNsTr_80 := (levelx_x0x_xi == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if iNsTr_80 $then  $place [bb_3_xx_xloopexitx_xix_xloopexit] $else $place [bb_3_optimize_chroma_roundx_xexitx_xi] $endif 
    //begin: basic-block optimize_chroma_roundx_xexitx_xi
    $merge bb_3_optimize_chroma_roundx_xexitx_xi
    $endmerge
    ->(scevgepx_xi) := tmp25x_xi
    // load 
    iNsTr_84 := ->(dct) 
    iNsTr_85 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_84) )
    // load 
    iNsTr_86 := ->(iNsTr_2) 
    iNsTr_87 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_86) )
    iNsTr_88 := (iNsTr_87 + iNsTr_85)
    // load 
    iNsTr_89 := ->(iNsTr_6) 
    iNsTr_90 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_89) )
    // load 
    iNsTr_91 := ->(iNsTr_9) 
    iNsTr_92 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_91) )
    iNsTr_93 := (iNsTr_92 + iNsTr_90)
    // load 
    iNsTr_94 := ->(iNsTr_13) 
    iNsTr_95 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_94) )
    // load 
    iNsTr_96 := ->(iNsTr_16) 
    iNsTr_97 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_96) )
    iNsTr_98 := (iNsTr_97 + iNsTr_95)
    // load 
    iNsTr_99 := ->(iNsTr_20) 
    iNsTr_100 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_99) )
    // load 
    iNsTr_101 := ->(iNsTr_23) 
    iNsTr_102 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_101) )
    iNsTr_103 := (iNsTr_102 + iNsTr_100)
    iNsTr_104 := (iNsTr_85 - iNsTr_87)
    iNsTr_105 := (iNsTr_90 - iNsTr_92)
    iNsTr_106 := (iNsTr_95 - iNsTr_97)
    iNsTr_107 := (iNsTr_100 - iNsTr_102)
    iNsTr_108 := (iNsTr_93 + iNsTr_88)
    iNsTr_109 := (iNsTr_103 + iNsTr_98)
    iNsTr_110 := (iNsTr_105 + iNsTr_104)
    iNsTr_111 := (iNsTr_107 + iNsTr_106)
    iNsTr_112 := (iNsTr_88 - iNsTr_93)
    iNsTr_113 := (iNsTr_98 - iNsTr_103)
    iNsTr_114 := (iNsTr_104 - iNsTr_105)
    iNsTr_115 := (iNsTr_106 - iNsTr_107)
    iNsTr_116 := (iNsTr_109 + iNsTr_108)
    iNsTr_117 := (iNsTr_116 * dequant_mf)
    iNsTr_118 := (iNsTr_117 + ( $bitcast ($uint<32> ) _b00000000000000000000100000100000 ) )
    iNsTr_119 := (iNsTr_111 + iNsTr_110)
    iNsTr_120 := (iNsTr_119 * dequant_mf)
    iNsTr_121 := (iNsTr_120 + ( $bitcast ($uint<32> ) _b00000000000000000000100000100000 ) )
    iNsTr_122 := (iNsTr_108 - iNsTr_109)
    iNsTr_123 := (iNsTr_122 * dequant_mf)
    iNsTr_124 := (iNsTr_123 + ( $bitcast ($uint<32> ) _b00000000000000000000100000100000 ) )
    iNsTr_125 := (iNsTr_110 - iNsTr_111)
    iNsTr_126 := (iNsTr_125 * dequant_mf)
    iNsTr_127 := (iNsTr_126 + ( $bitcast ($uint<32> ) _b00000000000000000000100000100000 ) )
    iNsTr_128 := (iNsTr_112 - iNsTr_113)
    iNsTr_129 := (iNsTr_128 * dequant_mf)
    iNsTr_130 := (iNsTr_129 + ( $bitcast ($uint<32> ) _b00000000000000000000100000100000 ) )
    iNsTr_131 := (iNsTr_114 - iNsTr_115)
    iNsTr_132 := (iNsTr_131 * dequant_mf)
    iNsTr_133 := (iNsTr_132 + ( $bitcast ($uint<32> ) _b00000000000000000000100000100000 ) )
    iNsTr_134 := (iNsTr_113 + iNsTr_112)
    iNsTr_135 := (iNsTr_134 * dequant_mf)
    iNsTr_136 := (iNsTr_135 + ( $bitcast ($uint<32> ) _b00000000000000000000100000100000 ) )
    iNsTr_137 := (iNsTr_115 + iNsTr_114)
    iNsTr_138 := (iNsTr_137 * dequant_mf)
    iNsTr_139 := (iNsTr_138 + ( $bitcast ($uint<32> ) _b00000000000000000000100000100000 ) )
    iNsTr_140 := (iNsTr_118 ^ iNsTr_41)
    iNsTr_141 := (iNsTr_44 ^ iNsTr_121)
    iNsTr_142 := (iNsTr_141 | iNsTr_140)
    iNsTr_143 := (iNsTr_47 ^ iNsTr_124)
    iNsTr_144 := (iNsTr_50 ^ iNsTr_127)
    iNsTr_145 := (iNsTr_53 ^ iNsTr_130)
    iNsTr_146 := (iNsTr_143 | iNsTr_142)
    iNsTr_147 := (iNsTr_144 | iNsTr_146)
    iNsTr_148 := (iNsTr_56 ^ iNsTr_133)
    iNsTr_149 := (iNsTr_59 ^ iNsTr_136)
    iNsTr_150 := (iNsTr_145 | iNsTr_147)
    iNsTr_151 := (iNsTr_148 | iNsTr_150)
    iNsTr_152 := (iNsTr_149 | iNsTr_151)
    iNsTr_153 := (iNsTr_62 ^ iNsTr_139)
    iNsTr_154 := (iNsTr_153 | iNsTr_152)
    iNsTr_155 := (iNsTr_154 << ( $bitcast ($uint<32> ) _b00000000000000000000000000001010 ) )
    xx_xlcssa :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_155) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )))
    // compare instruction
    iNsTr_156 := (xx_xlcssa < ( $bitcast ($uint<32> ) _b00000000000000000000000001000000 )  )
    $if iNsTr_156 $then  $place [optimize_chroma_roundx_xexitx_xi_bb_6] $else $place [optimize_chroma_roundx_xexitx_xi_bb_5] $endif 
    //begin: basic-block bb_5
    $merge optimize_chroma_roundx_xexitx_xi_bb_5
    $phi levelx_x0x_xix_xlcssa1 :=  ( $cast ($uint<32>) levelx_x0x_xi) $on optimize_chroma_roundx_xexitx_xi_bb_5 
    $endmerge
    iNsTr_160 := ($cast ($uint<16>) levelx_x0x_xix_xlcssa1)
    ->(scevgepx_xi) := iNsTr_160
    $place [bb_5_xx_xloopexitx_xi]
    //begin: basic-block bb_6
    $merge optimize_chroma_roundx_xexitx_xi_bb_6
    $endmerge
    indvarx_xnext18x_xi := (indvar17x_xi + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    $place [bb_6_bb_3]
    //begin: basic-block xx_xloopexitx_xix_xloopexit
    $merge bb_3_xx_xloopexitx_xix_xloopexit
    $endmerge
    $place [xx_xloopexitx_xix_xloopexit_xx_xloopexitx_xi]
    //begin: basic-block xx_xloopexitx_xi
    $merge bb_5_xx_xloopexitx_xi xx_xloopexitx_xix_xloopexit_xx_xloopexitx_xi
    $phi nzx_x0x_xi :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ) $on bb_5_xx_xloopexitx_xi ( $cast ($uint<32>) nzx_x15x_xi) $on xx_xloopexitx_xix_xloopexit_xx_xloopexitx_xi 
    $endmerge
    indvarx_xnext27x_xi := (indvar26x_xi + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond9 := (indvarx_xnext27x_xi == ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 )  )
    $if exitcond9 $then  $place [xx_xloopexitx_xi_optimize_chroma_dc_internalx_xexitx_xloopexit] $else $place [xx_xloopexitx_xi_bbx_xnph7x_xi] $endif 
    //begin: basic-block optimize_chroma_dc_internalx_xexitx_xloopexit
    $merge xx_xloopexitx_xi_optimize_chroma_dc_internalx_xexitx_xloopexit
    $phi nzx_x0x_xix_xlcssa :=  ( $cast ($uint<32>) nzx_x0x_xi) $on xx_xloopexitx_xi_optimize_chroma_dc_internalx_xexitx_xloopexit 
    $endmerge
    $place [optimize_chroma_dc_internalx_xexitx_xloopexit_optimize_chroma_dc_internalx_xexit]
    //begin: basic-block optimize_chroma_dc_internalx_xexit
    $merge bb_0_optimize_chroma_dc_internalx_xexit optimize_chroma_dc_internalx_xexitx_xloopexit_optimize_chroma_dc_internalx_xexit
    $phi ret_val__ :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bb_0_optimize_chroma_dc_internalx_xexit ( $cast ($uint<32>) nzx_x0x_xix_xlcssa) $on optimize_chroma_dc_internalx_xexitx_xloopexit_optimize_chroma_dc_internalx_xexit 
    $endmerge
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [deblock_h_luma_mbaff_c] 
$in (pix : $pointer< $uint<8> > stride : $uint<32> alpha : $uint<32> beta : $uint<32> tc0 : $pointer< $uint<8> > )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bbx_xnph
    $place [bbx_xnph_bb_1]
    //begin: basic-block bb_1
    $merge bbx_xnph_bb_1 deblock_edge_luma_cx_xexit_bb_1
    $phi iNsTr_1 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph_bb_1 ( $cast ($uint<32>) iNsTr_25) $on deblock_edge_luma_cx_xexit_bb_1 
    $endmerge
    tmp2 := (stride * iNsTr_1)
    tmp3 := (tmp2 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep13 := pix[tmp3]
    tmp6 := (tmp2 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep11 := pix[tmp6]
    xx_x02 := pix[tmp2]
    tmp11 := (tmp2 + ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) )
    scevgep8 := pix[tmp11]
    tmp13 := (tmp2 + ( $bitcast ($uint<32> ) _b11111111111111111111111111111110 ) )
    scevgep6 := pix[tmp13]
    tmp15 := (tmp2 + ( $bitcast ($uint<32> ) _b11111111111111111111111111111101 ) )
    scevgep := pix[tmp15]
    iNsTr_2 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_1) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )))
    iNsTr_3 := tc0[iNsTr_2]
    // load 
    iNsTr_4 := ->(iNsTr_3) 
    // load 
    iNsTr_5 := ->(scevgep) 
    iNsTr_6 := ($cast ($uint<32>) iNsTr_5)
    // load 
    iNsTr_7 := ->(scevgep6) 
    iNsTr_8 := ($cast ($uint<32>) iNsTr_7)
    // load 
    iNsTr_9 := ->(scevgep8) 
    iNsTr_10 := ($cast ($uint<32>) iNsTr_9)
    // load 
    iNsTr_11 := ->(xx_x02) 
    iNsTr_12 := ($cast ($uint<32>) iNsTr_11)
    // load 
    iNsTr_13 := ->(scevgep11) 
    iNsTr_14 := ($cast ($uint<32>) iNsTr_13)
    // load 
    iNsTr_15 := ->(scevgep13) 
    iNsTr_16 := ($cast ($uint<32>) iNsTr_15)
    iNsTr_17 := (iNsTr_10 - iNsTr_12)
    // compare instruction
    isposx_xi := ( ($bitcast ( $int<32>) iNsTr_17) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xi := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_17)
    iNsTr_18 := ( $mux isposx_xi iNsTr_17 negx_xi)
    // compare instruction
    iNsTr_19 := ( ($bitcast ( $int<32>) iNsTr_18) <   ($bitcast ( $int<32>) alpha ) )
    $if iNsTr_19 $then  $place [bb_1_bb_2] $else $place [bb_1_deblock_edge_luma_cx_xexit] $endif 
    //begin: basic-block bb_2
    $merge bb_1_bb_2
    $endmerge
    iNsTr_21 := (iNsTr_8 - iNsTr_10)
    // compare instruction
    ispos4x_xi := ( ($bitcast ( $int<32>) iNsTr_21) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    neg5x_xi := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_21)
    iNsTr_22 := ( $mux ispos4x_xi iNsTr_21 neg5x_xi)
    // compare instruction
    iNsTr_23 := ( ($bitcast ( $int<32>) iNsTr_22) <   ($bitcast ( $int<32>) beta ) )
    $if iNsTr_23 $then  $place [bb_2_bb_3] $else $place [bb_2_deblock_edge_luma_cx_xexit] $endif 
    //begin: basic-block bb_3
    $merge bb_2_bb_3
    $endmerge
    iNsTr_27 := (iNsTr_14 - iNsTr_12)
    // compare instruction
    ispos6x_xi := ( ($bitcast ( $int<32>) iNsTr_27) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    neg7x_xi := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_27)
    iNsTr_28 := ( $mux ispos6x_xi iNsTr_27 neg7x_xi)
    // compare instruction
    iNsTr_29 := ( ($bitcast ( $int<32>) iNsTr_28) <   ($bitcast ( $int<32>) beta ) )
    $if iNsTr_29 $then  $place [bb_3_bb_4] $else $place [bb_3_deblock_edge_luma_cx_xexit] $endif 
    //begin: basic-block bb_4
    $merge bb_3_bb_4
    $endmerge
    iNsTr_32 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_4) )
    iNsTr_33 := (iNsTr_6 - iNsTr_10)
    // compare instruction
    ispos8x_xi := ( ($bitcast ( $int<32>) iNsTr_33) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    neg9x_xi := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_33)
    iNsTr_34 := ( $mux ispos8x_xi iNsTr_33 neg9x_xi)
    // compare instruction
    iNsTr_35 := ( ($bitcast ( $int<32>) iNsTr_34) <   ($bitcast ( $int<32>) beta ) )
    $if iNsTr_35 $then  $place [bb_4_bb_5] $else $place [bb_4_bb_10] $endif 
    //begin: basic-block bb_5
    $merge bb_4_bb_5
    $endmerge
    // compare instruction
    iNsTr_37 := (iNsTr_4 == ( $bitcast ($uint<8> ) _b00000000 )  )
    $if iNsTr_37 $then  $place [bb_5_bb_9] $else $place [bb_5_bb_6] $endif 
    //begin: basic-block bb_6
    $merge bb_5_bb_6
    $endmerge
    iNsTr_45 := (iNsTr_10 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_46 := (iNsTr_45 + iNsTr_12)
    iNsTr_47 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_46) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )))
    iNsTr_48 := (iNsTr_47 + iNsTr_6)
    iNsTr_49 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_48) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )))
    iNsTr_50 := (iNsTr_49 - iNsTr_8)
    iNsTr_51 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_32)
    // compare instruction
    iNsTr_52 := ( ($bitcast ( $int<32>) iNsTr_50) <   ($bitcast ( $int<32>) iNsTr_51 ) )
    $if iNsTr_52 $then  $place [bb_6_x264_clip3x_xexitx_xi] $else $place [bb_6_bb_7] $endif 
    //begin: basic-block bb_7
    $merge bb_6_bb_7
    $endmerge
    // compare instruction
    iNsTr_70 := ( ($bitcast ( $int<32>) iNsTr_50) >  ($bitcast ( $int<32>) iNsTr_32 ) )
    iNsTr_71 := ( $mux iNsTr_70 iNsTr_32 iNsTr_50)
    $place [bb_7_x264_clip3x_xexitx_xi]
    //begin: basic-block x264_clip3x_xexitx_xi
    $merge bb_6_x264_clip3x_xexitx_xi bb_7_x264_clip3x_xexitx_xi
    $phi iNsTr_65 :=  ( $cast ($uint<32>) iNsTr_71) $on bb_7_x264_clip3x_xexitx_xi ( $cast ($uint<32>) iNsTr_51) $on bb_6_x264_clip3x_xexitx_xi 
    $endmerge
    iNsTr_66 := (iNsTr_65 + iNsTr_8)
    iNsTr_67 := ($cast ($uint<8>) iNsTr_66)
    ->(scevgep6) := iNsTr_67
    $place [x264_clip3x_xexitx_xi_bb_9]
    //begin: basic-block bb_9
    $merge bb_5_bb_9 x264_clip3x_xexitx_xi_bb_9
    $endmerge
    iNsTr_43 := (iNsTr_32 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    $place [bb_9_bb_10]
    //begin: basic-block bb_10
    $merge bb_4_bb_10 bb_9_bb_10
    $phi tcx_x0x_xi :=  ( $cast ($uint<32>) iNsTr_43) $on bb_9_bb_10 ( $cast ($uint<32>) iNsTr_32) $on bb_4_bb_10 
    $endmerge
    iNsTr_39 := (iNsTr_16 - iNsTr_12)
    // compare instruction
    ispos10x_xi := ( ($bitcast ( $int<32>) iNsTr_39) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    neg11x_xi := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_39)
    iNsTr_40 := ( $mux ispos10x_xi iNsTr_39 neg11x_xi)
    // compare instruction
    iNsTr_41 := ( ($bitcast ( $int<32>) iNsTr_40) <   ($bitcast ( $int<32>) beta ) )
    $if iNsTr_41 $then  $place [bb_10_bb_11] $else $place [bb_10_bb_16] $endif 
    //begin: basic-block bb_11
    $merge bb_10_bb_11
    $endmerge
    // compare instruction
    iNsTr_54 := (iNsTr_4 == ( $bitcast ($uint<8> ) _b00000000 )  )
    $if iNsTr_54 $then  $place [bb_11_bb_15] $else $place [bb_11_bb_12] $endif 
    //begin: basic-block bb_12
    $merge bb_11_bb_12
    $endmerge
    iNsTr_75 := (iNsTr_10 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_76 := (iNsTr_75 + iNsTr_12)
    iNsTr_77 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_76) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )))
    iNsTr_78 := (iNsTr_16 + iNsTr_77)
    iNsTr_79 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_78) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )))
    iNsTr_80 := (iNsTr_79 - iNsTr_14)
    iNsTr_81 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_32)
    // compare instruction
    iNsTr_82 := ( ($bitcast ( $int<32>) iNsTr_80) <   ($bitcast ( $int<32>) iNsTr_81 ) )
    $if iNsTr_82 $then  $place [bb_12_x264_clip3x_xexit3x_xi] $else $place [bb_12_bb_13] $endif 
    //begin: basic-block bb_13
    $merge bb_12_bb_13
    $endmerge
    // compare instruction
    iNsTr_96 := ( ($bitcast ( $int<32>) iNsTr_80) >  ($bitcast ( $int<32>) iNsTr_32 ) )
    iNsTr_97 := ( $mux iNsTr_96 iNsTr_32 iNsTr_80)
    $place [bb_13_x264_clip3x_xexit3x_xi]
    //begin: basic-block x264_clip3x_xexit3x_xi
    $merge bb_12_x264_clip3x_xexit3x_xi bb_13_x264_clip3x_xexit3x_xi
    $phi iNsTr_91 :=  ( $cast ($uint<32>) iNsTr_97) $on bb_13_x264_clip3x_xexit3x_xi ( $cast ($uint<32>) iNsTr_81) $on bb_12_x264_clip3x_xexit3x_xi 
    $endmerge
    iNsTr_92 := (iNsTr_91 + iNsTr_14)
    iNsTr_93 := ($cast ($uint<8>) iNsTr_92)
    ->(scevgep11) := iNsTr_93
    $place [x264_clip3x_xexit3x_xi_bb_15]
    //begin: basic-block bb_15
    $merge bb_11_bb_15 x264_clip3x_xexit3x_xi_bb_15
    $endmerge
    iNsTr_73 := (tcx_x0x_xi + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    $place [bb_15_bb_16]
    //begin: basic-block bb_16
    $merge bb_10_bb_16 bb_15_bb_16
    $phi tcx_x1x_xi :=  ( $cast ($uint<32>) iNsTr_73) $on bb_15_bb_16 ( $cast ($uint<32>) tcx_x0x_xi) $on bb_10_bb_16 
    $endmerge
    iNsTr_56 := (iNsTr_12 - iNsTr_10)
    iNsTr_57 := (iNsTr_56 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_58 := (iNsTr_8 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    iNsTr_59 := (iNsTr_58 - iNsTr_14)
    iNsTr_60 := (iNsTr_59 + iNsTr_57)
    iNsTr_61 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_60) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 )  )))
    iNsTr_62 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - tcx_x1x_xi)
    // compare instruction
    iNsTr_63 := ( ($bitcast ( $int<32>) iNsTr_61) <   ($bitcast ( $int<32>) iNsTr_62 ) )
    $if iNsTr_63 $then  $place [bb_16_x264_clip3x_xexit2x_xi] $else $place [bb_16_bb_17] $endif 
    //begin: basic-block bb_17
    $merge bb_16_bb_17
    $endmerge
    // compare instruction
    iNsTr_88 := ( ($bitcast ( $int<32>) iNsTr_61) >  ($bitcast ( $int<32>) tcx_x1x_xi ) )
    iNsTr_89 := ( $mux iNsTr_88 tcx_x1x_xi iNsTr_61)
    $place [bb_17_x264_clip3x_xexit2x_xi]
    //begin: basic-block x264_clip3x_xexit2x_xi
    $merge bb_16_x264_clip3x_xexit2x_xi bb_17_x264_clip3x_xexit2x_xi
    $phi iNsTr_84 :=  ( $cast ($uint<32>) iNsTr_89) $on bb_17_x264_clip3x_xexit2x_xi ( $cast ($uint<32>) iNsTr_62) $on bb_16_x264_clip3x_xexit2x_xi 
    $endmerge
    iNsTr_85 := (iNsTr_84 + iNsTr_10)
    // compare instruction
    iNsTr_86 := (iNsTr_85 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_86 $then  $place [x264_clip3x_xexit2x_xi_bb_19] $else $place [x264_clip3x_xexit2x_xi_x264_clip_pixelx_xexit1x_xi] $endif 
    //begin: basic-block bb_19
    $merge x264_clip3x_xexit2x_xi_bb_19
    $endmerge
    iNsTr_99 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_85)
    iNsTr_100 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_99) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_101 := (iNsTr_100 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_19_x264_clip_pixelx_xexit1x_xi]
    //begin: basic-block x264_clip_pixelx_xexit1x_xi
    $merge bb_19_x264_clip_pixelx_xexit1x_xi x264_clip3x_xexit2x_xi_x264_clip_pixelx_xexit1x_xi
    $phi iNsTr_103 :=  ( $cast ($uint<32>) iNsTr_101) $on bb_19_x264_clip_pixelx_xexit1x_xi ( $cast ($uint<32>) iNsTr_85) $on x264_clip3x_xexit2x_xi_x264_clip_pixelx_xexit1x_xi 
    $endmerge
    iNsTr_104 := ($cast ($uint<8>) iNsTr_103)
    ->(scevgep8) := iNsTr_104
    iNsTr_106 := (iNsTr_12 - iNsTr_84)
    // compare instruction
    iNsTr_107 := (iNsTr_106 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_107 $then  $place [x264_clip_pixelx_xexit1x_xi_bb_21] $else $place [x264_clip_pixelx_xexit1x_xi_x264_clip_pixelx_xexitx_xi] $endif 
    //begin: basic-block bb_21
    $merge x264_clip_pixelx_xexit1x_xi_bb_21
    $endmerge
    iNsTr_109 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_106)
    iNsTr_110 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_109) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_111 := (iNsTr_110 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_21_x264_clip_pixelx_xexitx_xi]
    //begin: basic-block x264_clip_pixelx_xexitx_xi
    $merge bb_21_x264_clip_pixelx_xexitx_xi x264_clip_pixelx_xexit1x_xi_x264_clip_pixelx_xexitx_xi
    $phi iNsTr_113 :=  ( $cast ($uint<32>) iNsTr_111) $on bb_21_x264_clip_pixelx_xexitx_xi ( $cast ($uint<32>) iNsTr_106) $on x264_clip_pixelx_xexit1x_xi_x264_clip_pixelx_xexitx_xi 
    $endmerge
    iNsTr_114 := ($cast ($uint<8>) iNsTr_113)
    ->(xx_x02) := iNsTr_114
    $place [x264_clip_pixelx_xexitx_xi_deblock_edge_luma_cx_xexit]
    //begin: basic-block deblock_edge_luma_cx_xexit
    $merge bb_1_deblock_edge_luma_cx_xexit bb_2_deblock_edge_luma_cx_xexit bb_3_deblock_edge_luma_cx_xexit x264_clip_pixelx_xexitx_xi_deblock_edge_luma_cx_xexit
    $endmerge
    iNsTr_25 := (iNsTr_1 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (iNsTr_25 == ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 )  )
    $if exitcond1 $then  $place [deblock_edge_luma_cx_xexit_xx_x_crit_edge] $else $place [deblock_edge_luma_cx_xexit_bb_1] $endif 
    //begin: basic-block xx_x_crit_edge
    $merge deblock_edge_luma_cx_xexit_xx_x_crit_edge
    $endmerge
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [deblock_luma_c] 
$in (pix : $pointer< $uint<8> > xstride : $uint<32> ystride : $uint<32> alpha : $uint<32> beta : $uint<32> tc0 : $pointer< $uint<8> > )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bbx_xnph6
    iNsTr_0 := (xstride * ( $bitcast ($uint<32> ) _b11111111111111111111111111111101 ) )
    iNsTr_1 := (xstride * ( $bitcast ($uint<32> ) _b11111111111111111111111111111110 ) )
    tmp4 := (xstride * ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    tmp14 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - xstride)
    tmp25 := (ystride * ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    $place [bbx_xnph6_bb_1]
    //begin: basic-block bb_1
    $merge bbx_xnph6_bb_1 xx_xloopexit_bb_1
    $phi ix_x04 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph6_bb_1 ( $cast ($uint<32>) iNsTr_6) $on xx_xloopexit_bb_1 
    $endmerge
    tmp26 := (tmp25 * ix_x04)
    tmp27 := (iNsTr_0 + tmp26)
    tmp29 := (iNsTr_1 + tmp26)
    tmp31 := (tmp14 + tmp26)
    tmp34 := (xstride + tmp26)
    tmp36 := (tmp4 + tmp26)
    scevgep21 := tc0[ix_x04]
    // load 
    iNsTr_3 := ->(scevgep21) 
    // compare instruction
    iNsTr_4 := ( ($bitcast ( $int<8>) iNsTr_3) <   ($bitcast ( $int<8>) ( $bitcast ($uint<8> ) _b00000000 )  ) )
    $if iNsTr_4 $then  $place [bb_1_xx_xloopexit] $else $place [bb_1_bbx_xnphx_xpreheader] $endif 
    //begin: basic-block bbx_xnphx_xpreheader
    $merge bb_1_bbx_xnphx_xpreheader
    $endmerge
    $place [bbx_xnphx_xpreheader_bbx_xnph]
    //begin: basic-block bbx_xnph
    $merge bbx_xnphx_xpreheader_bbx_xnph deblock_edge_luma_cx_xexit_bbx_xnph
    $phi dx_x01 :=  ( $cast ($uint<32>) iNsTr_31) $on deblock_edge_luma_cx_xexit_bbx_xnph ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xpreheader_bbx_xnph 
    $endmerge
    tmp24 := (ystride * dx_x01)
    tmp28 := (tmp27 + tmp24)
    scevgep9 := pix[tmp28]
    tmp30 := (tmp29 + tmp24)
    scevgep11 := pix[tmp30]
    tmp32 := (tmp31 + tmp24)
    scevgep13 := pix[tmp32]
    tmp33 := (tmp26 + tmp24)
    xx_x22 := pix[tmp33]
    tmp35 := (tmp34 + tmp24)
    scevgep16 := pix[tmp35]
    tmp37 := (tmp36 + tmp24)
    scevgep19 := pix[tmp37]
    // load 
    iNsTr_10 := ->(scevgep21) 
    // load 
    iNsTr_11 := ->(scevgep9) 
    iNsTr_12 := ($cast ($uint<32>) iNsTr_11)
    // load 
    iNsTr_13 := ->(scevgep11) 
    iNsTr_14 := ($cast ($uint<32>) iNsTr_13)
    // load 
    iNsTr_15 := ->(scevgep13) 
    iNsTr_16 := ($cast ($uint<32>) iNsTr_15)
    // load 
    iNsTr_17 := ->(xx_x22) 
    iNsTr_18 := ($cast ($uint<32>) iNsTr_17)
    // load 
    iNsTr_19 := ->(scevgep16) 
    iNsTr_20 := ($cast ($uint<32>) iNsTr_19)
    // load 
    iNsTr_21 := ->(scevgep19) 
    iNsTr_22 := ($cast ($uint<32>) iNsTr_21)
    iNsTr_23 := (iNsTr_16 - iNsTr_18)
    // compare instruction
    isposx_xi := ( ($bitcast ( $int<32>) iNsTr_23) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xi := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_23)
    iNsTr_24 := ( $mux isposx_xi iNsTr_23 negx_xi)
    // compare instruction
    iNsTr_25 := ( ($bitcast ( $int<32>) iNsTr_24) <   ($bitcast ( $int<32>) alpha ) )
    $if iNsTr_25 $then  $place [bbx_xnph_bb_4] $else $place [bbx_xnph_deblock_edge_luma_cx_xexit] $endif 
    //begin: basic-block bb_4
    $merge bbx_xnph_bb_4
    $endmerge
    iNsTr_27 := (iNsTr_14 - iNsTr_16)
    // compare instruction
    ispos4x_xi := ( ($bitcast ( $int<32>) iNsTr_27) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    neg5x_xi := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_27)
    iNsTr_28 := ( $mux ispos4x_xi iNsTr_27 neg5x_xi)
    // compare instruction
    iNsTr_29 := ( ($bitcast ( $int<32>) iNsTr_28) <   ($bitcast ( $int<32>) beta ) )
    $if iNsTr_29 $then  $place [bb_4_bb_5] $else $place [bb_4_deblock_edge_luma_cx_xexit] $endif 
    //begin: basic-block bb_5
    $merge bb_4_bb_5
    $endmerge
    iNsTr_33 := (iNsTr_20 - iNsTr_18)
    // compare instruction
    ispos6x_xi := ( ($bitcast ( $int<32>) iNsTr_33) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    neg7x_xi := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_33)
    iNsTr_34 := ( $mux ispos6x_xi iNsTr_33 neg7x_xi)
    // compare instruction
    iNsTr_35 := ( ($bitcast ( $int<32>) iNsTr_34) <   ($bitcast ( $int<32>) beta ) )
    $if iNsTr_35 $then  $place [bb_5_bb_6] $else $place [bb_5_deblock_edge_luma_cx_xexit] $endif 
    //begin: basic-block bb_6
    $merge bb_5_bb_6
    $endmerge
    iNsTr_38 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_10) )
    iNsTr_39 := (iNsTr_12 - iNsTr_16)
    // compare instruction
    ispos8x_xi := ( ($bitcast ( $int<32>) iNsTr_39) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    neg9x_xi := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_39)
    iNsTr_40 := ( $mux ispos8x_xi iNsTr_39 neg9x_xi)
    // compare instruction
    iNsTr_41 := ( ($bitcast ( $int<32>) iNsTr_40) <   ($bitcast ( $int<32>) beta ) )
    $if iNsTr_41 $then  $place [bb_6_bb_7] $else $place [bb_6_bb_12] $endif 
    //begin: basic-block bb_7
    $merge bb_6_bb_7
    $endmerge
    // compare instruction
    iNsTr_43 := (iNsTr_10 == ( $bitcast ($uint<8> ) _b00000000 )  )
    $if iNsTr_43 $then  $place [bb_7_bb_11] $else $place [bb_7_bb_8] $endif 
    //begin: basic-block bb_8
    $merge bb_7_bb_8
    $endmerge
    iNsTr_51 := (iNsTr_16 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_52 := (iNsTr_51 + iNsTr_18)
    iNsTr_53 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_52) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )))
    iNsTr_54 := (iNsTr_53 + iNsTr_12)
    iNsTr_55 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_54) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )))
    iNsTr_56 := (iNsTr_55 - iNsTr_14)
    iNsTr_57 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_38)
    // compare instruction
    iNsTr_58 := ( ($bitcast ( $int<32>) iNsTr_56) <   ($bitcast ( $int<32>) iNsTr_57 ) )
    $if iNsTr_58 $then  $place [bb_8_x264_clip3x_xexitx_xi] $else $place [bb_8_bb_9] $endif 
    //begin: basic-block bb_9
    $merge bb_8_bb_9
    $endmerge
    // compare instruction
    iNsTr_76 := ( ($bitcast ( $int<32>) iNsTr_56) >  ($bitcast ( $int<32>) iNsTr_38 ) )
    iNsTr_77 := ( $mux iNsTr_76 iNsTr_38 iNsTr_56)
    $place [bb_9_x264_clip3x_xexitx_xi]
    //begin: basic-block x264_clip3x_xexitx_xi
    $merge bb_8_x264_clip3x_xexitx_xi bb_9_x264_clip3x_xexitx_xi
    $phi iNsTr_71 :=  ( $cast ($uint<32>) iNsTr_77) $on bb_9_x264_clip3x_xexitx_xi ( $cast ($uint<32>) iNsTr_57) $on bb_8_x264_clip3x_xexitx_xi 
    $endmerge
    iNsTr_72 := (iNsTr_71 + iNsTr_14)
    iNsTr_73 := ($cast ($uint<8>) iNsTr_72)
    ->(scevgep11) := iNsTr_73
    $place [x264_clip3x_xexitx_xi_bb_11]
    //begin: basic-block bb_11
    $merge bb_7_bb_11 x264_clip3x_xexitx_xi_bb_11
    $endmerge
    iNsTr_49 := (iNsTr_38 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    $place [bb_11_bb_12]
    //begin: basic-block bb_12
    $merge bb_11_bb_12 bb_6_bb_12
    $phi tcx_x0x_xi :=  ( $cast ($uint<32>) iNsTr_49) $on bb_11_bb_12 ( $cast ($uint<32>) iNsTr_38) $on bb_6_bb_12 
    $endmerge
    iNsTr_45 := (iNsTr_22 - iNsTr_18)
    // compare instruction
    ispos10x_xi := ( ($bitcast ( $int<32>) iNsTr_45) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    neg11x_xi := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_45)
    iNsTr_46 := ( $mux ispos10x_xi iNsTr_45 neg11x_xi)
    // compare instruction
    iNsTr_47 := ( ($bitcast ( $int<32>) iNsTr_46) <   ($bitcast ( $int<32>) beta ) )
    $if iNsTr_47 $then  $place [bb_12_bb_13] $else $place [bb_12_bb_18] $endif 
    //begin: basic-block bb_13
    $merge bb_12_bb_13
    $endmerge
    // compare instruction
    iNsTr_60 := (iNsTr_10 == ( $bitcast ($uint<8> ) _b00000000 )  )
    $if iNsTr_60 $then  $place [bb_13_bb_17] $else $place [bb_13_bb_14] $endif 
    //begin: basic-block bb_14
    $merge bb_13_bb_14
    $endmerge
    iNsTr_81 := (iNsTr_16 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_82 := (iNsTr_81 + iNsTr_18)
    iNsTr_83 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_82) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )))
    iNsTr_84 := (iNsTr_22 + iNsTr_83)
    iNsTr_85 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_84) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )))
    iNsTr_86 := (iNsTr_85 - iNsTr_20)
    iNsTr_87 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_38)
    // compare instruction
    iNsTr_88 := ( ($bitcast ( $int<32>) iNsTr_86) <   ($bitcast ( $int<32>) iNsTr_87 ) )
    $if iNsTr_88 $then  $place [bb_14_x264_clip3x_xexit3x_xi] $else $place [bb_14_bb_15] $endif 
    //begin: basic-block bb_15
    $merge bb_14_bb_15
    $endmerge
    // compare instruction
    iNsTr_102 := ( ($bitcast ( $int<32>) iNsTr_86) >  ($bitcast ( $int<32>) iNsTr_38 ) )
    iNsTr_103 := ( $mux iNsTr_102 iNsTr_38 iNsTr_86)
    $place [bb_15_x264_clip3x_xexit3x_xi]
    //begin: basic-block x264_clip3x_xexit3x_xi
    $merge bb_14_x264_clip3x_xexit3x_xi bb_15_x264_clip3x_xexit3x_xi
    $phi iNsTr_97 :=  ( $cast ($uint<32>) iNsTr_103) $on bb_15_x264_clip3x_xexit3x_xi ( $cast ($uint<32>) iNsTr_87) $on bb_14_x264_clip3x_xexit3x_xi 
    $endmerge
    iNsTr_98 := (iNsTr_97 + iNsTr_20)
    iNsTr_99 := ($cast ($uint<8>) iNsTr_98)
    ->(scevgep16) := iNsTr_99
    $place [x264_clip3x_xexit3x_xi_bb_17]
    //begin: basic-block bb_17
    $merge bb_13_bb_17 x264_clip3x_xexit3x_xi_bb_17
    $endmerge
    iNsTr_79 := (tcx_x0x_xi + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    $place [bb_17_bb_18]
    //begin: basic-block bb_18
    $merge bb_12_bb_18 bb_17_bb_18
    $phi tcx_x1x_xi :=  ( $cast ($uint<32>) iNsTr_79) $on bb_17_bb_18 ( $cast ($uint<32>) tcx_x0x_xi) $on bb_12_bb_18 
    $endmerge
    iNsTr_62 := (iNsTr_18 - iNsTr_16)
    iNsTr_63 := (iNsTr_62 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_64 := (iNsTr_14 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    iNsTr_65 := (iNsTr_64 - iNsTr_20)
    iNsTr_66 := (iNsTr_65 + iNsTr_63)
    iNsTr_67 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_66) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 )  )))
    iNsTr_68 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - tcx_x1x_xi)
    // compare instruction
    iNsTr_69 := ( ($bitcast ( $int<32>) iNsTr_67) <   ($bitcast ( $int<32>) iNsTr_68 ) )
    $if iNsTr_69 $then  $place [bb_18_x264_clip3x_xexit2x_xi] $else $place [bb_18_bb_19] $endif 
    //begin: basic-block bb_19
    $merge bb_18_bb_19
    $endmerge
    // compare instruction
    iNsTr_94 := ( ($bitcast ( $int<32>) iNsTr_67) >  ($bitcast ( $int<32>) tcx_x1x_xi ) )
    iNsTr_95 := ( $mux iNsTr_94 tcx_x1x_xi iNsTr_67)
    $place [bb_19_x264_clip3x_xexit2x_xi]
    //begin: basic-block x264_clip3x_xexit2x_xi
    $merge bb_18_x264_clip3x_xexit2x_xi bb_19_x264_clip3x_xexit2x_xi
    $phi iNsTr_90 :=  ( $cast ($uint<32>) iNsTr_95) $on bb_19_x264_clip3x_xexit2x_xi ( $cast ($uint<32>) iNsTr_68) $on bb_18_x264_clip3x_xexit2x_xi 
    $endmerge
    iNsTr_91 := (iNsTr_90 + iNsTr_16)
    // compare instruction
    iNsTr_92 := (iNsTr_91 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_92 $then  $place [x264_clip3x_xexit2x_xi_bb_21] $else $place [x264_clip3x_xexit2x_xi_x264_clip_pixelx_xexit1x_xi] $endif 
    //begin: basic-block bb_21
    $merge x264_clip3x_xexit2x_xi_bb_21
    $endmerge
    iNsTr_105 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_91)
    iNsTr_106 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_105) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_107 := (iNsTr_106 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_21_x264_clip_pixelx_xexit1x_xi]
    //begin: basic-block x264_clip_pixelx_xexit1x_xi
    $merge bb_21_x264_clip_pixelx_xexit1x_xi x264_clip3x_xexit2x_xi_x264_clip_pixelx_xexit1x_xi
    $phi iNsTr_109 :=  ( $cast ($uint<32>) iNsTr_107) $on bb_21_x264_clip_pixelx_xexit1x_xi ( $cast ($uint<32>) iNsTr_91) $on x264_clip3x_xexit2x_xi_x264_clip_pixelx_xexit1x_xi 
    $endmerge
    iNsTr_110 := ($cast ($uint<8>) iNsTr_109)
    ->(scevgep13) := iNsTr_110
    iNsTr_112 := (iNsTr_18 - iNsTr_90)
    // compare instruction
    iNsTr_113 := (iNsTr_112 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_113 $then  $place [x264_clip_pixelx_xexit1x_xi_bb_23] $else $place [x264_clip_pixelx_xexit1x_xi_x264_clip_pixelx_xexitx_xi] $endif 
    //begin: basic-block bb_23
    $merge x264_clip_pixelx_xexit1x_xi_bb_23
    $endmerge
    iNsTr_115 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_112)
    iNsTr_116 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_115) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_117 := (iNsTr_116 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_23_x264_clip_pixelx_xexitx_xi]
    //begin: basic-block x264_clip_pixelx_xexitx_xi
    $merge bb_23_x264_clip_pixelx_xexitx_xi x264_clip_pixelx_xexit1x_xi_x264_clip_pixelx_xexitx_xi
    $phi iNsTr_119 :=  ( $cast ($uint<32>) iNsTr_117) $on bb_23_x264_clip_pixelx_xexitx_xi ( $cast ($uint<32>) iNsTr_112) $on x264_clip_pixelx_xexit1x_xi_x264_clip_pixelx_xexitx_xi 
    $endmerge
    iNsTr_120 := ($cast ($uint<8>) iNsTr_119)
    ->(xx_x22) := iNsTr_120
    $place [x264_clip_pixelx_xexitx_xi_deblock_edge_luma_cx_xexit]
    //begin: basic-block deblock_edge_luma_cx_xexit
    $merge bb_4_deblock_edge_luma_cx_xexit bb_5_deblock_edge_luma_cx_xexit bbx_xnph_deblock_edge_luma_cx_xexit x264_clip_pixelx_xexitx_xi_deblock_edge_luma_cx_xexit
    $endmerge
    iNsTr_31 := (dx_x01 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (iNsTr_31 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 )  )
    $if exitcond1 $then  $place [deblock_edge_luma_cx_xexit_xx_xloopexitx_xloopexit] $else $place [deblock_edge_luma_cx_xexit_bbx_xnph] $endif 
    //begin: basic-block xx_xloopexitx_xloopexit
    $merge deblock_edge_luma_cx_xexit_xx_xloopexitx_xloopexit
    $endmerge
    $place [xx_xloopexitx_xloopexit_xx_xloopexit]
    //begin: basic-block xx_xloopexit
    $merge bb_1_xx_xloopexit xx_xloopexitx_xloopexit_xx_xloopexit
    $endmerge
    iNsTr_6 := (ix_x04 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond := (iNsTr_6 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 )  )
    $if exitcond $then  $place [xx_xloopexit_xx_x_crit_edge] $else $place [xx_xloopexit_bb_1] $endif 
    //begin: basic-block xx_x_crit_edge
    $merge xx_xloopexit_xx_x_crit_edge
    $endmerge
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [deblock_h_chroma_mbaff_c] 
$in (pix : $pointer< $uint<8> > stride : $uint<32> alpha : $uint<32> beta : $uint<32> tc0 : $pointer< $uint<8> > )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    $place [bb_0_bb_1]
    //begin: basic-block bb_1
    $merge bb_0_bb_1 xx_xloopexitx_xi_bb_1
    $phi ix_x09x_xi :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bb_0_bb_1 ( $cast ($uint<32>) iNsTr_4) $on xx_xloopexitx_xi_bb_1 
    $endmerge
    tmp := (stride * ix_x09x_xi)
    xx_x110x_xi := pix[tmp]
    tmp2 := (tmp + ( $bitcast ($uint<32> ) _b11111111111111111111111111111100 ) )
    scevgep13x_xi := pix[tmp2]
    tmp3 := (tmp + ( $bitcast ($uint<32> ) _b11111111111111111111111111111110 ) )
    scevgep15x_xi := pix[tmp3]
    tmp4 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep18x_xi := pix[tmp4]
    tmp5 := (tmp + ( $bitcast ($uint<32> ) _b11111111111111111111111111111101 ) )
    scevgep13x_x1x_xi := pix[tmp5]
    tmp6 := (tmp + ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) )
    scevgep15x_x1x_xi := pix[tmp6]
    tmp7 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    xx_x22x_x1x_xi := pix[tmp7]
    tmp8 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep18x_x1x_xi := pix[tmp8]
    scevgep20x_xi := tc0[ix_x09x_xi]
    // load 
    iNsTr_1 := ->(scevgep20x_xi) 
    // compare instruction
    iNsTr_2 := ( ($bitcast ( $int<8>) iNsTr_1) <   ($bitcast ( $int<8>) ( $bitcast ($uint<8> ) _b00000001 )  ) )
    $if iNsTr_2 $then  $place [bb_1_xx_xloopexitx_xi] $else $place [bb_1_bbx_xnphx_xi] $endif 
    //begin: basic-block bbx_xnphx_xi
    $merge bb_1_bbx_xnphx_xi
    $endmerge
    // load 
    iNsTr_6 := ->(scevgep13x_xi) 
    iNsTr_7 := ($cast ($uint<32>) iNsTr_6)
    // load 
    iNsTr_8 := ->(scevgep15x_xi) 
    iNsTr_9 := ($cast ($uint<32>) iNsTr_8)
    // load 
    iNsTr_10 := ->(xx_x110x_xi) 
    iNsTr_11 := ($cast ($uint<32>) iNsTr_10)
    // load 
    iNsTr_12 := ->(scevgep18x_xi) 
    iNsTr_13 := ($cast ($uint<32>) iNsTr_12)
    iNsTr_14 := (iNsTr_9 - iNsTr_11)
    // compare instruction
    isposx_xix_xi := ( ($bitcast ( $int<32>) iNsTr_14) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xix_xi := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_14)
    iNsTr_15 := ( $mux isposx_xix_xi iNsTr_14 negx_xix_xi)
    // compare instruction
    iNsTr_16 := ( ($bitcast ( $int<32>) iNsTr_15) <   ($bitcast ( $int<32>) alpha ) )
    $if iNsTr_16 $then  $place [bbx_xnphx_xi_bb_3] $else $place [bbx_xnphx_xi_deblock_edge_chroma_cx_xexitx_xi] $endif 
    //begin: basic-block bb_3
    $merge bbx_xnphx_xi_bb_3
    $endmerge
    iNsTr_19 := (iNsTr_7 - iNsTr_9)
    // compare instruction
    ispos2x_xix_xi := ( ($bitcast ( $int<32>) iNsTr_19) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    neg3x_xix_xi := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_19)
    iNsTr_20 := ( $mux ispos2x_xix_xi iNsTr_19 neg3x_xix_xi)
    // compare instruction
    iNsTr_21 := ( ($bitcast ( $int<32>) iNsTr_20) <   ($bitcast ( $int<32>) beta ) )
    $if iNsTr_21 $then  $place [bb_3_bb_4] $else $place [bb_3_deblock_edge_chroma_cx_xexitx_xi] $endif 
    //begin: basic-block bb_4
    $merge bb_3_bb_4
    $endmerge
    iNsTr_36 := (iNsTr_13 - iNsTr_11)
    // compare instruction
    ispos4x_xix_xi := ( ($bitcast ( $int<32>) iNsTr_36) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    neg5x_xix_xi := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_36)
    iNsTr_37 := ( $mux ispos4x_xix_xi iNsTr_36 neg5x_xix_xi)
    // compare instruction
    iNsTr_38 := ( ($bitcast ( $int<32>) iNsTr_37) <   ($bitcast ( $int<32>) beta ) )
    $if iNsTr_38 $then  $place [bb_4_bb_5] $else $place [bb_4_deblock_edge_chroma_cx_xexitx_xi] $endif 
    //begin: basic-block bb_5
    $merge bb_4_bb_5
    $endmerge
    iNsTr_44 := (iNsTr_11 - iNsTr_9)
    iNsTr_45 := (iNsTr_44 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_46 := (iNsTr_7 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    iNsTr_47 := (iNsTr_46 - iNsTr_13)
    iNsTr_48 := (iNsTr_47 + iNsTr_45)
    iNsTr_49 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_48) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 )  )))
    iNsTr_50 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_1) )
    iNsTr_51 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_50)
    // compare instruction
    iNsTr_52 := ( ($bitcast ( $int<32>) iNsTr_49) <   ($bitcast ( $int<32>) iNsTr_51 ) )
    $if iNsTr_52 $then  $place [bb_5_x264_clip3x_xexitx_xix_xi] $else $place [bb_5_bb_6] $endif 
    //begin: basic-block bb_6
    $merge bb_5_bb_6
    $endmerge
    // compare instruction
    iNsTr_62 := ( ($bitcast ( $int<32>) iNsTr_49) >  ($bitcast ( $int<32>) iNsTr_50 ) )
    iNsTr_63 := ( $mux iNsTr_62 iNsTr_50 iNsTr_49)
    $place [bb_6_x264_clip3x_xexitx_xix_xi]
    //begin: basic-block x264_clip3x_xexitx_xix_xi
    $merge bb_5_x264_clip3x_xexitx_xix_xi bb_6_x264_clip3x_xexitx_xix_xi
    $phi iNsTr_58 :=  ( $cast ($uint<32>) iNsTr_63) $on bb_6_x264_clip3x_xexitx_xix_xi ( $cast ($uint<32>) iNsTr_51) $on bb_5_x264_clip3x_xexitx_xix_xi 
    $endmerge
    iNsTr_59 := (iNsTr_58 + iNsTr_9)
    // compare instruction
    iNsTr_60 := (iNsTr_59 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_60 $then  $place [x264_clip3x_xexitx_xix_xi_bb_8] $else $place [x264_clip3x_xexitx_xix_xi_x264_clip_pixelx_xexit1x_xix_xi] $endif 
    //begin: basic-block bb_8
    $merge x264_clip3x_xexitx_xix_xi_bb_8
    $endmerge
    iNsTr_75 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_59)
    iNsTr_76 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_75) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_77 := (iNsTr_76 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_8_x264_clip_pixelx_xexit1x_xix_xi]
    //begin: basic-block x264_clip_pixelx_xexit1x_xix_xi
    $merge bb_8_x264_clip_pixelx_xexit1x_xix_xi x264_clip3x_xexitx_xix_xi_x264_clip_pixelx_xexit1x_xix_xi
    $phi iNsTr_79 :=  ( $cast ($uint<32>) iNsTr_77) $on bb_8_x264_clip_pixelx_xexit1x_xix_xi ( $cast ($uint<32>) iNsTr_59) $on x264_clip3x_xexitx_xix_xi_x264_clip_pixelx_xexit1x_xix_xi 
    $endmerge
    iNsTr_80 := ($cast ($uint<8>) iNsTr_79)
    ->(scevgep15x_xi) := iNsTr_80
    iNsTr_82 := (iNsTr_11 - iNsTr_58)
    // compare instruction
    iNsTr_83 := (iNsTr_82 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_83 $then  $place [x264_clip_pixelx_xexit1x_xix_xi_bb_10] $else $place [x264_clip_pixelx_xexit1x_xix_xi_x264_clip_pixelx_xexitx_xix_xi] $endif 
    //begin: basic-block bb_10
    $merge x264_clip_pixelx_xexit1x_xix_xi_bb_10
    $endmerge
    iNsTr_92 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_82)
    iNsTr_93 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_92) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_94 := (iNsTr_93 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_10_x264_clip_pixelx_xexitx_xix_xi]
    //begin: basic-block x264_clip_pixelx_xexitx_xix_xi
    $merge bb_10_x264_clip_pixelx_xexitx_xix_xi x264_clip_pixelx_xexit1x_xix_xi_x264_clip_pixelx_xexitx_xix_xi
    $phi iNsTr_96 :=  ( $cast ($uint<32>) iNsTr_94) $on bb_10_x264_clip_pixelx_xexitx_xix_xi ( $cast ($uint<32>) iNsTr_82) $on x264_clip_pixelx_xexit1x_xix_xi_x264_clip_pixelx_xexitx_xix_xi 
    $endmerge
    iNsTr_97 := ($cast ($uint<8>) iNsTr_96)
    ->(xx_x110x_xi) := iNsTr_97
    // load 
    xx_xprex_xi := ->(scevgep20x_xi) 
    $place [x264_clip_pixelx_xexitx_xix_xi_deblock_edge_chroma_cx_xexitx_xi]
    //begin: basic-block deblock_edge_chroma_cx_xexitx_xi
    $merge bb_3_deblock_edge_chroma_cx_xexitx_xi bb_4_deblock_edge_chroma_cx_xexitx_xi bbx_xnphx_xi_deblock_edge_chroma_cx_xexitx_xi x264_clip_pixelx_xexitx_xix_xi_deblock_edge_chroma_cx_xexitx_xi
    $phi iNsTr_23 :=  ( $cast ($uint<8>) iNsTr_1) $on bbx_xnphx_xi_deblock_edge_chroma_cx_xexitx_xi ( $cast ($uint<8>) iNsTr_1) $on bb_3_deblock_edge_chroma_cx_xexitx_xi ( $cast ($uint<8>) iNsTr_1) $on bb_4_deblock_edge_chroma_cx_xexitx_xi ( $cast ($uint<8>) xx_xprex_xi) $on x264_clip_pixelx_xexitx_xix_xi_deblock_edge_chroma_cx_xexitx_xi 
    $endmerge
    // load 
    iNsTr_24 := ->(scevgep13x_x1x_xi) 
    iNsTr_25 := ($cast ($uint<32>) iNsTr_24)
    // load 
    iNsTr_26 := ->(scevgep15x_x1x_xi) 
    iNsTr_27 := ($cast ($uint<32>) iNsTr_26)
    // load 
    iNsTr_28 := ->(xx_x22x_x1x_xi) 
    iNsTr_29 := ($cast ($uint<32>) iNsTr_28)
    // load 
    iNsTr_30 := ->(scevgep18x_x1x_xi) 
    iNsTr_31 := ($cast ($uint<32>) iNsTr_30)
    iNsTr_32 := (iNsTr_27 - iNsTr_29)
    // compare instruction
    isposx_xix_x1x_xi := ( ($bitcast ( $int<32>) iNsTr_32) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xix_x1x_xi := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_32)
    iNsTr_33 := ( $mux isposx_xix_x1x_xi iNsTr_32 negx_xix_x1x_xi)
    // compare instruction
    iNsTr_34 := ( ($bitcast ( $int<32>) iNsTr_33) <   ($bitcast ( $int<32>) alpha ) )
    $if iNsTr_34 $then  $place [deblock_edge_chroma_cx_xexitx_xi_bb_19] $else $place [deblock_edge_chroma_cx_xexitx_xi_xx_xloopexitx_xi] $endif 
    //begin: basic-block xx_xloopexitx_xi
    $merge bb_1_xx_xloopexitx_xi bb_18_xx_xloopexitx_xi bb_19_xx_xloopexitx_xi deblock_edge_chroma_cx_xexitx_xi_xx_xloopexitx_xi x264_clip_pixelx_xexitx_xix_x1x_xi_xx_xloopexitx_xi
    $endmerge
    iNsTr_4 := (ix_x09x_xi + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (iNsTr_4 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 )  )
    $if exitcond1 $then  $place [xx_xloopexitx_xi_deblock_chroma_cx_xexit] $else $place [xx_xloopexitx_xi_bb_1] $endif 
    //begin: basic-block x264_clip_pixelx_xexitx_xix_x1x_xi
    $merge bb_22_x264_clip_pixelx_xexitx_xix_x1x_xi x264_clip_pixelx_xexit1x_xix_x1x_xi_x264_clip_pixelx_xexitx_xix_x1x_xi
    $phi iNsTr_114 :=  ( $cast ($uint<32>) iNsTr_112) $on bb_22_x264_clip_pixelx_xexitx_xix_x1x_xi ( $cast ($uint<32>) iNsTr_107) $on x264_clip_pixelx_xexit1x_xix_x1x_xi_x264_clip_pixelx_xexitx_xix_x1x_xi 
    $endmerge
    iNsTr_115 := ($cast ($uint<8>) iNsTr_114)
    ->(xx_x22x_x1x_xi) := iNsTr_115
    $place [x264_clip_pixelx_xexitx_xix_x1x_xi_xx_xloopexitx_xi]
    //begin: basic-block x264_clip_pixelx_xexit1x_xix_x1x_xi
    $merge bb_21_x264_clip_pixelx_xexit1x_xix_x1x_xi x264_clip3x_xexitx_xix_x1x_xi_x264_clip_pixelx_xexit1x_xix_x1x_xi
    $phi iNsTr_104 :=  ( $cast ($uint<32>) iNsTr_102) $on bb_21_x264_clip_pixelx_xexit1x_xix_x1x_xi ( $cast ($uint<32>) iNsTr_86) $on x264_clip3x_xexitx_xix_x1x_xi_x264_clip_pixelx_xexit1x_xix_x1x_xi 
    $endmerge
    iNsTr_105 := ($cast ($uint<8>) iNsTr_104)
    ->(scevgep15x_x1x_xi) := iNsTr_105
    iNsTr_107 := (iNsTr_29 - iNsTr_85)
    // compare instruction
    iNsTr_108 := (iNsTr_107 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_108 $then  $place [x264_clip_pixelx_xexit1x_xix_x1x_xi_bb_22] $else $place [x264_clip_pixelx_xexit1x_xix_x1x_xi_x264_clip_pixelx_xexitx_xix_x1x_xi] $endif 
    //begin: basic-block x264_clip3x_xexitx_xix_x1x_xi
    $merge bb_17_x264_clip3x_xexitx_xix_x1x_xi bb_20_x264_clip3x_xexitx_xix_x1x_xi
    $phi iNsTr_85 :=  ( $cast ($uint<32>) iNsTr_90) $on bb_20_x264_clip3x_xexitx_xix_x1x_xi ( $cast ($uint<32>) iNsTr_72) $on bb_17_x264_clip3x_xexitx_xix_x1x_xi 
    $endmerge
    iNsTr_86 := (iNsTr_85 + iNsTr_27)
    // compare instruction
    iNsTr_87 := (iNsTr_86 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_87 $then  $place [x264_clip3x_xexitx_xix_x1x_xi_bb_21] $else $place [x264_clip3x_xexitx_xix_x1x_xi_x264_clip_pixelx_xexit1x_xix_x1x_xi] $endif 
    //begin: basic-block bb_17
    $merge bb_18_bb_17
    $endmerge
    iNsTr_65 := (iNsTr_29 - iNsTr_27)
    iNsTr_66 := (iNsTr_65 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_67 := (iNsTr_25 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    iNsTr_68 := (iNsTr_67 - iNsTr_31)
    iNsTr_69 := (iNsTr_68 + iNsTr_66)
    iNsTr_70 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_69) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 )  )))
    iNsTr_71 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_23) )
    iNsTr_72 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_71)
    // compare instruction
    iNsTr_73 := ( ($bitcast ( $int<32>) iNsTr_70) <   ($bitcast ( $int<32>) iNsTr_72 ) )
    $if iNsTr_73 $then  $place [bb_17_x264_clip3x_xexitx_xix_x1x_xi] $else $place [bb_17_bb_20] $endif 
    //begin: basic-block bb_18
    $merge bb_19_bb_18
    $endmerge
    iNsTr_54 := (iNsTr_31 - iNsTr_29)
    // compare instruction
    ispos4x_xix_x1x_xi := ( ($bitcast ( $int<32>) iNsTr_54) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    neg5x_xix_x1x_xi := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_54)
    iNsTr_55 := ( $mux ispos4x_xix_x1x_xi iNsTr_54 neg5x_xix_x1x_xi)
    // compare instruction
    iNsTr_56 := ( ($bitcast ( $int<32>) iNsTr_55) <   ($bitcast ( $int<32>) beta ) )
    $if iNsTr_56 $then  $place [bb_18_bb_17] $else $place [bb_18_xx_xloopexitx_xi] $endif 
    //begin: basic-block bb_19
    $merge deblock_edge_chroma_cx_xexitx_xi_bb_19
    $endmerge
    iNsTr_40 := (iNsTr_25 - iNsTr_27)
    // compare instruction
    ispos2x_xix_x1x_xi := ( ($bitcast ( $int<32>) iNsTr_40) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    neg3x_xix_x1x_xi := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_40)
    iNsTr_41 := ( $mux ispos2x_xix_x1x_xi iNsTr_40 neg3x_xix_x1x_xi)
    // compare instruction
    iNsTr_42 := ( ($bitcast ( $int<32>) iNsTr_41) <   ($bitcast ( $int<32>) beta ) )
    $if iNsTr_42 $then  $place [bb_19_bb_18] $else $place [bb_19_xx_xloopexitx_xi] $endif 
    //begin: basic-block bb_20
    $merge bb_17_bb_20
    $endmerge
    // compare instruction
    iNsTr_89 := ( ($bitcast ( $int<32>) iNsTr_70) >  ($bitcast ( $int<32>) iNsTr_71 ) )
    iNsTr_90 := ( $mux iNsTr_89 iNsTr_71 iNsTr_70)
    $place [bb_20_x264_clip3x_xexitx_xix_x1x_xi]
    //begin: basic-block bb_21
    $merge x264_clip3x_xexitx_xix_x1x_xi_bb_21
    $endmerge
    iNsTr_100 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_86)
    iNsTr_101 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_100) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_102 := (iNsTr_101 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_21_x264_clip_pixelx_xexit1x_xix_x1x_xi]
    //begin: basic-block bb_22
    $merge x264_clip_pixelx_xexit1x_xix_x1x_xi_bb_22
    $endmerge
    iNsTr_110 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_107)
    iNsTr_111 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_110) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_112 := (iNsTr_111 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_22_x264_clip_pixelx_xexitx_xix_x1x_xi]
    //begin: basic-block deblock_chroma_cx_xexit
    $merge xx_xloopexitx_xi_deblock_chroma_cx_xexit
    $endmerge
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [deblock_v_chroma_c] 
$in (pix : $pointer< $uint<8> > stride : $uint<32> alpha : $uint<32> beta : $uint<32> tc0 : $pointer< $uint<8> > )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    tmp11 := (stride * ( $bitcast ($uint<32> ) _b11111111111111111111111111111110 ) )
    tmp13 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - stride)
    tmp16 := (stride * ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    tmp17 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  - tmp16)
    tmp19 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  - stride)
    tmp22 := (stride + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    $place [bb_0_bb_1]
    //begin: basic-block bb_1
    $merge bb_0_bb_1 xx_xloopexitx_xi_bb_1
    $phi xx_x110x_xi :=  ( $cast ($pointer< $uint<8> >) pix) $on bb_0_bb_1 ( $cast ($pointer< $uint<8> >) xx_x0x_xi) $on xx_xloopexitx_xi_bb_1 
    $phi ix_x09x_xi :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bb_0_bb_1 ( $cast ($uint<32>) iNsTr_7) $on xx_xloopexitx_xi_bb_1 
    $endmerge
    scevgep20x_xi := tc0[ix_x09x_xi]
    // load 
    iNsTr_1 := ->(scevgep20x_xi) 
    // compare instruction
    iNsTr_2 := ( ($bitcast ( $int<8>) iNsTr_1) <   ($bitcast ( $int<8>) ( $bitcast ($uint<8> ) _b00000001 )  ) )
    $if iNsTr_2 $then  $place [bb_1_bb_3] $else $place [bb_1_bbx_xnphx_xix_xpreheader] $endif 
    //begin: basic-block bbx_xnphx_xix_xpreheader
    $merge bb_1_bbx_xnphx_xix_xpreheader
    $endmerge
    $place [bbx_xnphx_xix_xpreheader_bbx_xnphx_xi]
    //begin: basic-block bb_3
    $merge bb_1_bb_3
    $endmerge
    iNsTr_4 := xx_x110x_xi[( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ]
    $place [bb_3_xx_xloopexitx_xi]
    //begin: basic-block bbx_xnphx_xi
    $merge bbx_xnphx_xix_xpreheader_bbx_xnphx_xi xx_xx_xpreheader_crit_edgex_xi_bbx_xnphx_xi
    $phi iNsTr_9 :=  ( $cast ($uint<32>) indvarx_xnext) $on xx_xx_xpreheader_crit_edgex_xi_bbx_xnphx_xi ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xix_xpreheader_bbx_xnphx_xi 
    $endmerge
    tmp := (iNsTr_9 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    tmp4 := (tmp11 + tmp)
    scevgep13x_xi := xx_x110x_xi[tmp4]
    tmp14 := (tmp13 + tmp)
    scevgep15x_xi := xx_x110x_xi[tmp14]
    tmp15 := (stride + tmp)
    scevgep18x_xi := xx_x110x_xi[tmp15]
    xx_x36x_xi := xx_x110x_xi[tmp]
    tmp18 := (tmp17 + tmp)
    scevgep13x_x1x_xi := xx_x110x_xi[tmp18]
    tmp20 := (tmp19 + tmp)
    scevgep15x_x1x_xi := xx_x110x_xi[tmp20]
    tmp21 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    xx_x22x_x1x_xi := xx_x110x_xi[tmp21]
    tmp23 := (tmp22 + tmp)
    scevgep18x_x1x_xi := xx_x110x_xi[tmp23]
    // load 
    iNsTr_10 := ->(scevgep20x_xi) 
    // load 
    iNsTr_11 := ->(scevgep13x_xi) 
    iNsTr_12 := ($cast ($uint<32>) iNsTr_11)
    // load 
    iNsTr_13 := ->(scevgep15x_xi) 
    iNsTr_14 := ($cast ($uint<32>) iNsTr_13)
    // load 
    iNsTr_15 := ->(xx_x36x_xi) 
    iNsTr_16 := ($cast ($uint<32>) iNsTr_15)
    // load 
    iNsTr_17 := ->(scevgep18x_xi) 
    iNsTr_18 := ($cast ($uint<32>) iNsTr_17)
    iNsTr_19 := (iNsTr_14 - iNsTr_16)
    // compare instruction
    isposx_xix_xi := ( ($bitcast ( $int<32>) iNsTr_19) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xix_xi := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_19)
    iNsTr_20 := ( $mux isposx_xix_xi iNsTr_19 negx_xix_xi)
    // compare instruction
    iNsTr_21 := ( ($bitcast ( $int<32>) iNsTr_20) <   ($bitcast ( $int<32>) alpha ) )
    $if iNsTr_21 $then  $place [bbx_xnphx_xi_bb_5] $else $place [bbx_xnphx_xi_deblock_edge_chroma_cx_xexitx_xi] $endif 
    //begin: basic-block bb_5
    $merge bbx_xnphx_xi_bb_5
    $endmerge
    iNsTr_24 := (iNsTr_12 - iNsTr_14)
    // compare instruction
    ispos2x_xix_xi := ( ($bitcast ( $int<32>) iNsTr_24) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    neg3x_xix_xi := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_24)
    iNsTr_25 := ( $mux ispos2x_xix_xi iNsTr_24 neg3x_xix_xi)
    // compare instruction
    iNsTr_26 := ( ($bitcast ( $int<32>) iNsTr_25) <   ($bitcast ( $int<32>) beta ) )
    $if iNsTr_26 $then  $place [bb_5_bb_6] $else $place [bb_5_deblock_edge_chroma_cx_xexitx_xi] $endif 
    //begin: basic-block bb_6
    $merge bb_5_bb_6
    $endmerge
    iNsTr_41 := (iNsTr_18 - iNsTr_16)
    // compare instruction
    ispos4x_xix_xi := ( ($bitcast ( $int<32>) iNsTr_41) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    neg5x_xix_xi := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_41)
    iNsTr_42 := ( $mux ispos4x_xix_xi iNsTr_41 neg5x_xix_xi)
    // compare instruction
    iNsTr_43 := ( ($bitcast ( $int<32>) iNsTr_42) <   ($bitcast ( $int<32>) beta ) )
    $if iNsTr_43 $then  $place [bb_6_bb_7] $else $place [bb_6_deblock_edge_chroma_cx_xexitx_xi] $endif 
    //begin: basic-block bb_7
    $merge bb_6_bb_7
    $endmerge
    iNsTr_50 := (iNsTr_16 - iNsTr_14)
    iNsTr_51 := (iNsTr_50 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_52 := (iNsTr_12 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    iNsTr_53 := (iNsTr_52 - iNsTr_18)
    iNsTr_54 := (iNsTr_53 + iNsTr_51)
    iNsTr_55 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_54) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 )  )))
    iNsTr_56 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_10) )
    iNsTr_57 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_56)
    // compare instruction
    iNsTr_58 := ( ($bitcast ( $int<32>) iNsTr_55) <   ($bitcast ( $int<32>) iNsTr_57 ) )
    $if iNsTr_58 $then  $place [bb_7_x264_clip3x_xexitx_xix_xi] $else $place [bb_7_bb_8] $endif 
    //begin: basic-block bb_8
    $merge bb_7_bb_8
    $endmerge
    // compare instruction
    iNsTr_70 := ( ($bitcast ( $int<32>) iNsTr_55) >  ($bitcast ( $int<32>) iNsTr_56 ) )
    iNsTr_71 := ( $mux iNsTr_70 iNsTr_56 iNsTr_55)
    $place [bb_8_x264_clip3x_xexitx_xix_xi]
    //begin: basic-block x264_clip3x_xexitx_xix_xi
    $merge bb_7_x264_clip3x_xexitx_xix_xi bb_8_x264_clip3x_xexitx_xix_xi
    $phi iNsTr_66 :=  ( $cast ($uint<32>) iNsTr_71) $on bb_8_x264_clip3x_xexitx_xix_xi ( $cast ($uint<32>) iNsTr_57) $on bb_7_x264_clip3x_xexitx_xix_xi 
    $endmerge
    iNsTr_67 := (iNsTr_66 + iNsTr_14)
    // compare instruction
    iNsTr_68 := (iNsTr_67 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_68 $then  $place [x264_clip3x_xexitx_xix_xi_bb_10] $else $place [x264_clip3x_xexitx_xix_xi_x264_clip_pixelx_xexit1x_xix_xi] $endif 
    //begin: basic-block bb_10
    $merge x264_clip3x_xexitx_xix_xi_bb_10
    $endmerge
    iNsTr_83 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_67)
    iNsTr_84 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_83) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_85 := (iNsTr_84 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_10_x264_clip_pixelx_xexit1x_xix_xi]
    //begin: basic-block x264_clip_pixelx_xexit1x_xix_xi
    $merge bb_10_x264_clip_pixelx_xexit1x_xix_xi x264_clip3x_xexitx_xix_xi_x264_clip_pixelx_xexit1x_xix_xi
    $phi iNsTr_87 :=  ( $cast ($uint<32>) iNsTr_85) $on bb_10_x264_clip_pixelx_xexit1x_xix_xi ( $cast ($uint<32>) iNsTr_67) $on x264_clip3x_xexitx_xix_xi_x264_clip_pixelx_xexit1x_xix_xi 
    $endmerge
    iNsTr_88 := ($cast ($uint<8>) iNsTr_87)
    ->(scevgep15x_xi) := iNsTr_88
    iNsTr_90 := (iNsTr_16 - iNsTr_66)
    // compare instruction
    iNsTr_91 := (iNsTr_90 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_91 $then  $place [x264_clip_pixelx_xexit1x_xix_xi_bb_12] $else $place [x264_clip_pixelx_xexit1x_xix_xi_x264_clip_pixelx_xexitx_xix_xi] $endif 
    //begin: basic-block bb_12
    $merge x264_clip_pixelx_xexit1x_xix_xi_bb_12
    $endmerge
    iNsTr_100 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_90)
    iNsTr_101 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_100) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_102 := (iNsTr_101 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_12_x264_clip_pixelx_xexitx_xix_xi]
    //begin: basic-block x264_clip_pixelx_xexitx_xix_xi
    $merge bb_12_x264_clip_pixelx_xexitx_xix_xi x264_clip_pixelx_xexit1x_xix_xi_x264_clip_pixelx_xexitx_xix_xi
    $phi iNsTr_104 :=  ( $cast ($uint<32>) iNsTr_102) $on bb_12_x264_clip_pixelx_xexitx_xix_xi ( $cast ($uint<32>) iNsTr_90) $on x264_clip_pixelx_xexit1x_xix_xi_x264_clip_pixelx_xexitx_xix_xi 
    $endmerge
    iNsTr_105 := ($cast ($uint<8>) iNsTr_104)
    ->(xx_x36x_xi) := iNsTr_105
    // load 
    xx_xprex_xi := ->(scevgep20x_xi) 
    $place [x264_clip_pixelx_xexitx_xix_xi_deblock_edge_chroma_cx_xexitx_xi]
    //begin: basic-block deblock_edge_chroma_cx_xexitx_xi
    $merge bb_5_deblock_edge_chroma_cx_xexitx_xi bb_6_deblock_edge_chroma_cx_xexitx_xi bbx_xnphx_xi_deblock_edge_chroma_cx_xexitx_xi x264_clip_pixelx_xexitx_xix_xi_deblock_edge_chroma_cx_xexitx_xi
    $phi iNsTr_28 :=  ( $cast ($uint<8>) iNsTr_10) $on bbx_xnphx_xi_deblock_edge_chroma_cx_xexitx_xi ( $cast ($uint<8>) iNsTr_10) $on bb_5_deblock_edge_chroma_cx_xexitx_xi ( $cast ($uint<8>) iNsTr_10) $on bb_6_deblock_edge_chroma_cx_xexitx_xi ( $cast ($uint<8>) xx_xprex_xi) $on x264_clip_pixelx_xexitx_xix_xi_deblock_edge_chroma_cx_xexitx_xi 
    $endmerge
    // load 
    iNsTr_29 := ->(scevgep13x_x1x_xi) 
    iNsTr_30 := ($cast ($uint<32>) iNsTr_29)
    // load 
    iNsTr_31 := ->(scevgep15x_x1x_xi) 
    iNsTr_32 := ($cast ($uint<32>) iNsTr_31)
    // load 
    iNsTr_33 := ->(xx_x22x_x1x_xi) 
    iNsTr_34 := ($cast ($uint<32>) iNsTr_33)
    // load 
    iNsTr_35 := ->(scevgep18x_x1x_xi) 
    iNsTr_36 := ($cast ($uint<32>) iNsTr_35)
    iNsTr_37 := (iNsTr_32 - iNsTr_34)
    // compare instruction
    isposx_xix_x1x_xi := ( ($bitcast ( $int<32>) iNsTr_37) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xix_x1x_xi := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_37)
    iNsTr_38 := ( $mux isposx_xix_x1x_xi iNsTr_37 negx_xix_x1x_xi)
    // compare instruction
    iNsTr_39 := ( ($bitcast ( $int<32>) iNsTr_38) <   ($bitcast ( $int<32>) alpha ) )
    $if iNsTr_39 $then  $place [deblock_edge_chroma_cx_xexitx_xi_bb_24] $else $place [deblock_edge_chroma_cx_xexitx_xi_bb_15] $endif 
    //begin: basic-block bb_15
    $merge bb_23_bb_15 bb_24_bb_15 deblock_edge_chroma_cx_xexitx_xi_bb_15 x264_clip_pixelx_xexitx_xix_x1x_xi_bb_15
    $endmerge
    // compare instruction
    exitcondx_xi := (iNsTr_9 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )
    $if exitcondx_xi $then  $place [bb_15_xx_xloopexitx_xix_xloopexit] $else $place [bb_15_xx_xx_xpreheader_crit_edgex_xi] $endif 
    //begin: basic-block xx_xx_xpreheader_crit_edgex_xi
    $merge bb_15_xx_xx_xpreheader_crit_edgex_xi
    $endmerge
    indvarx_xnext := (iNsTr_9 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    $place [xx_xx_xpreheader_crit_edgex_xi_bbx_xnphx_xi]
    //begin: basic-block xx_xloopexitx_xix_xloopexit
    $merge bb_15_xx_xloopexitx_xix_xloopexit
    $phi tmpx_xlcssa :=  ( $cast ($uint<32>) tmp) $on bb_15_xx_xloopexitx_xix_xloopexit 
    $endmerge
    tmp2 := (tmpx_xlcssa + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgepx_xi := xx_x110x_xi[tmp2]
    $place [xx_xloopexitx_xix_xloopexit_xx_xloopexitx_xi]
    //begin: basic-block xx_xloopexitx_xi
    $merge bb_3_xx_xloopexitx_xi xx_xloopexitx_xix_xloopexit_xx_xloopexitx_xi
    $phi xx_x0x_xi :=  ( $cast ($pointer< $uint<8> >) iNsTr_4) $on bb_3_xx_xloopexitx_xi ( $cast ($pointer< $uint<8> >) scevgepx_xi) $on xx_xloopexitx_xix_xloopexit_xx_xloopexitx_xi 
    $endmerge
    iNsTr_7 := (ix_x09x_xi + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond24 := (iNsTr_7 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 )  )
    $if exitcond24 $then  $place [xx_xloopexitx_xi_deblock_chroma_cx_xexit] $else $place [xx_xloopexitx_xi_bb_1] $endif 
    //begin: basic-block x264_clip_pixelx_xexitx_xix_x1x_xi
    $merge bb_27_x264_clip_pixelx_xexitx_xix_x1x_xi x264_clip_pixelx_xexit1x_xix_x1x_xi_x264_clip_pixelx_xexitx_xix_x1x_xi
    $phi iNsTr_122 :=  ( $cast ($uint<32>) iNsTr_120) $on bb_27_x264_clip_pixelx_xexitx_xix_x1x_xi ( $cast ($uint<32>) iNsTr_115) $on x264_clip_pixelx_xexit1x_xix_x1x_xi_x264_clip_pixelx_xexitx_xix_x1x_xi 
    $endmerge
    iNsTr_123 := ($cast ($uint<8>) iNsTr_122)
    ->(xx_x22x_x1x_xi) := iNsTr_123
    $place [x264_clip_pixelx_xexitx_xix_x1x_xi_bb_15]
    //begin: basic-block x264_clip_pixelx_xexit1x_xix_x1x_xi
    $merge bb_26_x264_clip_pixelx_xexit1x_xix_x1x_xi x264_clip3x_xexitx_xix_x1x_xi_x264_clip_pixelx_xexit1x_xix_x1x_xi
    $phi iNsTr_112 :=  ( $cast ($uint<32>) iNsTr_110) $on bb_26_x264_clip_pixelx_xexit1x_xix_x1x_xi ( $cast ($uint<32>) iNsTr_94) $on x264_clip3x_xexitx_xix_x1x_xi_x264_clip_pixelx_xexit1x_xix_x1x_xi 
    $endmerge
    iNsTr_113 := ($cast ($uint<8>) iNsTr_112)
    ->(scevgep15x_x1x_xi) := iNsTr_113
    iNsTr_115 := (iNsTr_34 - iNsTr_93)
    // compare instruction
    iNsTr_116 := (iNsTr_115 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_116 $then  $place [x264_clip_pixelx_xexit1x_xix_x1x_xi_bb_27] $else $place [x264_clip_pixelx_xexit1x_xix_x1x_xi_x264_clip_pixelx_xexitx_xix_x1x_xi] $endif 
    //begin: basic-block x264_clip3x_xexitx_xix_x1x_xi
    $merge bb_22_x264_clip3x_xexitx_xix_x1x_xi bb_25_x264_clip3x_xexitx_xix_x1x_xi
    $phi iNsTr_93 :=  ( $cast ($uint<32>) iNsTr_98) $on bb_25_x264_clip3x_xexitx_xix_x1x_xi ( $cast ($uint<32>) iNsTr_80) $on bb_22_x264_clip3x_xexitx_xix_x1x_xi 
    $endmerge
    iNsTr_94 := (iNsTr_93 + iNsTr_32)
    // compare instruction
    iNsTr_95 := (iNsTr_94 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_95 $then  $place [x264_clip3x_xexitx_xix_x1x_xi_bb_26] $else $place [x264_clip3x_xexitx_xix_x1x_xi_x264_clip_pixelx_xexit1x_xix_x1x_xi] $endif 
    //begin: basic-block bb_22
    $merge bb_23_bb_22
    $endmerge
    iNsTr_73 := (iNsTr_34 - iNsTr_32)
    iNsTr_74 := (iNsTr_73 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_75 := (iNsTr_30 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    iNsTr_76 := (iNsTr_75 - iNsTr_36)
    iNsTr_77 := (iNsTr_76 + iNsTr_74)
    iNsTr_78 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_77) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 )  )))
    iNsTr_79 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_28) )
    iNsTr_80 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_79)
    // compare instruction
    iNsTr_81 := ( ($bitcast ( $int<32>) iNsTr_78) <   ($bitcast ( $int<32>) iNsTr_80 ) )
    $if iNsTr_81 $then  $place [bb_22_x264_clip3x_xexitx_xix_x1x_xi] $else $place [bb_22_bb_25] $endif 
    //begin: basic-block bb_23
    $merge bb_24_bb_23
    $endmerge
    iNsTr_60 := (iNsTr_36 - iNsTr_34)
    // compare instruction
    ispos4x_xix_x1x_xi := ( ($bitcast ( $int<32>) iNsTr_60) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    neg5x_xix_x1x_xi := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_60)
    iNsTr_61 := ( $mux ispos4x_xix_x1x_xi iNsTr_60 neg5x_xix_x1x_xi)
    // compare instruction
    iNsTr_62 := ( ($bitcast ( $int<32>) iNsTr_61) <   ($bitcast ( $int<32>) beta ) )
    $if iNsTr_62 $then  $place [bb_23_bb_22] $else $place [bb_23_bb_15] $endif 
    //begin: basic-block bb_24
    $merge deblock_edge_chroma_cx_xexitx_xi_bb_24
    $endmerge
    iNsTr_45 := (iNsTr_30 - iNsTr_32)
    // compare instruction
    ispos2x_xix_x1x_xi := ( ($bitcast ( $int<32>) iNsTr_45) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    neg3x_xix_x1x_xi := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_45)
    iNsTr_46 := ( $mux ispos2x_xix_x1x_xi iNsTr_45 neg3x_xix_x1x_xi)
    // compare instruction
    iNsTr_47 := ( ($bitcast ( $int<32>) iNsTr_46) <   ($bitcast ( $int<32>) beta ) )
    $if iNsTr_47 $then  $place [bb_24_bb_23] $else $place [bb_24_bb_15] $endif 
    //begin: basic-block bb_25
    $merge bb_22_bb_25
    $endmerge
    // compare instruction
    iNsTr_97 := ( ($bitcast ( $int<32>) iNsTr_78) >  ($bitcast ( $int<32>) iNsTr_79 ) )
    iNsTr_98 := ( $mux iNsTr_97 iNsTr_79 iNsTr_78)
    $place [bb_25_x264_clip3x_xexitx_xix_x1x_xi]
    //begin: basic-block bb_26
    $merge x264_clip3x_xexitx_xix_x1x_xi_bb_26
    $endmerge
    iNsTr_108 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_94)
    iNsTr_109 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_108) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_110 := (iNsTr_109 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_26_x264_clip_pixelx_xexit1x_xix_x1x_xi]
    //begin: basic-block bb_27
    $merge x264_clip_pixelx_xexit1x_xix_x1x_xi_bb_27
    $endmerge
    iNsTr_118 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_115)
    iNsTr_119 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_118) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_120 := (iNsTr_119 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_27_x264_clip_pixelx_xexitx_xix_x1x_xi]
    //begin: basic-block deblock_chroma_cx_xexit
    $merge xx_xloopexitx_xi_deblock_chroma_cx_xexit
    $endmerge
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [deblock_h_chroma_c] 
$in (pix : $pointer< $uint<8> > stride : $uint<32> alpha : $uint<32> beta : $uint<32> tc0 : $pointer< $uint<8> > )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    iNsTr_0 := (stride << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    $place [bb_0_bb_1]
    //begin: basic-block bb_1
    $merge bb_0_bb_1 xx_xloopexitx_xi_bb_1
    $phi xx_x110x_xi :=  ( $cast ($pointer< $uint<8> >) pix) $on bb_0_bb_1 ( $cast ($pointer< $uint<8> >) xx_x0x_xi) $on xx_xloopexitx_xi_bb_1 
    $phi ix_x09x_xi :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bb_0_bb_1 ( $cast ($uint<32>) iNsTr_5) $on xx_xloopexitx_xi_bb_1 
    $endmerge
    scevgep20x_xi := tc0[ix_x09x_xi]
    // load 
    iNsTr_2 := ->(scevgep20x_xi) 
    // compare instruction
    iNsTr_3 := ( ($bitcast ( $int<8>) iNsTr_2) <   ($bitcast ( $int<8>) ( $bitcast ($uint<8> ) _b00000001 )  ) )
    $if iNsTr_3 $then  $place [bb_1_xx_xloopexitx_xi] $else $place [bb_1_bbx_xnphx_xix_xpreheader] $endif 
    //begin: basic-block bbx_xnphx_xix_xpreheader
    $merge bb_1_bbx_xnphx_xix_xpreheader
    $endmerge
    $place [bbx_xnphx_xix_xpreheader_bbx_xnphx_xi]
    //begin: basic-block bbx_xnphx_xi
    $merge bbx_xnphx_xix_xpreheader_bbx_xnphx_xi xx_xx_xpreheader_crit_edgex_xi_bbx_xnphx_xi
    $phi iNsTr_9 :=  ( $cast ($uint<32>) indvarx_xnext) $on xx_xx_xpreheader_crit_edgex_xi_bbx_xnphx_xi ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xix_xpreheader_bbx_xnphx_xi 
    $endmerge
    tmp := (stride * iNsTr_9)
    tmp4 := (tmp + ( $bitcast ($uint<32> ) _b11111111111111111111111111111100 ) )
    scevgep13x_xi := xx_x110x_xi[tmp4]
    tmp6 := (tmp + ( $bitcast ($uint<32> ) _b11111111111111111111111111111110 ) )
    scevgep15x_xi := xx_x110x_xi[tmp6]
    tmp8 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep18x_xi := xx_x110x_xi[tmp8]
    xx_x36x_xi := xx_x110x_xi[tmp]
    tmp10 := (tmp + ( $bitcast ($uint<32> ) _b11111111111111111111111111111101 ) )
    scevgep13x_x1x_xi := xx_x110x_xi[tmp10]
    tmp11 := (tmp + ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) )
    scevgep15x_x1x_xi := xx_x110x_xi[tmp11]
    tmp13 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    xx_x22x_x1x_xi := xx_x110x_xi[tmp13]
    tmp15 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep18x_x1x_xi := xx_x110x_xi[tmp15]
    // load 
    iNsTr_10 := ->(scevgep20x_xi) 
    // load 
    iNsTr_11 := ->(scevgep13x_xi) 
    iNsTr_12 := ($cast ($uint<32>) iNsTr_11)
    // load 
    iNsTr_13 := ->(scevgep15x_xi) 
    iNsTr_14 := ($cast ($uint<32>) iNsTr_13)
    // load 
    iNsTr_15 := ->(xx_x36x_xi) 
    iNsTr_16 := ($cast ($uint<32>) iNsTr_15)
    // load 
    iNsTr_17 := ->(scevgep18x_xi) 
    iNsTr_18 := ($cast ($uint<32>) iNsTr_17)
    iNsTr_19 := (iNsTr_14 - iNsTr_16)
    // compare instruction
    isposx_xix_xi := ( ($bitcast ( $int<32>) iNsTr_19) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xix_xi := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_19)
    iNsTr_20 := ( $mux isposx_xix_xi iNsTr_19 negx_xix_xi)
    // compare instruction
    iNsTr_21 := ( ($bitcast ( $int<32>) iNsTr_20) <   ($bitcast ( $int<32>) alpha ) )
    $if iNsTr_21 $then  $place [bbx_xnphx_xi_bb_4] $else $place [bbx_xnphx_xi_deblock_edge_chroma_cx_xexitx_xi] $endif 
    //begin: basic-block bb_4
    $merge bbx_xnphx_xi_bb_4
    $endmerge
    iNsTr_23 := (iNsTr_12 - iNsTr_14)
    // compare instruction
    ispos2x_xix_xi := ( ($bitcast ( $int<32>) iNsTr_23) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    neg3x_xix_xi := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_23)
    iNsTr_24 := ( $mux ispos2x_xix_xi iNsTr_23 neg3x_xix_xi)
    // compare instruction
    iNsTr_25 := ( ($bitcast ( $int<32>) iNsTr_24) <   ($bitcast ( $int<32>) beta ) )
    $if iNsTr_25 $then  $place [bb_4_bb_5] $else $place [bb_4_deblock_edge_chroma_cx_xexitx_xi] $endif 
    //begin: basic-block bb_5
    $merge bb_4_bb_5
    $endmerge
    iNsTr_40 := (iNsTr_18 - iNsTr_16)
    // compare instruction
    ispos4x_xix_xi := ( ($bitcast ( $int<32>) iNsTr_40) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    neg5x_xix_xi := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_40)
    iNsTr_41 := ( $mux ispos4x_xix_xi iNsTr_40 neg5x_xix_xi)
    // compare instruction
    iNsTr_42 := ( ($bitcast ( $int<32>) iNsTr_41) <   ($bitcast ( $int<32>) beta ) )
    $if iNsTr_42 $then  $place [bb_5_bb_6] $else $place [bb_5_deblock_edge_chroma_cx_xexitx_xi] $endif 
    //begin: basic-block bb_6
    $merge bb_5_bb_6
    $endmerge
    iNsTr_49 := (iNsTr_16 - iNsTr_14)
    iNsTr_50 := (iNsTr_49 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_51 := (iNsTr_12 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    iNsTr_52 := (iNsTr_51 - iNsTr_18)
    iNsTr_53 := (iNsTr_52 + iNsTr_50)
    iNsTr_54 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_53) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 )  )))
    iNsTr_55 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_10) )
    iNsTr_56 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_55)
    // compare instruction
    iNsTr_57 := ( ($bitcast ( $int<32>) iNsTr_54) <   ($bitcast ( $int<32>) iNsTr_56 ) )
    $if iNsTr_57 $then  $place [bb_6_x264_clip3x_xexitx_xix_xi] $else $place [bb_6_bb_7] $endif 
    //begin: basic-block bb_7
    $merge bb_6_bb_7
    $endmerge
    // compare instruction
    iNsTr_69 := ( ($bitcast ( $int<32>) iNsTr_54) >  ($bitcast ( $int<32>) iNsTr_55 ) )
    iNsTr_70 := ( $mux iNsTr_69 iNsTr_55 iNsTr_54)
    $place [bb_7_x264_clip3x_xexitx_xix_xi]
    //begin: basic-block x264_clip3x_xexitx_xix_xi
    $merge bb_6_x264_clip3x_xexitx_xix_xi bb_7_x264_clip3x_xexitx_xix_xi
    $phi iNsTr_65 :=  ( $cast ($uint<32>) iNsTr_70) $on bb_7_x264_clip3x_xexitx_xix_xi ( $cast ($uint<32>) iNsTr_56) $on bb_6_x264_clip3x_xexitx_xix_xi 
    $endmerge
    iNsTr_66 := (iNsTr_65 + iNsTr_14)
    // compare instruction
    iNsTr_67 := (iNsTr_66 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_67 $then  $place [x264_clip3x_xexitx_xix_xi_bb_9] $else $place [x264_clip3x_xexitx_xix_xi_x264_clip_pixelx_xexit1x_xix_xi] $endif 
    //begin: basic-block bb_9
    $merge x264_clip3x_xexitx_xix_xi_bb_9
    $endmerge
    iNsTr_82 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_66)
    iNsTr_83 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_82) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_84 := (iNsTr_83 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_9_x264_clip_pixelx_xexit1x_xix_xi]
    //begin: basic-block x264_clip_pixelx_xexit1x_xix_xi
    $merge bb_9_x264_clip_pixelx_xexit1x_xix_xi x264_clip3x_xexitx_xix_xi_x264_clip_pixelx_xexit1x_xix_xi
    $phi iNsTr_86 :=  ( $cast ($uint<32>) iNsTr_84) $on bb_9_x264_clip_pixelx_xexit1x_xix_xi ( $cast ($uint<32>) iNsTr_66) $on x264_clip3x_xexitx_xix_xi_x264_clip_pixelx_xexit1x_xix_xi 
    $endmerge
    iNsTr_87 := ($cast ($uint<8>) iNsTr_86)
    ->(scevgep15x_xi) := iNsTr_87
    iNsTr_89 := (iNsTr_16 - iNsTr_65)
    // compare instruction
    iNsTr_90 := (iNsTr_89 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_90 $then  $place [x264_clip_pixelx_xexit1x_xix_xi_bb_11] $else $place [x264_clip_pixelx_xexit1x_xix_xi_x264_clip_pixelx_xexitx_xix_xi] $endif 
    //begin: basic-block bb_11
    $merge x264_clip_pixelx_xexit1x_xix_xi_bb_11
    $endmerge
    iNsTr_99 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_89)
    iNsTr_100 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_99) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_101 := (iNsTr_100 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_11_x264_clip_pixelx_xexitx_xix_xi]
    //begin: basic-block x264_clip_pixelx_xexitx_xix_xi
    $merge bb_11_x264_clip_pixelx_xexitx_xix_xi x264_clip_pixelx_xexit1x_xix_xi_x264_clip_pixelx_xexitx_xix_xi
    $phi iNsTr_103 :=  ( $cast ($uint<32>) iNsTr_101) $on bb_11_x264_clip_pixelx_xexitx_xix_xi ( $cast ($uint<32>) iNsTr_89) $on x264_clip_pixelx_xexit1x_xix_xi_x264_clip_pixelx_xexitx_xix_xi 
    $endmerge
    iNsTr_104 := ($cast ($uint<8>) iNsTr_103)
    ->(xx_x36x_xi) := iNsTr_104
    // load 
    xx_xprex_xi := ->(scevgep20x_xi) 
    $place [x264_clip_pixelx_xexitx_xix_xi_deblock_edge_chroma_cx_xexitx_xi]
    //begin: basic-block deblock_edge_chroma_cx_xexitx_xi
    $merge bb_4_deblock_edge_chroma_cx_xexitx_xi bb_5_deblock_edge_chroma_cx_xexitx_xi bbx_xnphx_xi_deblock_edge_chroma_cx_xexitx_xi x264_clip_pixelx_xexitx_xix_xi_deblock_edge_chroma_cx_xexitx_xi
    $phi iNsTr_27 :=  ( $cast ($uint<8>) iNsTr_10) $on bbx_xnphx_xi_deblock_edge_chroma_cx_xexitx_xi ( $cast ($uint<8>) iNsTr_10) $on bb_4_deblock_edge_chroma_cx_xexitx_xi ( $cast ($uint<8>) iNsTr_10) $on bb_5_deblock_edge_chroma_cx_xexitx_xi ( $cast ($uint<8>) xx_xprex_xi) $on x264_clip_pixelx_xexitx_xix_xi_deblock_edge_chroma_cx_xexitx_xi 
    $endmerge
    // load 
    iNsTr_28 := ->(scevgep13x_x1x_xi) 
    iNsTr_29 := ($cast ($uint<32>) iNsTr_28)
    // load 
    iNsTr_30 := ->(scevgep15x_x1x_xi) 
    iNsTr_31 := ($cast ($uint<32>) iNsTr_30)
    // load 
    iNsTr_32 := ->(xx_x22x_x1x_xi) 
    iNsTr_33 := ($cast ($uint<32>) iNsTr_32)
    // load 
    iNsTr_34 := ->(scevgep18x_x1x_xi) 
    iNsTr_35 := ($cast ($uint<32>) iNsTr_34)
    iNsTr_36 := (iNsTr_31 - iNsTr_33)
    // compare instruction
    isposx_xix_x1x_xi := ( ($bitcast ( $int<32>) iNsTr_36) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xix_x1x_xi := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_36)
    iNsTr_37 := ( $mux isposx_xix_x1x_xi iNsTr_36 negx_xix_x1x_xi)
    // compare instruction
    iNsTr_38 := ( ($bitcast ( $int<32>) iNsTr_37) <   ($bitcast ( $int<32>) alpha ) )
    $if iNsTr_38 $then  $place [deblock_edge_chroma_cx_xexitx_xi_bb_23] $else $place [deblock_edge_chroma_cx_xexitx_xi_bb_14] $endif 
    //begin: basic-block bb_14
    $merge bb_22_bb_14 bb_23_bb_14 deblock_edge_chroma_cx_xexitx_xi_bb_14 x264_clip_pixelx_xexitx_xix_x1x_xi_bb_14
    $endmerge
    // compare instruction
    exitcondx_xi := (iNsTr_9 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )
    $if exitcondx_xi $then  $place [bb_14_xx_xloopexitx_xix_xloopexit] $else $place [bb_14_xx_xx_xpreheader_crit_edgex_xi] $endif 
    //begin: basic-block xx_xx_xpreheader_crit_edgex_xi
    $merge bb_14_xx_xx_xpreheader_crit_edgex_xi
    $endmerge
    indvarx_xnext := (iNsTr_9 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    $place [xx_xx_xpreheader_crit_edgex_xi_bbx_xnphx_xi]
    //begin: basic-block xx_xloopexitx_xix_xloopexit
    $merge bb_14_xx_xloopexitx_xix_xloopexit
    $phi tmpx_xlcssa :=  ( $cast ($uint<32>) tmp) $on bb_14_xx_xloopexitx_xix_xloopexit 
    $endmerge
    tmp2 := (tmpx_xlcssa + stride)
    $place [xx_xloopexitx_xix_xloopexit_xx_xloopexitx_xi]
    //begin: basic-block xx_xloopexitx_xi
    $merge bb_1_xx_xloopexitx_xi xx_xloopexitx_xix_xloopexit_xx_xloopexitx_xi
    $phi xx_xpn :=  ( $cast ($uint<32>) iNsTr_0) $on bb_1_xx_xloopexitx_xi ( $cast ($uint<32>) tmp2) $on xx_xloopexitx_xix_xloopexit_xx_xloopexitx_xi 
    $endmerge
    xx_x0x_xi := xx_x110x_xi[xx_xpn]
    iNsTr_5 := (ix_x09x_xi + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond16 := (iNsTr_5 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 )  )
    $if exitcond16 $then  $place [xx_xloopexitx_xi_deblock_chroma_cx_xexit] $else $place [xx_xloopexitx_xi_bb_1] $endif 
    //begin: basic-block x264_clip_pixelx_xexitx_xix_x1x_xi
    $merge bb_26_x264_clip_pixelx_xexitx_xix_x1x_xi x264_clip_pixelx_xexit1x_xix_x1x_xi_x264_clip_pixelx_xexitx_xix_x1x_xi
    $phi iNsTr_121 :=  ( $cast ($uint<32>) iNsTr_119) $on bb_26_x264_clip_pixelx_xexitx_xix_x1x_xi ( $cast ($uint<32>) iNsTr_114) $on x264_clip_pixelx_xexit1x_xix_x1x_xi_x264_clip_pixelx_xexitx_xix_x1x_xi 
    $endmerge
    iNsTr_122 := ($cast ($uint<8>) iNsTr_121)
    ->(xx_x22x_x1x_xi) := iNsTr_122
    $place [x264_clip_pixelx_xexitx_xix_x1x_xi_bb_14]
    //begin: basic-block x264_clip_pixelx_xexit1x_xix_x1x_xi
    $merge bb_25_x264_clip_pixelx_xexit1x_xix_x1x_xi x264_clip3x_xexitx_xix_x1x_xi_x264_clip_pixelx_xexit1x_xix_x1x_xi
    $phi iNsTr_111 :=  ( $cast ($uint<32>) iNsTr_109) $on bb_25_x264_clip_pixelx_xexit1x_xix_x1x_xi ( $cast ($uint<32>) iNsTr_93) $on x264_clip3x_xexitx_xix_x1x_xi_x264_clip_pixelx_xexit1x_xix_x1x_xi 
    $endmerge
    iNsTr_112 := ($cast ($uint<8>) iNsTr_111)
    ->(scevgep15x_x1x_xi) := iNsTr_112
    iNsTr_114 := (iNsTr_33 - iNsTr_92)
    // compare instruction
    iNsTr_115 := (iNsTr_114 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_115 $then  $place [x264_clip_pixelx_xexit1x_xix_x1x_xi_bb_26] $else $place [x264_clip_pixelx_xexit1x_xix_x1x_xi_x264_clip_pixelx_xexitx_xix_x1x_xi] $endif 
    //begin: basic-block x264_clip3x_xexitx_xix_x1x_xi
    $merge bb_21_x264_clip3x_xexitx_xix_x1x_xi bb_24_x264_clip3x_xexitx_xix_x1x_xi
    $phi iNsTr_92 :=  ( $cast ($uint<32>) iNsTr_97) $on bb_24_x264_clip3x_xexitx_xix_x1x_xi ( $cast ($uint<32>) iNsTr_79) $on bb_21_x264_clip3x_xexitx_xix_x1x_xi 
    $endmerge
    iNsTr_93 := (iNsTr_92 + iNsTr_31)
    // compare instruction
    iNsTr_94 := (iNsTr_93 > ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 )  )
    $if iNsTr_94 $then  $place [x264_clip3x_xexitx_xix_x1x_xi_bb_25] $else $place [x264_clip3x_xexitx_xix_x1x_xi_x264_clip_pixelx_xexit1x_xix_x1x_xi] $endif 
    //begin: basic-block bb_21
    $merge bb_22_bb_21
    $endmerge
    iNsTr_72 := (iNsTr_33 - iNsTr_31)
    iNsTr_73 := (iNsTr_72 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_74 := (iNsTr_29 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    iNsTr_75 := (iNsTr_74 - iNsTr_35)
    iNsTr_76 := (iNsTr_75 + iNsTr_73)
    iNsTr_77 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_76) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 )  )))
    iNsTr_78 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_27) )
    iNsTr_79 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_78)
    // compare instruction
    iNsTr_80 := ( ($bitcast ( $int<32>) iNsTr_77) <   ($bitcast ( $int<32>) iNsTr_79 ) )
    $if iNsTr_80 $then  $place [bb_21_x264_clip3x_xexitx_xix_x1x_xi] $else $place [bb_21_bb_24] $endif 
    //begin: basic-block bb_22
    $merge bb_23_bb_22
    $endmerge
    iNsTr_59 := (iNsTr_35 - iNsTr_33)
    // compare instruction
    ispos4x_xix_x1x_xi := ( ($bitcast ( $int<32>) iNsTr_59) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    neg5x_xix_x1x_xi := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_59)
    iNsTr_60 := ( $mux ispos4x_xix_x1x_xi iNsTr_59 neg5x_xix_x1x_xi)
    // compare instruction
    iNsTr_61 := ( ($bitcast ( $int<32>) iNsTr_60) <   ($bitcast ( $int<32>) beta ) )
    $if iNsTr_61 $then  $place [bb_22_bb_21] $else $place [bb_22_bb_14] $endif 
    //begin: basic-block bb_23
    $merge deblock_edge_chroma_cx_xexitx_xi_bb_23
    $endmerge
    iNsTr_44 := (iNsTr_29 - iNsTr_31)
    // compare instruction
    ispos2x_xix_x1x_xi := ( ($bitcast ( $int<32>) iNsTr_44) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    neg3x_xix_x1x_xi := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_44)
    iNsTr_45 := ( $mux ispos2x_xix_x1x_xi iNsTr_44 neg3x_xix_x1x_xi)
    // compare instruction
    iNsTr_46 := ( ($bitcast ( $int<32>) iNsTr_45) <   ($bitcast ( $int<32>) beta ) )
    $if iNsTr_46 $then  $place [bb_23_bb_22] $else $place [bb_23_bb_14] $endif 
    //begin: basic-block bb_24
    $merge bb_21_bb_24
    $endmerge
    // compare instruction
    iNsTr_96 := ( ($bitcast ( $int<32>) iNsTr_77) >  ($bitcast ( $int<32>) iNsTr_78 ) )
    iNsTr_97 := ( $mux iNsTr_96 iNsTr_78 iNsTr_77)
    $place [bb_24_x264_clip3x_xexitx_xix_x1x_xi]
    //begin: basic-block bb_25
    $merge x264_clip3x_xexitx_xix_x1x_xi_bb_25
    $endmerge
    iNsTr_107 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_93)
    iNsTr_108 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_107) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_109 := (iNsTr_108 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_25_x264_clip_pixelx_xexit1x_xix_x1x_xi]
    //begin: basic-block bb_26
    $merge x264_clip_pixelx_xexit1x_xix_x1x_xi_bb_26
    $endmerge
    iNsTr_117 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_114)
    iNsTr_118 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_117) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_119 := (iNsTr_118 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    $place [bb_26_x264_clip_pixelx_xexitx_xix_x1x_xi]
    //begin: basic-block deblock_chroma_cx_xexit
    $merge xx_xloopexitx_xi_deblock_chroma_cx_xexit
    $endmerge
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [deblock_h_luma_intra_mbaff_c] 
$in (pix : $pointer< $uint<8> > ystride : $uint<32> alpha : $uint<32> beta : $uint<32> )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bbx_xnph
    iNsTr_0 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) alpha) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )))
    iNsTr_1 := (iNsTr_0 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    $place [bbx_xnph_bb_1]
    //begin: basic-block bb_1
    $merge bbx_xnph_bb_1 deblock_edge_luma_intra_cx_xexit_bb_1
    $phi dx_x01 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph_bb_1 ( $cast ($uint<32>) iNsTr_23) $on deblock_edge_luma_intra_cx_xexit_bb_1 
    $endmerge
    tmp2 := (ystride * dx_x01)
    tmp3 := (tmp2 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep17 := pix[tmp3]
    tmp6 := (tmp2 + ( $bitcast ($uint<32> ) _b11111111111111111111111111111100 ) )
    scevgep15 := pix[tmp6]
    tmp8 := (tmp2 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep13 := pix[tmp8]
    tmp11 := (tmp2 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    scevgep11 := pix[tmp11]
    xx_x02 := pix[tmp2]
    tmp15 := (tmp2 + ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) )
    scevgep8 := pix[tmp15]
    tmp17 := (tmp2 + ( $bitcast ($uint<32> ) _b11111111111111111111111111111110 ) )
    scevgep6 := pix[tmp17]
    tmp19 := (tmp2 + ( $bitcast ($uint<32> ) _b11111111111111111111111111111101 ) )
    scevgep := pix[tmp19]
    // load 
    iNsTr_3 := ->(scevgep) 
    iNsTr_4 := ($cast ($uint<32>) iNsTr_3)
    // load 
    iNsTr_5 := ->(scevgep6) 
    iNsTr_6 := ($cast ($uint<32>) iNsTr_5)
    // load 
    iNsTr_7 := ->(scevgep8) 
    iNsTr_8 := ($cast ($uint<32>) iNsTr_7)
    // load 
    iNsTr_9 := ->(xx_x02) 
    iNsTr_10 := ($cast ($uint<32>) iNsTr_9)
    // load 
    iNsTr_11 := ->(scevgep11) 
    iNsTr_12 := ($cast ($uint<32>) iNsTr_11)
    // load 
    iNsTr_13 := ->(scevgep13) 
    iNsTr_14 := ($cast ($uint<32>) iNsTr_13)
    iNsTr_15 := (iNsTr_8 - iNsTr_10)
    // compare instruction
    isposx_xi := ( ($bitcast ( $int<32>) iNsTr_15) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xi := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_15)
    iNsTr_16 := ( $mux isposx_xi iNsTr_15 negx_xi)
    // compare instruction
    iNsTr_17 := ( ($bitcast ( $int<32>) iNsTr_16) <   ($bitcast ( $int<32>) alpha ) )
    $if iNsTr_17 $then  $place [bb_1_bb_2] $else $place [bb_1_deblock_edge_luma_intra_cx_xexit] $endif 
    //begin: basic-block bb_2
    $merge bb_1_bb_2
    $endmerge
    iNsTr_19 := (iNsTr_6 - iNsTr_8)
    // compare instruction
    ispos1x_xi := ( ($bitcast ( $int<32>) iNsTr_19) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    neg2x_xi := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_19)
    iNsTr_20 := ( $mux ispos1x_xi iNsTr_19 neg2x_xi)
    // compare instruction
    iNsTr_21 := ( ($bitcast ( $int<32>) iNsTr_20) <   ($bitcast ( $int<32>) beta ) )
    $if iNsTr_21 $then  $place [bb_2_bb_3] $else $place [bb_2_deblock_edge_luma_intra_cx_xexit] $endif 
    //begin: basic-block bb_3
    $merge bb_2_bb_3
    $endmerge
    iNsTr_25 := (iNsTr_12 - iNsTr_10)
    // compare instruction
    ispos3x_xi := ( ($bitcast ( $int<32>) iNsTr_25) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    neg4x_xi := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_25)
    iNsTr_26 := ( $mux ispos3x_xi iNsTr_25 neg4x_xi)
    // compare instruction
    iNsTr_27 := ( ($bitcast ( $int<32>) iNsTr_26) <   ($bitcast ( $int<32>) beta ) )
    $if iNsTr_27 $then  $place [bb_3_bb_4] $else $place [bb_3_deblock_edge_luma_intra_cx_xexit] $endif 
    //begin: basic-block bb_4
    $merge bb_3_bb_4
    $endmerge
    // compare instruction
    iNsTr_30 := ( ($bitcast ( $int<32>) iNsTr_16) <   ($bitcast ( $int<32>) iNsTr_1 ) )
    $if iNsTr_30 $then  $place [bb_4_bb_5] $else $place [bb_4_bb_11] $endif 
    //begin: basic-block bb_5
    $merge bb_4_bb_5
    $endmerge
    iNsTr_32 := (iNsTr_4 - iNsTr_8)
    // compare instruction
    ispos7x_xi := ( ($bitcast ( $int<32>) iNsTr_32) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    neg8x_xi := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_32)
    iNsTr_33 := ( $mux ispos7x_xi iNsTr_32 neg8x_xi)
    // compare instruction
    iNsTr_34 := ( ($bitcast ( $int<32>) iNsTr_33) <   ($bitcast ( $int<32>) beta ) )
    $if iNsTr_34 $then  $place [bb_5_bb_6] $else $place [bb_5_bb_7] $endif 
    //begin: basic-block bb_6
    $merge bb_5_bb_6
    $endmerge
    // load 
    iNsTr_51 := ->(scevgep15) 
    iNsTr_52 := ($cast ($uint<32>) iNsTr_51)
    tmpx_xi := (iNsTr_8 + iNsTr_6)
    tmp11x_xi := (tmpx_xi + iNsTr_10)
    tmp12x_xi := (tmp11x_xi << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_53 := (iNsTr_4 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    iNsTr_54 := (iNsTr_53 + iNsTr_12)
    iNsTr_55 := (iNsTr_54 + tmp12x_xi)
    iNsTr_56 := (iNsTr_55 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    iNsTr_57 := ($cast ($uint<8>) iNsTr_56)
    ->(scevgep8) := iNsTr_57
    iNsTr_59 := (iNsTr_4 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_60 := (iNsTr_59 + iNsTr_6)
    iNsTr_61 := (iNsTr_60 + iNsTr_8)
    iNsTr_62 := (iNsTr_61 + iNsTr_10)
    iNsTr_63 := (iNsTr_62 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_64 := ($cast ($uint<8>) iNsTr_63)
    ->(scevgep6) := iNsTr_64
    iNsTr_66 := (iNsTr_52 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_67 := (iNsTr_4 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    iNsTr_68 := (iNsTr_67 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    iNsTr_69 := (iNsTr_68 + iNsTr_6)
    iNsTr_70 := (iNsTr_69 + iNsTr_8)
    iNsTr_71 := (iNsTr_70 + iNsTr_10)
    iNsTr_72 := (iNsTr_71 + iNsTr_66)
    iNsTr_73 := (iNsTr_72 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    iNsTr_74 := ($cast ($uint<8>) iNsTr_73)
    ->(scevgep) := iNsTr_74
    $place [bb_6_bb_8]
    //begin: basic-block bb_7
    $merge bb_5_bb_7
    $endmerge
    iNsTr_77 := (iNsTr_6 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_78 := (iNsTr_77 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_79 := (iNsTr_78 + iNsTr_8)
    iNsTr_80 := (iNsTr_79 + iNsTr_12)
    iNsTr_81 := (iNsTr_80 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_82 := ($cast ($uint<8>) iNsTr_81)
    ->(scevgep8) := iNsTr_82
    $place [bb_7_bb_8]
    //begin: basic-block bb_8
    $merge bb_6_bb_8 bb_7_bb_8
    $endmerge
    iNsTr_85 := (iNsTr_14 - iNsTr_10)
    // compare instruction
    ispos9x_xi := ( ($bitcast ( $int<32>) iNsTr_85) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    neg10x_xi := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_85)
    iNsTr_86 := ( $mux ispos9x_xi iNsTr_85 neg10x_xi)
    // compare instruction
    iNsTr_87 := ( ($bitcast ( $int<32>) iNsTr_86) <   ($bitcast ( $int<32>) beta ) )
    $if iNsTr_87 $then  $place [bb_8_bb_9] $else $place [bb_8_bb_10] $endif 
    //begin: basic-block bb_9
    $merge bb_8_bb_9
    $endmerge
    // load 
    iNsTr_89 := ->(scevgep17) 
    iNsTr_90 := ($cast ($uint<32>) iNsTr_89)
    tmp13x_xi := (iNsTr_10 + iNsTr_8)
    tmp14x_xi := (tmp13x_xi + iNsTr_12)
    tmp15x_xi := (tmp14x_xi << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_91 := (iNsTr_6 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    iNsTr_92 := (iNsTr_91 + iNsTr_14)
    iNsTr_93 := (iNsTr_92 + tmp15x_xi)
    iNsTr_94 := (iNsTr_93 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    iNsTr_95 := ($cast ($uint<8>) iNsTr_94)
    ->(xx_x02) := iNsTr_95
    iNsTr_97 := (iNsTr_8 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_98 := (iNsTr_97 + iNsTr_10)
    iNsTr_99 := (iNsTr_98 + iNsTr_12)
    iNsTr_100 := (iNsTr_99 + iNsTr_14)
    iNsTr_101 := (iNsTr_100 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_102 := ($cast ($uint<8>) iNsTr_101)
    ->(scevgep11) := iNsTr_102
    iNsTr_104 := (iNsTr_90 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_105 := (iNsTr_14 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    iNsTr_106 := (iNsTr_8 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    iNsTr_107 := (iNsTr_106 + iNsTr_10)
    iNsTr_108 := (iNsTr_107 + iNsTr_12)
    iNsTr_109 := (iNsTr_108 + iNsTr_105)
    iNsTr_110 := (iNsTr_109 + iNsTr_104)
    iNsTr_111 := (iNsTr_110 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    iNsTr_112 := ($cast ($uint<8>) iNsTr_111)
    ->(scevgep13) := iNsTr_112
    $place [bb_9_deblock_edge_luma_intra_cx_xexit]
    //begin: basic-block bb_10
    $merge bb_8_bb_10
    $endmerge
    iNsTr_115 := (iNsTr_12 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_116 := (iNsTr_6 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_117 := (iNsTr_116 + iNsTr_10)
    iNsTr_118 := (iNsTr_117 + iNsTr_115)
    iNsTr_119 := (iNsTr_118 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_120 := ($cast ($uint<8>) iNsTr_119)
    ->(xx_x02) := iNsTr_120
    $place [bb_10_deblock_edge_luma_intra_cx_xexit]
    //begin: basic-block bb_11
    $merge bb_4_bb_11
    $endmerge
    iNsTr_36 := (iNsTr_6 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_37 := (iNsTr_36 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_38 := (iNsTr_37 + iNsTr_8)
    iNsTr_39 := (iNsTr_38 + iNsTr_12)
    iNsTr_40 := (iNsTr_39 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_41 := ($cast ($uint<8>) iNsTr_40)
    ->(scevgep8) := iNsTr_41
    iNsTr_43 := (iNsTr_12 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_44 := (iNsTr_6 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_45 := (iNsTr_44 + iNsTr_10)
    iNsTr_46 := (iNsTr_45 + iNsTr_43)
    iNsTr_47 := (iNsTr_46 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_48 := ($cast ($uint<8>) iNsTr_47)
    ->(xx_x02) := iNsTr_48
    $place [bb_11_deblock_edge_luma_intra_cx_xexit]
    //begin: basic-block deblock_edge_luma_intra_cx_xexit
    $merge bb_1_deblock_edge_luma_intra_cx_xexit bb_10_deblock_edge_luma_intra_cx_xexit bb_11_deblock_edge_luma_intra_cx_xexit bb_2_deblock_edge_luma_intra_cx_xexit bb_3_deblock_edge_luma_intra_cx_xexit bb_9_deblock_edge_luma_intra_cx_xexit
    $endmerge
    iNsTr_23 := (dx_x01 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (iNsTr_23 == ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 )  )
    $if exitcond1 $then  $place [deblock_edge_luma_intra_cx_xexit_xx_x_crit_edge] $else $place [deblock_edge_luma_intra_cx_xexit_bb_1] $endif 
    //begin: basic-block xx_x_crit_edge
    $merge deblock_edge_luma_intra_cx_xexit_xx_x_crit_edge
    $endmerge
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [deblock_luma_intra_c] 
$in (pix : $pointer< $uint<8> > xstride : $uint<32> ystride : $uint<32> alpha : $uint<32> beta : $uint<32> )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bbx_xnph
    iNsTr_0 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) alpha) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )))
    iNsTr_1 := (iNsTr_0 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_2 := (xstride * ( $bitcast ($uint<32> ) _b11111111111111111111111111111100 ) )
    iNsTr_3 := (xstride * ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    tmp4 := (xstride * ( $bitcast ($uint<32> ) _b11111111111111111111111111111101 ) )
    tmp6 := (xstride * ( $bitcast ($uint<32> ) _b11111111111111111111111111111110 ) )
    tmp11 := (xstride * ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    tmp17 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - xstride)
    $place [bbx_xnph_bb_1]
    //begin: basic-block bb_1
    $merge bbx_xnph_bb_1 deblock_edge_luma_intra_cx_xexit_bb_1
    $phi dx_x01 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph_bb_1 ( $cast ($uint<32>) iNsTr_25) $on deblock_edge_luma_intra_cx_xexit_bb_1 
    $endmerge
    tmp2 := (ystride * dx_x01)
    tmp3 := (iNsTr_3 + tmp2)
    scevgep21 := pix[tmp3]
    tmp8 := (iNsTr_2 + tmp2)
    scevgep19 := pix[tmp8]
    tmp12 := (tmp11 + tmp2)
    scevgep17 := pix[tmp12]
    tmp14 := (xstride + tmp2)
    scevgep14 := pix[tmp14]
    xx_x02 := pix[tmp2]
    tmp19 := (tmp17 + tmp2)
    scevgep11 := pix[tmp19]
    tmp21 := (tmp6 + tmp2)
    scevgep8 := pix[tmp21]
    tmp23 := (tmp4 + tmp2)
    scevgep := pix[tmp23]
    // load 
    iNsTr_5 := ->(scevgep) 
    iNsTr_6 := ($cast ($uint<32>) iNsTr_5)
    // load 
    iNsTr_7 := ->(scevgep8) 
    iNsTr_8 := ($cast ($uint<32>) iNsTr_7)
    // load 
    iNsTr_9 := ->(scevgep11) 
    iNsTr_10 := ($cast ($uint<32>) iNsTr_9)
    // load 
    iNsTr_11 := ->(xx_x02) 
    iNsTr_12 := ($cast ($uint<32>) iNsTr_11)
    // load 
    iNsTr_13 := ->(scevgep14) 
    iNsTr_14 := ($cast ($uint<32>) iNsTr_13)
    // load 
    iNsTr_15 := ->(scevgep17) 
    iNsTr_16 := ($cast ($uint<32>) iNsTr_15)
    iNsTr_17 := (iNsTr_10 - iNsTr_12)
    // compare instruction
    isposx_xi := ( ($bitcast ( $int<32>) iNsTr_17) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xi := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_17)
    iNsTr_18 := ( $mux isposx_xi iNsTr_17 negx_xi)
    // compare instruction
    iNsTr_19 := ( ($bitcast ( $int<32>) iNsTr_18) <   ($bitcast ( $int<32>) alpha ) )
    $if iNsTr_19 $then  $place [bb_1_bb_2] $else $place [bb_1_deblock_edge_luma_intra_cx_xexit] $endif 
    //begin: basic-block bb_2
    $merge bb_1_bb_2
    $endmerge
    iNsTr_21 := (iNsTr_8 - iNsTr_10)
    // compare instruction
    ispos1x_xi := ( ($bitcast ( $int<32>) iNsTr_21) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    neg2x_xi := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_21)
    iNsTr_22 := ( $mux ispos1x_xi iNsTr_21 neg2x_xi)
    // compare instruction
    iNsTr_23 := ( ($bitcast ( $int<32>) iNsTr_22) <   ($bitcast ( $int<32>) beta ) )
    $if iNsTr_23 $then  $place [bb_2_bb_3] $else $place [bb_2_deblock_edge_luma_intra_cx_xexit] $endif 
    //begin: basic-block bb_3
    $merge bb_2_bb_3
    $endmerge
    iNsTr_27 := (iNsTr_14 - iNsTr_12)
    // compare instruction
    ispos3x_xi := ( ($bitcast ( $int<32>) iNsTr_27) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    neg4x_xi := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_27)
    iNsTr_28 := ( $mux ispos3x_xi iNsTr_27 neg4x_xi)
    // compare instruction
    iNsTr_29 := ( ($bitcast ( $int<32>) iNsTr_28) <   ($bitcast ( $int<32>) beta ) )
    $if iNsTr_29 $then  $place [bb_3_bb_4] $else $place [bb_3_deblock_edge_luma_intra_cx_xexit] $endif 
    //begin: basic-block bb_4
    $merge bb_3_bb_4
    $endmerge
    // compare instruction
    iNsTr_32 := ( ($bitcast ( $int<32>) iNsTr_18) <   ($bitcast ( $int<32>) iNsTr_1 ) )
    $if iNsTr_32 $then  $place [bb_4_bb_5] $else $place [bb_4_bb_11] $endif 
    //begin: basic-block bb_5
    $merge bb_4_bb_5
    $endmerge
    iNsTr_34 := (iNsTr_6 - iNsTr_10)
    // compare instruction
    ispos7x_xi := ( ($bitcast ( $int<32>) iNsTr_34) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    neg8x_xi := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_34)
    iNsTr_35 := ( $mux ispos7x_xi iNsTr_34 neg8x_xi)
    // compare instruction
    iNsTr_36 := ( ($bitcast ( $int<32>) iNsTr_35) <   ($bitcast ( $int<32>) beta ) )
    $if iNsTr_36 $then  $place [bb_5_bb_6] $else $place [bb_5_bb_7] $endif 
    //begin: basic-block bb_6
    $merge bb_5_bb_6
    $endmerge
    // load 
    iNsTr_53 := ->(scevgep19) 
    iNsTr_54 := ($cast ($uint<32>) iNsTr_53)
    tmpx_xi := (iNsTr_10 + iNsTr_8)
    tmp11x_xi := (tmpx_xi + iNsTr_12)
    tmp12x_xi := (tmp11x_xi << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_55 := (iNsTr_6 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    iNsTr_56 := (iNsTr_55 + iNsTr_14)
    iNsTr_57 := (iNsTr_56 + tmp12x_xi)
    iNsTr_58 := (iNsTr_57 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    iNsTr_59 := ($cast ($uint<8>) iNsTr_58)
    ->(scevgep11) := iNsTr_59
    iNsTr_61 := (iNsTr_6 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_62 := (iNsTr_61 + iNsTr_8)
    iNsTr_63 := (iNsTr_62 + iNsTr_10)
    iNsTr_64 := (iNsTr_63 + iNsTr_12)
    iNsTr_65 := (iNsTr_64 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_66 := ($cast ($uint<8>) iNsTr_65)
    ->(scevgep8) := iNsTr_66
    iNsTr_68 := (iNsTr_54 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_69 := (iNsTr_6 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    iNsTr_70 := (iNsTr_69 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    iNsTr_71 := (iNsTr_70 + iNsTr_8)
    iNsTr_72 := (iNsTr_71 + iNsTr_10)
    iNsTr_73 := (iNsTr_72 + iNsTr_12)
    iNsTr_74 := (iNsTr_73 + iNsTr_68)
    iNsTr_75 := (iNsTr_74 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    iNsTr_76 := ($cast ($uint<8>) iNsTr_75)
    ->(scevgep) := iNsTr_76
    $place [bb_6_bb_8]
    //begin: basic-block bb_7
    $merge bb_5_bb_7
    $endmerge
    iNsTr_79 := (iNsTr_8 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_80 := (iNsTr_79 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_81 := (iNsTr_80 + iNsTr_10)
    iNsTr_82 := (iNsTr_81 + iNsTr_14)
    iNsTr_83 := (iNsTr_82 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_84 := ($cast ($uint<8>) iNsTr_83)
    ->(scevgep11) := iNsTr_84
    $place [bb_7_bb_8]
    //begin: basic-block bb_8
    $merge bb_6_bb_8 bb_7_bb_8
    $endmerge
    iNsTr_87 := (iNsTr_16 - iNsTr_12)
    // compare instruction
    ispos9x_xi := ( ($bitcast ( $int<32>) iNsTr_87) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    neg10x_xi := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_87)
    iNsTr_88 := ( $mux ispos9x_xi iNsTr_87 neg10x_xi)
    // compare instruction
    iNsTr_89 := ( ($bitcast ( $int<32>) iNsTr_88) <   ($bitcast ( $int<32>) beta ) )
    $if iNsTr_89 $then  $place [bb_8_bb_9] $else $place [bb_8_bb_10] $endif 
    //begin: basic-block bb_9
    $merge bb_8_bb_9
    $endmerge
    // load 
    iNsTr_91 := ->(scevgep21) 
    iNsTr_92 := ($cast ($uint<32>) iNsTr_91)
    tmp13x_xi := (iNsTr_12 + iNsTr_10)
    tmp14x_xi := (tmp13x_xi + iNsTr_14)
    tmp15x_xi := (tmp14x_xi << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_93 := (iNsTr_8 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    iNsTr_94 := (iNsTr_93 + iNsTr_16)
    iNsTr_95 := (iNsTr_94 + tmp15x_xi)
    iNsTr_96 := (iNsTr_95 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    iNsTr_97 := ($cast ($uint<8>) iNsTr_96)
    ->(xx_x02) := iNsTr_97
    iNsTr_99 := (iNsTr_10 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_100 := (iNsTr_99 + iNsTr_12)
    iNsTr_101 := (iNsTr_100 + iNsTr_14)
    iNsTr_102 := (iNsTr_101 + iNsTr_16)
    iNsTr_103 := (iNsTr_102 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_104 := ($cast ($uint<8>) iNsTr_103)
    ->(scevgep14) := iNsTr_104
    iNsTr_106 := (iNsTr_92 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_107 := (iNsTr_16 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    iNsTr_108 := (iNsTr_10 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    iNsTr_109 := (iNsTr_108 + iNsTr_12)
    iNsTr_110 := (iNsTr_109 + iNsTr_14)
    iNsTr_111 := (iNsTr_110 + iNsTr_107)
    iNsTr_112 := (iNsTr_111 + iNsTr_106)
    iNsTr_113 := (iNsTr_112 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    iNsTr_114 := ($cast ($uint<8>) iNsTr_113)
    ->(scevgep17) := iNsTr_114
    $place [bb_9_deblock_edge_luma_intra_cx_xexit]
    //begin: basic-block bb_10
    $merge bb_8_bb_10
    $endmerge
    iNsTr_117 := (iNsTr_14 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_118 := (iNsTr_8 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_119 := (iNsTr_118 + iNsTr_12)
    iNsTr_120 := (iNsTr_119 + iNsTr_117)
    iNsTr_121 := (iNsTr_120 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_122 := ($cast ($uint<8>) iNsTr_121)
    ->(xx_x02) := iNsTr_122
    $place [bb_10_deblock_edge_luma_intra_cx_xexit]
    //begin: basic-block bb_11
    $merge bb_4_bb_11
    $endmerge
    iNsTr_38 := (iNsTr_8 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_39 := (iNsTr_38 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_40 := (iNsTr_39 + iNsTr_10)
    iNsTr_41 := (iNsTr_40 + iNsTr_14)
    iNsTr_42 := (iNsTr_41 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_43 := ($cast ($uint<8>) iNsTr_42)
    ->(scevgep11) := iNsTr_43
    iNsTr_45 := (iNsTr_14 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_46 := (iNsTr_8 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_47 := (iNsTr_46 + iNsTr_12)
    iNsTr_48 := (iNsTr_47 + iNsTr_45)
    iNsTr_49 := (iNsTr_48 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_50 := ($cast ($uint<8>) iNsTr_49)
    ->(xx_x02) := iNsTr_50
    $place [bb_11_deblock_edge_luma_intra_cx_xexit]
    //begin: basic-block deblock_edge_luma_intra_cx_xexit
    $merge bb_1_deblock_edge_luma_intra_cx_xexit bb_10_deblock_edge_luma_intra_cx_xexit bb_11_deblock_edge_luma_intra_cx_xexit bb_2_deblock_edge_luma_intra_cx_xexit bb_3_deblock_edge_luma_intra_cx_xexit bb_9_deblock_edge_luma_intra_cx_xexit
    $endmerge
    iNsTr_25 := (dx_x01 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (iNsTr_25 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond1 $then  $place [deblock_edge_luma_intra_cx_xexit_xx_x_crit_edge] $else $place [deblock_edge_luma_intra_cx_xexit_bb_1] $endif 
    //begin: basic-block xx_x_crit_edge
    $merge deblock_edge_luma_intra_cx_xexit_xx_x_crit_edge
    $endmerge
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [deblock_h_chroma_intra_mbaff_c] 
$in (pix : $pointer< $uint<8> > stride : $uint<32> alpha : $uint<32> beta : $uint<32> )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    $place [bb_0_xx_xpreheaderx_xi]
    //begin: basic-block xx_xpreheaderx_xi
    $merge bb_0_xx_xpreheaderx_xi deblock_edge_chroma_intra_cx_xexitx_xix_x1_xx_xpreheaderx_xi
    $phi dx_x03x_xi :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bb_0_xx_xpreheaderx_xi ( $cast ($uint<32>) iNsTr_37) $on deblock_edge_chroma_intra_cx_xexitx_xix_x1_xx_xpreheaderx_xi 
    $endmerge
    tmp := (stride * dx_x03x_xi)
    tmp2 := (tmp + ( $bitcast ($uint<32> ) _b11111111111111111111111111111100 ) )
    scevgep7x_xi := pix[tmp2]
    tmp3 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep12x_xi := pix[tmp3]
    tmp4 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep12x_xix_x1 := pix[tmp4]
    tmp5 := (tmp + ( $bitcast ($uint<32> ) _b11111111111111111111111111111110 ) )
    scevgep9x_xi := pix[tmp5]
    tmp6 := (tmp + ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) )
    scevgep9x_xix_x1 := pix[tmp6]
    tmp7 := (tmp + ( $bitcast ($uint<32> ) _b11111111111111111111111111111101 ) )
    scevgep7x_xix_x1 := pix[tmp7]
    xx_x02x_xi := pix[tmp]
    tmp16 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    xx_x02x_xix_x1 := pix[tmp16]
    // load 
    iNsTr_1 := ->(scevgep7x_xi) 
    iNsTr_2 := ($cast ($uint<32>) iNsTr_1)
    // load 
    iNsTr_3 := ->(scevgep9x_xi) 
    iNsTr_4 := ($cast ($uint<32>) iNsTr_3)
    // load 
    iNsTr_5 := ->(xx_x02x_xi) 
    iNsTr_6 := ($cast ($uint<32>) iNsTr_5)
    // load 
    iNsTr_7 := ->(scevgep12x_xi) 
    iNsTr_8 := ($cast ($uint<32>) iNsTr_7)
    iNsTr_9 := (iNsTr_4 - iNsTr_6)
    // compare instruction
    isposx_xix_xi := ( ($bitcast ( $int<32>) iNsTr_9) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xix_xi := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_9)
    iNsTr_10 := ( $mux isposx_xix_xi iNsTr_9 negx_xix_xi)
    // compare instruction
    iNsTr_11 := ( ($bitcast ( $int<32>) iNsTr_10) <   ($bitcast ( $int<32>) alpha ) )
    $if iNsTr_11 $then  $place [xx_xpreheaderx_xi_bb_2] $else $place [xx_xpreheaderx_xi_deblock_edge_chroma_intra_cx_xexitx_xi] $endif 
    //begin: basic-block bb_2
    $merge xx_xpreheaderx_xi_bb_2
    $endmerge
    iNsTr_13 := (iNsTr_2 - iNsTr_4)
    // compare instruction
    ispos1x_xix_xi := ( ($bitcast ( $int<32>) iNsTr_13) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    neg2x_xix_xi := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_13)
    iNsTr_14 := ( $mux ispos1x_xix_xi iNsTr_13 neg2x_xix_xi)
    // compare instruction
    iNsTr_15 := ( ($bitcast ( $int<32>) iNsTr_14) <   ($bitcast ( $int<32>) beta ) )
    $if iNsTr_15 $then  $place [bb_2_bb_3] $else $place [bb_2_deblock_edge_chroma_intra_cx_xexitx_xi] $endif 
    //begin: basic-block bb_3
    $merge bb_2_bb_3
    $endmerge
    iNsTr_29 := (iNsTr_8 - iNsTr_6)
    // compare instruction
    ispos3x_xix_xi := ( ($bitcast ( $int<32>) iNsTr_29) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    neg4x_xix_xi := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_29)
    iNsTr_30 := ( $mux ispos3x_xix_xi iNsTr_29 neg4x_xix_xi)
    // compare instruction
    iNsTr_31 := ( ($bitcast ( $int<32>) iNsTr_30) <   ($bitcast ( $int<32>) beta ) )
    $if iNsTr_31 $then  $place [bb_3_bb_4] $else $place [bb_3_deblock_edge_chroma_intra_cx_xexitx_xi] $endif 
    //begin: basic-block bb_4
    $merge bb_3_bb_4
    $endmerge
    iNsTr_39 := (iNsTr_2 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_40 := (iNsTr_4 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_41 := (iNsTr_40 + iNsTr_39)
    iNsTr_42 := (iNsTr_41 + iNsTr_8)
    iNsTr_43 := (iNsTr_42 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_44 := ($cast ($uint<8>) iNsTr_43)
    ->(scevgep9x_xi) := iNsTr_44
    iNsTr_46 := (iNsTr_8 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_47 := (iNsTr_2 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_48 := (iNsTr_47 + iNsTr_6)
    iNsTr_49 := (iNsTr_48 + iNsTr_46)
    iNsTr_50 := (iNsTr_49 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_51 := ($cast ($uint<8>) iNsTr_50)
    ->(xx_x02x_xi) := iNsTr_51
    $place [bb_4_deblock_edge_chroma_intra_cx_xexitx_xi]
    //begin: basic-block deblock_edge_chroma_intra_cx_xexitx_xi
    $merge bb_2_deblock_edge_chroma_intra_cx_xexitx_xi bb_3_deblock_edge_chroma_intra_cx_xexitx_xi bb_4_deblock_edge_chroma_intra_cx_xexitx_xi xx_xpreheaderx_xi_deblock_edge_chroma_intra_cx_xexitx_xi
    $endmerge
    // load 
    iNsTr_17 := ->(scevgep7x_xix_x1) 
    iNsTr_18 := ($cast ($uint<32>) iNsTr_17)
    // load 
    iNsTr_19 := ->(scevgep9x_xix_x1) 
    iNsTr_20 := ($cast ($uint<32>) iNsTr_19)
    // load 
    iNsTr_21 := ->(xx_x02x_xix_x1) 
    iNsTr_22 := ($cast ($uint<32>) iNsTr_21)
    // load 
    iNsTr_23 := ->(scevgep12x_xix_x1) 
    iNsTr_24 := ($cast ($uint<32>) iNsTr_23)
    iNsTr_25 := (iNsTr_20 - iNsTr_22)
    // compare instruction
    isposx_xix_xix_x1 := ( ($bitcast ( $int<32>) iNsTr_25) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xix_xix_x1 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_25)
    iNsTr_26 := ( $mux isposx_xix_xix_x1 iNsTr_25 negx_xix_xix_x1)
    // compare instruction
    iNsTr_27 := ( ($bitcast ( $int<32>) iNsTr_26) <   ($bitcast ( $int<32>) alpha ) )
    $if iNsTr_27 $then  $place [deblock_edge_chroma_intra_cx_xexitx_xi_bb_8] $else $place [deblock_edge_chroma_intra_cx_xexitx_xi_deblock_edge_chroma_intra_cx_xexitx_xix_x1] $endif 
    //begin: basic-block deblock_chroma_intra_cx_xexit
    $merge deblock_edge_chroma_intra_cx_xexitx_xix_x1_deblock_chroma_intra_cx_xexit
    $endmerge
    $place [return__]
    //begin: basic-block deblock_edge_chroma_intra_cx_xexitx_xix_x1
    $merge bb_10_deblock_edge_chroma_intra_cx_xexitx_xix_x1 bb_8_deblock_edge_chroma_intra_cx_xexitx_xix_x1 bb_9_deblock_edge_chroma_intra_cx_xexitx_xix_x1 deblock_edge_chroma_intra_cx_xexitx_xi_deblock_edge_chroma_intra_cx_xexitx_xix_x1
    $endmerge
    iNsTr_37 := (dx_x03x_xi + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (iNsTr_37 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 )  )
    $if exitcond1 $then  $place [deblock_edge_chroma_intra_cx_xexitx_xix_x1_deblock_chroma_intra_cx_xexit] $else $place [deblock_edge_chroma_intra_cx_xexitx_xix_x1_xx_xpreheaderx_xi] $endif 
    //begin: basic-block bb_8
    $merge deblock_edge_chroma_intra_cx_xexitx_xi_bb_8
    $endmerge
    iNsTr_33 := (iNsTr_18 - iNsTr_20)
    // compare instruction
    ispos1x_xix_xix_x1 := ( ($bitcast ( $int<32>) iNsTr_33) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    neg2x_xix_xix_x1 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_33)
    iNsTr_34 := ( $mux ispos1x_xix_xix_x1 iNsTr_33 neg2x_xix_xix_x1)
    // compare instruction
    iNsTr_35 := ( ($bitcast ( $int<32>) iNsTr_34) <   ($bitcast ( $int<32>) beta ) )
    $if iNsTr_35 $then  $place [bb_8_bb_9] $else $place [bb_8_deblock_edge_chroma_intra_cx_xexitx_xix_x1] $endif 
    //begin: basic-block bb_9
    $merge bb_8_bb_9
    $endmerge
    iNsTr_54 := (iNsTr_24 - iNsTr_22)
    // compare instruction
    ispos3x_xix_xix_x1 := ( ($bitcast ( $int<32>) iNsTr_54) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    neg4x_xix_xix_x1 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_54)
    iNsTr_55 := ( $mux ispos3x_xix_xix_x1 iNsTr_54 neg4x_xix_xix_x1)
    // compare instruction
    iNsTr_56 := ( ($bitcast ( $int<32>) iNsTr_55) <   ($bitcast ( $int<32>) beta ) )
    $if iNsTr_56 $then  $place [bb_9_bb_10] $else $place [bb_9_deblock_edge_chroma_intra_cx_xexitx_xix_x1] $endif 
    //begin: basic-block bb_10
    $merge bb_9_bb_10
    $endmerge
    iNsTr_59 := (iNsTr_18 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_60 := (iNsTr_20 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_61 := (iNsTr_60 + iNsTr_59)
    iNsTr_62 := (iNsTr_61 + iNsTr_24)
    iNsTr_63 := (iNsTr_62 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_64 := ($cast ($uint<8>) iNsTr_63)
    ->(scevgep9x_xix_x1) := iNsTr_64
    iNsTr_66 := (iNsTr_24 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_67 := (iNsTr_18 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_68 := (iNsTr_67 + iNsTr_22)
    iNsTr_69 := (iNsTr_68 + iNsTr_66)
    iNsTr_70 := (iNsTr_69 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_71 := ($cast ($uint<8>) iNsTr_70)
    ->(xx_x02x_xix_x1) := iNsTr_71
    $place [bb_10_deblock_edge_chroma_intra_cx_xexitx_xix_x1]
    $merge return__ $endmerge
  }
}
$module [deblock_h_chroma_intra_c] 
$in (pix : $pointer< $uint<8> > stride : $uint<32> alpha : $uint<32> beta : $uint<32> )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    $place [bb_0_xx_xpreheaderx_xi]
    //begin: basic-block xx_xpreheaderx_xi
    $merge bb_0_xx_xpreheaderx_xi deblock_edge_chroma_intra_cx_xexitx_xix_x1_xx_xpreheaderx_xi
    $phi dx_x03x_xi :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bb_0_xx_xpreheaderx_xi ( $cast ($uint<32>) iNsTr_37) $on deblock_edge_chroma_intra_cx_xexitx_xix_x1_xx_xpreheaderx_xi 
    $endmerge
    tmp := (stride * dx_x03x_xi)
    tmp2 := (tmp + ( $bitcast ($uint<32> ) _b11111111111111111111111111111100 ) )
    scevgep7x_xi := pix[tmp2]
    tmp3 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    scevgep12x_xi := pix[tmp3]
    tmp4 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    scevgep12x_xix_x1 := pix[tmp4]
    tmp5 := (tmp + ( $bitcast ($uint<32> ) _b11111111111111111111111111111110 ) )
    scevgep9x_xi := pix[tmp5]
    tmp6 := (tmp + ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) )
    scevgep9x_xix_x1 := pix[tmp6]
    tmp7 := (tmp + ( $bitcast ($uint<32> ) _b11111111111111111111111111111101 ) )
    scevgep7x_xix_x1 := pix[tmp7]
    xx_x02x_xi := pix[tmp]
    tmp16 := (tmp + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    xx_x02x_xix_x1 := pix[tmp16]
    // load 
    iNsTr_1 := ->(scevgep7x_xi) 
    iNsTr_2 := ($cast ($uint<32>) iNsTr_1)
    // load 
    iNsTr_3 := ->(scevgep9x_xi) 
    iNsTr_4 := ($cast ($uint<32>) iNsTr_3)
    // load 
    iNsTr_5 := ->(xx_x02x_xi) 
    iNsTr_6 := ($cast ($uint<32>) iNsTr_5)
    // load 
    iNsTr_7 := ->(scevgep12x_xi) 
    iNsTr_8 := ($cast ($uint<32>) iNsTr_7)
    iNsTr_9 := (iNsTr_4 - iNsTr_6)
    // compare instruction
    isposx_xix_xi := ( ($bitcast ( $int<32>) iNsTr_9) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xix_xi := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_9)
    iNsTr_10 := ( $mux isposx_xix_xi iNsTr_9 negx_xix_xi)
    // compare instruction
    iNsTr_11 := ( ($bitcast ( $int<32>) iNsTr_10) <   ($bitcast ( $int<32>) alpha ) )
    $if iNsTr_11 $then  $place [xx_xpreheaderx_xi_bb_2] $else $place [xx_xpreheaderx_xi_deblock_edge_chroma_intra_cx_xexitx_xi] $endif 
    //begin: basic-block bb_2
    $merge xx_xpreheaderx_xi_bb_2
    $endmerge
    iNsTr_13 := (iNsTr_2 - iNsTr_4)
    // compare instruction
    ispos1x_xix_xi := ( ($bitcast ( $int<32>) iNsTr_13) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    neg2x_xix_xi := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_13)
    iNsTr_14 := ( $mux ispos1x_xix_xi iNsTr_13 neg2x_xix_xi)
    // compare instruction
    iNsTr_15 := ( ($bitcast ( $int<32>) iNsTr_14) <   ($bitcast ( $int<32>) beta ) )
    $if iNsTr_15 $then  $place [bb_2_bb_3] $else $place [bb_2_deblock_edge_chroma_intra_cx_xexitx_xi] $endif 
    //begin: basic-block bb_3
    $merge bb_2_bb_3
    $endmerge
    iNsTr_29 := (iNsTr_8 - iNsTr_6)
    // compare instruction
    ispos3x_xix_xi := ( ($bitcast ( $int<32>) iNsTr_29) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    neg4x_xix_xi := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_29)
    iNsTr_30 := ( $mux ispos3x_xix_xi iNsTr_29 neg4x_xix_xi)
    // compare instruction
    iNsTr_31 := ( ($bitcast ( $int<32>) iNsTr_30) <   ($bitcast ( $int<32>) beta ) )
    $if iNsTr_31 $then  $place [bb_3_bb_4] $else $place [bb_3_deblock_edge_chroma_intra_cx_xexitx_xi] $endif 
    //begin: basic-block bb_4
    $merge bb_3_bb_4
    $endmerge
    iNsTr_39 := (iNsTr_2 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_40 := (iNsTr_4 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_41 := (iNsTr_40 + iNsTr_39)
    iNsTr_42 := (iNsTr_41 + iNsTr_8)
    iNsTr_43 := (iNsTr_42 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_44 := ($cast ($uint<8>) iNsTr_43)
    ->(scevgep9x_xi) := iNsTr_44
    iNsTr_46 := (iNsTr_8 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_47 := (iNsTr_2 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_48 := (iNsTr_47 + iNsTr_6)
    iNsTr_49 := (iNsTr_48 + iNsTr_46)
    iNsTr_50 := (iNsTr_49 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_51 := ($cast ($uint<8>) iNsTr_50)
    ->(xx_x02x_xi) := iNsTr_51
    $place [bb_4_deblock_edge_chroma_intra_cx_xexitx_xi]
    //begin: basic-block deblock_edge_chroma_intra_cx_xexitx_xi
    $merge bb_2_deblock_edge_chroma_intra_cx_xexitx_xi bb_3_deblock_edge_chroma_intra_cx_xexitx_xi bb_4_deblock_edge_chroma_intra_cx_xexitx_xi xx_xpreheaderx_xi_deblock_edge_chroma_intra_cx_xexitx_xi
    $endmerge
    // load 
    iNsTr_17 := ->(scevgep7x_xix_x1) 
    iNsTr_18 := ($cast ($uint<32>) iNsTr_17)
    // load 
    iNsTr_19 := ->(scevgep9x_xix_x1) 
    iNsTr_20 := ($cast ($uint<32>) iNsTr_19)
    // load 
    iNsTr_21 := ->(xx_x02x_xix_x1) 
    iNsTr_22 := ($cast ($uint<32>) iNsTr_21)
    // load 
    iNsTr_23 := ->(scevgep12x_xix_x1) 
    iNsTr_24 := ($cast ($uint<32>) iNsTr_23)
    iNsTr_25 := (iNsTr_20 - iNsTr_22)
    // compare instruction
    isposx_xix_xix_x1 := ( ($bitcast ( $int<32>) iNsTr_25) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xix_xix_x1 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_25)
    iNsTr_26 := ( $mux isposx_xix_xix_x1 iNsTr_25 negx_xix_xix_x1)
    // compare instruction
    iNsTr_27 := ( ($bitcast ( $int<32>) iNsTr_26) <   ($bitcast ( $int<32>) alpha ) )
    $if iNsTr_27 $then  $place [deblock_edge_chroma_intra_cx_xexitx_xi_bb_8] $else $place [deblock_edge_chroma_intra_cx_xexitx_xi_deblock_edge_chroma_intra_cx_xexitx_xix_x1] $endif 
    //begin: basic-block deblock_chroma_intra_cx_xexit
    $merge deblock_edge_chroma_intra_cx_xexitx_xix_x1_deblock_chroma_intra_cx_xexit
    $endmerge
    $place [return__]
    //begin: basic-block deblock_edge_chroma_intra_cx_xexitx_xix_x1
    $merge bb_10_deblock_edge_chroma_intra_cx_xexitx_xix_x1 bb_8_deblock_edge_chroma_intra_cx_xexitx_xix_x1 bb_9_deblock_edge_chroma_intra_cx_xexitx_xix_x1 deblock_edge_chroma_intra_cx_xexitx_xi_deblock_edge_chroma_intra_cx_xexitx_xix_x1
    $endmerge
    iNsTr_37 := (dx_x03x_xi + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (iNsTr_37 == ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 )  )
    $if exitcond1 $then  $place [deblock_edge_chroma_intra_cx_xexitx_xix_x1_deblock_chroma_intra_cx_xexit] $else $place [deblock_edge_chroma_intra_cx_xexitx_xix_x1_xx_xpreheaderx_xi] $endif 
    //begin: basic-block bb_8
    $merge deblock_edge_chroma_intra_cx_xexitx_xi_bb_8
    $endmerge
    iNsTr_33 := (iNsTr_18 - iNsTr_20)
    // compare instruction
    ispos1x_xix_xix_x1 := ( ($bitcast ( $int<32>) iNsTr_33) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    neg2x_xix_xix_x1 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_33)
    iNsTr_34 := ( $mux ispos1x_xix_xix_x1 iNsTr_33 neg2x_xix_xix_x1)
    // compare instruction
    iNsTr_35 := ( ($bitcast ( $int<32>) iNsTr_34) <   ($bitcast ( $int<32>) beta ) )
    $if iNsTr_35 $then  $place [bb_8_bb_9] $else $place [bb_8_deblock_edge_chroma_intra_cx_xexitx_xix_x1] $endif 
    //begin: basic-block bb_9
    $merge bb_8_bb_9
    $endmerge
    iNsTr_54 := (iNsTr_24 - iNsTr_22)
    // compare instruction
    ispos3x_xix_xix_x1 := ( ($bitcast ( $int<32>) iNsTr_54) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    neg4x_xix_xix_x1 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_54)
    iNsTr_55 := ( $mux ispos3x_xix_xix_x1 iNsTr_54 neg4x_xix_xix_x1)
    // compare instruction
    iNsTr_56 := ( ($bitcast ( $int<32>) iNsTr_55) <   ($bitcast ( $int<32>) beta ) )
    $if iNsTr_56 $then  $place [bb_9_bb_10] $else $place [bb_9_deblock_edge_chroma_intra_cx_xexitx_xix_x1] $endif 
    //begin: basic-block bb_10
    $merge bb_9_bb_10
    $endmerge
    iNsTr_59 := (iNsTr_18 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_60 := (iNsTr_20 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_61 := (iNsTr_60 + iNsTr_59)
    iNsTr_62 := (iNsTr_61 + iNsTr_24)
    iNsTr_63 := (iNsTr_62 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_64 := ($cast ($uint<8>) iNsTr_63)
    ->(scevgep9x_xix_x1) := iNsTr_64
    iNsTr_66 := (iNsTr_24 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_67 := (iNsTr_18 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_68 := (iNsTr_67 + iNsTr_22)
    iNsTr_69 := (iNsTr_68 + iNsTr_66)
    iNsTr_70 := (iNsTr_69 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_71 := ($cast ($uint<8>) iNsTr_70)
    ->(xx_x02x_xix_x1) := iNsTr_71
    $place [bb_10_deblock_edge_chroma_intra_cx_xexitx_xix_x1]
    $merge return__ $endmerge
  }
}
$module [deblock_strength_c] 
$in (nnz : $pointer< $uint<8> > ref : $pointer< $array [40] $of $uint<8> > mv : $pointer< $array [40] $of $array [2] $of $uint<16> > bs : $pointer< $array [8] $of $array [4] $of $uint<8> > mvy_limit : $uint<32> bframe : $uint<32> )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bbx_xnph13
    // compare instruction
    iNsTr_0 := (bframe == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $place [bbx_xnph13_bbx_xnph10]
    //begin: basic-block bbx_xnph10
    $merge bbx_xnph13_bbx_xnph10 xx_x_crit_edge11_bbx_xnph10
    $phi iNsTr_2 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph13_bbx_xnph10 ( $cast ($uint<32>) iNsTr_42) $on xx_x_crit_edge11_bbx_xnph10 
    $endmerge
    // compare instruction
    iNsTr_3 := ( ($bitcast ( $int<32>) iNsTr_2) !=   ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    iNsTr_4 := ( $mux iNsTr_3 ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) )
    iNsTr_5 := ( $mux iNsTr_3 ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 )  ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    tmp16 := (( $bitcast ($uint<32> ) _b00000000000000000000000000001100 )  - iNsTr_5)
    $place [bbx_xnph10_bbx_xnph]
    //begin: basic-block bbx_xnph
    $merge bbx_xnph10_bbx_xnph xx_x_crit_edge_bbx_xnph
    $phi edgex_x09 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph10_bbx_xnph ( $cast ($uint<32>) iNsTr_32) $on xx_x_crit_edge_bbx_xnph 
    $endmerge
    tmp38 := (iNsTr_5 * edgex_x09)
    tmp39 := (tmp38 + ( $bitcast ($uint<32> ) _b00000000000000000000000000001100 ) )
    tmp48 := (tmp16 + tmp38)
    $place [bbx_xnph_bb_3]
    //begin: basic-block bb_3
    $merge bb_15_bb_3 bbx_xnph_bb_3
    $phi ix_x07 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph_bb_3 ( $cast ($uint<32>) iNsTr_20) $on bb_15_bb_3 
    $endmerge
    scevgep34 := bs[iNsTr_2][edgex_x09][ix_x07]
    tmp37 := (iNsTr_4 * ix_x07)
    tmp40 := (tmp39 + tmp37)
    scevgep33 := mv[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][tmp40][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    scevgep32 := mv[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][tmp40][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    scevgep31 := mv[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][tmp40][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    scevgep30 := mv[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][tmp40][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    scevgep29 := ref[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][tmp40]
    scevgep28 := ref[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][tmp40]
    scevgep27 := nnz[tmp40]
    tmp49 := (tmp48 + tmp37)
    scevgep24 := ref[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][tmp49]
    scevgep23 := ref[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][tmp49]
    scevgep21 := mv[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][tmp49][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    scevgep20 := mv[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][tmp49][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    scevgep19 := mv[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][tmp49][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    scevgep := mv[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][tmp49][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    scevgep22 := nnz[tmp49]
    // load 
    iNsTr_8 := ->(scevgep27) 
    // compare instruction
    iNsTr_9 := (iNsTr_8 == ( $bitcast ($uint<8> ) _b00000000 )  )
    $if iNsTr_9 $then  $place [bb_3_bb_4] $else $place [bb_3_bb_5] $endif 
    //begin: basic-block bb_4
    $merge bb_3_bb_4
    $endmerge
    // load 
    iNsTr_11 := ->(scevgep22) 
    // compare instruction
    iNsTr_12 := (iNsTr_11 == ( $bitcast ($uint<8> ) _b00000000 )  )
    $if iNsTr_12 $then  $place [bb_4_bb_6] $else $place [bb_4_bb_5] $endif 
    //begin: basic-block bb_5
    $merge bb_3_bb_5 bb_4_bb_5
    $endmerge
    ->(scevgep34) := ( $bitcast ($uint<8> ) _b00000010 ) 
    $place [bb_5_bb_15]
    //begin: basic-block bb_6
    $merge bb_4_bb_6
    $endmerge
    // load 
    iNsTr_16 := ->(scevgep28) 
    // load 
    iNsTr_17 := ->(scevgep23) 
    // compare instruction
    iNsTr_18 := (iNsTr_16 == iNsTr_17 )
    $if iNsTr_18 $then  $place [bb_6_bb_7] $else $place [bb_6_bb_13] $endif 
    //begin: basic-block bb_7
    $merge bb_6_bb_7
    $endmerge
    // load 
    iNsTr_22 := ->(scevgep30) 
    iNsTr_23 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_22) )
    // load 
    iNsTr_24 := ->(scevgep21) 
    iNsTr_25 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_24) )
    iNsTr_26 := (iNsTr_23 - iNsTr_25)
    // compare instruction
    ispos := ( ($bitcast ( $int<32>) iNsTr_26) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    neg := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_26)
    iNsTr_27 := ( $mux ispos iNsTr_26 neg)
    // compare instruction
    iNsTr_28 := ( ($bitcast ( $int<32>) iNsTr_27) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 )  ) )
    $if iNsTr_28 $then  $place [bb_7_bb_13] $else $place [bb_7_bb_8] $endif 
    //begin: basic-block bb_8
    $merge bb_7_bb_8
    $endmerge
    // load 
    iNsTr_34 := ->(scevgep31) 
    iNsTr_35 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_34) )
    // load 
    iNsTr_36 := ->(scevgep20) 
    iNsTr_37 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_36) )
    iNsTr_38 := (iNsTr_35 - iNsTr_37)
    // compare instruction
    ispos1 := ( ($bitcast ( $int<32>) iNsTr_38) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    neg2 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_38)
    iNsTr_39 := ( $mux ispos1 iNsTr_38 neg2)
    // compare instruction
    iNsTr_40 := ( ($bitcast ( $int<32>) iNsTr_39) <   ($bitcast ( $int<32>) mvy_limit ) )
    $if iNsTr_40 $then  $place [bb_8_bb_9] $else $place [bb_8_bb_13] $endif 
    //begin: basic-block bb_9
    $merge bb_8_bb_9
    $endmerge
    $if iNsTr_0 $then  $place [bb_9_bb_14] $else $place [bb_9_bb_10] $endif 
    //begin: basic-block bb_10
    $merge bb_9_bb_10
    $endmerge
    // load 
    iNsTr_48 := ->(scevgep29) 
    // load 
    iNsTr_49 := ->(scevgep24) 
    // compare instruction
    iNsTr_50 := (iNsTr_48 == iNsTr_49 )
    $if iNsTr_50 $then  $place [bb_10_bb_11] $else $place [bb_10_bb_13] $endif 
    //begin: basic-block bb_11
    $merge bb_10_bb_11
    $endmerge
    // load 
    iNsTr_52 := ->(scevgep32) 
    iNsTr_53 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_52) )
    // load 
    iNsTr_54 := ->(scevgep19) 
    iNsTr_55 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_54) )
    iNsTr_56 := (iNsTr_53 - iNsTr_55)
    // compare instruction
    ispos3 := ( ($bitcast ( $int<32>) iNsTr_56) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    neg4 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_56)
    iNsTr_57 := ( $mux ispos3 iNsTr_56 neg4)
    // compare instruction
    iNsTr_58 := ( ($bitcast ( $int<32>) iNsTr_57) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 )  ) )
    $if iNsTr_58 $then  $place [bb_11_bb_13] $else $place [bb_11_bb_12] $endif 
    //begin: basic-block bb_12
    $merge bb_11_bb_12
    $endmerge
    // load 
    iNsTr_60 := ->(scevgep33) 
    iNsTr_61 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_60) )
    // load 
    iNsTr_62 := ->(scevgep) 
    iNsTr_63 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_62) )
    iNsTr_64 := (iNsTr_61 - iNsTr_63)
    // compare instruction
    ispos5 := ( ($bitcast ( $int<32>) iNsTr_64) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    neg6 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_64)
    iNsTr_65 := ( $mux ispos5 iNsTr_64 neg6)
    // compare instruction
    iNsTr_66 := ( ($bitcast ( $int<32>) iNsTr_65) <   ($bitcast ( $int<32>) mvy_limit ) )
    $if iNsTr_66 $then  $place [bb_12_bb_14] $else $place [bb_12_bb_13] $endif 
    //begin: basic-block bb_13
    $merge bb_10_bb_13 bb_11_bb_13 bb_12_bb_13 bb_6_bb_13 bb_7_bb_13 bb_8_bb_13
    $endmerge
    ->(scevgep34) := ( $bitcast ($uint<8> ) _b00000001 ) 
    $place [bb_13_bb_15]
    //begin: basic-block bb_14
    $merge bb_12_bb_14 bb_9_bb_14
    $endmerge
    ->(scevgep34) := ( $bitcast ($uint<8> ) _b00000000 ) 
    $place [bb_14_bb_15]
    //begin: basic-block bb_15
    $merge bb_13_bb_15 bb_14_bb_15 bb_5_bb_15
    $endmerge
    iNsTr_20 := (ix_x07 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (iNsTr_20 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 )  )
    $if exitcond1 $then  $place [bb_15_xx_x_crit_edge] $else $place [bb_15_bb_3] $endif 
    //begin: basic-block xx_x_crit_edge
    $merge bb_15_xx_x_crit_edge
    $endmerge
    iNsTr_32 := (edgex_x09 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond := (iNsTr_32 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 )  )
    $if exitcond $then  $place [xx_x_crit_edge_xx_x_crit_edge11] $else $place [xx_x_crit_edge_bbx_xnph] $endif 
    //begin: basic-block xx_x_crit_edge11
    $merge xx_x_crit_edge_xx_x_crit_edge11
    $endmerge
    iNsTr_42 := (iNsTr_2 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond58 := (iNsTr_42 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )
    $if exitcond58 $then  $place [xx_x_crit_edge11_xx_x_crit_edge14] $else $place [xx_x_crit_edge11_bbx_xnph10] $endif 
    //begin: basic-block xx_x_crit_edge14
    $merge xx_x_crit_edge11_xx_x_crit_edge14
    $endmerge
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [x264_frame_deblock_row] 
$in (h : $pointer< structx_xx264_t > mb_y : $uint<32> )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    $storage tcx_xi_alloc : $array [4] $of $uint<8>
    tcx_xi := @(tcx_xi_alloc)
    iNsTr_0 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000110010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) ]
    // load 
    iNsTr_1 := ->(iNsTr_0) 
    iNsTr_2 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000110010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000100001 ) ]
    // load 
    iNsTr_3 := ->(iNsTr_2) 
    iNsTr_4 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000110010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000100010 ) ]
    // load 
    iNsTr_5 := ->(iNsTr_4) 
    // compare instruction
    iNsTr_6 := ( ($bitcast ( $int<32>) iNsTr_3) <   ($bitcast ( $int<32>) iNsTr_5 ) )
    iNsTr_7 := ( $mux iNsTr_6 iNsTr_3 iNsTr_5)
    iNsTr_8 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000110100 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000001011 ) ]
    // load 
    iNsTr_9 := ->(iNsTr_8) 
    // compare instruction
    iNsTr_10 := ( ($bitcast ( $int<32>) iNsTr_9) <   ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    iNsTr_11 := ( $mux iNsTr_10 ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  iNsTr_9)
    iNsTr_12 := (( $bitcast ($uint<32> ) _b00000000000000000000000000001111 )  - iNsTr_7)
    iNsTr_13 := (iNsTr_12 - iNsTr_11)
    iNsTr_14 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000111011 ) ]
    // load 
    iNsTr_15 := ->(iNsTr_14) 
    iNsTr_16 := iNsTr_15[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000011110 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    // load 
    iNsTr_17 := ->(iNsTr_16) 
    iNsTr_18 := iNsTr_15[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000011110 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_19 := ->(iNsTr_18) 
    iNsTr_20 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000110011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010110 ) ]
    // load 
    iNsTr_21 := ->(iNsTr_20) 
    // compare instruction
    iNsTr_22 := (iNsTr_21 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 )  )
    iNsTr_23 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ]
    // load 
    iNsTr_24 := ->(iNsTr_23) 
    iNsTr_25 := (( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  >> iNsTr_24)
    $if iNsTr_22 $then  $place [bb_0_bb_1] $else $place [bb_0_bb_2] $endif 
    //begin: basic-block bb_1
    $merge bb_0_bb_1
    $endmerge
    iNsTr_27 := iNsTr_15[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000100100 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_28 := ->(iNsTr_27) 
    iNsTr_29 := iNsTr_15[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000100100 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_30 := ->(iNsTr_29) 
    iNsTr_31 := ($cast ($uint<32>) iNsTr_28)
    iNsTr_32 := ($cast ($uint<32>) iNsTr_30)
    iNsTr_33 := (iNsTr_31 - iNsTr_32)
    $place [bb_1_bb_2]
    //begin: basic-block bb_2
    $merge bb_0_bb_2 bb_1_bb_2
    $phi iNsTr_35 :=  ( $cast ($uint<32>) iNsTr_33) $on bb_1_bb_2 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ) $on bb_0_bb_2 
    $endmerge
    iNsTr_36 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    // load 
    iNsTr_37 := ->(iNsTr_36) 
    // compare instruction
    iNsTr_38 := ( ($bitcast ( $int<32>) iNsTr_37) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    $if iNsTr_38 $then  $place [bb_2_bbx_xnph211] $else $place [bb_2_xx_x_crit_edge] $endif 
    //begin: basic-block bbx_xnph211
    $merge bb_2_bbx_xnph211
    $endmerge
    iNsTr_40 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000110010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) ]
    iNsTr_41 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000100101 ) ]
    iNsTr_42 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) ]
    iNsTr_43 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000001100 ) ]
    iNsTr_44 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000100000 ) ]
    iNsTr_45 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010111 ) ]
    iNsTr_46 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000110011 ) ]
    iNsTr_47 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000110000 ) ]
    iNsTr_48 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000101111 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    iNsTr_49 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000101111 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    iNsTr_50 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001001001 ) ]
    iNsTr_51 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001001000 ) ]
    iNsTr_52 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000111100 ) ]
    iNsTr_53 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    iNsTr_54 := (iNsTr_17 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    iNsTr_55 := (iNsTr_25 * iNsTr_19)
    iNsTr_56 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000111110 ) ]
    iNsTr_57 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000110000 ) ]
    iNsTr_58 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000111101 ) ]
    iNsTr_59 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000111111 ) ]
    iNsTr_60 := (iNsTr_1 ^ ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_61 := tcx_xi[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    iNsTr_62 := tcx_xi[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    iNsTr_63 := tcx_xi[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    iNsTr_64 := tcx_xi[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // compare instruction
    iNsTr_65 := (iNsTr_1 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    iNsTr_66 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001001010 ) ]
    iNsTr_67 := (iNsTr_17 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_68 := (iNsTr_19 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    xx_xsum14 := (iNsTr_35 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    xx_xsum13 := (iNsTr_35 + ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) )
    xx_xsum12 := (iNsTr_35 + ( $bitcast ($uint<32> ) _b00000000000000000000000000001100 ) )
    iNsTr_69 := ($cast ($uint<32>) iNsTr_22)
    iNsTr_70 := (iNsTr_69 ^ ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_71 := (iNsTr_17 * ( $bitcast ($uint<32> ) _b00000000000000000000000000001111 ) )
    iNsTr_72 := (iNsTr_25 + ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) )
    iNsTr_73 := (iNsTr_72 * iNsTr_19)
    xx_xnot326 := (iNsTr_65 ^ ( $bitcast ($uint<1> ) _b1 ) )
    tmp2 := (iNsTr_19 * iNsTr_25)
    tmp24 := (iNsTr_19 * iNsTr_25)
    tmp46 := (iNsTr_19 * iNsTr_25)
    tmp59 := (iNsTr_17 * ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    $place [bbx_xnph211_bb_4]
    //begin: basic-block bb_4
    $merge bbx_xnph211_bb_4 deblock_edgex_xexitx_x_crit_edge_bb_4
    $phi xx_x0210 :=  ( $cast ($uint<32>) mb_y) $on bbx_xnph211_bb_4 ( $cast ($uint<32>) iNsTr_373) $on deblock_edgex_xexitx_x_crit_edge_bb_4 
    $phi mb_xx_x0209 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph211_bb_4 ( $cast ($uint<32>) iNsTr_312) $on deblock_edgex_xexitx_x_crit_edge_bb_4 
    $endmerge
    // load 
    iNsTr_76 := ->(iNsTr_40) 
    // compare instruction
    iNsTr_77 := ( ($bitcast ( $int<32>) iNsTr_76) !=   ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  ) )
    ->(iNsTr_41) := ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) 
    // load 
    iNsTr_79 := ->(iNsTr_42) 
    iNsTr_80 := (iNsTr_79 * xx_x0210)
    iNsTr_81 := (iNsTr_80 + mb_xx_x0209)
    ->(iNsTr_43) := iNsTr_81
    // load 
    iNsTr_83 := ->(iNsTr_44) 
    // compare instruction
    iNsTr_84 := (iNsTr_83 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if iNsTr_84 $then  $place [bb_4_bb_6] $else $place [bb_4_bb_5] $endif 
    //begin: basic-block bb_5
    $merge bb_4_bb_5
    $endmerge
    // load 
    iNsTr_101 := ->(iNsTr_66) 
    iNsTr_102 := iNsTr_101[iNsTr_81]
    // load 
    iNsTr_103 := ->(iNsTr_102) 
    // compare instruction
    iNsTr_104 := ( ($bitcast ( $int<8>) iNsTr_103) !=   ($bitcast ( $int<8>) ( $bitcast ($uint<8> ) _b00000000 )  ) )
    $place [bb_5_bb_6]
    //begin: basic-block bb_6
    $merge bb_4_bb_6 bb_5_bb_6
    $phi iNsTr_86 :=  ( $cast ($uint<1>) ( $bitcast ($uint<1> ) _b0 ) ) $on bb_4_bb_6 ( $cast ($uint<1>) iNsTr_104) $on bb_5_bb_6 
    $endmerge
    iNsTr_87 := ($cast ($uint<32>) iNsTr_86)
    ->(iNsTr_45) := iNsTr_87
    iNsTr_89 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  << iNsTr_87)
    iNsTr_90 := (xx_x0210 - iNsTr_89)
    ->(iNsTr_46) := iNsTr_90
    iNsTr_92 := (iNsTr_90 * iNsTr_79)
    iNsTr_93 := (iNsTr_92 + mb_xx_x0209)
    ->(iNsTr_47) := iNsTr_93
    iNsTr_95 := (iNsTr_81 + ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) )
    ->(iNsTr_48) := iNsTr_95
    ->(iNsTr_49) := iNsTr_95
    // load 
    iNsTr_98 := ->(iNsTr_0) 
    // compare instruction
    iNsTr_99 := (iNsTr_98 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if iNsTr_99 $then  $place [bb_6_bb_17] $else $place [bb_6_bb_7] $endif 
    //begin: basic-block bb_7
    $merge bb_6_bb_7
    $endmerge
    iNsTr_110 := (xx_x0210 & ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    iNsTr_111 := (iNsTr_110 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if iNsTr_111 $then  $place [bb_7_bb_11] $else $place [bb_7_bb_8] $endif 
    //begin: basic-block bb_8
    $merge bb_7_bb_8
    $endmerge
    // compare instruction
    iNsTr_121 := (mb_xx_x0209 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if iNsTr_121 $then  $place [bb_8_xx_xthreadx_xi] $else $place [bb_8_bb_9] $endif 
    //begin: basic-block bb_9
    $merge bb_8_bb_9
    $endmerge
    // load 
    iNsTr_149 := ->(iNsTr_66) 
    iNsTr_150 := iNsTr_149[iNsTr_95]
    // load 
    iNsTr_151 := ->(iNsTr_150) 
    iNsTr_152 := ($cast ($uint<32>) iNsTr_151)
    // compare instruction
    iNsTr_153 := (iNsTr_152 == iNsTr_87 )
    $if iNsTr_153 $then  $place [bb_9_bb_17] $else $place [bb_9_bb_10] $endif 
    //begin: basic-block bb_10
    $merge bb_9_bb_10
    $endmerge
    iNsTr_209 := (iNsTr_95 - iNsTr_79)
    ->(iNsTr_48) := iNsTr_209
    $place [bb_10_bb_17]
    //begin: basic-block bb_11
    $merge bb_7_bb_11
    $endmerge
    // compare instruction
    xx_xnotx_xi := ( ($bitcast ( $int<32>) iNsTr_93) <   ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    xx_xnot1x_xi := (iNsTr_86 ^ ( $bitcast ($uint<1> ) _b1 ) )
    brmergex_xi := (xx_xnotx_xi | xx_xnot1x_xi)
    $if brmergex_xi $then  $place [bb_11_bb_14] $else $place [bb_11_bb_12] $endif 
    //begin: basic-block bb_12
    $merge bb_11_bb_12
    $endmerge
    // load 
    iNsTr_144 := ->(iNsTr_66) 
    iNsTr_145 := iNsTr_144[iNsTr_93]
    // load 
    iNsTr_146 := ->(iNsTr_145) 
    // compare instruction
    iNsTr_147 := (iNsTr_146 == ( $bitcast ($uint<8> ) _b00000000 )  )
    $if iNsTr_147 $then  $place [bb_12_bb_13] $else $place [bb_12_bb_14] $endif 
    //begin: basic-block bb_13
    $merge bb_12_bb_13
    $endmerge
    iNsTr_204 := (iNsTr_93 + iNsTr_79)
    ->(iNsTr_47) := iNsTr_204
    iNsTr_206 := (iNsTr_90 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    ->(iNsTr_46) := iNsTr_206
    $place [bb_13_bb_14]
    //begin: basic-block bb_14
    $merge bb_11_bb_14 bb_12_bb_14 bb_13_bb_14
    $phi iNsTr_141 :=  ( $cast ($uint<32>) iNsTr_93) $on bb_12_bb_14 ( $cast ($uint<32>) iNsTr_204) $on bb_13_bb_14 ( $cast ($uint<32>) iNsTr_93) $on bb_11_bb_14 
    $endmerge
    // compare instruction
    iNsTr_142 := (mb_xx_x0209 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if iNsTr_142 $then  $place [bb_14_xx_xthreadx_xi] $else $place [bb_14_bb_15] $endif 
    //begin: basic-block bb_15
    $merge bb_14_bb_15
    $endmerge
    // load 
    iNsTr_198 := ->(iNsTr_66) 
    iNsTr_199 := iNsTr_198[iNsTr_95]
    // load 
    iNsTr_200 := ->(iNsTr_199) 
    iNsTr_201 := ($cast ($uint<32>) iNsTr_200)
    // compare instruction
    iNsTr_202 := (iNsTr_201 == iNsTr_87 )
    $if iNsTr_202 $then  $place [bb_15_bb_17] $else $place [bb_15_bb_16] $endif 
    //begin: basic-block bb_16
    $merge bb_15_bb_16
    $endmerge
    iNsTr_218 := (iNsTr_95 + iNsTr_79)
    ->(iNsTr_49) := iNsTr_218
    $place [bb_16_bb_17]
    //begin: basic-block bb_17
    $merge bb_10_bb_17 bb_15_bb_17 bb_16_bb_17 bb_6_bb_17 bb_9_bb_17
    $phi iNsTr_106 :=  ( $cast ($uint<32>) iNsTr_93) $on bb_9_bb_17 ( $cast ($uint<32>) iNsTr_141) $on bb_15_bb_17 ( $cast ($uint<32>) iNsTr_93) $on bb_6_bb_17 ( $cast ($uint<32>) iNsTr_93) $on bb_10_bb_17 ( $cast ($uint<32>) iNsTr_141) $on bb_16_bb_17 
    $phi iNsTr_107 :=  ( $cast ($uint<32>) iNsTr_95) $on bb_9_bb_17 ( $cast ($uint<32>) iNsTr_95) $on bb_15_bb_17 ( $cast ($uint<32>) iNsTr_95) $on bb_6_bb_17 ( $cast ($uint<32>) iNsTr_209) $on bb_10_bb_17 ( $cast ($uint<32>) iNsTr_95) $on bb_16_bb_17 
    $endmerge
    // compare instruction
    iNsTr_108 := ( ($bitcast ( $int<32>) mb_xx_x0209) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    $if iNsTr_108 $then  $place [bb_17_bb_18] $else $place [bb_17_xx_xthreadx_xi] $endif 
    //begin: basic-block bb_18
    $merge bb_17_bb_18
    $endmerge
    $if iNsTr_77 $then  $place [bb_18_bb_20] $else $place [bb_18_bb_19] $endif 
    //begin: basic-block bb_19
    $merge bb_18_bb_19
    $endmerge
    // load 
    iNsTr_125 := ->(iNsTr_50) 
    iNsTr_126 := iNsTr_125[iNsTr_107]
    // load 
    iNsTr_127 := ->(iNsTr_126) 
    iNsTr_128 := iNsTr_125[iNsTr_81]
    // load 
    iNsTr_129 := ->(iNsTr_128) 
    // compare instruction
    iNsTr_130 := (iNsTr_127 == iNsTr_129 )
    $if iNsTr_130 $then  $place [bb_19_bb_20] $else $place [bb_19_xx_xthreadx_xi] $endif 
    //begin: basic-block bb_20
    $merge bb_18_bb_20 bb_19_bb_20
    $endmerge
    ->(iNsTr_41) := ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) 
    $place [bb_20_xx_xthreadx_xi]
    //begin: basic-block xx_xthreadx_xi
    $merge bb_14_xx_xthreadx_xi bb_17_xx_xthreadx_xi bb_19_xx_xthreadx_xi bb_20_xx_xthreadx_xi bb_8_xx_xthreadx_xi
    $phi iNsTr_114 :=  ( $cast ($uint<32>) iNsTr_95) $on bb_14_xx_xthreadx_xi ( $cast ($uint<32>) iNsTr_95) $on bb_8_xx_xthreadx_xi ( $cast ($uint<32>) iNsTr_107) $on bb_20_xx_xthreadx_xi ( $cast ($uint<32>) iNsTr_107) $on bb_19_xx_xthreadx_xi ( $cast ($uint<32>) iNsTr_107) $on bb_17_xx_xthreadx_xi 
    $phi iNsTr_115 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bb_14_xx_xthreadx_xi ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bb_8_xx_xthreadx_xi ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ) $on bb_20_xx_xthreadx_xi ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bb_19_xx_xthreadx_xi ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bb_17_xx_xthreadx_xi 
    $phi iNsTr_116 :=  ( $cast ($uint<32>) iNsTr_141) $on bb_14_xx_xthreadx_xi ( $cast ($uint<32>) iNsTr_93) $on bb_8_xx_xthreadx_xi ( $cast ($uint<32>) iNsTr_106) $on bb_20_xx_xthreadx_xi ( $cast ($uint<32>) iNsTr_106) $on bb_19_xx_xthreadx_xi ( $cast ($uint<32>) iNsTr_106) $on bb_17_xx_xthreadx_xi 
    $phi iNsTr_117 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ) $on bb_14_xx_xthreadx_xi ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ) $on bb_8_xx_xthreadx_xi ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ) $on bb_20_xx_xthreadx_xi ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ) $on bb_19_xx_xthreadx_xi ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ) $on bb_17_xx_xthreadx_xi 
    $endmerge
    // compare instruction
    iNsTr_118 := ( ($bitcast ( $int<32>) iNsTr_87) <   ($bitcast ( $int<32>) xx_x0210 ) )
    $if iNsTr_118 $then  $place [xx_xthreadx_xi_bb_22] $else $place [xx_xthreadx_xi_x264_macroblock_cache_load_neighbours_deblockx_xexit] $endif 
    //begin: basic-block bb_22
    $merge xx_xthreadx_xi_bb_22
    $endmerge
    $if iNsTr_77 $then  $place [bb_22_bb_24] $else $place [bb_22_bb_23] $endif 
    //begin: basic-block bb_23
    $merge bb_22_bb_23
    $endmerge
    // load 
    iNsTr_157 := ->(iNsTr_50) 
    iNsTr_158 := iNsTr_157[iNsTr_116]
    // load 
    iNsTr_159 := ->(iNsTr_158) 
    iNsTr_160 := iNsTr_157[iNsTr_81]
    // load 
    iNsTr_161 := ->(iNsTr_160) 
    // compare instruction
    iNsTr_162 := (iNsTr_159 == iNsTr_161 )
    $if iNsTr_162 $then  $place [bb_23_bb_24] $else $place [bb_23_x264_macroblock_cache_load_neighbours_deblockx_xexit] $endif 
    //begin: basic-block bb_24
    $merge bb_22_bb_24 bb_23_bb_24
    $endmerge
    ->(iNsTr_41) := iNsTr_117
    $place [bb_24_x264_macroblock_cache_load_neighbours_deblockx_xexit]
    //begin: basic-block x264_macroblock_cache_load_neighbours_deblockx_xexit
    $merge bb_23_x264_macroblock_cache_load_neighbours_deblockx_xexit bb_24_x264_macroblock_cache_load_neighbours_deblockx_xexit xx_xthreadx_xi_x264_macroblock_cache_load_neighbours_deblockx_xexit
    $phi iNsTr_133 :=  ( $cast ($uint<32>) iNsTr_115) $on xx_xthreadx_xi_x264_macroblock_cache_load_neighbours_deblockx_xexit ( $cast ($uint<32>) iNsTr_115) $on bb_23_x264_macroblock_cache_load_neighbours_deblockx_xexit ( $cast ($uint<32>) iNsTr_117) $on bb_24_x264_macroblock_cache_load_neighbours_deblockx_xexit 
    $endmerge
    // load 
    iNsTr_134 := ->(iNsTr_51) 
    iNsTr_135 := iNsTr_134[iNsTr_81]
    // load 
    iNsTr_136 := ->(iNsTr_135) 
    // load 
    iNsTr_137 := ->(iNsTr_52) 
    iNsTr_138 := iNsTr_137[iNsTr_81]
    // load 
    iNsTr_139 := ->(iNsTr_138) 
    $switch iNsTr_139
    $when _b00000000 $then 
    $place [x264_macroblock_cache_load_neighbours_deblockx_xexit_bb_27]
    $when _b00000001 $then 
    $place [x264_macroblock_cache_load_neighbours_deblockx_xexit_bb_27]
    $when _b00000010 $then 
    $place [x264_macroblock_cache_load_neighbours_deblockx_xexit_bb_27]
    $default 
    $place [x264_macroblock_cache_load_neighbours_deblockx_xexit_bb_26]
    $endswitch
    //begin: basic-block bb_26
    $merge x264_macroblock_cache_load_neighbours_deblockx_xexit_bb_26
    $endmerge
    // compare instruction
    iNsTr_164 := (iNsTr_139 == ( $bitcast ($uint<8> ) _b00000011 )  )
    $place [bb_26_bb_27]
    //begin: basic-block bb_27
    $merge bb_26_bb_27 x264_macroblock_cache_load_neighbours_deblockx_xexit_bb_27
    $phi iNsTr_166 :=  ( $cast ($uint<1>) ( $bitcast ($uint<1> ) _b1 ) ) $on x264_macroblock_cache_load_neighbours_deblockx_xexit_bb_27 ( $cast ($uint<1>) iNsTr_164) $on bb_26_bb_27 
    $endmerge
    // load 
    iNsTr_167 := ->(iNsTr_53) 
    // compare instruction
    iNsTr_168 := ( ($bitcast ( $int<32>) iNsTr_167) !=   ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    iNsTr_169 := ( $mux iNsTr_168 iNsTr_81 mb_xx_x0209)
    iNsTr_170 := (xx_x0210 & ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_171 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001010011 ) ][iNsTr_170]
    // load 
    iNsTr_172 := ->(iNsTr_171) 
    // load 
    iNsTr_173 := ->(iNsTr_14) 
    iNsTr_174 := iNsTr_173[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000100100 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    // load 
    iNsTr_175 := ->(iNsTr_174) 
    iNsTr_176 := (iNsTr_54 * xx_x0210)
    iNsTr_177 := (mb_xx_x0209 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    xx_xsum := (iNsTr_176 + iNsTr_177)
    iNsTr_178 := iNsTr_173[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000100100 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_179 := ->(iNsTr_178) 
    iNsTr_180 := (iNsTr_55 * xx_x0210)
    xx_xsum6 := (iNsTr_180 + iNsTr_177)
    iNsTr_181 := (iNsTr_87 & xx_x0210)
    // compare instruction
    iNsTr_182 := (iNsTr_181 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    xx_xsum19 := ( $mux iNsTr_182 ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  iNsTr_71)
    xx_xsum19x_xpn := (xx_xsum - xx_xsum19)
    xx_xsum28 := ( $mux iNsTr_182 ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  iNsTr_73)
    xx_xsum28x_xpn := (xx_xsum6 - xx_xsum28)
    pixuvx_x0 := iNsTr_179[xx_xsum28x_xpn]
    pixyx_x0 := iNsTr_175[xx_xsum19x_xpn]
    iNsTr_183 := (iNsTr_17 << iNsTr_87)
    iNsTr_184 := (iNsTr_19 << iNsTr_87)
    // load 
    iNsTr_185 := ->(iNsTr_56) 
    iNsTr_186 := iNsTr_185[iNsTr_81]
    // load 
    iNsTr_187 := ->(iNsTr_186) 
    iNsTr_188 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_187) )
    // load 
    iNsTr_189 := ->(iNsTr_57) 
    iNsTr_190 := iNsTr_189[iNsTr_188]
    // load 
    iNsTr_191 := ->(iNsTr_190) 
    iNsTr_192 := ($cast ($uint<32>) iNsTr_191)
    // load 
    iNsTr_193 := ->(iNsTr_58) 
    iNsTr_194 := iNsTr_193[iNsTr_81]
    // load 
    iNsTr_195 := ->(iNsTr_194) 
    // compare instruction
    iNsTr_196 := (iNsTr_195 == ( $bitcast ($uint<8> ) _b00010000 )  )
    $if iNsTr_196 $then  $place [bb_27_bb_28] $else $place [bb_27_bb_29] $endif 
    //begin: basic-block bb_28
    $merge bb_27_bb_28
    $endmerge
    // load 
    iNsTr_212 := ->(iNsTr_59) 
    iNsTr_213 := iNsTr_212[iNsTr_81]
    // load 
    iNsTr_214 := ->(iNsTr_213) 
    // compare instruction
    xx_xnot := ( ($bitcast ( $int<16>) iNsTr_214) !=   ($bitcast ( $int<16>) ( $bitcast ($uint<16> ) _b0000000000000000 )  ) )
    brmerge := (xx_xnot | iNsTr_166)
    $if brmerge $then  $place [bb_28_bb_29] $else $place [bb_28_bb_30] $endif 
    //begin: basic-block bb_29
    $merge bb_27_bb_29 bb_28_bb_29
    $endmerge
    // compare instruction
    iNsTr_216 := ( ($bitcast ( $int<32>) iNsTr_188) <=   ($bitcast ( $int<32>) iNsTr_13 ) )
    $place [bb_29_bb_30]
    //begin: basic-block bb_30
    $merge bb_28_bb_30 bb_29_bb_30
    $phi iNsTr_221 :=  ( $cast ($uint<1>) iNsTr_216) $on bb_29_bb_30 ( $cast ($uint<1>) ( $bitcast ($uint<1> ) _b1 ) ) $on bb_28_bb_30 
    $endmerge
    iNsTr_222 := (iNsTr_133 & ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    iNsTr_223 := (iNsTr_222 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if iNsTr_223 $then  $place [bb_30_deblock_edge_intrax_xexit77] $else $place [bb_30_bb_31] $endif 
    //begin: basic-block bb_31
    $merge bb_30_bb_31
    $endmerge
    $if iNsTr_65 $then  $place [bb_31_bb_85] $else $place [bb_31_bb_32] $endif 
    //begin: basic-block bb_32
    $merge bb_31_bb_32
    $endmerge
    // load 
    iNsTr_248 := ->(iNsTr_66) 
    iNsTr_249 := iNsTr_248[iNsTr_114]
    // load 
    iNsTr_250 := ->(iNsTr_249) 
    iNsTr_251 := ($cast ($uint<32>) iNsTr_250)
    // compare instruction
    iNsTr_252 := (iNsTr_251 == iNsTr_87 )
    $if iNsTr_252 $then  $place [bb_32_bb_85] $else $place [bb_32_bb_33] $endif 
    //begin: basic-block bb_33
    $merge bb_32_bb_33
    $endmerge
    iNsTr_297 := iNsTr_185[iNsTr_114]
    // load 
    iNsTr_298 := ->(iNsTr_297) 
    iNsTr_299 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_298) )
    iNsTr_300 := (iNsTr_188 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_301 := (iNsTr_300 + iNsTr_299)
    iNsTr_302 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_301) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )))
    iNsTr_303 := iNsTr_189[iNsTr_299]
    // load 
    iNsTr_304 := ->(iNsTr_303) 
    iNsTr_305 := ($cast ($uint<32>) iNsTr_304)
    iNsTr_306 := (iNsTr_192 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_307 := (iNsTr_306 + iNsTr_305)
    iNsTr_308 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_307) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )))
    $if iNsTr_166 $then  $place [bb_33_bb_35] $else $place [bb_33_bb_34] $endif 
    //begin: basic-block bb_34
    $merge bb_33_bb_34
    $endmerge
    iNsTr_370 := iNsTr_137[iNsTr_114]
    // load 
    iNsTr_371 := ->(iNsTr_370) 
    $switch iNsTr_371
    $when _b00000000 $then 
    $place [bb_34_bb_35]
    $when _b00000001 $then 
    $place [bb_34_bb_35]
    $when _b00000010 $then 
    $place [bb_34_bb_35]
    $when _b00000011 $then 
    $place [bb_34_bb_35]
    $default 
    $place [bb_34_bb_45]
    $endswitch
    //begin: basic-block bb_35
    $merge bb_33_bb_35 bb_34_bb_35
    $endmerge
    iNsTr_357 := (iNsTr_302 + iNsTr_3)
    iNsTr_358 := (iNsTr_302 + iNsTr_5)
    iNsTr_359 := (iNsTr_357 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_360 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[iNsTr_359])
    // load 
    iNsTr_361 := ->(iNsTr_360) 
    iNsTr_362 := ($cast ($uint<32>) iNsTr_361)
    iNsTr_363 := (iNsTr_358 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_364 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[iNsTr_363])
    // load 
    iNsTr_365 := ->(iNsTr_364) 
    iNsTr_366 := ($cast ($uint<32>) iNsTr_365)
    iNsTr_367 := (iNsTr_357 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_368 := (iNsTr_367 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_368 $then  $place [bb_35_bb_36] $else $place [bb_35_deblock_edge_intrax_xexit] $endif 
    //begin: basic-block bb_36
    $merge bb_35_bb_36
    $endmerge
    iNsTr_511 := (iNsTr_358 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_512 := (iNsTr_511 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_512 $then  $place [bb_36_bb_37] $else $place [bb_36_deblock_edge_intrax_xexit] $endif 
    //begin: basic-block bb_37
    $merge bb_36_bb_37
    $endmerge
    $call deblock_h_luma_intra_mbaff_c (pixyx_x0 iNsTr_67 iNsTr_362 iNsTr_366 )  ()
    $place [bb_37_deblock_edge_intrax_xexit]
    //begin: basic-block deblock_edge_intrax_xexit
    $merge bb_35_deblock_edge_intrax_xexit bb_36_deblock_edge_intrax_xexit bb_37_deblock_edge_intrax_xexit
    $endmerge
    iNsTr_514 := (iNsTr_308 + iNsTr_3)
    iNsTr_515 := (iNsTr_308 + iNsTr_5)
    iNsTr_516 := (iNsTr_514 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_517 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[iNsTr_516])
    // load 
    iNsTr_518 := ->(iNsTr_517) 
    iNsTr_519 := ($cast ($uint<32>) iNsTr_518)
    iNsTr_520 := (iNsTr_515 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_521 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[iNsTr_520])
    // load 
    iNsTr_522 := ->(iNsTr_521) 
    iNsTr_523 := ($cast ($uint<32>) iNsTr_522)
    iNsTr_524 := (iNsTr_514 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_525 := (iNsTr_524 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_525 $then  $place [deblock_edge_intrax_xexit_bb_39] $else $place [deblock_edge_intrax_xexit_deblock_edge_intrax_xexit63] $endif 
    //begin: basic-block bb_39
    $merge deblock_edge_intrax_xexit_bb_39
    $endmerge
    iNsTr_648 := (iNsTr_515 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_649 := (iNsTr_648 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_649 $then  $place [bb_39_bb_40] $else $place [bb_39_deblock_edge_intrax_xexit63] $endif 
    //begin: basic-block bb_40
    $merge bb_39_bb_40
    $endmerge
    $call deblock_h_chroma_intra_mbaff_c (pixuvx_x0 iNsTr_68 iNsTr_519 iNsTr_523 )  ()
    $place [bb_40_deblock_edge_intrax_xexit63]
    //begin: basic-block deblock_edge_intrax_xexit63
    $merge bb_39_deblock_edge_intrax_xexit63 bb_40_deblock_edge_intrax_xexit63 deblock_edge_intrax_xexit_deblock_edge_intrax_xexit63
    $endmerge
    $if iNsTr_22 $then  $place [deblock_edge_intrax_xexit63_bb_42] $else $place [deblock_edge_intrax_xexit63_deblock_edge_intrax_xexit65] $endif 
    //begin: basic-block bb_42
    $merge deblock_edge_intrax_xexit63_bb_42
    $endmerge
    pixuvx_x0x_xsum57 := (xx_xsum28x_xpn + iNsTr_35)
    iNsTr_846 := iNsTr_179[pixuvx_x0x_xsum57]
    $if iNsTr_525 $then  $place [bb_42_bb_43] $else $place [bb_42_deblock_edge_intrax_xexit65] $endif 
    //begin: basic-block bb_43
    $merge bb_42_bb_43
    $endmerge
    iNsTr_1090 := (iNsTr_515 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_1091 := (iNsTr_1090 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_1091 $then  $place [bb_43_bb_44] $else $place [bb_43_deblock_edge_intrax_xexit65] $endif 
    //begin: basic-block bb_44
    $merge bb_43_bb_44
    $endmerge
    $call deblock_h_chroma_intra_mbaff_c (iNsTr_846 iNsTr_68 iNsTr_519 iNsTr_523 )  ()
    $place [bb_44_deblock_edge_intrax_xexit65]
    //begin: basic-block bb_45
    $merge bb_34_bb_45
    $endmerge
    iNsTr_527 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    iNsTr_528 := (iNsTr_302 + iNsTr_3)
    iNsTr_529 := (iNsTr_302 + iNsTr_5)
    iNsTr_530 := (iNsTr_528 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_531 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[iNsTr_530])
    // load 
    iNsTr_532 := ->(iNsTr_531) 
    iNsTr_533 := ($cast ($uint<32>) iNsTr_532)
    iNsTr_534 := (iNsTr_529 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_535 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[iNsTr_534])
    // load 
    iNsTr_536 := ->(iNsTr_535) 
    iNsTr_537 := ($cast ($uint<32>) iNsTr_536)
    iNsTr_538 := ($bitcast ($pointer< $uint<32> >) iNsTr_527)
    // load 
    iNsTr_539 := ->(iNsTr_538) 
    // compare instruction
    iNsTr_540 := (iNsTr_539 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if iNsTr_540 $then  $place [bb_45_deblock_edgex_xexit67] $else $place [bb_45_bb_46] $endif 
    //begin: basic-block bb_46
    $merge bb_45_bb_46
    $endmerge
    iNsTr_665 := (iNsTr_528 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_666 := (iNsTr_665 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_666 $then  $place [bb_46_bb_47] $else $place [bb_46_deblock_edgex_xexit67] $endif 
    //begin: basic-block bb_47
    $merge bb_46_bb_47
    $endmerge
    iNsTr_857 := (iNsTr_529 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_858 := (iNsTr_857 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_858 $then  $place [bb_47_bb_48] $else $place [bb_47_deblock_edgex_xexit67] $endif 
    //begin: basic-block bb_48
    $merge bb_47_bb_48
    $endmerge
    iNsTr_1118 := (iNsTr_539 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    iNsTr_1119 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_530][iNsTr_1118])
    // load 
    iNsTr_1120 := ->(iNsTr_1119) 
    ->(iNsTr_61) := iNsTr_1120
    iNsTr_1122 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_1123 := ->(iNsTr_1122) 
    iNsTr_1124 := ($cast ($uint<32>) iNsTr_1123)
    iNsTr_1125 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_530][iNsTr_1124])
    // load 
    iNsTr_1126 := ->(iNsTr_1125) 
    ->(iNsTr_62) := iNsTr_1126
    iNsTr_1128 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_1129 := ->(iNsTr_1128) 
    iNsTr_1130 := ($cast ($uint<32>) iNsTr_1129)
    iNsTr_1131 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_530][iNsTr_1130])
    // load 
    iNsTr_1132 := ->(iNsTr_1131) 
    ->(iNsTr_63) := iNsTr_1132
    iNsTr_1134 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    iNsTr_1135 := ->(iNsTr_1134) 
    iNsTr_1136 := ($cast ($uint<32>) iNsTr_1135)
    iNsTr_1137 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_530][iNsTr_1136])
    // load 
    iNsTr_1138 := ->(iNsTr_1137) 
    ->(iNsTr_64) := iNsTr_1138
    $call deblock_h_luma_mbaff_c (pixyx_x0 iNsTr_67 iNsTr_533 iNsTr_537 iNsTr_61 )  ()
    // load 
    xx_xpre256 := ->(iNsTr_538) 
    $place [bb_48_deblock_edgex_xexit67]
    //begin: basic-block deblock_edgex_xexit67
    $merge bb_45_deblock_edgex_xexit67 bb_46_deblock_edgex_xexit67 bb_47_deblock_edgex_xexit67 bb_48_deblock_edgex_xexit67
    $phi iNsTr_652 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bb_45_deblock_edgex_xexit67 ( $cast ($uint<32>) iNsTr_539) $on bb_46_deblock_edgex_xexit67 ( $cast ($uint<32>) iNsTr_539) $on bb_47_deblock_edgex_xexit67 ( $cast ($uint<32>) xx_xpre256) $on bb_48_deblock_edgex_xexit67 
    $endmerge
    iNsTr_653 := (iNsTr_308 + iNsTr_3)
    iNsTr_654 := (iNsTr_308 + iNsTr_5)
    iNsTr_655 := (iNsTr_653 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_656 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[iNsTr_655])
    // load 
    iNsTr_657 := ->(iNsTr_656) 
    iNsTr_658 := ($cast ($uint<32>) iNsTr_657)
    iNsTr_659 := (iNsTr_654 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_660 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[iNsTr_659])
    // load 
    iNsTr_661 := ->(iNsTr_660) 
    iNsTr_662 := ($cast ($uint<32>) iNsTr_661)
    // compare instruction
    iNsTr_663 := (iNsTr_652 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if iNsTr_663 $then  $place [deblock_edgex_xexit67_deblock_edgex_xexit69] $else $place [deblock_edgex_xexit67_bb_50] $endif 
    //begin: basic-block bb_50
    $merge deblock_edgex_xexit67_bb_50
    $endmerge
    iNsTr_854 := (iNsTr_653 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_855 := (iNsTr_854 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_855 $then  $place [bb_50_bb_51] $else $place [bb_50_deblock_edgex_xexit69] $endif 
    //begin: basic-block bb_51
    $merge bb_50_bb_51
    $endmerge
    iNsTr_1115 := (iNsTr_654 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_1116 := (iNsTr_1115 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_1116 $then  $place [bb_51_bb_52] $else $place [bb_51_deblock_edgex_xexit69] $endif 
    //begin: basic-block bb_52
    $merge bb_51_bb_52
    $endmerge
    iNsTr_1349 := (iNsTr_652 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    iNsTr_1350 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_655][iNsTr_1349])
    // load 
    iNsTr_1351 := ->(iNsTr_1350) 
    iNsTr_1352 := ($cast ($uint<32>) iNsTr_1351)
    iNsTr_1353 := (iNsTr_1352 + iNsTr_70)
    iNsTr_1354 := ($cast ($uint<8>) iNsTr_1353)
    ->(iNsTr_61) := iNsTr_1354
    iNsTr_1356 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_1357 := ->(iNsTr_1356) 
    iNsTr_1358 := ($cast ($uint<32>) iNsTr_1357)
    iNsTr_1359 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_655][iNsTr_1358])
    // load 
    iNsTr_1360 := ->(iNsTr_1359) 
    iNsTr_1361 := ($cast ($uint<32>) iNsTr_1360)
    iNsTr_1362 := (iNsTr_1361 + iNsTr_70)
    iNsTr_1363 := ($cast ($uint<8>) iNsTr_1362)
    ->(iNsTr_62) := iNsTr_1363
    iNsTr_1365 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_1366 := ->(iNsTr_1365) 
    iNsTr_1367 := ($cast ($uint<32>) iNsTr_1366)
    iNsTr_1368 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_655][iNsTr_1367])
    // load 
    iNsTr_1369 := ->(iNsTr_1368) 
    iNsTr_1370 := ($cast ($uint<32>) iNsTr_1369)
    iNsTr_1371 := (iNsTr_1370 + iNsTr_70)
    iNsTr_1372 := ($cast ($uint<8>) iNsTr_1371)
    ->(iNsTr_63) := iNsTr_1372
    iNsTr_1374 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    iNsTr_1375 := ->(iNsTr_1374) 
    iNsTr_1376 := ($cast ($uint<32>) iNsTr_1375)
    iNsTr_1377 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_655][iNsTr_1376])
    // load 
    iNsTr_1378 := ->(iNsTr_1377) 
    iNsTr_1379 := ($cast ($uint<32>) iNsTr_1378)
    iNsTr_1380 := (iNsTr_1379 + iNsTr_70)
    iNsTr_1381 := ($cast ($uint<8>) iNsTr_1380)
    ->(iNsTr_64) := iNsTr_1381
    $call deblock_h_chroma_mbaff_c (pixuvx_x0 iNsTr_68 iNsTr_658 iNsTr_662 iNsTr_61 )  ()
    $place [bb_52_deblock_edgex_xexit69]
    //begin: basic-block deblock_edgex_xexit69
    $merge bb_50_deblock_edgex_xexit69 bb_51_deblock_edgex_xexit69 bb_52_deblock_edgex_xexit69 deblock_edgex_xexit67_deblock_edgex_xexit69
    $endmerge
    $if iNsTr_22 $then  $place [deblock_edgex_xexit69_bb_54] $else $place [deblock_edgex_xexit69_deblock_edge_intrax_xexit65] $endif 
    //begin: basic-block bb_54
    $merge deblock_edgex_xexit69_bb_54
    $endmerge
    pixuvx_x0x_xsum39 := (xx_xsum28x_xpn + iNsTr_35)
    iNsTr_1111 := iNsTr_179[pixuvx_x0x_xsum39]
    // load 
    iNsTr_1112 := ->(iNsTr_538) 
    // compare instruction
    iNsTr_1113 := (iNsTr_1112 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if iNsTr_1113 $then  $place [bb_54_deblock_edge_intrax_xexit65] $else $place [bb_54_bb_55] $endif 
    //begin: basic-block bb_55
    $merge bb_54_bb_55
    $endmerge
    iNsTr_1346 := (iNsTr_653 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_1347 := (iNsTr_1346 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_1347 $then  $place [bb_55_bb_56] $else $place [bb_55_deblock_edge_intrax_xexit65] $endif 
    //begin: basic-block bb_56
    $merge bb_55_bb_56
    $endmerge
    iNsTr_1690 := (iNsTr_654 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_1691 := (iNsTr_1690 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_1691 $then  $place [bb_56_bb_57] $else $place [bb_56_deblock_edge_intrax_xexit65] $endif 
    //begin: basic-block bb_57
    $merge bb_56_bb_57
    $endmerge
    iNsTr_1884 := (iNsTr_1112 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    iNsTr_1885 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_655][iNsTr_1884])
    // load 
    iNsTr_1886 := ->(iNsTr_1885) 
    iNsTr_1887 := ($cast ($uint<32>) iNsTr_1886)
    iNsTr_1888 := (iNsTr_1887 + iNsTr_70)
    iNsTr_1889 := ($cast ($uint<8>) iNsTr_1888)
    ->(iNsTr_61) := iNsTr_1889
    iNsTr_1891 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_1892 := ->(iNsTr_1891) 
    iNsTr_1893 := ($cast ($uint<32>) iNsTr_1892)
    iNsTr_1894 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_655][iNsTr_1893])
    // load 
    iNsTr_1895 := ->(iNsTr_1894) 
    iNsTr_1896 := ($cast ($uint<32>) iNsTr_1895)
    iNsTr_1897 := (iNsTr_1896 + iNsTr_70)
    iNsTr_1898 := ($cast ($uint<8>) iNsTr_1897)
    ->(iNsTr_62) := iNsTr_1898
    iNsTr_1900 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_1901 := ->(iNsTr_1900) 
    iNsTr_1902 := ($cast ($uint<32>) iNsTr_1901)
    iNsTr_1903 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_655][iNsTr_1902])
    // load 
    iNsTr_1904 := ->(iNsTr_1903) 
    iNsTr_1905 := ($cast ($uint<32>) iNsTr_1904)
    iNsTr_1906 := (iNsTr_1905 + iNsTr_70)
    iNsTr_1907 := ($cast ($uint<8>) iNsTr_1906)
    ->(iNsTr_63) := iNsTr_1907
    iNsTr_1909 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    iNsTr_1910 := ->(iNsTr_1909) 
    iNsTr_1911 := ($cast ($uint<32>) iNsTr_1910)
    iNsTr_1912 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_655][iNsTr_1911])
    // load 
    iNsTr_1913 := ->(iNsTr_1912) 
    iNsTr_1914 := ($cast ($uint<32>) iNsTr_1913)
    iNsTr_1915 := (iNsTr_1914 + iNsTr_70)
    iNsTr_1916 := ($cast ($uint<8>) iNsTr_1915)
    ->(iNsTr_64) := iNsTr_1916
    $call deblock_h_chroma_mbaff_c (iNsTr_1111 iNsTr_68 iNsTr_658 iNsTr_662 iNsTr_61 )  ()
    $place [bb_57_deblock_edge_intrax_xexit65]
    //begin: basic-block deblock_edge_intrax_xexit65
    $merge bb_42_deblock_edge_intrax_xexit65 bb_43_deblock_edge_intrax_xexit65 bb_44_deblock_edge_intrax_xexit65 bb_54_deblock_edge_intrax_xexit65 bb_55_deblock_edge_intrax_xexit65 bb_56_deblock_edge_intrax_xexit65 bb_57_deblock_edge_intrax_xexit65 deblock_edge_intrax_xexit63_deblock_edge_intrax_xexit65 deblock_edgex_xexit69_deblock_edge_intrax_xexit65
    $endmerge
    // load 
    iNsTr_848 := ->(iNsTr_45) 
    // compare instruction
    iNsTr_849 := ( ($bitcast ( $int<32>) iNsTr_848) !=   ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    iNsTr_850 := ( $mux iNsTr_849 ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 )  ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) )
    // compare instruction
    iNsTr_851 := (iNsTr_848 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if iNsTr_851 $then  $place [deblock_edge_intrax_xexit65_deblock_edge_intrax_xexit65x_x_crit_edge] $else $place [deblock_edge_intrax_xexit65_bb_59] $endif 
    //begin: basic-block bb_59
    $merge deblock_edge_intrax_xexit65_bb_59
    $endmerge
    // load 
    iNsTr_1108 := ->(iNsTr_23) 
    iNsTr_1109 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000100 )  - iNsTr_1108)
    $place [bb_59_deblock_edge_intrax_xexit65x_x_crit_edge]
    //begin: basic-block deblock_edge_intrax_xexit65x_x_crit_edge
    $merge bb_59_deblock_edge_intrax_xexit65x_x_crit_edge deblock_edge_intrax_xexit65_deblock_edge_intrax_xexit65x_x_crit_edge
    $phi iNsTr_1093 :=  ( $cast ($uint<32>) iNsTr_1109) $on bb_59_deblock_edge_intrax_xexit65x_x_crit_edge ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on deblock_edge_intrax_xexit65_deblock_edge_intrax_xexit65x_x_crit_edge 
    $endmerge
    // load 
    iNsTr_1094 := ->(iNsTr_49) 
    // load 
    iNsTr_1095 := ->(iNsTr_56) 
    iNsTr_1096 := iNsTr_1095[iNsTr_1094]
    // load 
    iNsTr_1097 := ->(iNsTr_1096) 
    iNsTr_1098 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_1097) )
    iNsTr_1099 := (iNsTr_300 + iNsTr_1098)
    iNsTr_1100 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_1099) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )))
    // load 
    iNsTr_1101 := ->(iNsTr_57) 
    iNsTr_1102 := iNsTr_1101[iNsTr_1098]
    // load 
    iNsTr_1103 := ->(iNsTr_1102) 
    iNsTr_1104 := ($cast ($uint<32>) iNsTr_1103)
    iNsTr_1105 := (iNsTr_306 + iNsTr_1104)
    iNsTr_1106 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_1105) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )))
    $if iNsTr_166 $then  $place [deblock_edge_intrax_xexit65x_x_crit_edge_bb_62] $else $place [deblock_edge_intrax_xexit65x_x_crit_edge_bb_61] $endif 
    //begin: basic-block bb_61
    $merge deblock_edge_intrax_xexit65x_x_crit_edge_bb_61
    $endmerge
    // load 
    iNsTr_1342 := ->(iNsTr_52) 
    iNsTr_1343 := iNsTr_1342[iNsTr_1094]
    // load 
    iNsTr_1344 := ->(iNsTr_1343) 
    $switch iNsTr_1344
    $when _b00000000 $then 
    $place [bb_61_bb_62]
    $when _b00000001 $then 
    $place [bb_61_bb_62]
    $when _b00000010 $then 
    $place [bb_61_bb_62]
    $when _b00000011 $then 
    $place [bb_61_bb_62]
    $default 
    $place [bb_61_bb_72]
    $endswitch
    //begin: basic-block bb_62
    $merge bb_61_bb_62 deblock_edge_intrax_xexit65x_x_crit_edge_bb_62
    $endmerge
    iNsTr_1327 := (iNsTr_17 << iNsTr_850)
    pixyx_x0x_xsum27 := (iNsTr_1327 + xx_xsum19x_xpn)
    iNsTr_1328 := iNsTr_175[pixyx_x0x_xsum27]
    iNsTr_1329 := (iNsTr_1100 + iNsTr_3)
    iNsTr_1330 := (iNsTr_1100 + iNsTr_5)
    iNsTr_1331 := (iNsTr_1329 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_1332 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[iNsTr_1331])
    // load 
    iNsTr_1333 := ->(iNsTr_1332) 
    iNsTr_1334 := ($cast ($uint<32>) iNsTr_1333)
    iNsTr_1335 := (iNsTr_1330 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_1336 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[iNsTr_1335])
    // load 
    iNsTr_1337 := ->(iNsTr_1336) 
    iNsTr_1338 := ($cast ($uint<32>) iNsTr_1337)
    iNsTr_1339 := (iNsTr_1329 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_1340 := (iNsTr_1339 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_1340 $then  $place [bb_62_bb_63] $else $place [bb_62_deblock_edge_intrax_xexit73] $endif 
    //begin: basic-block bb_63
    $merge bb_62_bb_63
    $endmerge
    iNsTr_1655 := (iNsTr_1330 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_1656 := (iNsTr_1655 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_1656 $then  $place [bb_63_bb_64] $else $place [bb_63_deblock_edge_intrax_xexit73] $endif 
    //begin: basic-block bb_64
    $merge bb_63_bb_64
    $endmerge
    $call deblock_h_luma_intra_mbaff_c (iNsTr_1328 iNsTr_67 iNsTr_1334 iNsTr_1338 )  ()
    $place [bb_64_deblock_edge_intrax_xexit73]
    //begin: basic-block deblock_edge_intrax_xexit73
    $merge bb_62_deblock_edge_intrax_xexit73 bb_63_deblock_edge_intrax_xexit73 bb_64_deblock_edge_intrax_xexit73
    $endmerge
    iNsTr_1658 := (iNsTr_19 << iNsTr_1093)
    pixuvx_x0x_xsum56 := (iNsTr_1658 + xx_xsum28x_xpn)
    iNsTr_1659 := iNsTr_179[pixuvx_x0x_xsum56]
    iNsTr_1660 := (iNsTr_1106 + iNsTr_3)
    iNsTr_1661 := (iNsTr_1106 + iNsTr_5)
    iNsTr_1662 := (iNsTr_1660 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_1663 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[iNsTr_1662])
    // load 
    iNsTr_1664 := ->(iNsTr_1663) 
    iNsTr_1665 := ($cast ($uint<32>) iNsTr_1664)
    iNsTr_1666 := (iNsTr_1661 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_1667 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[iNsTr_1666])
    // load 
    iNsTr_1668 := ->(iNsTr_1667) 
    iNsTr_1669 := ($cast ($uint<32>) iNsTr_1668)
    iNsTr_1670 := (iNsTr_1660 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_1671 := (iNsTr_1670 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_1671 $then  $place [deblock_edge_intrax_xexit73_bb_66] $else $place [deblock_edge_intrax_xexit73_deblock_edge_intrax_xexit75] $endif 
    //begin: basic-block bb_66
    $merge deblock_edge_intrax_xexit73_bb_66
    $endmerge
    iNsTr_1862 := (iNsTr_1661 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_1863 := (iNsTr_1862 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_1863 $then  $place [bb_66_bb_67] $else $place [bb_66_deblock_edge_intrax_xexit75] $endif 
    //begin: basic-block bb_67
    $merge bb_66_bb_67
    $endmerge
    $call deblock_h_chroma_intra_mbaff_c (iNsTr_1659 iNsTr_68 iNsTr_1665 iNsTr_1669 )  ()
    $place [bb_67_deblock_edge_intrax_xexit75]
    //begin: basic-block deblock_edge_intrax_xexit75
    $merge bb_66_deblock_edge_intrax_xexit75 bb_67_deblock_edge_intrax_xexit75 deblock_edge_intrax_xexit73_deblock_edge_intrax_xexit75
    $endmerge
    $if iNsTr_22 $then  $place [deblock_edge_intrax_xexit75_bb_69] $else $place [deblock_edge_intrax_xexit75_deblock_edge_intrax_xexit77] $endif 
    //begin: basic-block bb_69
    $merge deblock_edge_intrax_xexit75_bb_69
    $endmerge
    xx_xsum18 := (xx_xsum28x_xpn + iNsTr_35)
    pixuvx_x0x_xsum := (xx_xsum18 + iNsTr_1658)
    iNsTr_2064 := iNsTr_179[pixuvx_x0x_xsum]
    $if iNsTr_1671 $then  $place [bb_69_bb_70] $else $place [bb_69_deblock_edge_intrax_xexit77] $endif 
    //begin: basic-block bb_70
    $merge bb_69_bb_70
    $endmerge
    iNsTr_2268 := (iNsTr_1661 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_2269 := (iNsTr_2268 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_2269 $then  $place [bb_70_bb_71] $else $place [bb_70_deblock_edge_intrax_xexit77] $endif 
    //begin: basic-block bb_71
    $merge bb_70_bb_71
    $endmerge
    $call deblock_h_chroma_intra_mbaff_c (iNsTr_2064 iNsTr_68 iNsTr_1665 iNsTr_1669 )  ()
    $place [bb_71_deblock_edge_intrax_xexit77]
    //begin: basic-block bb_72
    $merge bb_61_bb_72
    $endmerge
    iNsTr_1673 := (iNsTr_17 << iNsTr_850)
    pixyx_x0x_xsum := (iNsTr_1673 + xx_xsum19x_xpn)
    iNsTr_1674 := iNsTr_175[pixyx_x0x_xsum]
    iNsTr_1675 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    iNsTr_1676 := (iNsTr_1100 + iNsTr_3)
    iNsTr_1677 := (iNsTr_1100 + iNsTr_5)
    iNsTr_1678 := (iNsTr_1676 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_1679 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[iNsTr_1678])
    // load 
    iNsTr_1680 := ->(iNsTr_1679) 
    iNsTr_1681 := ($cast ($uint<32>) iNsTr_1680)
    iNsTr_1682 := (iNsTr_1677 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_1683 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[iNsTr_1682])
    // load 
    iNsTr_1684 := ->(iNsTr_1683) 
    iNsTr_1685 := ($cast ($uint<32>) iNsTr_1684)
    iNsTr_1686 := ($bitcast ($pointer< $uint<32> >) iNsTr_1675)
    // load 
    iNsTr_1687 := ->(iNsTr_1686) 
    // compare instruction
    iNsTr_1688 := (iNsTr_1687 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if iNsTr_1688 $then  $place [bb_72_deblock_edgex_xexit79] $else $place [bb_72_bb_73] $endif 
    //begin: basic-block bb_73
    $merge bb_72_bb_73
    $endmerge
    iNsTr_1881 := (iNsTr_1676 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_1882 := (iNsTr_1881 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_1882 $then  $place [bb_73_bb_74] $else $place [bb_73_deblock_edgex_xexit79] $endif 
    //begin: basic-block bb_74
    $merge bb_73_bb_74
    $endmerge
    iNsTr_2070 := (iNsTr_1677 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_2071 := (iNsTr_2070 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_2071 $then  $place [bb_74_bb_75] $else $place [bb_74_deblock_edgex_xexit79] $endif 
    //begin: basic-block bb_75
    $merge bb_74_bb_75
    $endmerge
    iNsTr_2278 := (iNsTr_1687 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    iNsTr_2279 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_1678][iNsTr_2278])
    // load 
    iNsTr_2280 := ->(iNsTr_2279) 
    ->(iNsTr_61) := iNsTr_2280
    iNsTr_2282 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_2283 := ->(iNsTr_2282) 
    iNsTr_2284 := ($cast ($uint<32>) iNsTr_2283)
    iNsTr_2285 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_1678][iNsTr_2284])
    // load 
    iNsTr_2286 := ->(iNsTr_2285) 
    ->(iNsTr_62) := iNsTr_2286
    iNsTr_2288 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_2289 := ->(iNsTr_2288) 
    iNsTr_2290 := ($cast ($uint<32>) iNsTr_2289)
    iNsTr_2291 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_1678][iNsTr_2290])
    // load 
    iNsTr_2292 := ->(iNsTr_2291) 
    ->(iNsTr_63) := iNsTr_2292
    iNsTr_2294 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    iNsTr_2295 := ->(iNsTr_2294) 
    iNsTr_2296 := ($cast ($uint<32>) iNsTr_2295)
    iNsTr_2297 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_1678][iNsTr_2296])
    // load 
    iNsTr_2298 := ->(iNsTr_2297) 
    ->(iNsTr_64) := iNsTr_2298
    $call deblock_h_luma_mbaff_c (iNsTr_1674 iNsTr_67 iNsTr_1681 iNsTr_1685 iNsTr_61 )  ()
    // load 
    xx_xpre255 := ->(iNsTr_1686) 
    $place [bb_75_deblock_edgex_xexit79]
    //begin: basic-block deblock_edgex_xexit79
    $merge bb_72_deblock_edgex_xexit79 bb_73_deblock_edgex_xexit79 bb_74_deblock_edgex_xexit79 bb_75_deblock_edgex_xexit79
    $phi iNsTr_1866 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bb_72_deblock_edgex_xexit79 ( $cast ($uint<32>) iNsTr_1687) $on bb_73_deblock_edgex_xexit79 ( $cast ($uint<32>) iNsTr_1687) $on bb_74_deblock_edgex_xexit79 ( $cast ($uint<32>) xx_xpre255) $on bb_75_deblock_edgex_xexit79 
    $endmerge
    iNsTr_1867 := (iNsTr_19 << iNsTr_1093)
    pixuvx_x0x_xsum40 := (iNsTr_1867 + xx_xsum28x_xpn)
    iNsTr_1868 := iNsTr_179[pixuvx_x0x_xsum40]
    iNsTr_1869 := (iNsTr_1106 + iNsTr_3)
    iNsTr_1870 := (iNsTr_1106 + iNsTr_5)
    iNsTr_1871 := (iNsTr_1869 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_1872 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[iNsTr_1871])
    // load 
    iNsTr_1873 := ->(iNsTr_1872) 
    iNsTr_1874 := ($cast ($uint<32>) iNsTr_1873)
    iNsTr_1875 := (iNsTr_1870 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_1876 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[iNsTr_1875])
    // load 
    iNsTr_1877 := ->(iNsTr_1876) 
    iNsTr_1878 := ($cast ($uint<32>) iNsTr_1877)
    // compare instruction
    iNsTr_1879 := (iNsTr_1866 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if iNsTr_1879 $then  $place [deblock_edgex_xexit79_deblock_edgex_xexit81] $else $place [deblock_edgex_xexit79_bb_77] $endif 
    //begin: basic-block bb_77
    $merge deblock_edgex_xexit79_bb_77
    $endmerge
    iNsTr_2067 := (iNsTr_1869 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_2068 := (iNsTr_2067 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_2068 $then  $place [bb_77_bb_78] $else $place [bb_77_deblock_edgex_xexit81] $endif 
    //begin: basic-block bb_78
    $merge bb_77_bb_78
    $endmerge
    iNsTr_2275 := (iNsTr_1870 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_2276 := (iNsTr_2275 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_2276 $then  $place [bb_78_bb_79] $else $place [bb_78_deblock_edgex_xexit81] $endif 
    //begin: basic-block bb_79
    $merge bb_78_bb_79
    $endmerge
    iNsTr_2458 := (iNsTr_1866 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    iNsTr_2459 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_1871][iNsTr_2458])
    // load 
    iNsTr_2460 := ->(iNsTr_2459) 
    iNsTr_2461 := ($cast ($uint<32>) iNsTr_2460)
    iNsTr_2462 := (iNsTr_2461 + iNsTr_70)
    iNsTr_2463 := ($cast ($uint<8>) iNsTr_2462)
    ->(iNsTr_61) := iNsTr_2463
    iNsTr_2465 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_2466 := ->(iNsTr_2465) 
    iNsTr_2467 := ($cast ($uint<32>) iNsTr_2466)
    iNsTr_2468 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_1871][iNsTr_2467])
    // load 
    iNsTr_2469 := ->(iNsTr_2468) 
    iNsTr_2470 := ($cast ($uint<32>) iNsTr_2469)
    iNsTr_2471 := (iNsTr_2470 + iNsTr_70)
    iNsTr_2472 := ($cast ($uint<8>) iNsTr_2471)
    ->(iNsTr_62) := iNsTr_2472
    iNsTr_2474 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_2475 := ->(iNsTr_2474) 
    iNsTr_2476 := ($cast ($uint<32>) iNsTr_2475)
    iNsTr_2477 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_1871][iNsTr_2476])
    // load 
    iNsTr_2478 := ->(iNsTr_2477) 
    iNsTr_2479 := ($cast ($uint<32>) iNsTr_2478)
    iNsTr_2480 := (iNsTr_2479 + iNsTr_70)
    iNsTr_2481 := ($cast ($uint<8>) iNsTr_2480)
    ->(iNsTr_63) := iNsTr_2481
    iNsTr_2483 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    iNsTr_2484 := ->(iNsTr_2483) 
    iNsTr_2485 := ($cast ($uint<32>) iNsTr_2484)
    iNsTr_2486 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_1871][iNsTr_2485])
    // load 
    iNsTr_2487 := ->(iNsTr_2486) 
    iNsTr_2488 := ($cast ($uint<32>) iNsTr_2487)
    iNsTr_2489 := (iNsTr_2488 + iNsTr_70)
    iNsTr_2490 := ($cast ($uint<8>) iNsTr_2489)
    ->(iNsTr_64) := iNsTr_2490
    $call deblock_h_chroma_mbaff_c (iNsTr_1868 iNsTr_68 iNsTr_1874 iNsTr_1878 iNsTr_61 )  ()
    $place [bb_79_deblock_edgex_xexit81]
    //begin: basic-block deblock_edgex_xexit81
    $merge bb_77_deblock_edgex_xexit81 bb_78_deblock_edgex_xexit81 bb_79_deblock_edgex_xexit81 deblock_edgex_xexit79_deblock_edgex_xexit81
    $endmerge
    $if iNsTr_22 $then  $place [deblock_edgex_xexit81_bb_81] $else $place [deblock_edgex_xexit81_deblock_edge_intrax_xexit77] $endif 
    //begin: basic-block bb_81
    $merge deblock_edgex_xexit81_bb_81
    $endmerge
    xx_xsum17 := (xx_xsum28x_xpn + iNsTr_35)
    pixuvx_x0x_xsum29 := (xx_xsum17 + iNsTr_1867)
    iNsTr_2271 := iNsTr_179[pixuvx_x0x_xsum29]
    // load 
    iNsTr_2272 := ->(iNsTr_1686) 
    // compare instruction
    iNsTr_2273 := (iNsTr_2272 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if iNsTr_2273 $then  $place [bb_81_deblock_edge_intrax_xexit77] $else $place [bb_81_bb_82] $endif 
    //begin: basic-block bb_82
    $merge bb_81_bb_82
    $endmerge
    iNsTr_2455 := (iNsTr_1869 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_2456 := (iNsTr_2455 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_2456 $then  $place [bb_82_bb_83] $else $place [bb_82_deblock_edge_intrax_xexit77] $endif 
    //begin: basic-block bb_83
    $merge bb_82_bb_83
    $endmerge
    iNsTr_2532 := (iNsTr_1870 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_2533 := (iNsTr_2532 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_2533 $then  $place [bb_83_bb_84] $else $place [bb_83_deblock_edge_intrax_xexit77] $endif 
    //begin: basic-block bb_84
    $merge bb_83_bb_84
    $endmerge
    iNsTr_2611 := (iNsTr_2272 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    iNsTr_2612 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_1871][iNsTr_2611])
    // load 
    iNsTr_2613 := ->(iNsTr_2612) 
    iNsTr_2614 := ($cast ($uint<32>) iNsTr_2613)
    iNsTr_2615 := (iNsTr_2614 + iNsTr_70)
    iNsTr_2616 := ($cast ($uint<8>) iNsTr_2615)
    ->(iNsTr_61) := iNsTr_2616
    iNsTr_2618 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_2619 := ->(iNsTr_2618) 
    iNsTr_2620 := ($cast ($uint<32>) iNsTr_2619)
    iNsTr_2621 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_1871][iNsTr_2620])
    // load 
    iNsTr_2622 := ->(iNsTr_2621) 
    iNsTr_2623 := ($cast ($uint<32>) iNsTr_2622)
    iNsTr_2624 := (iNsTr_2623 + iNsTr_70)
    iNsTr_2625 := ($cast ($uint<8>) iNsTr_2624)
    ->(iNsTr_62) := iNsTr_2625
    iNsTr_2627 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_2628 := ->(iNsTr_2627) 
    iNsTr_2629 := ($cast ($uint<32>) iNsTr_2628)
    iNsTr_2630 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_1871][iNsTr_2629])
    // load 
    iNsTr_2631 := ->(iNsTr_2630) 
    iNsTr_2632 := ($cast ($uint<32>) iNsTr_2631)
    iNsTr_2633 := (iNsTr_2632 + iNsTr_70)
    iNsTr_2634 := ($cast ($uint<8>) iNsTr_2633)
    ->(iNsTr_63) := iNsTr_2634
    iNsTr_2636 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    iNsTr_2637 := ->(iNsTr_2636) 
    iNsTr_2638 := ($cast ($uint<32>) iNsTr_2637)
    iNsTr_2639 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_1871][iNsTr_2638])
    // load 
    iNsTr_2640 := ->(iNsTr_2639) 
    iNsTr_2641 := ($cast ($uint<32>) iNsTr_2640)
    iNsTr_2642 := (iNsTr_2641 + iNsTr_70)
    iNsTr_2643 := ($cast ($uint<8>) iNsTr_2642)
    ->(iNsTr_64) := iNsTr_2643
    $call deblock_h_chroma_mbaff_c (iNsTr_2271 iNsTr_68 iNsTr_1874 iNsTr_1878 iNsTr_61 )  ()
    $place [bb_84_deblock_edge_intrax_xexit77]
    //begin: basic-block bb_85
    $merge bb_31_bb_85 bb_32_bb_85
    $endmerge
    iNsTr_233 := iNsTr_185[iNsTr_95]
    // load 
    iNsTr_234 := ->(iNsTr_233) 
    iNsTr_235 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_234) )
    iNsTr_236 := (iNsTr_188 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_237 := (iNsTr_236 + iNsTr_235)
    iNsTr_238 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_237) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )))
    iNsTr_239 := iNsTr_189[iNsTr_235]
    // load 
    iNsTr_240 := ->(iNsTr_239) 
    iNsTr_241 := ($cast ($uint<32>) iNsTr_240)
    iNsTr_242 := (iNsTr_192 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_243 := (iNsTr_242 + iNsTr_241)
    iNsTr_244 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_243) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )))
    iNsTr_245 := iNsTr_137[iNsTr_95]
    // load 
    iNsTr_246 := ->(iNsTr_245) 
    $switch iNsTr_246
    $when _b00000000 $then 
    $place [bb_85_bb_87]
    $when _b00000001 $then 
    $place [bb_85_bb_87]
    $when _b00000010 $then 
    $place [bb_85_bb_87]
    $default 
    $place [bb_85_bb_86]
    $endswitch
    //begin: basic-block bb_86
    $merge bb_85_bb_86
    $endmerge
    // compare instruction
    iNsTr_289 := (iNsTr_246 == ( $bitcast ($uint<8> ) _b00000011 )  )
    $place [bb_86_bb_87]
    //begin: basic-block bb_87
    $merge bb_85_bb_87 bb_86_bb_87
    $phi iNsTr_291 :=  ( $cast ($uint<1>) ( $bitcast ($uint<1> ) _b1 ) ) $on bb_85_bb_87 ( $cast ($uint<1>) iNsTr_289) $on bb_86_bb_87 
    $endmerge
    iNsTr_292 := (iNsTr_166 | iNsTr_291)
    iNsTr_293 := iNsTr_173[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001100100 ) ]
    // load 
    iNsTr_294 := ->(iNsTr_293) 
    // compare instruction
    iNsTr_295 := (iNsTr_294 == ( $bitcast ($pointer< $uint<8> > ) _b1111111111111111111111111111111111111111111111111111111111111111 )  )
    $if iNsTr_295 $then  $place [bb_87_bb_90] $else $place [bb_87_bb_88] $endif 
    //begin: basic-block bb_88
    $merge bb_87_bb_88
    $endmerge
    iNsTr_352 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    iNsTr_353 := ($bitcast ($pointer< $uint<32> >) iNsTr_352)
    // load 
    iNsTr_354 := ->(iNsTr_353) 
    // compare instruction
    iNsTr_355 := (iNsTr_354 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if iNsTr_355 $then  $place [bb_88_bb_90] $else $place [bb_88_bb_89] $endif 
    //begin: basic-block bb_89
    $merge bb_88_bb_89
    $endmerge
    iNsTr_488 := iNsTr_294[iNsTr_81]
    // load 
    iNsTr_489 := ->(iNsTr_488) 
    iNsTr_490 := (iNsTr_489 & ( $bitcast ($uint<8> ) _b00000001 ) )
    tmp15 := (( $bitcast ($uint<8> ) _b00000000 )  - iNsTr_490)
    iNsTr_491 := iNsTr_173[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000110111 ) ]
    // load 
    iNsTr_492 := ->(iNsTr_491) 
    iNsTr_493 := iNsTr_492[iNsTr_81]
    // load 
    iNsTr_494 := ->(iNsTr_493) 
    iNsTr_495 := (iNsTr_494 | tmp15)
    ->(iNsTr_493) := iNsTr_495
    // load 
    iNsTr_497 := ->(iNsTr_48) 
    // load 
    iNsTr_498 := ->(iNsTr_14) 
    iNsTr_499 := iNsTr_498[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001100100 ) ]
    // load 
    iNsTr_500 := ->(iNsTr_499) 
    iNsTr_501 := iNsTr_500[iNsTr_497]
    // load 
    iNsTr_502 := ->(iNsTr_501) 
    iNsTr_503 := (iNsTr_502 & ( $bitcast ($uint<8> ) _b00000001 ) )
    tmp16 := (( $bitcast ($uint<8> ) _b00000000 )  - iNsTr_503)
    iNsTr_504 := iNsTr_498[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000110111 ) ]
    // load 
    iNsTr_505 := ->(iNsTr_504) 
    iNsTr_506 := iNsTr_505[iNsTr_497]
    // load 
    iNsTr_507 := ->(iNsTr_506) 
    iNsTr_508 := (iNsTr_507 | tmp16)
    ->(iNsTr_506) := iNsTr_508
    $place [bb_89_bb_90]
    //begin: basic-block bb_90
    $merge bb_87_bb_90 bb_88_bb_90 bb_89_bb_90
    $endmerge
    $if iNsTr_292 $then  $place [bb_90_bb_91] $else $place [bb_90_bb_106] $endif 
    //begin: basic-block bb_91
    $merge bb_90_bb_91
    $endmerge
    iNsTr_460 := (iNsTr_238 + iNsTr_3)
    iNsTr_461 := (iNsTr_238 + iNsTr_5)
    iNsTr_462 := (iNsTr_460 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_463 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[iNsTr_462])
    // load 
    iNsTr_464 := ->(iNsTr_463) 
    iNsTr_465 := ($cast ($uint<32>) iNsTr_464)
    iNsTr_466 := (iNsTr_461 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_467 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[iNsTr_466])
    // load 
    iNsTr_468 := ->(iNsTr_467) 
    iNsTr_469 := ($cast ($uint<32>) iNsTr_468)
    iNsTr_470 := (iNsTr_460 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_471 := (iNsTr_470 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_471 $then  $place [bb_91_bb_92] $else $place [bb_91_deblock_edge_intrax_xexit85] $endif 
    //begin: basic-block bb_92
    $merge bb_91_bb_92
    $endmerge
    iNsTr_636 := (iNsTr_461 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_637 := (iNsTr_636 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_637 $then  $place [bb_92_bb_93] $else $place [bb_92_deblock_edge_intrax_xexit85] $endif 
    //begin: basic-block bb_93
    $merge bb_92_bb_93
    $endmerge
    $call deblock_luma_intra_c (pixyx_x0 ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  iNsTr_183 iNsTr_465 iNsTr_469 )  ()
    $place [bb_93_deblock_edge_intrax_xexit85]
    //begin: basic-block deblock_edge_intrax_xexit85
    $merge bb_91_deblock_edge_intrax_xexit85 bb_92_deblock_edge_intrax_xexit85 bb_93_deblock_edge_intrax_xexit85
    $endmerge
    // load 
    iNsTr_639 := ->(iNsTr_20) 
    $switch iNsTr_639
    $when _b00000000000000000000000000000011 $then 
    $place [deblock_edge_intrax_xexit85_bb_95]
    $when _b00000000000000000000000000000001 $then 
    $place [deblock_edge_intrax_xexit85_bb_98]
    $default 
    $place [deblock_edge_intrax_xexit85_deblock_edge_intrax_xexit89]
    $endswitch
    //begin: basic-block bb_95
    $merge deblock_edge_intrax_xexit85_bb_95
    $endmerge
    iNsTr_786 := (iNsTr_244 + iNsTr_3)
    iNsTr_787 := (iNsTr_244 + iNsTr_5)
    iNsTr_788 := (iNsTr_786 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_789 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[iNsTr_788])
    // load 
    iNsTr_790 := ->(iNsTr_789) 
    iNsTr_791 := ($cast ($uint<32>) iNsTr_790)
    iNsTr_792 := (iNsTr_787 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_793 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[iNsTr_792])
    // load 
    iNsTr_794 := ->(iNsTr_793) 
    iNsTr_795 := ($cast ($uint<32>) iNsTr_794)
    iNsTr_796 := (iNsTr_786 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_797 := (iNsTr_796 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_797 $then  $place [bb_95_bb_96] $else $place [bb_95_deblock_edge_intrax_xexit89threadx_xprex_xsplit] $endif 
    //begin: basic-block bb_96
    $merge bb_95_bb_96
    $endmerge
    iNsTr_1039 := (iNsTr_787 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_1040 := (iNsTr_1039 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_1040 $then  $place [bb_96_bb_97] $else $place [bb_96_deblock_edge_intrax_xexit89threadx_xprex_xsplit] $endif 
    //begin: basic-block bb_97
    $merge bb_96_bb_97
    $endmerge
    $call deblock_luma_intra_c (pixuvx_x0 ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  iNsTr_184 iNsTr_791 iNsTr_795 )  ()
    pixuvx_x0x_xsum38292 := (xx_xsum28x_xpn + iNsTr_35)
    iNsTr_1311 := iNsTr_179[pixuvx_x0x_xsum38292]
    $call deblock_luma_intra_c (iNsTr_1311 ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  iNsTr_184 iNsTr_791 iNsTr_795 )  ()
    $place [bb_97_deblock_edge_intrax_xexit89threadx_xprex_xsplit]
    //begin: basic-block bb_98
    $merge deblock_edge_intrax_xexit85_bb_98
    $endmerge
    iNsTr_799 := (iNsTr_244 + iNsTr_3)
    iNsTr_800 := (iNsTr_244 + iNsTr_5)
    iNsTr_801 := (iNsTr_799 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_802 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[iNsTr_801])
    // load 
    iNsTr_803 := ->(iNsTr_802) 
    iNsTr_804 := ($cast ($uint<32>) iNsTr_803)
    iNsTr_805 := (iNsTr_800 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_806 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[iNsTr_805])
    // load 
    iNsTr_807 := ->(iNsTr_806) 
    iNsTr_808 := ($cast ($uint<32>) iNsTr_807)
    iNsTr_809 := (iNsTr_799 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_810 := (iNsTr_809 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_810 $then  $place [bb_98_bb_99] $else $place [bb_98_deblock_edge_intrax_xexit89threadx_xprex_xsplit] $endif 
    //begin: basic-block bb_99
    $merge bb_98_bb_99
    $endmerge
    iNsTr_1043 := (iNsTr_800 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_1044 := (iNsTr_1043 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_1044 $then  $place [bb_99_bb_100] $else $place [bb_99_deblock_edge_intrax_xexit89threadx_xprex_xsplit] $endif 
    //begin: basic-block bb_100
    $merge bb_99_bb_100
    $endmerge
    $call deblock_h_chroma_intra_c (pixuvx_x0 iNsTr_184 iNsTr_804 iNsTr_808 )  ()
    $place [bb_100_deblock_edge_intrax_xexit89threadx_xprex_xsplit]
    //begin: basic-block deblock_edge_intrax_xexit89threadx_xprex_xsplit
    $merge bb_100_deblock_edge_intrax_xexit89threadx_xprex_xsplit bb_95_deblock_edge_intrax_xexit89threadx_xprex_xsplit bb_96_deblock_edge_intrax_xexit89threadx_xprex_xsplit bb_97_deblock_edge_intrax_xexit89threadx_xprex_xsplit bb_98_deblock_edge_intrax_xexit89threadx_xprex_xsplit bb_99_deblock_edge_intrax_xexit89threadx_xprex_xsplit
    $endmerge
    // load 
    xx_xpr1 := ->(iNsTr_20) 
    $place [deblock_edge_intrax_xexit89threadx_xprex_xsplit_deblock_edge_intrax_xexit89]
    //begin: basic-block deblock_edge_intrax_xexit89
    $merge deblock_edge_intrax_xexit85_deblock_edge_intrax_xexit89 deblock_edge_intrax_xexit89threadx_xprex_xsplit_deblock_edge_intrax_xexit89
    $phi iNsTr_783 :=  ( $cast ($uint<32>) xx_xpr1) $on deblock_edge_intrax_xexit89threadx_xprex_xsplit_deblock_edge_intrax_xexit89 ( $cast ($uint<32>) iNsTr_639) $on deblock_edge_intrax_xexit85_deblock_edge_intrax_xexit89 
    $endmerge
    // compare instruction
    iNsTr_784 := (iNsTr_783 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )
    $if iNsTr_784 $then  $place [deblock_edge_intrax_xexit89_bb_103] $else $place [deblock_edge_intrax_xexit89_deblock_edge_intrax_xexit77] $endif 
    //begin: basic-block bb_103
    $merge deblock_edge_intrax_xexit89_bb_103
    $endmerge
    iNsTr_1026 := (iNsTr_244 + iNsTr_3)
    iNsTr_1027 := (iNsTr_244 + iNsTr_5)
    iNsTr_1028 := (iNsTr_1026 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_1029 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[iNsTr_1028])
    // load 
    iNsTr_1030 := ->(iNsTr_1029) 
    iNsTr_1031 := ($cast ($uint<32>) iNsTr_1030)
    iNsTr_1032 := (iNsTr_1027 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_1033 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[iNsTr_1032])
    // load 
    iNsTr_1034 := ->(iNsTr_1033) 
    iNsTr_1035 := ($cast ($uint<32>) iNsTr_1034)
    iNsTr_1036 := (iNsTr_1026 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_1037 := (iNsTr_1036 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_1037 $then  $place [bb_103_bb_104] $else $place [bb_103_deblock_edge_intrax_xexit77] $endif 
    //begin: basic-block bb_104
    $merge bb_103_bb_104
    $endmerge
    iNsTr_1307 := (iNsTr_1027 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_1308 := (iNsTr_1307 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_1308 $then  $place [bb_104_bb_105] $else $place [bb_104_deblock_edge_intrax_xexit77] $endif 
    //begin: basic-block bb_105
    $merge bb_104_bb_105
    $endmerge
    $call deblock_h_chroma_intra_c (pixuvx_x0 iNsTr_184 iNsTr_1031 iNsTr_1035 )  ()
    $place [bb_105_deblock_edge_intrax_xexit77]
    //begin: basic-block bb_106
    $merge bb_90_bb_106
    $endmerge
    iNsTr_473 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    iNsTr_474 := (iNsTr_238 + iNsTr_3)
    iNsTr_475 := (iNsTr_238 + iNsTr_5)
    iNsTr_476 := (iNsTr_474 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_477 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[iNsTr_476])
    // load 
    iNsTr_478 := ->(iNsTr_477) 
    iNsTr_479 := ($cast ($uint<32>) iNsTr_478)
    iNsTr_480 := (iNsTr_475 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_481 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[iNsTr_480])
    // load 
    iNsTr_482 := ->(iNsTr_481) 
    iNsTr_483 := ($cast ($uint<32>) iNsTr_482)
    iNsTr_484 := ($bitcast ($pointer< $uint<32> >) iNsTr_473)
    // load 
    iNsTr_485 := ->(iNsTr_484) 
    // compare instruction
    iNsTr_486 := (iNsTr_485 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if iNsTr_486 $then  $place [bb_106_deblock_edgex_xexit95] $else $place [bb_106_bb_107] $endif 
    //begin: basic-block bb_107
    $merge bb_106_bb_107
    $endmerge
    iNsTr_643 := (iNsTr_474 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_644 := (iNsTr_643 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_644 $then  $place [bb_107_bb_108] $else $place [bb_107_deblock_edgex_xexit95] $endif 
    //begin: basic-block bb_108
    $merge bb_107_bb_108
    $endmerge
    iNsTr_841 := (iNsTr_475 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_842 := (iNsTr_841 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_842 $then  $place [bb_108_bb_109] $else $place [bb_108_deblock_edgex_xexit95] $endif 
    //begin: basic-block bb_109
    $merge bb_108_bb_109
    $endmerge
    iNsTr_1066 := (iNsTr_485 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    iNsTr_1067 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_476][iNsTr_1066])
    // load 
    iNsTr_1068 := ->(iNsTr_1067) 
    ->(iNsTr_61) := iNsTr_1068
    iNsTr_1070 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_1071 := ->(iNsTr_1070) 
    iNsTr_1072 := ($cast ($uint<32>) iNsTr_1071)
    iNsTr_1073 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_476][iNsTr_1072])
    // load 
    iNsTr_1074 := ->(iNsTr_1073) 
    ->(iNsTr_62) := iNsTr_1074
    iNsTr_1076 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_1077 := ->(iNsTr_1076) 
    iNsTr_1078 := ($cast ($uint<32>) iNsTr_1077)
    iNsTr_1079 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_476][iNsTr_1078])
    // load 
    iNsTr_1080 := ->(iNsTr_1079) 
    ->(iNsTr_63) := iNsTr_1080
    iNsTr_1082 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    iNsTr_1083 := ->(iNsTr_1082) 
    iNsTr_1084 := ($cast ($uint<32>) iNsTr_1083)
    iNsTr_1085 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_476][iNsTr_1084])
    // load 
    iNsTr_1086 := ->(iNsTr_1085) 
    ->(iNsTr_64) := iNsTr_1086
    $call deblock_luma_c (pixyx_x0 ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  iNsTr_183 iNsTr_479 iNsTr_483 iNsTr_61 )  ()
    $place [bb_109_deblock_edgex_xexit95]
    //begin: basic-block deblock_edgex_xexit95
    $merge bb_106_deblock_edgex_xexit95 bb_107_deblock_edgex_xexit95 bb_108_deblock_edgex_xexit95 bb_109_deblock_edgex_xexit95
    $endmerge
    // load 
    iNsTr_641 := ->(iNsTr_20) 
    $switch iNsTr_641
    $when _b00000000000000000000000000000011 $then 
    $place [deblock_edgex_xexit95_bb_111]
    $when _b00000000000000000000000000000001 $then 
    $place [deblock_edgex_xexit95_bb_117]
    $default 
    $place [deblock_edgex_xexit95_deblock_edgex_xexit99]
    $endswitch
    //begin: basic-block bb_111
    $merge deblock_edgex_xexit95_bb_111
    $endmerge
    iNsTr_815 := (iNsTr_244 + iNsTr_3)
    iNsTr_816 := (iNsTr_244 + iNsTr_5)
    iNsTr_817 := (iNsTr_815 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_818 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[iNsTr_817])
    // load 
    iNsTr_819 := ->(iNsTr_818) 
    iNsTr_820 := ($cast ($uint<32>) iNsTr_819)
    iNsTr_821 := (iNsTr_816 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_822 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[iNsTr_821])
    // load 
    iNsTr_823 := ->(iNsTr_822) 
    iNsTr_824 := ($cast ($uint<32>) iNsTr_823)
    // load 
    iNsTr_825 := ->(iNsTr_484) 
    // compare instruction
    iNsTr_826 := (iNsTr_825 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if iNsTr_826 $then  $place [bb_111_deblock_edgex_xexit99threadx_xprex_xsplit] $else $place [bb_111_bb_112] $endif 
    //begin: basic-block bb_112
    $merge bb_111_bb_112
    $endmerge
    iNsTr_1060 := (iNsTr_815 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_1061 := (iNsTr_1060 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_1061 $then  $place [bb_112_bb_113] $else $place [bb_112_deblock_edgex_xexit99threadx_xprex_xsplit] $endif 
    //begin: basic-block bb_113
    $merge bb_112_bb_113
    $endmerge
    iNsTr_1319 := (iNsTr_816 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_1320 := (iNsTr_1319 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_1320 $then  $place [bb_113_deblock_edgex_xexit97] $else $place [bb_113_bb_115] $endif 
    //begin: basic-block deblock_edgex_xexit97
    $merge bb_113_deblock_edgex_xexit97
    $endmerge
    iNsTr_1599 := (iNsTr_825 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    iNsTr_1600 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_817][iNsTr_1599])
    // load 
    iNsTr_1601 := ->(iNsTr_1600) 
    ->(iNsTr_61) := iNsTr_1601
    iNsTr_1603 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_1604 := ->(iNsTr_1603) 
    iNsTr_1605 := ($cast ($uint<32>) iNsTr_1604)
    iNsTr_1606 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_817][iNsTr_1605])
    // load 
    iNsTr_1607 := ->(iNsTr_1606) 
    ->(iNsTr_62) := iNsTr_1607
    iNsTr_1609 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_1610 := ->(iNsTr_1609) 
    iNsTr_1611 := ($cast ($uint<32>) iNsTr_1610)
    iNsTr_1612 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_817][iNsTr_1611])
    // load 
    iNsTr_1613 := ->(iNsTr_1612) 
    ->(iNsTr_63) := iNsTr_1613
    iNsTr_1615 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    iNsTr_1616 := ->(iNsTr_1615) 
    iNsTr_1617 := ($cast ($uint<32>) iNsTr_1616)
    iNsTr_1618 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_817][iNsTr_1617])
    // load 
    iNsTr_1619 := ->(iNsTr_1618) 
    ->(iNsTr_64) := iNsTr_1619
    $call deblock_luma_c (pixuvx_x0 ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  iNsTr_184 iNsTr_820 iNsTr_824 iNsTr_61 )  ()
    // load 
    xx_xpre254 := ->(iNsTr_484) 
    // compare instruction
    iNsTr_1622 := (xx_xpre254 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if iNsTr_1622 $then  $place [deblock_edgex_xexit97_deblock_edgex_xexit99threadx_xprex_xsplit] $else $place [deblock_edgex_xexit97_bb_115] $endif 
    //begin: basic-block bb_115
    $merge bb_113_bb_115 deblock_edgex_xexit97_bb_115
    $phi xx_xph :=  ( $cast ($uint<32>) iNsTr_825) $on bb_113_bb_115 ( $cast ($uint<32>) xx_xpre254) $on deblock_edgex_xexit97_bb_115 
    $endmerge
    iNsTr_1624 := (iNsTr_816 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_1625 := (iNsTr_1624 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_1625 $then  $place [bb_115_bb_116] $else $place [bb_115_deblock_edgex_xexit99threadx_xprex_xsplit] $endif 
    //begin: basic-block bb_116
    $merge bb_115_bb_116
    $endmerge
    pixuvx_x0x_xsum37293x_xpn29 := (xx_xsum28x_xpn + iNsTr_35)
    iNsTr_1835 := iNsTr_179[pixuvx_x0x_xsum37293x_xpn29]
    iNsTr_1836 := (xx_xph & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    iNsTr_1837 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_817][iNsTr_1836])
    // load 
    iNsTr_1838 := ->(iNsTr_1837) 
    ->(iNsTr_61) := iNsTr_1838
    iNsTr_1840 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_1841 := ->(iNsTr_1840) 
    iNsTr_1842 := ($cast ($uint<32>) iNsTr_1841)
    iNsTr_1843 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_817][iNsTr_1842])
    // load 
    iNsTr_1844 := ->(iNsTr_1843) 
    ->(iNsTr_62) := iNsTr_1844
    iNsTr_1846 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_1847 := ->(iNsTr_1846) 
    iNsTr_1848 := ($cast ($uint<32>) iNsTr_1847)
    iNsTr_1849 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_817][iNsTr_1848])
    // load 
    iNsTr_1850 := ->(iNsTr_1849) 
    ->(iNsTr_63) := iNsTr_1850
    iNsTr_1852 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    iNsTr_1853 := ->(iNsTr_1852) 
    iNsTr_1854 := ($cast ($uint<32>) iNsTr_1853)
    iNsTr_1855 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_817][iNsTr_1854])
    // load 
    iNsTr_1856 := ->(iNsTr_1855) 
    ->(iNsTr_64) := iNsTr_1856
    $call deblock_luma_c (iNsTr_1835 ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  iNsTr_184 iNsTr_820 iNsTr_824 iNsTr_61 )  ()
    $place [bb_116_deblock_edgex_xexit99threadx_xprex_xsplit]
    //begin: basic-block bb_117
    $merge deblock_edgex_xexit95_bb_117
    $endmerge
    iNsTr_828 := (iNsTr_244 + iNsTr_3)
    iNsTr_829 := (iNsTr_244 + iNsTr_5)
    iNsTr_830 := (iNsTr_828 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_831 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[iNsTr_830])
    // load 
    iNsTr_832 := ->(iNsTr_831) 
    iNsTr_833 := ($cast ($uint<32>) iNsTr_832)
    iNsTr_834 := (iNsTr_829 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_835 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[iNsTr_834])
    // load 
    iNsTr_836 := ->(iNsTr_835) 
    iNsTr_837 := ($cast ($uint<32>) iNsTr_836)
    // load 
    iNsTr_838 := ->(iNsTr_484) 
    // compare instruction
    iNsTr_839 := (iNsTr_838 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if iNsTr_839 $then  $place [bb_117_deblock_edgex_xexit99threadx_xprex_xsplit] $else $place [bb_117_bb_118] $endif 
    //begin: basic-block bb_118
    $merge bb_117_bb_118
    $endmerge
    iNsTr_1063 := (iNsTr_828 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_1064 := (iNsTr_1063 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_1064 $then  $place [bb_118_bb_119] $else $place [bb_118_deblock_edgex_xexit99threadx_xprex_xsplit] $endif 
    //begin: basic-block bb_119
    $merge bb_118_bb_119
    $endmerge
    iNsTr_1322 := (iNsTr_829 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_1323 := (iNsTr_1322 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_1323 $then  $place [bb_119_bb_120] $else $place [bb_119_deblock_edgex_xexit99threadx_xprex_xsplit] $endif 
    //begin: basic-block bb_120
    $merge bb_119_bb_120
    $endmerge
    iNsTr_1627 := (iNsTr_838 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    iNsTr_1628 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_830][iNsTr_1627])
    // load 
    iNsTr_1629 := ->(iNsTr_1628) 
    iNsTr_1630 := (iNsTr_1629 + ( $bitcast ($uint<8> ) _b00000001 ) )
    ->(iNsTr_61) := iNsTr_1630
    iNsTr_1632 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_1633 := ->(iNsTr_1632) 
    iNsTr_1634 := ($cast ($uint<32>) iNsTr_1633)
    iNsTr_1635 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_830][iNsTr_1634])
    // load 
    iNsTr_1636 := ->(iNsTr_1635) 
    iNsTr_1637 := (iNsTr_1636 + ( $bitcast ($uint<8> ) _b00000001 ) )
    ->(iNsTr_62) := iNsTr_1637
    iNsTr_1639 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_1640 := ->(iNsTr_1639) 
    iNsTr_1641 := ($cast ($uint<32>) iNsTr_1640)
    iNsTr_1642 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_830][iNsTr_1641])
    // load 
    iNsTr_1643 := ->(iNsTr_1642) 
    iNsTr_1644 := (iNsTr_1643 + ( $bitcast ($uint<8> ) _b00000001 ) )
    ->(iNsTr_63) := iNsTr_1644
    iNsTr_1646 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    iNsTr_1647 := ->(iNsTr_1646) 
    iNsTr_1648 := ($cast ($uint<32>) iNsTr_1647)
    iNsTr_1649 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_830][iNsTr_1648])
    // load 
    iNsTr_1650 := ->(iNsTr_1649) 
    iNsTr_1651 := (iNsTr_1650 + ( $bitcast ($uint<8> ) _b00000001 ) )
    ->(iNsTr_64) := iNsTr_1651
    $call deblock_h_chroma_c (pixuvx_x0 iNsTr_184 iNsTr_833 iNsTr_837 iNsTr_61 )  ()
    $place [bb_120_deblock_edgex_xexit99threadx_xprex_xsplit]
    //begin: basic-block deblock_edgex_xexit99threadx_xprex_xsplit
    $merge bb_111_deblock_edgex_xexit99threadx_xprex_xsplit bb_112_deblock_edgex_xexit99threadx_xprex_xsplit bb_115_deblock_edgex_xexit99threadx_xprex_xsplit bb_116_deblock_edgex_xexit99threadx_xprex_xsplit bb_117_deblock_edgex_xexit99threadx_xprex_xsplit bb_118_deblock_edgex_xexit99threadx_xprex_xsplit bb_119_deblock_edgex_xexit99threadx_xprex_xsplit bb_120_deblock_edgex_xexit99threadx_xprex_xsplit deblock_edgex_xexit97_deblock_edgex_xexit99threadx_xprex_xsplit
    $endmerge
    // load 
    xx_xpr2 := ->(iNsTr_20) 
    $place [deblock_edgex_xexit99threadx_xprex_xsplit_deblock_edgex_xexit99]
    //begin: basic-block deblock_edgex_xexit99
    $merge deblock_edgex_xexit95_deblock_edgex_xexit99 deblock_edgex_xexit99threadx_xprex_xsplit_deblock_edgex_xexit99
    $phi iNsTr_812 :=  ( $cast ($uint<32>) xx_xpr2) $on deblock_edgex_xexit99threadx_xprex_xsplit_deblock_edgex_xexit99 ( $cast ($uint<32>) iNsTr_641) $on deblock_edgex_xexit95_deblock_edgex_xexit99 
    $endmerge
    // compare instruction
    iNsTr_813 := (iNsTr_812 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )
    $if iNsTr_813 $then  $place [deblock_edgex_xexit99_bb_123] $else $place [deblock_edgex_xexit99_deblock_edge_intrax_xexit77] $endif 
    //begin: basic-block bb_123
    $merge deblock_edgex_xexit99_bb_123
    $endmerge
    iNsTr_1046 := (iNsTr_244 + iNsTr_3)
    iNsTr_1047 := (iNsTr_244 + iNsTr_5)
    iNsTr_1048 := (iNsTr_1046 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_1049 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[iNsTr_1048])
    // load 
    iNsTr_1050 := ->(iNsTr_1049) 
    iNsTr_1051 := ($cast ($uint<32>) iNsTr_1050)
    iNsTr_1052 := (iNsTr_1047 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_1053 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[iNsTr_1052])
    // load 
    iNsTr_1054 := ->(iNsTr_1053) 
    iNsTr_1055 := ($cast ($uint<32>) iNsTr_1054)
    // load 
    iNsTr_1056 := ->(iNsTr_484) 
    // compare instruction
    iNsTr_1057 := (iNsTr_1056 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if iNsTr_1057 $then  $place [bb_123_deblock_edge_intrax_xexit77] $else $place [bb_123_bb_124] $endif 
    //begin: basic-block bb_124
    $merge bb_123_bb_124
    $endmerge
    iNsTr_1316 := (iNsTr_1046 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_1317 := (iNsTr_1316 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_1317 $then  $place [bb_124_bb_125] $else $place [bb_124_deblock_edge_intrax_xexit77] $endif 
    //begin: basic-block bb_125
    $merge bb_124_bb_125
    $endmerge
    iNsTr_1596 := (iNsTr_1047 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_1597 := (iNsTr_1596 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_1597 $then  $place [bb_125_bb_126] $else $place [bb_125_deblock_edge_intrax_xexit77] $endif 
    //begin: basic-block bb_126
    $merge bb_125_bb_126
    $endmerge
    iNsTr_1807 := (iNsTr_1056 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    iNsTr_1808 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_1048][iNsTr_1807])
    // load 
    iNsTr_1809 := ->(iNsTr_1808) 
    iNsTr_1810 := (iNsTr_1809 + ( $bitcast ($uint<8> ) _b00000001 ) )
    ->(iNsTr_61) := iNsTr_1810
    iNsTr_1812 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_1813 := ->(iNsTr_1812) 
    iNsTr_1814 := ($cast ($uint<32>) iNsTr_1813)
    iNsTr_1815 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_1048][iNsTr_1814])
    // load 
    iNsTr_1816 := ->(iNsTr_1815) 
    iNsTr_1817 := (iNsTr_1816 + ( $bitcast ($uint<8> ) _b00000001 ) )
    ->(iNsTr_62) := iNsTr_1817
    iNsTr_1819 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_1820 := ->(iNsTr_1819) 
    iNsTr_1821 := ($cast ($uint<32>) iNsTr_1820)
    iNsTr_1822 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_1048][iNsTr_1821])
    // load 
    iNsTr_1823 := ->(iNsTr_1822) 
    iNsTr_1824 := (iNsTr_1823 + ( $bitcast ($uint<8> ) _b00000001 ) )
    ->(iNsTr_63) := iNsTr_1824
    iNsTr_1826 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    iNsTr_1827 := ->(iNsTr_1826) 
    iNsTr_1828 := ($cast ($uint<32>) iNsTr_1827)
    iNsTr_1829 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_1048][iNsTr_1828])
    // load 
    iNsTr_1830 := ->(iNsTr_1829) 
    iNsTr_1831 := (iNsTr_1830 + ( $bitcast ($uint<8> ) _b00000001 ) )
    ->(iNsTr_64) := iNsTr_1831
    $call deblock_h_chroma_c (pixuvx_x0 iNsTr_184 iNsTr_1051 iNsTr_1055 iNsTr_61 )  ()
    $place [bb_126_deblock_edge_intrax_xexit77]
    //begin: basic-block deblock_edge_intrax_xexit77
    $merge bb_103_deblock_edge_intrax_xexit77 bb_104_deblock_edge_intrax_xexit77 bb_105_deblock_edge_intrax_xexit77 bb_123_deblock_edge_intrax_xexit77 bb_124_deblock_edge_intrax_xexit77 bb_125_deblock_edge_intrax_xexit77 bb_126_deblock_edge_intrax_xexit77 bb_30_deblock_edge_intrax_xexit77 bb_69_deblock_edge_intrax_xexit77 bb_70_deblock_edge_intrax_xexit77 bb_71_deblock_edge_intrax_xexit77 bb_81_deblock_edge_intrax_xexit77 bb_82_deblock_edge_intrax_xexit77 bb_83_deblock_edge_intrax_xexit77 bb_84_deblock_edge_intrax_xexit77 deblock_edge_intrax_xexit75_deblock_edge_intrax_xexit77 deblock_edge_intrax_xexit89_deblock_edge_intrax_xexit77 deblock_edgex_xexit81_deblock_edge_intrax_xexit77 deblock_edgex_xexit99_deblock_edge_intrax_xexit77
    $endmerge
    $if iNsTr_221 $then  $place [deblock_edge_intrax_xexit77_deblock_edgex_xexit125] $else $place [deblock_edge_intrax_xexit77_bb_128] $endif 
    //begin: basic-block bb_128
    $merge deblock_edge_intrax_xexit77_bb_128
    $endmerge
    // compare instruction
    iNsTr_231 := (iNsTr_136 == ( $bitcast ($uint<8> ) _b00000000 )  )
    $if iNsTr_231 $then  $place [bb_128_bb_129] $else $place [bb_128_deblock_edgex_xexit109] $endif 
    //begin: basic-block bb_129
    $merge bb_128_bb_129
    $endmerge
    pixyx_x0x_xsum20 := (xx_xsum19x_xpn + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    iNsTr_257 := iNsTr_175[pixyx_x0x_xsum20]
    iNsTr_258 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    iNsTr_259 := (iNsTr_188 + iNsTr_3)
    iNsTr_260 := (iNsTr_188 + iNsTr_5)
    iNsTr_261 := (iNsTr_259 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_262 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[iNsTr_261])
    // load 
    iNsTr_263 := ->(iNsTr_262) 
    iNsTr_264 := ($cast ($uint<32>) iNsTr_263)
    iNsTr_265 := (iNsTr_260 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_266 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[iNsTr_265])
    // load 
    iNsTr_267 := ->(iNsTr_266) 
    iNsTr_268 := ($cast ($uint<32>) iNsTr_267)
    iNsTr_269 := ($bitcast ($pointer< $uint<32> >) iNsTr_258)
    // load 
    iNsTr_270 := ->(iNsTr_269) 
    // compare instruction
    iNsTr_271 := (iNsTr_270 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if iNsTr_271 $then  $place [bb_129_deblock_edgex_xexit105] $else $place [bb_129_bb_130] $endif 
    //begin: basic-block bb_130
    $merge bb_129_bb_130
    $endmerge
    iNsTr_343 := (iNsTr_259 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_344 := (iNsTr_343 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_344 $then  $place [bb_130_bb_131] $else $place [bb_130_deblock_edgex_xexit105] $endif 
    //begin: basic-block bb_131
    $merge bb_130_bb_131
    $endmerge
    iNsTr_423 := (iNsTr_260 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_424 := (iNsTr_423 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_424 $then  $place [bb_131_bb_132] $else $place [bb_131_deblock_edgex_xexit105] $endif 
    //begin: basic-block bb_132
    $merge bb_131_bb_132
    $endmerge
    iNsTr_566 := (iNsTr_270 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    iNsTr_567 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_261][iNsTr_566])
    // load 
    iNsTr_568 := ->(iNsTr_567) 
    ->(iNsTr_61) := iNsTr_568
    iNsTr_570 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_571 := ->(iNsTr_570) 
    iNsTr_572 := ($cast ($uint<32>) iNsTr_571)
    iNsTr_573 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_261][iNsTr_572])
    // load 
    iNsTr_574 := ->(iNsTr_573) 
    ->(iNsTr_62) := iNsTr_574
    iNsTr_576 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_577 := ->(iNsTr_576) 
    iNsTr_578 := ($cast ($uint<32>) iNsTr_577)
    iNsTr_579 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_261][iNsTr_578])
    // load 
    iNsTr_580 := ->(iNsTr_579) 
    ->(iNsTr_63) := iNsTr_580
    iNsTr_582 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    iNsTr_583 := ->(iNsTr_582) 
    iNsTr_584 := ($cast ($uint<32>) iNsTr_583)
    iNsTr_585 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_261][iNsTr_584])
    // load 
    iNsTr_586 := ->(iNsTr_585) 
    ->(iNsTr_64) := iNsTr_586
    $call deblock_luma_c (iNsTr_257 ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  iNsTr_183 iNsTr_264 iNsTr_268 iNsTr_61 )  ()
    $place [bb_132_deblock_edgex_xexit105]
    //begin: basic-block deblock_edgex_xexit105
    $merge bb_129_deblock_edgex_xexit105 bb_130_deblock_edgex_xexit105 bb_131_deblock_edgex_xexit105 bb_132_deblock_edgex_xexit105
    $endmerge
    // load 
    iNsTr_340 := ->(iNsTr_20) 
    // compare instruction
    iNsTr_341 := (iNsTr_340 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 )  )
    $if iNsTr_341 $then  $place [deblock_edgex_xexit105_bb_134] $else $place [deblock_edgex_xexit105_deblock_edgex_xexit109] $endif 
    //begin: basic-block bb_134
    $merge deblock_edgex_xexit105_bb_134
    $endmerge
    pixuvx_x0x_xsum41 := (xx_xsum28x_xpn + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    iNsTr_409 := iNsTr_179[pixuvx_x0x_xsum41]
    iNsTr_410 := (iNsTr_192 + iNsTr_3)
    iNsTr_411 := (iNsTr_192 + iNsTr_5)
    iNsTr_412 := (iNsTr_410 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_413 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[iNsTr_412])
    // load 
    iNsTr_414 := ->(iNsTr_413) 
    iNsTr_415 := ($cast ($uint<32>) iNsTr_414)
    iNsTr_416 := (iNsTr_411 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_417 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[iNsTr_416])
    // load 
    iNsTr_418 := ->(iNsTr_417) 
    iNsTr_419 := ($cast ($uint<32>) iNsTr_418)
    // load 
    iNsTr_420 := ->(iNsTr_269) 
    // compare instruction
    iNsTr_421 := (iNsTr_420 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if iNsTr_421 $then  $place [bb_134_deblock_edgex_xexit109] $else $place [bb_134_bb_135] $endif 
    //begin: basic-block bb_135
    $merge bb_134_bb_135
    $endmerge
    iNsTr_563 := (iNsTr_410 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_564 := (iNsTr_563 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_564 $then  $place [bb_135_bb_136] $else $place [bb_135_deblock_edgex_xexit109] $endif 
    //begin: basic-block bb_136
    $merge bb_135_bb_136
    $endmerge
    iNsTr_763 := (iNsTr_411 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_764 := (iNsTr_763 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_764 $then  $place [bb_136_deblock_edgex_xexit107] $else $place [bb_136_bb_138] $endif 
    //begin: basic-block deblock_edgex_xexit107
    $merge bb_136_deblock_edgex_xexit107
    $endmerge
    iNsTr_933 := (iNsTr_420 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    iNsTr_934 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_412][iNsTr_933])
    // load 
    iNsTr_935 := ->(iNsTr_934) 
    ->(iNsTr_61) := iNsTr_935
    iNsTr_937 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_938 := ->(iNsTr_937) 
    iNsTr_939 := ($cast ($uint<32>) iNsTr_938)
    iNsTr_940 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_412][iNsTr_939])
    // load 
    iNsTr_941 := ->(iNsTr_940) 
    ->(iNsTr_62) := iNsTr_941
    iNsTr_943 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_944 := ->(iNsTr_943) 
    iNsTr_945 := ($cast ($uint<32>) iNsTr_944)
    iNsTr_946 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_412][iNsTr_945])
    // load 
    iNsTr_947 := ->(iNsTr_946) 
    ->(iNsTr_63) := iNsTr_947
    iNsTr_949 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    iNsTr_950 := ->(iNsTr_949) 
    iNsTr_951 := ($cast ($uint<32>) iNsTr_950)
    iNsTr_952 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_412][iNsTr_951])
    // load 
    iNsTr_953 := ->(iNsTr_952) 
    ->(iNsTr_64) := iNsTr_953
    $call deblock_luma_c (iNsTr_409 ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  iNsTr_184 iNsTr_415 iNsTr_419 iNsTr_61 )  ()
    // load 
    xx_xpre251 := ->(iNsTr_269) 
    // compare instruction
    iNsTr_956 := (xx_xpre251 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if iNsTr_956 $then  $place [deblock_edgex_xexit107_deblock_edgex_xexit109] $else $place [deblock_edgex_xexit107_bb_138] $endif 
    //begin: basic-block bb_138
    $merge bb_136_bb_138 deblock_edgex_xexit107_bb_138
    $phi xx_xph30 :=  ( $cast ($uint<32>) iNsTr_420) $on bb_136_bb_138 ( $cast ($uint<32>) xx_xpre251) $on deblock_edgex_xexit107_bb_138 
    $endmerge
    iNsTr_958 := (iNsTr_411 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_959 := (iNsTr_958 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_959 $then  $place [bb_138_bb_139] $else $place [bb_138_deblock_edgex_xexit109] $endif 
    //begin: basic-block bb_139
    $merge bb_138_bb_139
    $endmerge
    pixuvx_x0x_xsum30296x_xpn31 := (xx_xsum14 + xx_xsum28x_xpn)
    iNsTr_1212 := iNsTr_179[pixuvx_x0x_xsum30296x_xpn31]
    iNsTr_1213 := (xx_xph30 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    iNsTr_1214 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_412][iNsTr_1213])
    // load 
    iNsTr_1215 := ->(iNsTr_1214) 
    ->(iNsTr_61) := iNsTr_1215
    iNsTr_1217 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_1218 := ->(iNsTr_1217) 
    iNsTr_1219 := ($cast ($uint<32>) iNsTr_1218)
    iNsTr_1220 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_412][iNsTr_1219])
    // load 
    iNsTr_1221 := ->(iNsTr_1220) 
    ->(iNsTr_62) := iNsTr_1221
    iNsTr_1223 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_1224 := ->(iNsTr_1223) 
    iNsTr_1225 := ($cast ($uint<32>) iNsTr_1224)
    iNsTr_1226 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_412][iNsTr_1225])
    // load 
    iNsTr_1227 := ->(iNsTr_1226) 
    ->(iNsTr_63) := iNsTr_1227
    iNsTr_1229 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    iNsTr_1230 := ->(iNsTr_1229) 
    iNsTr_1231 := ($cast ($uint<32>) iNsTr_1230)
    iNsTr_1232 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_412][iNsTr_1231])
    // load 
    iNsTr_1233 := ->(iNsTr_1232) 
    ->(iNsTr_64) := iNsTr_1233
    $call deblock_luma_c (iNsTr_1212 ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  iNsTr_184 iNsTr_415 iNsTr_419 iNsTr_61 )  ()
    $place [bb_139_deblock_edgex_xexit109]
    //begin: basic-block deblock_edgex_xexit109
    $merge bb_128_deblock_edgex_xexit109 bb_134_deblock_edgex_xexit109 bb_135_deblock_edgex_xexit109 bb_138_deblock_edgex_xexit109 bb_139_deblock_edgex_xexit109 deblock_edgex_xexit105_deblock_edgex_xexit109 deblock_edgex_xexit107_deblock_edgex_xexit109
    $endmerge
    pixyx_x0x_xsum22 := (xx_xsum19x_xpn + ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) )
    iNsTr_273 := iNsTr_175[pixyx_x0x_xsum22]
    iNsTr_274 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    iNsTr_275 := (iNsTr_188 + iNsTr_3)
    iNsTr_276 := (iNsTr_188 + iNsTr_5)
    iNsTr_277 := (iNsTr_275 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_278 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[iNsTr_277])
    // load 
    iNsTr_279 := ->(iNsTr_278) 
    iNsTr_280 := ($cast ($uint<32>) iNsTr_279)
    iNsTr_281 := (iNsTr_276 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_282 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[iNsTr_281])
    // load 
    iNsTr_283 := ->(iNsTr_282) 
    iNsTr_284 := ($cast ($uint<32>) iNsTr_283)
    iNsTr_285 := ($bitcast ($pointer< $uint<32> >) iNsTr_274)
    // load 
    iNsTr_286 := ->(iNsTr_285) 
    // compare instruction
    iNsTr_287 := (iNsTr_286 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if iNsTr_287 $then  $place [deblock_edgex_xexit109_deblock_edgex_xexit111] $else $place [deblock_edgex_xexit109_bb_141] $endif 
    //begin: basic-block bb_141
    $merge deblock_edgex_xexit109_bb_141
    $endmerge
    iNsTr_348 := (iNsTr_275 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_349 := (iNsTr_348 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_349 $then  $place [bb_141_bb_142] $else $place [bb_141_deblock_edgex_xexit111] $endif 
    //begin: basic-block bb_142
    $merge bb_141_bb_142
    $endmerge
    iNsTr_457 := (iNsTr_276 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_458 := (iNsTr_457 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_458 $then  $place [bb_142_bb_143] $else $place [bb_142_deblock_edgex_xexit111] $endif 
    //begin: basic-block bb_143
    $merge bb_142_bb_143
    $endmerge
    iNsTr_612 := (iNsTr_286 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    iNsTr_613 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_277][iNsTr_612])
    // load 
    iNsTr_614 := ->(iNsTr_613) 
    ->(iNsTr_61) := iNsTr_614
    iNsTr_616 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_617 := ->(iNsTr_616) 
    iNsTr_618 := ($cast ($uint<32>) iNsTr_617)
    iNsTr_619 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_277][iNsTr_618])
    // load 
    iNsTr_620 := ->(iNsTr_619) 
    ->(iNsTr_62) := iNsTr_620
    iNsTr_622 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_623 := ->(iNsTr_622) 
    iNsTr_624 := ($cast ($uint<32>) iNsTr_623)
    iNsTr_625 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_277][iNsTr_624])
    // load 
    iNsTr_626 := ->(iNsTr_625) 
    ->(iNsTr_63) := iNsTr_626
    iNsTr_628 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    iNsTr_629 := ->(iNsTr_628) 
    iNsTr_630 := ($cast ($uint<32>) iNsTr_629)
    iNsTr_631 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_277][iNsTr_630])
    // load 
    iNsTr_632 := ->(iNsTr_631) 
    ->(iNsTr_64) := iNsTr_632
    $call deblock_luma_c (iNsTr_273 ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  iNsTr_183 iNsTr_280 iNsTr_284 iNsTr_61 )  ()
    $place [bb_143_deblock_edgex_xexit111]
    //begin: basic-block deblock_edgex_xexit111
    $merge bb_141_deblock_edgex_xexit111 bb_142_deblock_edgex_xexit111 bb_143_deblock_edgex_xexit111 deblock_edgex_xexit109_deblock_edgex_xexit111
    $endmerge
    // load 
    iNsTr_346 := ->(iNsTr_20) 
    $switch iNsTr_346
    $when _b00000000000000000000000000000011 $then 
    $place [deblock_edgex_xexit111_bb_145]
    $when _b00000000000000000000000000000001 $then 
    $place [deblock_edgex_xexit111_bb_151]
    $default 
    $place [deblock_edgex_xexit111_deblock_edgex_xexit115]
    $endswitch
    //begin: basic-block bb_145
    $merge deblock_edgex_xexit111_bb_145
    $endmerge
    pixuvx_x0x_xsum45 := (xx_xsum28x_xpn + ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) )
    iNsTr_429 := iNsTr_179[pixuvx_x0x_xsum45]
    iNsTr_430 := (iNsTr_192 + iNsTr_3)
    iNsTr_431 := (iNsTr_192 + iNsTr_5)
    iNsTr_432 := (iNsTr_430 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_433 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[iNsTr_432])
    // load 
    iNsTr_434 := ->(iNsTr_433) 
    iNsTr_435 := ($cast ($uint<32>) iNsTr_434)
    iNsTr_436 := (iNsTr_431 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_437 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[iNsTr_436])
    // load 
    iNsTr_438 := ->(iNsTr_437) 
    iNsTr_439 := ($cast ($uint<32>) iNsTr_438)
    // load 
    iNsTr_440 := ->(iNsTr_285) 
    // compare instruction
    iNsTr_441 := (iNsTr_440 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if iNsTr_441 $then  $place [bb_145_deblock_edgex_xexit115threadx_xprex_xsplit] $else $place [bb_145_bb_146] $endif 
    //begin: basic-block bb_146
    $merge bb_145_bb_146
    $endmerge
    iNsTr_606 := (iNsTr_430 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_607 := (iNsTr_606 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_607 $then  $place [bb_146_bb_147] $else $place [bb_146_deblock_edgex_xexit115threadx_xprex_xsplit] $endif 
    //begin: basic-block bb_147
    $merge bb_146_bb_147
    $endmerge
    iNsTr_775 := (iNsTr_431 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_776 := (iNsTr_775 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_776 $then  $place [bb_147_deblock_edgex_xexit113] $else $place [bb_147_bb_149] $endif 
    //begin: basic-block deblock_edgex_xexit113
    $merge bb_147_deblock_edgex_xexit113
    $endmerge
    iNsTr_970 := (iNsTr_440 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    iNsTr_971 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_432][iNsTr_970])
    // load 
    iNsTr_972 := ->(iNsTr_971) 
    ->(iNsTr_61) := iNsTr_972
    iNsTr_974 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_975 := ->(iNsTr_974) 
    iNsTr_976 := ($cast ($uint<32>) iNsTr_975)
    iNsTr_977 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_432][iNsTr_976])
    // load 
    iNsTr_978 := ->(iNsTr_977) 
    ->(iNsTr_62) := iNsTr_978
    iNsTr_980 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_981 := ->(iNsTr_980) 
    iNsTr_982 := ($cast ($uint<32>) iNsTr_981)
    iNsTr_983 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_432][iNsTr_982])
    // load 
    iNsTr_984 := ->(iNsTr_983) 
    ->(iNsTr_63) := iNsTr_984
    iNsTr_986 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    iNsTr_987 := ->(iNsTr_986) 
    iNsTr_988 := ($cast ($uint<32>) iNsTr_987)
    iNsTr_989 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_432][iNsTr_988])
    // load 
    iNsTr_990 := ->(iNsTr_989) 
    ->(iNsTr_64) := iNsTr_990
    $call deblock_luma_c (iNsTr_429 ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  iNsTr_184 iNsTr_435 iNsTr_439 iNsTr_61 )  ()
    // load 
    xx_xpre252 := ->(iNsTr_285) 
    // compare instruction
    iNsTr_993 := (xx_xpre252 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if iNsTr_993 $then  $place [deblock_edgex_xexit113_deblock_edgex_xexit115threadx_xprex_xsplit] $else $place [deblock_edgex_xexit113_bb_149] $endif 
    //begin: basic-block bb_149
    $merge bb_147_bb_149 deblock_edgex_xexit113_bb_149
    $phi xx_xph32 :=  ( $cast ($uint<32>) iNsTr_440) $on bb_147_bb_149 ( $cast ($uint<32>) xx_xpre252) $on deblock_edgex_xexit113_bb_149 
    $endmerge
    iNsTr_995 := (iNsTr_431 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_996 := (iNsTr_995 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_996 $then  $place [bb_149_bb_150] $else $place [bb_149_deblock_edgex_xexit115threadx_xprex_xsplit] $endif 
    //begin: basic-block bb_150
    $merge bb_149_bb_150
    $endmerge
    pixuvx_x0x_xsum31299x_xpn33 := (xx_xsum13 + xx_xsum28x_xpn)
    iNsTr_1282 := iNsTr_179[pixuvx_x0x_xsum31299x_xpn33]
    iNsTr_1283 := (xx_xph32 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    iNsTr_1284 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_432][iNsTr_1283])
    // load 
    iNsTr_1285 := ->(iNsTr_1284) 
    ->(iNsTr_61) := iNsTr_1285
    iNsTr_1287 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_1288 := ->(iNsTr_1287) 
    iNsTr_1289 := ($cast ($uint<32>) iNsTr_1288)
    iNsTr_1290 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_432][iNsTr_1289])
    // load 
    iNsTr_1291 := ->(iNsTr_1290) 
    ->(iNsTr_62) := iNsTr_1291
    iNsTr_1293 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_1294 := ->(iNsTr_1293) 
    iNsTr_1295 := ($cast ($uint<32>) iNsTr_1294)
    iNsTr_1296 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_432][iNsTr_1295])
    // load 
    iNsTr_1297 := ->(iNsTr_1296) 
    ->(iNsTr_63) := iNsTr_1297
    iNsTr_1299 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    iNsTr_1300 := ->(iNsTr_1299) 
    iNsTr_1301 := ($cast ($uint<32>) iNsTr_1300)
    iNsTr_1302 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_432][iNsTr_1301])
    // load 
    iNsTr_1303 := ->(iNsTr_1302) 
    ->(iNsTr_64) := iNsTr_1303
    $call deblock_luma_c (iNsTr_1282 ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  iNsTr_184 iNsTr_435 iNsTr_439 iNsTr_61 )  ()
    $place [bb_150_deblock_edgex_xexit115threadx_xprex_xsplit]
    //begin: basic-block bb_151
    $merge deblock_edgex_xexit111_bb_151
    $endmerge
    pixuvx_x0x_xsum42 := (xx_xsum28x_xpn + ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) )
    iNsTr_443 := iNsTr_179[pixuvx_x0x_xsum42]
    iNsTr_444 := (iNsTr_192 + iNsTr_3)
    iNsTr_445 := (iNsTr_192 + iNsTr_5)
    iNsTr_446 := (iNsTr_444 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_447 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[iNsTr_446])
    // load 
    iNsTr_448 := ->(iNsTr_447) 
    iNsTr_449 := ($cast ($uint<32>) iNsTr_448)
    iNsTr_450 := (iNsTr_445 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_451 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[iNsTr_450])
    // load 
    iNsTr_452 := ->(iNsTr_451) 
    iNsTr_453 := ($cast ($uint<32>) iNsTr_452)
    // load 
    iNsTr_454 := ->(iNsTr_285) 
    // compare instruction
    iNsTr_455 := (iNsTr_454 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if iNsTr_455 $then  $place [bb_151_deblock_edgex_xexit115threadx_xprex_xsplit] $else $place [bb_151_bb_152] $endif 
    //begin: basic-block bb_152
    $merge bb_151_bb_152
    $endmerge
    iNsTr_609 := (iNsTr_444 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_610 := (iNsTr_609 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_610 $then  $place [bb_152_bb_153] $else $place [bb_152_deblock_edgex_xexit115threadx_xprex_xsplit] $endif 
    //begin: basic-block bb_153
    $merge bb_152_bb_153
    $endmerge
    iNsTr_778 := (iNsTr_445 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_779 := (iNsTr_778 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_779 $then  $place [bb_153_bb_154] $else $place [bb_153_deblock_edgex_xexit115threadx_xprex_xsplit] $endif 
    //begin: basic-block bb_154
    $merge bb_153_bb_154
    $endmerge
    iNsTr_998 := (iNsTr_454 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    iNsTr_999 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_446][iNsTr_998])
    // load 
    iNsTr_1000 := ->(iNsTr_999) 
    iNsTr_1001 := (iNsTr_1000 + ( $bitcast ($uint<8> ) _b00000001 ) )
    ->(iNsTr_61) := iNsTr_1001
    iNsTr_1003 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_1004 := ->(iNsTr_1003) 
    iNsTr_1005 := ($cast ($uint<32>) iNsTr_1004)
    iNsTr_1006 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_446][iNsTr_1005])
    // load 
    iNsTr_1007 := ->(iNsTr_1006) 
    iNsTr_1008 := (iNsTr_1007 + ( $bitcast ($uint<8> ) _b00000001 ) )
    ->(iNsTr_62) := iNsTr_1008
    iNsTr_1010 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_1011 := ->(iNsTr_1010) 
    iNsTr_1012 := ($cast ($uint<32>) iNsTr_1011)
    iNsTr_1013 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_446][iNsTr_1012])
    // load 
    iNsTr_1014 := ->(iNsTr_1013) 
    iNsTr_1015 := (iNsTr_1014 + ( $bitcast ($uint<8> ) _b00000001 ) )
    ->(iNsTr_63) := iNsTr_1015
    iNsTr_1017 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    iNsTr_1018 := ->(iNsTr_1017) 
    iNsTr_1019 := ($cast ($uint<32>) iNsTr_1018)
    iNsTr_1020 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_446][iNsTr_1019])
    // load 
    iNsTr_1021 := ->(iNsTr_1020) 
    iNsTr_1022 := (iNsTr_1021 + ( $bitcast ($uint<8> ) _b00000001 ) )
    ->(iNsTr_64) := iNsTr_1022
    $call deblock_h_chroma_c (iNsTr_443 iNsTr_184 iNsTr_449 iNsTr_453 iNsTr_61 )  ()
    $place [bb_154_deblock_edgex_xexit115threadx_xprex_xsplit]
    //begin: basic-block deblock_edgex_xexit115threadx_xprex_xsplit
    $merge bb_145_deblock_edgex_xexit115threadx_xprex_xsplit bb_146_deblock_edgex_xexit115threadx_xprex_xsplit bb_149_deblock_edgex_xexit115threadx_xprex_xsplit bb_150_deblock_edgex_xexit115threadx_xprex_xsplit bb_151_deblock_edgex_xexit115threadx_xprex_xsplit bb_152_deblock_edgex_xexit115threadx_xprex_xsplit bb_153_deblock_edgex_xexit115threadx_xprex_xsplit bb_154_deblock_edgex_xexit115threadx_xprex_xsplit deblock_edgex_xexit113_deblock_edgex_xexit115threadx_xprex_xsplit
    $endmerge
    // load 
    xx_xpr3 := ->(iNsTr_20) 
    $place [deblock_edgex_xexit115threadx_xprex_xsplit_deblock_edgex_xexit115]
    //begin: basic-block deblock_edgex_xexit115
    $merge deblock_edgex_xexit111_deblock_edgex_xexit115 deblock_edgex_xexit115threadx_xprex_xsplit_deblock_edgex_xexit115
    $phi iNsTr_426 :=  ( $cast ($uint<32>) xx_xpr3) $on deblock_edgex_xexit115threadx_xprex_xsplit_deblock_edgex_xexit115 ( $cast ($uint<32>) iNsTr_346) $on deblock_edgex_xexit111_deblock_edgex_xexit115 
    $endmerge
    // compare instruction
    iNsTr_427 := (iNsTr_426 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )
    $if iNsTr_427 $then  $place [deblock_edgex_xexit115_bb_157] $else $place [deblock_edgex_xexit115_deblock_edgex_xexit119] $endif 
    //begin: basic-block bb_157
    $merge deblock_edgex_xexit115_bb_157
    $endmerge
    pixuvx_x0x_xsum44 := (xx_xsum28x_xpn + ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) )
    iNsTr_590 := iNsTr_179[pixuvx_x0x_xsum44]
    iNsTr_591 := (iNsTr_192 + iNsTr_3)
    iNsTr_592 := (iNsTr_192 + iNsTr_5)
    iNsTr_593 := (iNsTr_591 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_594 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[iNsTr_593])
    // load 
    iNsTr_595 := ->(iNsTr_594) 
    iNsTr_596 := ($cast ($uint<32>) iNsTr_595)
    iNsTr_597 := (iNsTr_592 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_598 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[iNsTr_597])
    // load 
    iNsTr_599 := ->(iNsTr_598) 
    iNsTr_600 := ($cast ($uint<32>) iNsTr_599)
    // load 
    iNsTr_601 := ->(iNsTr_285) 
    // compare instruction
    iNsTr_602 := (iNsTr_601 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if iNsTr_602 $then  $place [bb_157_deblock_edgex_xexit119] $else $place [bb_157_bb_158] $endif 
    //begin: basic-block bb_158
    $merge bb_157_bb_158
    $endmerge
    iNsTr_766 := (iNsTr_591 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_767 := (iNsTr_766 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_767 $then  $place [bb_158_bb_159] $else $place [bb_158_deblock_edgex_xexit119] $endif 
    //begin: basic-block bb_159
    $merge bb_158_bb_159
    $endmerge
    iNsTr_961 := (iNsTr_592 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_962 := (iNsTr_961 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_962 $then  $place [bb_159_bb_160] $else $place [bb_159_deblock_edgex_xexit119] $endif 
    //begin: basic-block bb_160
    $merge bb_159_bb_160
    $endmerge
    iNsTr_1237 := (iNsTr_601 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    iNsTr_1238 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_593][iNsTr_1237])
    // load 
    iNsTr_1239 := ->(iNsTr_1238) 
    iNsTr_1240 := (iNsTr_1239 + ( $bitcast ($uint<8> ) _b00000001 ) )
    ->(iNsTr_61) := iNsTr_1240
    iNsTr_1242 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_1243 := ->(iNsTr_1242) 
    iNsTr_1244 := ($cast ($uint<32>) iNsTr_1243)
    iNsTr_1245 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_593][iNsTr_1244])
    // load 
    iNsTr_1246 := ->(iNsTr_1245) 
    iNsTr_1247 := (iNsTr_1246 + ( $bitcast ($uint<8> ) _b00000001 ) )
    ->(iNsTr_62) := iNsTr_1247
    iNsTr_1249 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_1250 := ->(iNsTr_1249) 
    iNsTr_1251 := ($cast ($uint<32>) iNsTr_1250)
    iNsTr_1252 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_593][iNsTr_1251])
    // load 
    iNsTr_1253 := ->(iNsTr_1252) 
    iNsTr_1254 := (iNsTr_1253 + ( $bitcast ($uint<8> ) _b00000001 ) )
    ->(iNsTr_63) := iNsTr_1254
    iNsTr_1256 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    iNsTr_1257 := ->(iNsTr_1256) 
    iNsTr_1258 := ($cast ($uint<32>) iNsTr_1257)
    iNsTr_1259 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_593][iNsTr_1258])
    // load 
    iNsTr_1260 := ->(iNsTr_1259) 
    iNsTr_1261 := (iNsTr_1260 + ( $bitcast ($uint<8> ) _b00000001 ) )
    ->(iNsTr_64) := iNsTr_1261
    $call deblock_h_chroma_c (iNsTr_590 iNsTr_184 iNsTr_596 iNsTr_600 iNsTr_61 )  ()
    $place [bb_160_deblock_edgex_xexit119]
    //begin: basic-block deblock_edgex_xexit119
    $merge bb_157_deblock_edgex_xexit119 bb_158_deblock_edgex_xexit119 bb_159_deblock_edgex_xexit119 bb_160_deblock_edgex_xexit119 deblock_edgex_xexit115_deblock_edgex_xexit119
    $endmerge
    $if iNsTr_231 $then  $place [deblock_edgex_xexit119_bb_162] $else $place [deblock_edgex_xexit119_deblock_edgex_xexit125] $endif 
    //begin: basic-block bb_162
    $merge deblock_edgex_xexit119_bb_162
    $endmerge
    pixyx_x0x_xsum21 := (xx_xsum19x_xpn + ( $bitcast ($uint<32> ) _b00000000000000000000000000001100 ) )
    iNsTr_769 := iNsTr_175[pixyx_x0x_xsum21]
    iNsTr_770 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    iNsTr_771 := ($bitcast ($pointer< $uint<32> >) iNsTr_770)
    // load 
    iNsTr_772 := ->(iNsTr_771) 
    // compare instruction
    iNsTr_773 := (iNsTr_772 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if iNsTr_773 $then  $place [bb_162_deblock_edgex_xexit121] $else $place [bb_162_bb_163] $endif 
    //begin: basic-block bb_163
    $merge bb_162_bb_163
    $endmerge
    iNsTr_967 := (iNsTr_275 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_968 := (iNsTr_967 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_968 $then  $place [bb_163_bb_164] $else $place [bb_163_deblock_edgex_xexit121] $endif 
    //begin: basic-block bb_164
    $merge bb_163_bb_164
    $endmerge
    iNsTr_1279 := (iNsTr_276 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_1280 := (iNsTr_1279 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_1280 $then  $place [bb_164_bb_165] $else $place [bb_164_deblock_edgex_xexit121] $endif 
    //begin: basic-block bb_165
    $merge bb_164_bb_165
    $endmerge
    iNsTr_1570 := (iNsTr_772 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    iNsTr_1571 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_277][iNsTr_1570])
    // load 
    iNsTr_1572 := ->(iNsTr_1571) 
    ->(iNsTr_61) := iNsTr_1572
    iNsTr_1574 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_1575 := ->(iNsTr_1574) 
    iNsTr_1576 := ($cast ($uint<32>) iNsTr_1575)
    iNsTr_1577 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_277][iNsTr_1576])
    // load 
    iNsTr_1578 := ->(iNsTr_1577) 
    ->(iNsTr_62) := iNsTr_1578
    iNsTr_1580 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_1581 := ->(iNsTr_1580) 
    iNsTr_1582 := ($cast ($uint<32>) iNsTr_1581)
    iNsTr_1583 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_277][iNsTr_1582])
    // load 
    iNsTr_1584 := ->(iNsTr_1583) 
    ->(iNsTr_63) := iNsTr_1584
    iNsTr_1586 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    iNsTr_1587 := ->(iNsTr_1586) 
    iNsTr_1588 := ($cast ($uint<32>) iNsTr_1587)
    iNsTr_1589 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_277][iNsTr_1588])
    // load 
    iNsTr_1590 := ->(iNsTr_1589) 
    ->(iNsTr_64) := iNsTr_1590
    $call deblock_luma_c (iNsTr_769 ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  iNsTr_183 iNsTr_280 iNsTr_284 iNsTr_61 )  ()
    $place [bb_165_deblock_edgex_xexit121]
    //begin: basic-block deblock_edgex_xexit121
    $merge bb_162_deblock_edgex_xexit121 bb_163_deblock_edgex_xexit121 bb_164_deblock_edgex_xexit121 bb_165_deblock_edgex_xexit121
    $endmerge
    // load 
    iNsTr_964 := ->(iNsTr_20) 
    // compare instruction
    iNsTr_965 := (iNsTr_964 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 )  )
    $if iNsTr_965 $then  $place [deblock_edgex_xexit121_bb_167] $else $place [deblock_edgex_xexit121_deblock_edgex_xexit125] $endif 
    //begin: basic-block bb_167
    $merge deblock_edgex_xexit121_bb_167
    $endmerge
    pixuvx_x0x_xsum43 := (xx_xsum28x_xpn + ( $bitcast ($uint<32> ) _b00000000000000000000000000001100 ) )
    iNsTr_1265 := iNsTr_179[pixuvx_x0x_xsum43]
    iNsTr_1266 := (iNsTr_192 + iNsTr_3)
    iNsTr_1267 := (iNsTr_192 + iNsTr_5)
    iNsTr_1268 := (iNsTr_1266 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_1269 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[iNsTr_1268])
    // load 
    iNsTr_1270 := ->(iNsTr_1269) 
    iNsTr_1271 := ($cast ($uint<32>) iNsTr_1270)
    iNsTr_1272 := (iNsTr_1267 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_1273 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[iNsTr_1272])
    // load 
    iNsTr_1274 := ->(iNsTr_1273) 
    iNsTr_1275 := ($cast ($uint<32>) iNsTr_1274)
    // load 
    iNsTr_1276 := ->(iNsTr_771) 
    // compare instruction
    iNsTr_1277 := (iNsTr_1276 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if iNsTr_1277 $then  $place [bb_167_deblock_edgex_xexit125] $else $place [bb_167_bb_168] $endif 
    //begin: basic-block bb_168
    $merge bb_167_bb_168
    $endmerge
    iNsTr_1567 := (iNsTr_1266 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_1568 := (iNsTr_1567 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_1568 $then  $place [bb_168_bb_169] $else $place [bb_168_deblock_edgex_xexit125] $endif 
    //begin: basic-block bb_169
    $merge bb_168_bb_169
    $endmerge
    iNsTr_1804 := (iNsTr_1267 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_1805 := (iNsTr_1804 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_1805 $then  $place [bb_169_deblock_edgex_xexit123] $else $place [bb_169_bb_171] $endif 
    //begin: basic-block deblock_edgex_xexit123
    $merge bb_169_deblock_edgex_xexit123
    $endmerge
    iNsTr_2034 := (iNsTr_1276 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    iNsTr_2035 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_1268][iNsTr_2034])
    // load 
    iNsTr_2036 := ->(iNsTr_2035) 
    ->(iNsTr_61) := iNsTr_2036
    iNsTr_2038 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_2039 := ->(iNsTr_2038) 
    iNsTr_2040 := ($cast ($uint<32>) iNsTr_2039)
    iNsTr_2041 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_1268][iNsTr_2040])
    // load 
    iNsTr_2042 := ->(iNsTr_2041) 
    ->(iNsTr_62) := iNsTr_2042
    iNsTr_2044 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_2045 := ->(iNsTr_2044) 
    iNsTr_2046 := ($cast ($uint<32>) iNsTr_2045)
    iNsTr_2047 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_1268][iNsTr_2046])
    // load 
    iNsTr_2048 := ->(iNsTr_2047) 
    ->(iNsTr_63) := iNsTr_2048
    iNsTr_2050 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    iNsTr_2051 := ->(iNsTr_2050) 
    iNsTr_2052 := ($cast ($uint<32>) iNsTr_2051)
    iNsTr_2053 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_1268][iNsTr_2052])
    // load 
    iNsTr_2054 := ->(iNsTr_2053) 
    ->(iNsTr_64) := iNsTr_2054
    $call deblock_luma_c (iNsTr_1265 ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  iNsTr_184 iNsTr_1271 iNsTr_1275 iNsTr_61 )  ()
    // load 
    xx_xpre253 := ->(iNsTr_771) 
    // compare instruction
    iNsTr_2057 := (xx_xpre253 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if iNsTr_2057 $then  $place [deblock_edgex_xexit123_deblock_edgex_xexit125] $else $place [deblock_edgex_xexit123_bb_171] $endif 
    //begin: basic-block bb_171
    $merge bb_169_bb_171 deblock_edgex_xexit123_bb_171
    $phi xx_xph34 :=  ( $cast ($uint<32>) iNsTr_1276) $on bb_169_bb_171 ( $cast ($uint<32>) xx_xpre253) $on deblock_edgex_xexit123_bb_171 
    $endmerge
    iNsTr_2059 := (iNsTr_1267 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_2060 := (iNsTr_2059 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_2060 $then  $place [bb_171_bb_172] $else $place [bb_171_deblock_edgex_xexit125] $endif 
    //begin: basic-block bb_172
    $merge bb_171_bb_172
    $endmerge
    pixuvx_x0x_xsum32302x_xpn35 := (xx_xsum12 + xx_xsum28x_xpn)
    iNsTr_2243 := iNsTr_179[pixuvx_x0x_xsum32302x_xpn35]
    iNsTr_2244 := (xx_xph34 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    iNsTr_2245 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_1268][iNsTr_2244])
    // load 
    iNsTr_2246 := ->(iNsTr_2245) 
    ->(iNsTr_61) := iNsTr_2246
    iNsTr_2248 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_2249 := ->(iNsTr_2248) 
    iNsTr_2250 := ($cast ($uint<32>) iNsTr_2249)
    iNsTr_2251 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_1268][iNsTr_2250])
    // load 
    iNsTr_2252 := ->(iNsTr_2251) 
    ->(iNsTr_62) := iNsTr_2252
    iNsTr_2254 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_2255 := ->(iNsTr_2254) 
    iNsTr_2256 := ($cast ($uint<32>) iNsTr_2255)
    iNsTr_2257 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_1268][iNsTr_2256])
    // load 
    iNsTr_2258 := ->(iNsTr_2257) 
    ->(iNsTr_63) := iNsTr_2258
    iNsTr_2260 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    iNsTr_2261 := ->(iNsTr_2260) 
    iNsTr_2262 := ($cast ($uint<32>) iNsTr_2261)
    iNsTr_2263 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_1268][iNsTr_2262])
    // load 
    iNsTr_2264 := ->(iNsTr_2263) 
    ->(iNsTr_64) := iNsTr_2264
    $call deblock_luma_c (iNsTr_2243 ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  iNsTr_184 iNsTr_1271 iNsTr_1275 iNsTr_61 )  ()
    $place [bb_172_deblock_edgex_xexit125]
    //begin: basic-block deblock_edgex_xexit125
    $merge bb_167_deblock_edgex_xexit125 bb_168_deblock_edgex_xexit125 bb_171_deblock_edgex_xexit125 bb_172_deblock_edgex_xexit125 deblock_edge_intrax_xexit77_deblock_edgex_xexit125 deblock_edgex_xexit119_deblock_edgex_xexit125 deblock_edgex_xexit121_deblock_edgex_xexit125 deblock_edgex_xexit123_deblock_edgex_xexit125
    $endmerge
    // load 
    iNsTr_227 := ->(iNsTr_41) 
    iNsTr_228 := (iNsTr_227 & ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    // compare instruction
    iNsTr_229 := (iNsTr_228 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if iNsTr_229 $then  $place [deblock_edgex_xexit125_deblock_edge_intrax_xexit162] $else $place [deblock_edgex_xexit125_bb_174] $endif 
    //begin: basic-block bb_174
    $merge deblock_edgex_xexit125_bb_174
    $endmerge
    // compare instruction
    iNsTr_255 := (iNsTr_170 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    orx_xcond := (iNsTr_255 & xx_xnot326)
    $if orx_xcond $then  $place [bb_174_bb_175] $else $place [bb_174_xx_x_crit_edge276] $endif 
    //begin: basic-block bb_175
    $merge bb_174_bb_175
    $endmerge
    // load 
    iNsTr_318 := ->(iNsTr_45) 
    // compare instruction
    iNsTr_319 := (iNsTr_318 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if iNsTr_319 $then  $place [bb_175_bb_176] $else $place [bb_175_xx_x_crit_edge276] $endif 
    //begin: basic-block bb_176
    $merge bb_175_bb_176
    $endmerge
    // load 
    iNsTr_394 := ->(iNsTr_47) 
    // load 
    iNsTr_395 := ->(iNsTr_66) 
    iNsTr_396 := iNsTr_395[iNsTr_394]
    // load 
    iNsTr_397 := ->(iNsTr_396) 
    // compare instruction
    iNsTr_398 := (iNsTr_397 == ( $bitcast ($uint<8> ) _b00000000 )  )
    $if iNsTr_398 $then  $place [bb_176_xx_x_crit_edge276] $else $place [bb_176_bbx_xnph] $endif 
    //begin: basic-block bbx_xnph
    $merge bb_176_bbx_xnph
    $endmerge
    // load 
    iNsTr_551 := ->(iNsTr_42) 
    iNsTr_552 := (iNsTr_551 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_553 := (iNsTr_81 - iNsTr_552)
    iNsTr_554 := (iNsTr_188 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_555 := (iNsTr_192 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    tmp47 := (tmp46 * xx_x0210)
    tmp48 := (iNsTr_35 + tmp47)
    tmp49 := (mb_xx_x0209 * ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    tmp50 := (tmp48 + tmp49)
    tmp51 := (tmp50 - xx_xsum28)
    tmp54 := (tmp47 + tmp49)
    tmp55 := (tmp54 - xx_xsum28)
    tmp60 := (tmp59 * xx_x0210)
    tmp61 := (tmp49 + tmp60)
    tmp62 := (tmp61 - xx_xsum19)
    $place [bbx_xnph_bb_178]
    //begin: basic-block bb_178
    $merge bbx_xnph_bb_178 deblock_edgex_xexit131x_x_crit_edge_bb_178
    $phi jx_x0208 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph_bb_178 ( $cast ($uint<32>) iNsTr_1988) $on deblock_edgex_xexit131x_x_crit_edge_bb_178 
    $phi mbn_xyx_x0207 :=  ( $cast ($uint<32>) iNsTr_553) $on bbx_xnph_bb_178 ( $cast ($uint<32>) iNsTr_2163) $on deblock_edgex_xexit131x_x_crit_edge_bb_178 
    $endmerge
    tmp44 := (jx_x0208 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    tmp45 := (iNsTr_19 * jx_x0208)
    tmp52 := (tmp51 + tmp45)
    scevgep233 := iNsTr_179[tmp52]
    tmp56 := (tmp55 + tmp45)
    scevgep230 := iNsTr_179[tmp56]
    tmp58 := (iNsTr_17 * jx_x0208)
    tmp63 := (tmp62 + tmp58)
    scevgep227 := iNsTr_175[tmp63]
    tmp65 := (jx_x0208 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    scevgep66 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][tmp65][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    scevgep223224 := ($bitcast ($pointer< $uint<32> >) scevgep66)
    scevgep222 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][tmp65][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    scevgep221 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][tmp65][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    scevgep := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][tmp65][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    iNsTr_720 := ->(iNsTr_56) 
    iNsTr_721 := iNsTr_720[mbn_xyx_x0207]
    // load 
    iNsTr_722 := ->(iNsTr_721) 
    iNsTr_723 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_722) )
    iNsTr_724 := (iNsTr_554 + iNsTr_723)
    iNsTr_725 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_724) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )))
    // load 
    iNsTr_726 := ->(iNsTr_57) 
    iNsTr_727 := iNsTr_726[iNsTr_723]
    // load 
    iNsTr_728 := ->(iNsTr_727) 
    iNsTr_729 := ($cast ($uint<32>) iNsTr_728)
    iNsTr_730 := (iNsTr_555 + iNsTr_729)
    iNsTr_731 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_730) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )))
    // load 
    iNsTr_732 := ->(iNsTr_52) 
    iNsTr_733 := iNsTr_732[mbn_xyx_x0207]
    // load 
    iNsTr_734 := ->(iNsTr_733) 
    $switch iNsTr_734
    $when _b00000000 $then 
    $place [bb_178_xx_xthread]
    $when _b00000001 $then 
    $place [bb_178_xx_xthread]
    $when _b00000010 $then 
    $place [bb_178_xx_xthread]
    $default 
    $place [bb_178_bb_179]
    $endswitch
    //begin: basic-block bb_179
    $merge bb_178_bb_179
    $endmerge
    // compare instruction
    iNsTr_895 := (iNsTr_734 == ( $bitcast ($uint<8> ) _b00000011 )  )
    brmerge58 := (iNsTr_166 | iNsTr_895)
    $if brmerge58 $then  $place [bb_179_xx_xthread] $else $place [bb_179_xx_x_crit_edge268] $endif 
    //begin: basic-block xx_x_crit_edge268
    $merge bb_179_xx_x_crit_edge268
    $endmerge
    // load 
    xx_xpre291 := ->(scevgep223224) 
    $place [xx_x_crit_edge268_bb_182]
    //begin: basic-block xx_xthread
    $merge bb_178_xx_xthread bb_179_xx_xthread
    $endmerge
    ->(scevgep223224) := ( $bitcast ($uint<32> ) _b00000011000000110000001100000011 ) 
    $place [xx_xthread_bb_182]
    //begin: basic-block bb_182
    $merge xx_x_crit_edge268_bb_182 xx_xthread_bb_182
    $phi iNsTr_1185 :=  ( $cast ($uint<32>) xx_xpre291) $on xx_x_crit_edge268_bb_182 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000011000000110000001100000011 ) ) $on xx_xthread_bb_182 
    $endmerge
    iNsTr_1186 := (iNsTr_725 + iNsTr_3)
    iNsTr_1187 := (iNsTr_725 + iNsTr_5)
    iNsTr_1188 := (iNsTr_1186 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_1189 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[iNsTr_1188])
    // load 
    iNsTr_1190 := ->(iNsTr_1189) 
    iNsTr_1191 := ($cast ($uint<32>) iNsTr_1190)
    iNsTr_1192 := (iNsTr_1187 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_1193 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[iNsTr_1192])
    // load 
    iNsTr_1194 := ->(iNsTr_1193) 
    iNsTr_1195 := ($cast ($uint<32>) iNsTr_1194)
    // compare instruction
    iNsTr_1196 := (iNsTr_1185 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if iNsTr_1196 $then  $place [bb_182_deblock_edgex_xexit127] $else $place [bb_182_bb_183] $endif 
    //begin: basic-block bb_183
    $merge bb_182_bb_183
    $endmerge
    iNsTr_1501 := (iNsTr_1186 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_1502 := (iNsTr_1501 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_1502 $then  $place [bb_183_bb_184] $else $place [bb_183_deblock_edgex_xexit127] $endif 
    //begin: basic-block bb_184
    $merge bb_183_bb_184
    $endmerge
    iNsTr_1737 := (iNsTr_1187 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_1738 := (iNsTr_1737 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_1738 $then  $place [bb_184_bb_185] $else $place [bb_184_deblock_edgex_xexit127] $endif 
    //begin: basic-block bb_185
    $merge bb_184_bb_185
    $endmerge
    iNsTr_1996 := (iNsTr_1185 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    iNsTr_1997 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_1188][iNsTr_1996])
    // load 
    iNsTr_1998 := ->(iNsTr_1997) 
    ->(iNsTr_61) := iNsTr_1998
    // load 
    iNsTr_2000 := ->(scevgep222) 
    iNsTr_2001 := ($cast ($uint<32>) iNsTr_2000)
    iNsTr_2002 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_1188][iNsTr_2001])
    // load 
    iNsTr_2003 := ->(iNsTr_2002) 
    ->(iNsTr_62) := iNsTr_2003
    // load 
    iNsTr_2005 := ->(scevgep221) 
    iNsTr_2006 := ($cast ($uint<32>) iNsTr_2005)
    iNsTr_2007 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_1188][iNsTr_2006])
    // load 
    iNsTr_2008 := ->(iNsTr_2007) 
    ->(iNsTr_63) := iNsTr_2008
    // load 
    iNsTr_2010 := ->(scevgep) 
    iNsTr_2011 := ($cast ($uint<32>) iNsTr_2010)
    iNsTr_2012 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_1188][iNsTr_2011])
    // load 
    iNsTr_2013 := ->(iNsTr_2012) 
    ->(iNsTr_64) := iNsTr_2013
    $call deblock_luma_c (scevgep227 iNsTr_67 ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  iNsTr_1191 iNsTr_1195 iNsTr_61 )  ()
    // load 
    xx_xpre249 := ->(scevgep223224) 
    $place [bb_185_deblock_edgex_xexit127]
    //begin: basic-block deblock_edgex_xexit127
    $merge bb_182_deblock_edgex_xexit127 bb_183_deblock_edgex_xexit127 bb_184_deblock_edgex_xexit127 bb_185_deblock_edgex_xexit127
    $phi iNsTr_1488 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bb_182_deblock_edgex_xexit127 ( $cast ($uint<32>) iNsTr_1185) $on bb_183_deblock_edgex_xexit127 ( $cast ($uint<32>) iNsTr_1185) $on bb_184_deblock_edgex_xexit127 ( $cast ($uint<32>) xx_xpre249) $on bb_185_deblock_edgex_xexit127 
    $endmerge
    iNsTr_1489 := (iNsTr_731 + iNsTr_3)
    iNsTr_1490 := (iNsTr_731 + iNsTr_5)
    iNsTr_1491 := (iNsTr_1489 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_1492 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[iNsTr_1491])
    // load 
    iNsTr_1493 := ->(iNsTr_1492) 
    iNsTr_1494 := ($cast ($uint<32>) iNsTr_1493)
    iNsTr_1495 := (iNsTr_1490 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_1496 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[iNsTr_1495])
    // load 
    iNsTr_1497 := ->(iNsTr_1496) 
    iNsTr_1498 := ($cast ($uint<32>) iNsTr_1497)
    // compare instruction
    iNsTr_1499 := (iNsTr_1488 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if iNsTr_22 $then  $place [deblock_edgex_xexit127_bb_187] $else $place [deblock_edgex_xexit127_bb_193] $endif 
    //begin: basic-block bb_187
    $merge deblock_edgex_xexit127_bb_187
    $endmerge
    $if iNsTr_1499 $then  $place [bb_187_deblock_edgex_xexit131] $else $place [bb_187_bb_188] $endif 
    //begin: basic-block bb_188
    $merge bb_187_bb_188
    $endmerge
    iNsTr_1990 := (iNsTr_1489 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_1991 := (iNsTr_1990 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_1991 $then  $place [bb_188_bb_189] $else $place [bb_188_deblock_edgex_xexit131] $endif 
    //begin: basic-block bb_189
    $merge bb_188_bb_189
    $endmerge
    iNsTr_2165 := (iNsTr_1490 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_2166 := (iNsTr_2165 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_2166 $then  $place [bb_189_deblock_edgex_xexit129] $else $place [bb_189_bb_191] $endif 
    //begin: basic-block deblock_edgex_xexit129
    $merge bb_189_deblock_edgex_xexit129
    $endmerge
    iNsTr_2332 := (iNsTr_1488 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    iNsTr_2333 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_1491][iNsTr_2332])
    // load 
    iNsTr_2334 := ->(iNsTr_2333) 
    ->(iNsTr_61) := iNsTr_2334
    // load 
    iNsTr_2336 := ->(scevgep222) 
    iNsTr_2337 := ($cast ($uint<32>) iNsTr_2336)
    iNsTr_2338 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_1491][iNsTr_2337])
    // load 
    iNsTr_2339 := ->(iNsTr_2338) 
    ->(iNsTr_62) := iNsTr_2339
    // load 
    iNsTr_2341 := ->(scevgep221) 
    iNsTr_2342 := ($cast ($uint<32>) iNsTr_2341)
    iNsTr_2343 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_1491][iNsTr_2342])
    // load 
    iNsTr_2344 := ->(iNsTr_2343) 
    ->(iNsTr_63) := iNsTr_2344
    // load 
    iNsTr_2346 := ->(scevgep) 
    iNsTr_2347 := ($cast ($uint<32>) iNsTr_2346)
    iNsTr_2348 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_1491][iNsTr_2347])
    // load 
    iNsTr_2349 := ->(iNsTr_2348) 
    ->(iNsTr_64) := iNsTr_2349
    $call deblock_luma_c (scevgep230 iNsTr_68 ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  iNsTr_1494 iNsTr_1498 iNsTr_61 )  ()
    // load 
    xx_xpre250 := ->(scevgep223224) 
    // compare instruction
    iNsTr_2352 := (xx_xpre250 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if iNsTr_2352 $then  $place [deblock_edgex_xexit129_deblock_edgex_xexit131] $else $place [deblock_edgex_xexit129_bb_191] $endif 
    //begin: basic-block bb_191
    $merge bb_189_bb_191 deblock_edgex_xexit129_bb_191
    $phi xx_xph36 :=  ( $cast ($uint<32>) xx_xpre250) $on deblock_edgex_xexit129_bb_191 ( $cast ($uint<32>) iNsTr_1488) $on bb_189_bb_191 
    $endmerge
    iNsTr_2354 := (iNsTr_1490 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_2355 := (iNsTr_2354 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_2355 $then  $place [bb_191_bb_192] $else $place [bb_191_deblock_edgex_xexit131] $endif 
    //begin: basic-block bb_192
    $merge bb_191_bb_192
    $endmerge
    iNsTr_2500 := (xx_xph36 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    iNsTr_2501 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_1491][iNsTr_2500])
    // load 
    iNsTr_2502 := ->(iNsTr_2501) 
    ->(iNsTr_61) := iNsTr_2502
    // load 
    iNsTr_2504 := ->(scevgep222) 
    iNsTr_2505 := ($cast ($uint<32>) iNsTr_2504)
    iNsTr_2506 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_1491][iNsTr_2505])
    // load 
    iNsTr_2507 := ->(iNsTr_2506) 
    ->(iNsTr_62) := iNsTr_2507
    // load 
    iNsTr_2509 := ->(scevgep221) 
    iNsTr_2510 := ($cast ($uint<32>) iNsTr_2509)
    iNsTr_2511 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_1491][iNsTr_2510])
    // load 
    iNsTr_2512 := ->(iNsTr_2511) 
    ->(iNsTr_63) := iNsTr_2512
    // load 
    iNsTr_2514 := ->(scevgep) 
    iNsTr_2515 := ($cast ($uint<32>) iNsTr_2514)
    iNsTr_2516 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_1491][iNsTr_2515])
    // load 
    iNsTr_2517 := ->(iNsTr_2516) 
    ->(iNsTr_64) := iNsTr_2517
    $call deblock_luma_c (scevgep233 iNsTr_68 ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  iNsTr_1494 iNsTr_1498 iNsTr_61 )  ()
    $place [bb_192_deblock_edgex_xexit131]
    //begin: basic-block bb_193
    $merge deblock_edgex_xexit127_bb_193
    $endmerge
    $if iNsTr_1499 $then  $place [bb_193_deblock_edgex_xexit131] $else $place [bb_193_bb_194] $endif 
    //begin: basic-block bb_194
    $merge bb_193_bb_194
    $endmerge
    iNsTr_1993 := (iNsTr_1489 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_1994 := (iNsTr_1993 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_1994 $then  $place [bb_194_bb_195] $else $place [bb_194_deblock_edgex_xexit131] $endif 
    //begin: basic-block bb_195
    $merge bb_194_bb_195
    $endmerge
    iNsTr_2168 := (iNsTr_1490 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_2169 := (iNsTr_2168 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_2169 $then  $place [bb_195_bb_196] $else $place [bb_195_deblock_edgex_xexit131] $endif 
    //begin: basic-block bb_196
    $merge bb_195_bb_196
    $endmerge
    iNsTr_2357 := (iNsTr_1488 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    iNsTr_2358 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_1491][iNsTr_2357])
    // load 
    iNsTr_2359 := ->(iNsTr_2358) 
    iNsTr_2360 := (iNsTr_2359 + ( $bitcast ($uint<8> ) _b00000001 ) )
    ->(iNsTr_61) := iNsTr_2360
    // load 
    iNsTr_2362 := ->(scevgep222) 
    iNsTr_2363 := ($cast ($uint<32>) iNsTr_2362)
    iNsTr_2364 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_1491][iNsTr_2363])
    // load 
    iNsTr_2365 := ->(iNsTr_2364) 
    iNsTr_2366 := (iNsTr_2365 + ( $bitcast ($uint<8> ) _b00000001 ) )
    ->(iNsTr_62) := iNsTr_2366
    // load 
    iNsTr_2368 := ->(scevgep221) 
    iNsTr_2369 := ($cast ($uint<32>) iNsTr_2368)
    iNsTr_2370 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_1491][iNsTr_2369])
    // load 
    iNsTr_2371 := ->(iNsTr_2370) 
    iNsTr_2372 := (iNsTr_2371 + ( $bitcast ($uint<8> ) _b00000001 ) )
    ->(iNsTr_63) := iNsTr_2372
    // load 
    iNsTr_2374 := ->(scevgep) 
    iNsTr_2375 := ($cast ($uint<32>) iNsTr_2374)
    iNsTr_2376 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_1491][iNsTr_2375])
    // load 
    iNsTr_2377 := ->(iNsTr_2376) 
    iNsTr_2378 := (iNsTr_2377 + ( $bitcast ($uint<8> ) _b00000001 ) )
    ->(iNsTr_64) := iNsTr_2378
    $call deblock_v_chroma_c (scevgep230 iNsTr_68 iNsTr_1494 iNsTr_1498 iNsTr_61 )  ()
    $place [bb_196_deblock_edgex_xexit131]
    //begin: basic-block deblock_edgex_xexit131
    $merge bb_187_deblock_edgex_xexit131 bb_188_deblock_edgex_xexit131 bb_191_deblock_edgex_xexit131 bb_192_deblock_edgex_xexit131 bb_193_deblock_edgex_xexit131 bb_194_deblock_edgex_xexit131 bb_195_deblock_edgex_xexit131 bb_196_deblock_edgex_xexit131 deblock_edgex_xexit129_deblock_edgex_xexit131
    $endmerge
    iNsTr_1988 := (jx_x0208 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond219 := (tmp44 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )
    $if exitcond219 $then  $place [deblock_edgex_xexit131_deblock_edge_intrax_xexit162x_xloopexit43] $else $place [deblock_edgex_xexit131_deblock_edgex_xexit131x_x_crit_edge] $endif 
    //begin: basic-block deblock_edgex_xexit131x_x_crit_edge
    $merge deblock_edgex_xexit131_deblock_edgex_xexit131x_x_crit_edge
    $endmerge
    // load 
    iNsTr_2162 := ->(iNsTr_42) 
    iNsTr_2163 := (iNsTr_2162 + mbn_xyx_x0207)
    $place [deblock_edgex_xexit131x_x_crit_edge_bb_178]
    //begin: basic-block xx_x_crit_edge276
    $merge bb_174_xx_x_crit_edge276 bb_175_xx_x_crit_edge276 bb_176_xx_x_crit_edge276
    $endmerge
    // load 
    iNsTr_321 := ->(iNsTr_47) 
    // load 
    iNsTr_322 := ->(iNsTr_56) 
    iNsTr_323 := iNsTr_322[iNsTr_321]
    // load 
    iNsTr_324 := ->(iNsTr_323) 
    iNsTr_325 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_324) )
    iNsTr_326 := (iNsTr_188 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_327 := (iNsTr_326 + iNsTr_325)
    iNsTr_328 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_327) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )))
    // load 
    iNsTr_329 := ->(iNsTr_57) 
    iNsTr_330 := iNsTr_329[iNsTr_325]
    // load 
    iNsTr_331 := ->(iNsTr_330) 
    iNsTr_332 := ($cast ($uint<32>) iNsTr_331)
    iNsTr_333 := (iNsTr_192 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_334 := (iNsTr_333 + iNsTr_332)
    iNsTr_335 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_334) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )))
    // load 
    iNsTr_336 := ->(iNsTr_52) 
    iNsTr_337 := iNsTr_336[iNsTr_321]
    // load 
    iNsTr_338 := ->(iNsTr_337) 
    $switch iNsTr_338
    $when _b00000000 $then 
    $place [xx_x_crit_edge276_xx_x_crit_edge273]
    $when _b00000001 $then 
    $place [xx_x_crit_edge276_xx_x_crit_edge273]
    $when _b00000010 $then 
    $place [xx_x_crit_edge276_xx_x_crit_edge273]
    $default 
    $place [xx_x_crit_edge276_bb_200]
    $endswitch
    //begin: basic-block bb_200
    $merge xx_x_crit_edge276_bb_200
    $endmerge
    // compare instruction
    iNsTr_400 := (iNsTr_338 == ( $bitcast ($uint<8> ) _b00000011 )  )
    $place [bb_200_xx_x_crit_edge273]
    //begin: basic-block xx_x_crit_edge273
    $merge bb_200_xx_x_crit_edge273 xx_x_crit_edge276_xx_x_crit_edge273
    $phi iNsTr_402 :=  ( $cast ($uint<1>) iNsTr_400) $on bb_200_xx_x_crit_edge273 ( $cast ($uint<1>) ( $bitcast ($uint<1> ) _b1 ) ) $on xx_x_crit_edge276_xx_x_crit_edge273 
    $endmerge
    iNsTr_403 := (iNsTr_166 | iNsTr_402)
    // load 
    iNsTr_404 := ->(iNsTr_14) 
    iNsTr_405 := iNsTr_404[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001100100 ) ]
    // load 
    iNsTr_406 := ->(iNsTr_405) 
    // compare instruction
    iNsTr_407 := (iNsTr_406 == ( $bitcast ($pointer< $uint<8> > ) _b1111111111111111111111111111111111111111111111111111111111111111 )  )
    $if iNsTr_407 $then  $place [xx_x_crit_edge273_bb_204] $else $place [xx_x_crit_edge273_bb_202] $endif 
    //begin: basic-block bb_202
    $merge xx_x_crit_edge273_bb_202
    $endmerge
    iNsTr_558 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    iNsTr_559 := ($bitcast ($pointer< $uint<32> >) iNsTr_558)
    // load 
    iNsTr_560 := ->(iNsTr_559) 
    // compare instruction
    iNsTr_561 := (iNsTr_560 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if iNsTr_561 $then  $place [bb_202_bb_204] $else $place [bb_202_bb_203] $endif 
    //begin: basic-block bb_203
    $merge bb_202_bb_203
    $endmerge
    iNsTr_740 := iNsTr_406[iNsTr_81]
    // load 
    iNsTr_741 := ->(iNsTr_740) 
    iNsTr_742 := (iNsTr_741 & ( $bitcast ($uint<8> ) _b00000001 ) )
    tmp := (( $bitcast ($uint<8> ) _b00000000 )  - iNsTr_742)
    iNsTr_743 := iNsTr_404[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000110111 ) ]
    // load 
    iNsTr_744 := ->(iNsTr_743) 
    iNsTr_745 := iNsTr_744[iNsTr_81]
    // load 
    iNsTr_746 := ->(iNsTr_745) 
    iNsTr_747 := (iNsTr_746 | tmp)
    ->(iNsTr_745) := iNsTr_747
    // load 
    iNsTr_749 := ->(iNsTr_47) 
    // load 
    iNsTr_750 := ->(iNsTr_14) 
    iNsTr_751 := iNsTr_750[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001100100 ) ]
    // load 
    iNsTr_752 := ->(iNsTr_751) 
    iNsTr_753 := iNsTr_752[iNsTr_749]
    // load 
    iNsTr_754 := ->(iNsTr_753) 
    iNsTr_755 := (iNsTr_754 & ( $bitcast ($uint<8> ) _b00000001 ) )
    tmp10 := (( $bitcast ($uint<8> ) _b00000000 )  - iNsTr_755)
    iNsTr_756 := iNsTr_750[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000110111 ) ]
    // load 
    iNsTr_757 := ->(iNsTr_756) 
    iNsTr_758 := iNsTr_757[iNsTr_749]
    // load 
    iNsTr_759 := ->(iNsTr_758) 
    iNsTr_760 := (iNsTr_759 | tmp10)
    ->(iNsTr_758) := iNsTr_760
    $place [bb_203_bb_204]
    //begin: basic-block bb_204
    $merge bb_202_bb_204 bb_203_bb_204 xx_x_crit_edge273_bb_204
    $endmerge
    $if iNsTr_65 $then  $place [bb_204_bb_207] $else $place [bb_204_bb_205] $endif 
    //begin: basic-block bb_205
    $merge bb_204_bb_205
    $endmerge
    // load 
    iNsTr_737 := ->(iNsTr_45) 
    // compare instruction
    iNsTr_738 := (iNsTr_737 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if iNsTr_738 $then  $place [bb_205_bb_206] $else $place [bb_205_bb_234] $endif 
    //begin: basic-block bb_206
    $merge bb_205_bb_206
    $endmerge
    // load 
    iNsTr_927 := ->(iNsTr_47) 
    // load 
    iNsTr_928 := ->(iNsTr_66) 
    iNsTr_929 := iNsTr_928[iNsTr_927]
    // load 
    iNsTr_930 := ->(iNsTr_929) 
    // compare instruction
    xx_xnot59 := ( ($bitcast ( $int<8>) iNsTr_930) !=   ($bitcast ( $int<8>) ( $bitcast ($uint<8> ) _b00000000 )  ) )
    xx_xnot60 := (iNsTr_403 ^ ( $bitcast ($uint<1> ) _b1 ) )
    brmerge61 := (xx_xnot59 | xx_xnot60)
    $if brmerge61 $then  $place [bb_206_bb_234] $else $place [bb_206_bb_208] $endif 
    //begin: basic-block bb_207
    $merge bb_204_bb_207
    $endmerge
    $if iNsTr_403 $then  $place [bb_207_bb_208] $else $place [bb_207_xx_xcritedge] $endif 
    //begin: basic-block bb_208
    $merge bb_206_bb_208 bb_207_bb_208
    $endmerge
    iNsTr_899 := (iNsTr_328 + iNsTr_3)
    iNsTr_900 := (iNsTr_328 + iNsTr_5)
    iNsTr_901 := (iNsTr_899 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_902 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[iNsTr_901])
    // load 
    iNsTr_903 := ->(iNsTr_902) 
    iNsTr_904 := ($cast ($uint<32>) iNsTr_903)
    iNsTr_905 := (iNsTr_900 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_906 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[iNsTr_905])
    // load 
    iNsTr_907 := ->(iNsTr_906) 
    iNsTr_908 := ($cast ($uint<32>) iNsTr_907)
    iNsTr_909 := (iNsTr_899 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_910 := (iNsTr_909 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_910 $then  $place [bb_208_bb_209] $else $place [bb_208_deblock_edge_intrax_xexit135] $endif 
    //begin: basic-block bb_209
    $merge bb_208_bb_209
    $endmerge
    iNsTr_1198 := (iNsTr_900 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_1199 := (iNsTr_1198 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_1199 $then  $place [bb_209_bb_210] $else $place [bb_209_deblock_edge_intrax_xexit135] $endif 
    //begin: basic-block bb_210
    $merge bb_209_bb_210
    $endmerge
    $call deblock_luma_intra_c (pixyx_x0 iNsTr_183 ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  iNsTr_904 iNsTr_908 )  ()
    $place [bb_210_deblock_edge_intrax_xexit135]
    //begin: basic-block deblock_edge_intrax_xexit135
    $merge bb_208_deblock_edge_intrax_xexit135 bb_209_deblock_edge_intrax_xexit135 bb_210_deblock_edge_intrax_xexit135
    $endmerge
    // load 
    iNsTr_1201 := ->(iNsTr_20) 
    $switch iNsTr_1201
    $when _b00000000000000000000000000000011 $then 
    $place [deblock_edge_intrax_xexit135_bb_212]
    $when _b00000000000000000000000000000001 $then 
    $place [deblock_edge_intrax_xexit135_bb_215]
    $default 
    $place [deblock_edge_intrax_xexit135_deblock_edge_intrax_xexit139]
    $endswitch
    //begin: basic-block bb_212
    $merge deblock_edge_intrax_xexit135_bb_212
    $endmerge
    iNsTr_1509 := (iNsTr_335 + iNsTr_3)
    iNsTr_1510 := (iNsTr_335 + iNsTr_5)
    iNsTr_1511 := (iNsTr_1509 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_1512 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[iNsTr_1511])
    // load 
    iNsTr_1513 := ->(iNsTr_1512) 
    iNsTr_1514 := ($cast ($uint<32>) iNsTr_1513)
    iNsTr_1515 := (iNsTr_1510 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_1516 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[iNsTr_1515])
    // load 
    iNsTr_1517 := ->(iNsTr_1516) 
    iNsTr_1518 := ($cast ($uint<32>) iNsTr_1517)
    iNsTr_1519 := (iNsTr_1509 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_1520 := (iNsTr_1519 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_1520 $then  $place [bb_212_bb_213] $else $place [bb_212_deblock_edge_intrax_xexit139threadx_xprex_xsplit] $endif 
    //begin: basic-block bb_213
    $merge bb_212_bb_213
    $endmerge
    iNsTr_1753 := (iNsTr_1510 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_1754 := (iNsTr_1753 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_1754 $then  $place [bb_213_bb_214] $else $place [bb_213_deblock_edge_intrax_xexit139threadx_xprex_xsplit] $endif 
    //begin: basic-block bb_214
    $merge bb_213_bb_214
    $endmerge
    $call deblock_luma_intra_c (pixuvx_x0 iNsTr_184 ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  iNsTr_1514 iNsTr_1518 )  ()
    pixuvx_x0x_xsum47306 := (xx_xsum28x_xpn + iNsTr_35)
    iNsTr_2021 := iNsTr_179[pixuvx_x0x_xsum47306]
    $call deblock_luma_intra_c (iNsTr_2021 iNsTr_184 ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  iNsTr_1514 iNsTr_1518 )  ()
    $place [bb_214_deblock_edge_intrax_xexit139threadx_xprex_xsplit]
    //begin: basic-block bb_215
    $merge deblock_edge_intrax_xexit135_bb_215
    $endmerge
    iNsTr_1522 := (iNsTr_335 + iNsTr_3)
    iNsTr_1523 := (iNsTr_335 + iNsTr_5)
    iNsTr_1524 := (iNsTr_1522 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_1525 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[iNsTr_1524])
    // load 
    iNsTr_1526 := ->(iNsTr_1525) 
    iNsTr_1527 := ($cast ($uint<32>) iNsTr_1526)
    iNsTr_1528 := (iNsTr_1523 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_1529 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[iNsTr_1528])
    // load 
    iNsTr_1530 := ->(iNsTr_1529) 
    iNsTr_1531 := ($cast ($uint<32>) iNsTr_1530)
    iNsTr_1532 := (iNsTr_1522 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_1533 := (iNsTr_1532 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_1533 $then  $place [bb_215_bb_216] $else $place [bb_215_deblock_edge_intrax_xexit139threadx_xprex_xsplit] $endif 
    //begin: basic-block bb_216
    $merge bb_215_bb_216
    $endmerge
    iNsTr_1757 := (iNsTr_1523 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_1758 := (iNsTr_1757 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_1758 $then  $place [bb_216_bb_217] $else $place [bb_216_deblock_edge_intrax_xexit139threadx_xprex_xsplit] $endif 
    //begin: basic-block bb_217
    $merge bb_216_bb_217
    $endmerge
    tmp25 := (tmp24 * xx_x0210)
    tmp26 := (iNsTr_184 + tmp25)
    tmp27 := (mb_xx_x0209 * ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    tmp28 := (tmp26 + tmp27)
    tmp29 := (tmp28 - xx_xsum28)
    tmp32 := (tmp25 + tmp27)
    tmp33 := (tmp32 - xx_xsum28)
    tmp34 := (iNsTr_184 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    tmp35 := (tmp33 - tmp34)
    tmp40 := (tmp33 - iNsTr_184)
    $place [bb_217_bbx_xnphx_xix_xix_xi]
    //begin: basic-block bbx_xnphx_xix_xix_xi
    $merge bb_217_bbx_xnphx_xix_xix_xi xx_x_crit_edgex_xix_xix_xi_bbx_xnphx_xix_xix_xi
    $phi dx_x03x_xix_xix_xi :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bb_217_bbx_xnphx_xix_xix_xi ( $cast ($uint<32>) iNsTr_2398) $on xx_x_crit_edgex_xix_xix_xi_bbx_xnphx_xix_xix_xi 
    $endmerge
    tmp30 := (tmp29 + dx_x03x_xix_xix_xi)
    scevgep12x_xix_xix_xi := iNsTr_179[tmp30]
    tmp36 := (tmp35 + dx_x03x_xix_xix_xi)
    scevgep7x_xix_xix_xi := iNsTr_179[tmp36]
    tmp38 := (tmp33 + dx_x03x_xix_xix_xi)
    xx_x02x_xix_xix_xi := iNsTr_179[tmp38]
    tmp41 := (tmp40 + dx_x03x_xix_xix_xi)
    scevgep9x_xix_xix_xi := iNsTr_179[tmp41]
    // load 
    iNsTr_2172 := ->(scevgep7x_xix_xix_xi) 
    iNsTr_2173 := ($cast ($uint<32>) iNsTr_2172)
    // load 
    iNsTr_2174 := ->(scevgep9x_xix_xix_xi) 
    iNsTr_2175 := ($cast ($uint<32>) iNsTr_2174)
    // load 
    iNsTr_2176 := ->(xx_x02x_xix_xix_xi) 
    iNsTr_2177 := ($cast ($uint<32>) iNsTr_2176)
    // load 
    iNsTr_2178 := ->(scevgep12x_xix_xix_xi) 
    iNsTr_2179 := ($cast ($uint<32>) iNsTr_2178)
    iNsTr_2180 := (iNsTr_2175 - iNsTr_2177)
    // compare instruction
    isposx_xix_xix_xix_xi := ( ($bitcast ( $int<32>) iNsTr_2180) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xix_xix_xix_xi := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_2180)
    iNsTr_2181 := ( $mux isposx_xix_xix_xix_xi iNsTr_2180 negx_xix_xix_xix_xi)
    // compare instruction
    iNsTr_2182 := ( ($bitcast ( $int<32>) iNsTr_2181) <   ($bitcast ( $int<32>) iNsTr_1527 ) )
    $if iNsTr_2182 $then  $place [bbx_xnphx_xix_xix_xi_bb_219] $else $place [bbx_xnphx_xix_xix_xi_xx_x_crit_edgex_xix_xix_xi] $endif 
    //begin: basic-block bb_219
    $merge bbx_xnphx_xix_xix_xi_bb_219
    $endmerge
    iNsTr_2394 := (iNsTr_2173 - iNsTr_2175)
    // compare instruction
    ispos1x_xix_xix_xix_xi := ( ($bitcast ( $int<32>) iNsTr_2394) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    neg2x_xix_xix_xix_xi := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_2394)
    iNsTr_2395 := ( $mux ispos1x_xix_xix_xix_xi iNsTr_2394 neg2x_xix_xix_xix_xi)
    // compare instruction
    iNsTr_2396 := ( ($bitcast ( $int<32>) iNsTr_2395) <   ($bitcast ( $int<32>) iNsTr_1531 ) )
    $if iNsTr_2396 $then  $place [bb_219_bb_220] $else $place [bb_219_xx_x_crit_edgex_xix_xix_xi] $endif 
    //begin: basic-block bb_220
    $merge bb_219_bb_220
    $endmerge
    iNsTr_2527 := (iNsTr_2179 - iNsTr_2177)
    // compare instruction
    ispos3x_xix_xix_xix_xi := ( ($bitcast ( $int<32>) iNsTr_2527) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    neg4x_xix_xix_xix_xi := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_2527)
    iNsTr_2528 := ( $mux ispos3x_xix_xix_xix_xi iNsTr_2527 neg4x_xix_xix_xix_xi)
    // compare instruction
    iNsTr_2529 := ( ($bitcast ( $int<32>) iNsTr_2528) <   ($bitcast ( $int<32>) iNsTr_1531 ) )
    $if iNsTr_2529 $then  $place [bb_220_bb_221] $else $place [bb_220_xx_x_crit_edgex_xix_xix_xi] $endif 
    //begin: basic-block bb_221
    $merge bb_220_bb_221
    $endmerge
    iNsTr_2596 := (iNsTr_2173 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_2597 := (iNsTr_2175 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_2598 := (iNsTr_2597 + iNsTr_2596)
    iNsTr_2599 := (iNsTr_2598 + iNsTr_2179)
    iNsTr_2600 := (iNsTr_2599 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_2601 := ($cast ($uint<8>) iNsTr_2600)
    ->(scevgep9x_xix_xix_xi) := iNsTr_2601
    iNsTr_2603 := (iNsTr_2179 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_2604 := (iNsTr_2173 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_2605 := (iNsTr_2604 + iNsTr_2177)
    iNsTr_2606 := (iNsTr_2605 + iNsTr_2603)
    iNsTr_2607 := (iNsTr_2606 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_2608 := ($cast ($uint<8>) iNsTr_2607)
    ->(xx_x02x_xix_xix_xi) := iNsTr_2608
    $place [bb_221_xx_x_crit_edgex_xix_xix_xi]
    //begin: basic-block xx_x_crit_edgex_xix_xix_xi
    $merge bb_219_xx_x_crit_edgex_xix_xix_xi bb_220_xx_x_crit_edgex_xix_xix_xi bb_221_xx_x_crit_edgex_xix_xix_xi bbx_xnphx_xix_xix_xi_xx_x_crit_edgex_xix_xix_xi
    $endmerge
    iNsTr_2398 := (dx_x03x_xix_xix_xi + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond := (iNsTr_2398 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond $then  $place [xx_x_crit_edgex_xix_xix_xi_deblock_edge_intrax_xexit139threadx_xprex_xsplitx_xloopexit] $else $place [xx_x_crit_edgex_xix_xix_xi_bbx_xnphx_xix_xix_xi] $endif 
    //begin: basic-block deblock_edge_intrax_xexit139threadx_xprex_xsplitx_xloopexit
    $merge xx_x_crit_edgex_xix_xix_xi_deblock_edge_intrax_xexit139threadx_xprex_xsplitx_xloopexit
    $endmerge
    $place [deblock_edge_intrax_xexit139threadx_xprex_xsplitx_xloopexit_deblock_edge_intrax_xexit139threadx_xprex_xsplit]
    //begin: basic-block deblock_edge_intrax_xexit139threadx_xprex_xsplit
    $merge bb_212_deblock_edge_intrax_xexit139threadx_xprex_xsplit bb_213_deblock_edge_intrax_xexit139threadx_xprex_xsplit bb_214_deblock_edge_intrax_xexit139threadx_xprex_xsplit bb_215_deblock_edge_intrax_xexit139threadx_xprex_xsplit bb_216_deblock_edge_intrax_xexit139threadx_xprex_xsplit deblock_edge_intrax_xexit139threadx_xprex_xsplitx_xloopexit_deblock_edge_intrax_xexit139threadx_xprex_xsplit
    $endmerge
    // load 
    xx_xpr4 := ->(iNsTr_20) 
    $place [deblock_edge_intrax_xexit139threadx_xprex_xsplit_deblock_edge_intrax_xexit139]
    //begin: basic-block deblock_edge_intrax_xexit139
    $merge deblock_edge_intrax_xexit135_deblock_edge_intrax_xexit139 deblock_edge_intrax_xexit139threadx_xprex_xsplit_deblock_edge_intrax_xexit139
    $phi iNsTr_1506 :=  ( $cast ($uint<32>) xx_xpr4) $on deblock_edge_intrax_xexit139threadx_xprex_xsplit_deblock_edge_intrax_xexit139 ( $cast ($uint<32>) iNsTr_1201) $on deblock_edge_intrax_xexit135_deblock_edge_intrax_xexit139 
    $endmerge
    // compare instruction
    iNsTr_1507 := (iNsTr_1506 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )
    $if iNsTr_1507 $then  $place [deblock_edge_intrax_xexit139_bb_226] $else $place [deblock_edge_intrax_xexit139_deblock_edge_intrax_xexit162] $endif 
    //begin: basic-block bb_226
    $merge deblock_edge_intrax_xexit139_bb_226
    $endmerge
    iNsTr_1740 := (iNsTr_335 + iNsTr_3)
    iNsTr_1741 := (iNsTr_335 + iNsTr_5)
    iNsTr_1742 := (iNsTr_1740 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_1743 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[iNsTr_1742])
    // load 
    iNsTr_1744 := ->(iNsTr_1743) 
    iNsTr_1745 := ($cast ($uint<32>) iNsTr_1744)
    iNsTr_1746 := (iNsTr_1741 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_1747 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[iNsTr_1746])
    // load 
    iNsTr_1748 := ->(iNsTr_1747) 
    iNsTr_1749 := ($cast ($uint<32>) iNsTr_1748)
    iNsTr_1750 := (iNsTr_1740 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_1751 := (iNsTr_1750 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_1751 $then  $place [bb_226_bb_227] $else $place [bb_226_deblock_edge_intrax_xexit162] $endif 
    //begin: basic-block bb_227
    $merge bb_226_bb_227
    $endmerge
    iNsTr_2017 := (iNsTr_1741 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_2018 := (iNsTr_2017 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_2018 $then  $place [bb_227_bb_228] $else $place [bb_227_deblock_edge_intrax_xexit162] $endif 
    //begin: basic-block bb_228
    $merge bb_227_bb_228
    $endmerge
    tmp3 := (tmp2 * xx_x0210)
    tmp4 := (iNsTr_184 + tmp3)
    tmp5 := (mb_xx_x0209 * ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    tmp6 := (tmp4 + tmp5)
    tmp7 := (tmp6 - xx_xsum28)
    tmp11 := (tmp3 + tmp5)
    tmp12 := (tmp11 - xx_xsum28)
    tmp13 := (iNsTr_184 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    tmp14 := (tmp12 - tmp13)
    tmp21 := (tmp12 - iNsTr_184)
    $place [bb_228_bbx_xnphx_xix_xix_xi154]
    //begin: basic-block bbx_xnphx_xix_xix_xi154
    $merge bb_228_bbx_xnphx_xix_xix_xi154 xx_x_crit_edgex_xix_xix_xi160_bbx_xnphx_xix_xix_xi154
    $phi dx_x03x_xix_xix_xi144 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bb_228_bbx_xnphx_xix_xix_xi154 ( $cast ($uint<32>) iNsTr_2525) $on xx_x_crit_edgex_xix_xix_xi160_bbx_xnphx_xix_xix_xi154 
    $endmerge
    tmp8 := (tmp7 + dx_x03x_xix_xix_xi144)
    scevgep12x_xix_xix_xi146 := iNsTr_179[tmp8]
    tmp17 := (tmp14 + dx_x03x_xix_xix_xi144)
    scevgep7x_xix_xix_xi148 := iNsTr_179[tmp17]
    tmp19 := (tmp12 + dx_x03x_xix_xix_xi144)
    xx_x02x_xix_xix_xi149 := iNsTr_179[tmp19]
    tmp22 := (tmp21 + dx_x03x_xix_xix_xi144)
    scevgep9x_xix_xix_xi151 := iNsTr_179[tmp22]
    // load 
    iNsTr_2382 := ->(scevgep7x_xix_xix_xi148) 
    iNsTr_2383 := ($cast ($uint<32>) iNsTr_2382)
    // load 
    iNsTr_2384 := ->(scevgep9x_xix_xix_xi151) 
    iNsTr_2385 := ($cast ($uint<32>) iNsTr_2384)
    // load 
    iNsTr_2386 := ->(xx_x02x_xix_xix_xi149) 
    iNsTr_2387 := ($cast ($uint<32>) iNsTr_2386)
    // load 
    iNsTr_2388 := ->(scevgep12x_xix_xix_xi146) 
    iNsTr_2389 := ($cast ($uint<32>) iNsTr_2388)
    iNsTr_2390 := (iNsTr_2385 - iNsTr_2387)
    // compare instruction
    isposx_xix_xix_xix_xi152 := ( ($bitcast ( $int<32>) iNsTr_2390) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    negx_xix_xix_xix_xi153 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_2390)
    iNsTr_2391 := ( $mux isposx_xix_xix_xix_xi152 iNsTr_2390 negx_xix_xix_xix_xi153)
    // compare instruction
    iNsTr_2392 := ( ($bitcast ( $int<32>) iNsTr_2391) <   ($bitcast ( $int<32>) iNsTr_1745 ) )
    $if iNsTr_2392 $then  $place [bbx_xnphx_xix_xix_xi154_bb_230] $else $place [bbx_xnphx_xix_xix_xi154_xx_x_crit_edgex_xix_xix_xi160] $endif 
    //begin: basic-block bb_230
    $merge bbx_xnphx_xix_xix_xi154_bb_230
    $endmerge
    iNsTr_2521 := (iNsTr_2383 - iNsTr_2385)
    // compare instruction
    ispos1x_xix_xix_xix_xi155 := ( ($bitcast ( $int<32>) iNsTr_2521) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    neg2x_xix_xix_xix_xi156 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_2521)
    iNsTr_2522 := ( $mux ispos1x_xix_xix_xix_xi155 iNsTr_2521 neg2x_xix_xix_xix_xi156)
    // compare instruction
    iNsTr_2523 := ( ($bitcast ( $int<32>) iNsTr_2522) <   ($bitcast ( $int<32>) iNsTr_1749 ) )
    $if iNsTr_2523 $then  $place [bb_230_bb_231] $else $place [bb_230_xx_x_crit_edgex_xix_xix_xi160] $endif 
    //begin: basic-block bb_231
    $merge bb_230_bb_231
    $endmerge
    iNsTr_2591 := (iNsTr_2389 - iNsTr_2387)
    // compare instruction
    ispos3x_xix_xix_xix_xi157 := ( ($bitcast ( $int<32>) iNsTr_2591) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ) )
    neg4x_xix_xix_xix_xi158 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - iNsTr_2591)
    iNsTr_2592 := ( $mux ispos3x_xix_xix_xix_xi157 iNsTr_2591 neg4x_xix_xix_xix_xi158)
    // compare instruction
    iNsTr_2593 := ( ($bitcast ( $int<32>) iNsTr_2592) <   ($bitcast ( $int<32>) iNsTr_1749 ) )
    $if iNsTr_2593 $then  $place [bb_231_bb_232] $else $place [bb_231_xx_x_crit_edgex_xix_xix_xi160] $endif 
    //begin: basic-block bb_232
    $merge bb_231_bb_232
    $endmerge
    iNsTr_2672 := (iNsTr_2383 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_2673 := (iNsTr_2385 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_2674 := (iNsTr_2673 + iNsTr_2672)
    iNsTr_2675 := (iNsTr_2674 + iNsTr_2389)
    iNsTr_2676 := (iNsTr_2675 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_2677 := ($cast ($uint<8>) iNsTr_2676)
    ->(scevgep9x_xix_xix_xi151) := iNsTr_2677
    iNsTr_2679 := (iNsTr_2389 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_2680 := (iNsTr_2383 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_2681 := (iNsTr_2680 + iNsTr_2387)
    iNsTr_2682 := (iNsTr_2681 + iNsTr_2679)
    iNsTr_2683 := (iNsTr_2682 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    iNsTr_2684 := ($cast ($uint<8>) iNsTr_2683)
    ->(xx_x02x_xix_xix_xi149) := iNsTr_2684
    $place [bb_232_xx_x_crit_edgex_xix_xix_xi160]
    //begin: basic-block xx_x_crit_edgex_xix_xix_xi160
    $merge bb_230_xx_x_crit_edgex_xix_xix_xi160 bb_231_xx_x_crit_edgex_xix_xix_xi160 bb_232_xx_x_crit_edgex_xix_xix_xi160 bbx_xnphx_xix_xix_xi154_xx_x_crit_edgex_xix_xix_xi160
    $endmerge
    iNsTr_2525 := (dx_x03x_xix_xix_xi144 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (iNsTr_2525 == ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 )  )
    $if exitcond1 $then  $place [xx_x_crit_edgex_xix_xix_xi160_deblock_edge_intrax_xexit162x_xloopexit] $else $place [xx_x_crit_edgex_xix_xix_xi160_bbx_xnphx_xix_xix_xi154] $endif 
    //begin: basic-block bb_234
    $merge bb_205_bb_234 bb_206_bb_234
    $endmerge
    $if iNsTr_403 $then  $place [bb_234_bb_235] $else $place [bb_234_xx_xcritedge] $endif 
    //begin: basic-block bb_235
    $merge bb_234_bb_235
    $endmerge
    iNsTr_1208 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    iNsTr_1209 := ($bitcast ($pointer< $uint<32> >) iNsTr_1208)
    ->(iNsTr_1209) := ( $bitcast ($uint<32> ) _b00000011000000110000001100000011 ) 
    $place [bb_235_xx_xcritedge]
    //begin: basic-block xx_xcritedge
    $merge bb_207_xx_xcritedge bb_234_xx_xcritedge bb_235_xx_xcritedge
    $endmerge
    iNsTr_912 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    iNsTr_913 := (iNsTr_328 + iNsTr_3)
    iNsTr_914 := (iNsTr_328 + iNsTr_5)
    iNsTr_915 := (iNsTr_913 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_916 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[iNsTr_915])
    // load 
    iNsTr_917 := ->(iNsTr_916) 
    iNsTr_918 := ($cast ($uint<32>) iNsTr_917)
    iNsTr_919 := (iNsTr_914 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_920 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[iNsTr_919])
    // load 
    iNsTr_921 := ->(iNsTr_920) 
    iNsTr_922 := ($cast ($uint<32>) iNsTr_921)
    iNsTr_923 := ($bitcast ($pointer< $uint<32> >) iNsTr_912)
    // load 
    iNsTr_924 := ->(iNsTr_923) 
    // compare instruction
    iNsTr_925 := (iNsTr_924 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if iNsTr_925 $then  $place [xx_xcritedge_deblock_edgex_xexit166] $else $place [xx_xcritedge_bb_237] $endif 
    //begin: basic-block bb_237
    $merge xx_xcritedge_bb_237
    $endmerge
    iNsTr_1205 := (iNsTr_913 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_1206 := (iNsTr_1205 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_1206 $then  $place [bb_237_bb_238] $else $place [bb_237_deblock_edgex_xexit166] $endif 
    //begin: basic-block bb_238
    $merge bb_237_bb_238
    $endmerge
    iNsTr_1564 := (iNsTr_914 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_1565 := (iNsTr_1564 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_1565 $then  $place [bb_238_bb_239] $else $place [bb_238_deblock_edgex_xexit166] $endif 
    //begin: basic-block bb_239
    $merge bb_238_bb_239
    $endmerge
    iNsTr_1780 := (iNsTr_924 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    iNsTr_1781 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_915][iNsTr_1780])
    // load 
    iNsTr_1782 := ->(iNsTr_1781) 
    ->(iNsTr_61) := iNsTr_1782
    iNsTr_1784 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_1785 := ->(iNsTr_1784) 
    iNsTr_1786 := ($cast ($uint<32>) iNsTr_1785)
    iNsTr_1787 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_915][iNsTr_1786])
    // load 
    iNsTr_1788 := ->(iNsTr_1787) 
    ->(iNsTr_62) := iNsTr_1788
    iNsTr_1790 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_1791 := ->(iNsTr_1790) 
    iNsTr_1792 := ($cast ($uint<32>) iNsTr_1791)
    iNsTr_1793 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_915][iNsTr_1792])
    // load 
    iNsTr_1794 := ->(iNsTr_1793) 
    ->(iNsTr_63) := iNsTr_1794
    iNsTr_1796 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    iNsTr_1797 := ->(iNsTr_1796) 
    iNsTr_1798 := ($cast ($uint<32>) iNsTr_1797)
    iNsTr_1799 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_915][iNsTr_1798])
    // load 
    iNsTr_1800 := ->(iNsTr_1799) 
    ->(iNsTr_64) := iNsTr_1800
    $call deblock_luma_c (pixyx_x0 iNsTr_183 ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  iNsTr_918 iNsTr_922 iNsTr_61 )  ()
    $place [bb_239_deblock_edgex_xexit166]
    //begin: basic-block deblock_edgex_xexit166
    $merge bb_237_deblock_edgex_xexit166 bb_238_deblock_edgex_xexit166 bb_239_deblock_edgex_xexit166 xx_xcritedge_deblock_edgex_xexit166
    $endmerge
    // load 
    iNsTr_1203 := ->(iNsTr_20) 
    $switch iNsTr_1203
    $when _b00000000000000000000000000000011 $then 
    $place [deblock_edgex_xexit166_bb_241]
    $when _b00000000000000000000000000000001 $then 
    $place [deblock_edgex_xexit166_bb_247]
    $default 
    $place [deblock_edgex_xexit166_deblock_edgex_xexit170]
    $endswitch
    //begin: basic-block bb_241
    $merge deblock_edgex_xexit166_bb_241
    $endmerge
    iNsTr_1538 := (iNsTr_335 + iNsTr_3)
    iNsTr_1539 := (iNsTr_335 + iNsTr_5)
    iNsTr_1540 := (iNsTr_1538 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_1541 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[iNsTr_1540])
    // load 
    iNsTr_1542 := ->(iNsTr_1541) 
    iNsTr_1543 := ($cast ($uint<32>) iNsTr_1542)
    iNsTr_1544 := (iNsTr_1539 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_1545 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[iNsTr_1544])
    // load 
    iNsTr_1546 := ->(iNsTr_1545) 
    iNsTr_1547 := ($cast ($uint<32>) iNsTr_1546)
    // load 
    iNsTr_1548 := ->(iNsTr_923) 
    // compare instruction
    iNsTr_1549 := (iNsTr_1548 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if iNsTr_1549 $then  $place [bb_241_deblock_edgex_xexit170threadx_xprex_xsplit] $else $place [bb_241_bb_242] $endif 
    //begin: basic-block bb_242
    $merge bb_241_bb_242
    $endmerge
    iNsTr_1774 := (iNsTr_1538 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_1775 := (iNsTr_1774 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_1775 $then  $place [bb_242_bb_243] $else $place [bb_242_deblock_edgex_xexit170threadx_xprex_xsplit] $endif 
    //begin: basic-block bb_243
    $merge bb_242_bb_243
    $endmerge
    iNsTr_2028 := (iNsTr_1539 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_2029 := (iNsTr_2028 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_2029 $then  $place [bb_243_deblock_edgex_xexit168] $else $place [bb_243_bb_245] $endif 
    //begin: basic-block deblock_edgex_xexit168
    $merge bb_243_deblock_edgex_xexit168
    $endmerge
    iNsTr_2187 := (iNsTr_1548 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    iNsTr_2188 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_1540][iNsTr_2187])
    // load 
    iNsTr_2189 := ->(iNsTr_2188) 
    ->(iNsTr_61) := iNsTr_2189
    iNsTr_2191 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_2192 := ->(iNsTr_2191) 
    iNsTr_2193 := ($cast ($uint<32>) iNsTr_2192)
    iNsTr_2194 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_1540][iNsTr_2193])
    // load 
    iNsTr_2195 := ->(iNsTr_2194) 
    ->(iNsTr_62) := iNsTr_2195
    iNsTr_2197 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_2198 := ->(iNsTr_2197) 
    iNsTr_2199 := ($cast ($uint<32>) iNsTr_2198)
    iNsTr_2200 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_1540][iNsTr_2199])
    // load 
    iNsTr_2201 := ->(iNsTr_2200) 
    ->(iNsTr_63) := iNsTr_2201
    iNsTr_2203 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    iNsTr_2204 := ->(iNsTr_2203) 
    iNsTr_2205 := ($cast ($uint<32>) iNsTr_2204)
    iNsTr_2206 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_1540][iNsTr_2205])
    // load 
    iNsTr_2207 := ->(iNsTr_2206) 
    ->(iNsTr_64) := iNsTr_2207
    $call deblock_luma_c (pixuvx_x0 iNsTr_184 ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  iNsTr_1543 iNsTr_1547 iNsTr_61 )  ()
    // load 
    xx_xpre248 := ->(iNsTr_923) 
    // compare instruction
    iNsTr_2210 := (xx_xpre248 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if iNsTr_2210 $then  $place [deblock_edgex_xexit168_deblock_edgex_xexit170threadx_xprex_xsplit] $else $place [deblock_edgex_xexit168_bb_245] $endif 
    //begin: basic-block bb_245
    $merge bb_243_bb_245 deblock_edgex_xexit168_bb_245
    $phi xx_xph38 :=  ( $cast ($uint<32>) iNsTr_1548) $on bb_243_bb_245 ( $cast ($uint<32>) xx_xpre248) $on deblock_edgex_xexit168_bb_245 
    $endmerge
    iNsTr_2212 := (iNsTr_1539 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_2213 := (iNsTr_2212 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_2213 $then  $place [bb_245_bb_246] $else $place [bb_245_deblock_edgex_xexit170threadx_xprex_xsplit] $endif 
    //begin: basic-block bb_246
    $merge bb_245_bb_246
    $endmerge
    pixuvx_x0x_xsum55307x_xpn39 := (xx_xsum28x_xpn + iNsTr_35)
    iNsTr_2428 := iNsTr_179[pixuvx_x0x_xsum55307x_xpn39]
    iNsTr_2429 := (xx_xph38 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    iNsTr_2430 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_1540][iNsTr_2429])
    // load 
    iNsTr_2431 := ->(iNsTr_2430) 
    ->(iNsTr_61) := iNsTr_2431
    iNsTr_2433 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_2434 := ->(iNsTr_2433) 
    iNsTr_2435 := ($cast ($uint<32>) iNsTr_2434)
    iNsTr_2436 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_1540][iNsTr_2435])
    // load 
    iNsTr_2437 := ->(iNsTr_2436) 
    ->(iNsTr_62) := iNsTr_2437
    iNsTr_2439 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_2440 := ->(iNsTr_2439) 
    iNsTr_2441 := ($cast ($uint<32>) iNsTr_2440)
    iNsTr_2442 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_1540][iNsTr_2441])
    // load 
    iNsTr_2443 := ->(iNsTr_2442) 
    ->(iNsTr_63) := iNsTr_2443
    iNsTr_2445 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    iNsTr_2446 := ->(iNsTr_2445) 
    iNsTr_2447 := ($cast ($uint<32>) iNsTr_2446)
    iNsTr_2448 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_1540][iNsTr_2447])
    // load 
    iNsTr_2449 := ->(iNsTr_2448) 
    ->(iNsTr_64) := iNsTr_2449
    $call deblock_luma_c (iNsTr_2428 iNsTr_184 ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  iNsTr_1543 iNsTr_1547 iNsTr_61 )  ()
    $place [bb_246_deblock_edgex_xexit170threadx_xprex_xsplit]
    //begin: basic-block bb_247
    $merge deblock_edgex_xexit166_bb_247
    $endmerge
    iNsTr_1551 := (iNsTr_335 + iNsTr_3)
    iNsTr_1552 := (iNsTr_335 + iNsTr_5)
    iNsTr_1553 := (iNsTr_1551 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_1554 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[iNsTr_1553])
    // load 
    iNsTr_1555 := ->(iNsTr_1554) 
    iNsTr_1556 := ($cast ($uint<32>) iNsTr_1555)
    iNsTr_1557 := (iNsTr_1552 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_1558 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[iNsTr_1557])
    // load 
    iNsTr_1559 := ->(iNsTr_1558) 
    iNsTr_1560 := ($cast ($uint<32>) iNsTr_1559)
    // load 
    iNsTr_1561 := ->(iNsTr_923) 
    // compare instruction
    iNsTr_1562 := (iNsTr_1561 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if iNsTr_1562 $then  $place [bb_247_deblock_edgex_xexit170threadx_xprex_xsplit] $else $place [bb_247_bb_248] $endif 
    //begin: basic-block bb_248
    $merge bb_247_bb_248
    $endmerge
    iNsTr_1777 := (iNsTr_1551 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_1778 := (iNsTr_1777 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_1778 $then  $place [bb_248_bb_249] $else $place [bb_248_deblock_edgex_xexit170threadx_xprex_xsplit] $endif 
    //begin: basic-block bb_249
    $merge bb_248_bb_249
    $endmerge
    iNsTr_2031 := (iNsTr_1552 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_2032 := (iNsTr_2031 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_2032 $then  $place [bb_249_bb_250] $else $place [bb_249_deblock_edgex_xexit170threadx_xprex_xsplit] $endif 
    //begin: basic-block bb_250
    $merge bb_249_bb_250
    $endmerge
    iNsTr_2215 := (iNsTr_1561 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    iNsTr_2216 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_1553][iNsTr_2215])
    // load 
    iNsTr_2217 := ->(iNsTr_2216) 
    iNsTr_2218 := (iNsTr_2217 + ( $bitcast ($uint<8> ) _b00000001 ) )
    ->(iNsTr_61) := iNsTr_2218
    iNsTr_2220 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_2221 := ->(iNsTr_2220) 
    iNsTr_2222 := ($cast ($uint<32>) iNsTr_2221)
    iNsTr_2223 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_1553][iNsTr_2222])
    // load 
    iNsTr_2224 := ->(iNsTr_2223) 
    iNsTr_2225 := (iNsTr_2224 + ( $bitcast ($uint<8> ) _b00000001 ) )
    ->(iNsTr_62) := iNsTr_2225
    iNsTr_2227 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_2228 := ->(iNsTr_2227) 
    iNsTr_2229 := ($cast ($uint<32>) iNsTr_2228)
    iNsTr_2230 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_1553][iNsTr_2229])
    // load 
    iNsTr_2231 := ->(iNsTr_2230) 
    iNsTr_2232 := (iNsTr_2231 + ( $bitcast ($uint<8> ) _b00000001 ) )
    ->(iNsTr_63) := iNsTr_2232
    iNsTr_2234 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    iNsTr_2235 := ->(iNsTr_2234) 
    iNsTr_2236 := ($cast ($uint<32>) iNsTr_2235)
    iNsTr_2237 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_1553][iNsTr_2236])
    // load 
    iNsTr_2238 := ->(iNsTr_2237) 
    iNsTr_2239 := (iNsTr_2238 + ( $bitcast ($uint<8> ) _b00000001 ) )
    ->(iNsTr_64) := iNsTr_2239
    $call deblock_v_chroma_c (pixuvx_x0 iNsTr_184 iNsTr_1556 iNsTr_1560 iNsTr_61 )  ()
    $place [bb_250_deblock_edgex_xexit170threadx_xprex_xsplit]
    //begin: basic-block deblock_edgex_xexit170threadx_xprex_xsplit
    $merge bb_241_deblock_edgex_xexit170threadx_xprex_xsplit bb_242_deblock_edgex_xexit170threadx_xprex_xsplit bb_245_deblock_edgex_xexit170threadx_xprex_xsplit bb_246_deblock_edgex_xexit170threadx_xprex_xsplit bb_247_deblock_edgex_xexit170threadx_xprex_xsplit bb_248_deblock_edgex_xexit170threadx_xprex_xsplit bb_249_deblock_edgex_xexit170threadx_xprex_xsplit bb_250_deblock_edgex_xexit170threadx_xprex_xsplit deblock_edgex_xexit168_deblock_edgex_xexit170threadx_xprex_xsplit
    $endmerge
    // load 
    xx_xpr5 := ->(iNsTr_20) 
    $place [deblock_edgex_xexit170threadx_xprex_xsplit_deblock_edgex_xexit170]
    //begin: basic-block deblock_edgex_xexit170
    $merge deblock_edgex_xexit166_deblock_edgex_xexit170 deblock_edgex_xexit170threadx_xprex_xsplit_deblock_edgex_xexit170
    $phi iNsTr_1535 :=  ( $cast ($uint<32>) xx_xpr5) $on deblock_edgex_xexit170threadx_xprex_xsplit_deblock_edgex_xexit170 ( $cast ($uint<32>) iNsTr_1203) $on deblock_edgex_xexit166_deblock_edgex_xexit170 
    $endmerge
    // compare instruction
    iNsTr_1536 := (iNsTr_1535 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )
    $if iNsTr_1536 $then  $place [deblock_edgex_xexit170_bb_253] $else $place [deblock_edgex_xexit170_deblock_edge_intrax_xexit162] $endif 
    //begin: basic-block bb_253
    $merge deblock_edgex_xexit170_bb_253
    $endmerge
    iNsTr_1760 := (iNsTr_335 + iNsTr_3)
    iNsTr_1761 := (iNsTr_335 + iNsTr_5)
    iNsTr_1762 := (iNsTr_1760 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_1763 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[iNsTr_1762])
    // load 
    iNsTr_1764 := ->(iNsTr_1763) 
    iNsTr_1765 := ($cast ($uint<32>) iNsTr_1764)
    iNsTr_1766 := (iNsTr_1761 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_1767 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[iNsTr_1766])
    // load 
    iNsTr_1768 := ->(iNsTr_1767) 
    iNsTr_1769 := ($cast ($uint<32>) iNsTr_1768)
    // load 
    iNsTr_1770 := ->(iNsTr_923) 
    // compare instruction
    iNsTr_1771 := (iNsTr_1770 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if iNsTr_1771 $then  $place [bb_253_deblock_edge_intrax_xexit162] $else $place [bb_253_bb_254] $endif 
    //begin: basic-block bb_254
    $merge bb_253_bb_254
    $endmerge
    iNsTr_2025 := (iNsTr_1760 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_2026 := (iNsTr_2025 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_2026 $then  $place [bb_254_bb_255] $else $place [bb_254_deblock_edge_intrax_xexit162] $endif 
    //begin: basic-block bb_255
    $merge bb_254_bb_255
    $endmerge
    iNsTr_2184 := (iNsTr_1761 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_2185 := (iNsTr_2184 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_2185 $then  $place [bb_255_bb_256] $else $place [bb_255_deblock_edge_intrax_xexit162] $endif 
    //begin: basic-block bb_256
    $merge bb_255_bb_256
    $endmerge
    iNsTr_2400 := (iNsTr_1770 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    iNsTr_2401 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_1762][iNsTr_2400])
    // load 
    iNsTr_2402 := ->(iNsTr_2401) 
    iNsTr_2403 := (iNsTr_2402 + ( $bitcast ($uint<8> ) _b00000001 ) )
    ->(iNsTr_61) := iNsTr_2403
    iNsTr_2405 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_2406 := ->(iNsTr_2405) 
    iNsTr_2407 := ($cast ($uint<32>) iNsTr_2406)
    iNsTr_2408 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_1762][iNsTr_2407])
    // load 
    iNsTr_2409 := ->(iNsTr_2408) 
    iNsTr_2410 := (iNsTr_2409 + ( $bitcast ($uint<8> ) _b00000001 ) )
    ->(iNsTr_62) := iNsTr_2410
    iNsTr_2412 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_2413 := ->(iNsTr_2412) 
    iNsTr_2414 := ($cast ($uint<32>) iNsTr_2413)
    iNsTr_2415 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_1762][iNsTr_2414])
    // load 
    iNsTr_2416 := ->(iNsTr_2415) 
    iNsTr_2417 := (iNsTr_2416 + ( $bitcast ($uint<8> ) _b00000001 ) )
    ->(iNsTr_63) := iNsTr_2417
    iNsTr_2419 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    iNsTr_2420 := ->(iNsTr_2419) 
    iNsTr_2421 := ($cast ($uint<32>) iNsTr_2420)
    iNsTr_2422 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_1762][iNsTr_2421])
    // load 
    iNsTr_2423 := ->(iNsTr_2422) 
    iNsTr_2424 := (iNsTr_2423 + ( $bitcast ($uint<8> ) _b00000001 ) )
    ->(iNsTr_64) := iNsTr_2424
    $call deblock_v_chroma_c (pixuvx_x0 iNsTr_184 iNsTr_1765 iNsTr_1769 iNsTr_61 )  ()
    $place [bb_256_deblock_edge_intrax_xexit162]
    //begin: basic-block deblock_edge_intrax_xexit162x_xloopexit
    $merge xx_x_crit_edgex_xix_xix_xi160_deblock_edge_intrax_xexit162x_xloopexit
    $endmerge
    $place [deblock_edge_intrax_xexit162x_xloopexit_deblock_edge_intrax_xexit162]
    //begin: basic-block deblock_edge_intrax_xexit162x_xloopexit43
    $merge deblock_edgex_xexit131_deblock_edge_intrax_xexit162x_xloopexit43
    $endmerge
    $place [deblock_edge_intrax_xexit162x_xloopexit43_deblock_edge_intrax_xexit162]
    //begin: basic-block deblock_edge_intrax_xexit162
    $merge bb_226_deblock_edge_intrax_xexit162 bb_227_deblock_edge_intrax_xexit162 bb_253_deblock_edge_intrax_xexit162 bb_254_deblock_edge_intrax_xexit162 bb_255_deblock_edge_intrax_xexit162 bb_256_deblock_edge_intrax_xexit162 deblock_edge_intrax_xexit139_deblock_edge_intrax_xexit162 deblock_edge_intrax_xexit162x_xloopexit_deblock_edge_intrax_xexit162 deblock_edge_intrax_xexit162x_xloopexit43_deblock_edge_intrax_xexit162 deblock_edgex_xexit125_deblock_edge_intrax_xexit162 deblock_edgex_xexit170_deblock_edge_intrax_xexit162
    $endmerge
    $if iNsTr_221 $then  $place [deblock_edge_intrax_xexit162_deblock_edgex_xexit] $else $place [deblock_edge_intrax_xexit162_bb_260] $endif 
    //begin: basic-block bb_260
    $merge deblock_edge_intrax_xexit162_bb_260
    $endmerge
    // compare instruction
    iNsTr_316 := (iNsTr_136 == ( $bitcast ($uint<8> ) _b00000000 )  )
    $if iNsTr_316 $then  $place [bb_260_bb_261] $else $place [bb_260_deblock_edgex_xexit180threadx_xprex_xsplit] $endif 
    //begin: basic-block bb_261
    $merge bb_260_bb_261
    $endmerge
    iNsTr_376 := (iNsTr_183 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    pixyx_x0x_xsum24 := (iNsTr_376 + xx_xsum19x_xpn)
    iNsTr_377 := iNsTr_175[pixyx_x0x_xsum24]
    iNsTr_378 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    iNsTr_379 := (iNsTr_188 + iNsTr_3)
    iNsTr_380 := (iNsTr_188 + iNsTr_5)
    iNsTr_381 := (iNsTr_379 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_382 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[iNsTr_381])
    // load 
    iNsTr_383 := ->(iNsTr_382) 
    iNsTr_384 := ($cast ($uint<32>) iNsTr_383)
    iNsTr_385 := (iNsTr_380 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_386 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[iNsTr_385])
    // load 
    iNsTr_387 := ->(iNsTr_386) 
    iNsTr_388 := ($cast ($uint<32>) iNsTr_387)
    iNsTr_389 := ($bitcast ($pointer< $uint<32> >) iNsTr_378)
    // load 
    iNsTr_390 := ->(iNsTr_389) 
    // compare instruction
    iNsTr_391 := (iNsTr_390 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if iNsTr_391 $then  $place [bb_261_deblock_edgex_xexit176] $else $place [bb_261_bb_262] $endif 
    //begin: basic-block bb_262
    $merge bb_261_bb_262
    $endmerge
    iNsTr_545 := (iNsTr_379 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_546 := (iNsTr_545 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_546 $then  $place [bb_262_bb_263] $else $place [bb_262_deblock_edgex_xexit176] $endif 
    //begin: basic-block bb_263
    $merge bb_262_bb_263
    $endmerge
    iNsTr_683 := (iNsTr_380 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_684 := (iNsTr_683 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_684 $then  $place [bb_263_bb_264] $else $place [bb_263_deblock_edgex_xexit176] $endif 
    //begin: basic-block bb_264
    $merge bb_263_bb_264
    $endmerge
    iNsTr_863 := (iNsTr_390 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    iNsTr_864 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_381][iNsTr_863])
    // load 
    iNsTr_865 := ->(iNsTr_864) 
    ->(iNsTr_61) := iNsTr_865
    iNsTr_867 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_868 := ->(iNsTr_867) 
    iNsTr_869 := ($cast ($uint<32>) iNsTr_868)
    iNsTr_870 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_381][iNsTr_869])
    // load 
    iNsTr_871 := ->(iNsTr_870) 
    ->(iNsTr_62) := iNsTr_871
    iNsTr_873 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_874 := ->(iNsTr_873) 
    iNsTr_875 := ($cast ($uint<32>) iNsTr_874)
    iNsTr_876 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_381][iNsTr_875])
    // load 
    iNsTr_877 := ->(iNsTr_876) 
    ->(iNsTr_63) := iNsTr_877
    iNsTr_879 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    iNsTr_880 := ->(iNsTr_879) 
    iNsTr_881 := ($cast ($uint<32>) iNsTr_880)
    iNsTr_882 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_381][iNsTr_881])
    // load 
    iNsTr_883 := ->(iNsTr_882) 
    ->(iNsTr_64) := iNsTr_883
    $call deblock_luma_c (iNsTr_377 iNsTr_183 ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  iNsTr_384 iNsTr_388 iNsTr_61 )  ()
    $place [bb_264_deblock_edgex_xexit176]
    //begin: basic-block deblock_edgex_xexit176
    $merge bb_261_deblock_edgex_xexit176 bb_262_deblock_edgex_xexit176 bb_263_deblock_edgex_xexit176 bb_264_deblock_edgex_xexit176
    $endmerge
    // load 
    iNsTr_542 := ->(iNsTr_20) 
    // compare instruction
    iNsTr_543 := (iNsTr_542 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 )  )
    $if iNsTr_543 $then  $place [deblock_edgex_xexit176_bb_266] $else $place [deblock_edgex_xexit176_deblock_edgex_xexit180] $endif 
    //begin: basic-block bb_266
    $merge deblock_edgex_xexit176_bb_266
    $endmerge
    iNsTr_668 := (iNsTr_184 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    pixuvx_x0x_xsum48 := (iNsTr_668 + xx_xsum28x_xpn)
    iNsTr_669 := iNsTr_179[pixuvx_x0x_xsum48]
    iNsTr_670 := (iNsTr_192 + iNsTr_3)
    iNsTr_671 := (iNsTr_192 + iNsTr_5)
    iNsTr_672 := (iNsTr_670 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_673 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[iNsTr_672])
    // load 
    iNsTr_674 := ->(iNsTr_673) 
    iNsTr_675 := ($cast ($uint<32>) iNsTr_674)
    iNsTr_676 := (iNsTr_671 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_677 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[iNsTr_676])
    // load 
    iNsTr_678 := ->(iNsTr_677) 
    iNsTr_679 := ($cast ($uint<32>) iNsTr_678)
    // load 
    iNsTr_680 := ->(iNsTr_389) 
    // compare instruction
    iNsTr_681 := (iNsTr_680 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if iNsTr_681 $then  $place [bb_266_deblock_edgex_xexit180threadx_xprex_xsplit] $else $place [bb_266_bb_267] $endif 
    //begin: basic-block bb_267
    $merge bb_266_bb_267
    $endmerge
    iNsTr_860 := (iNsTr_670 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_861 := (iNsTr_860 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_861 $then  $place [bb_267_bb_268] $else $place [bb_267_deblock_edgex_xexit180threadx_xprex_xsplit] $endif 
    //begin: basic-block bb_268
    $merge bb_267_bb_268
    $endmerge
    iNsTr_1142 := (iNsTr_671 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_1143 := (iNsTr_1142 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_1143 $then  $place [bb_268_deblock_edgex_xexit178] $else $place [bb_268_bb_270] $endif 
    //begin: basic-block deblock_edgex_xexit178
    $merge bb_268_deblock_edgex_xexit178
    $endmerge
    iNsTr_1385 := (iNsTr_680 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    iNsTr_1386 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_672][iNsTr_1385])
    // load 
    iNsTr_1387 := ->(iNsTr_1386) 
    ->(iNsTr_61) := iNsTr_1387
    iNsTr_1389 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_1390 := ->(iNsTr_1389) 
    iNsTr_1391 := ($cast ($uint<32>) iNsTr_1390)
    iNsTr_1392 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_672][iNsTr_1391])
    // load 
    iNsTr_1393 := ->(iNsTr_1392) 
    ->(iNsTr_62) := iNsTr_1393
    iNsTr_1395 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_1396 := ->(iNsTr_1395) 
    iNsTr_1397 := ($cast ($uint<32>) iNsTr_1396)
    iNsTr_1398 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_672][iNsTr_1397])
    // load 
    iNsTr_1399 := ->(iNsTr_1398) 
    ->(iNsTr_63) := iNsTr_1399
    iNsTr_1401 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    iNsTr_1402 := ->(iNsTr_1401) 
    iNsTr_1403 := ($cast ($uint<32>) iNsTr_1402)
    iNsTr_1404 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_672][iNsTr_1403])
    // load 
    iNsTr_1405 := ->(iNsTr_1404) 
    ->(iNsTr_64) := iNsTr_1405
    $call deblock_luma_c (iNsTr_669 iNsTr_184 ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  iNsTr_675 iNsTr_679 iNsTr_61 )  ()
    // load 
    xx_xpre := ->(iNsTr_389) 
    // compare instruction
    iNsTr_1408 := (xx_xpre == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if iNsTr_1408 $then  $place [deblock_edgex_xexit178_deblock_edgex_xexit180threadx_xprex_xsplit] $else $place [deblock_edgex_xexit178_bb_270] $endif 
    //begin: basic-block bb_270
    $merge bb_268_bb_270 deblock_edgex_xexit178_bb_270
    $phi xx_xph40 :=  ( $cast ($uint<32>) iNsTr_680) $on bb_268_bb_270 ( $cast ($uint<32>) xx_xpre) $on deblock_edgex_xexit178_bb_270 
    $endmerge
    iNsTr_1410 := (iNsTr_671 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_1411 := (iNsTr_1410 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_1411 $then  $place [bb_270_bb_271] $else $place [bb_270_deblock_edgex_xexit180threadx_xprex_xsplit] $endif 
    //begin: basic-block bb_271
    $merge bb_270_bb_271
    $endmerge
    xx_xsum9310x_xpn41 := (xx_xsum28x_xpn + iNsTr_35)
    pixuvx_x0x_xsum34311x_xpn42 := (xx_xsum9310x_xpn41 + iNsTr_668)
    iNsTr_1693 := iNsTr_179[pixuvx_x0x_xsum34311x_xpn42]
    iNsTr_1694 := (xx_xph40 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    iNsTr_1695 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_672][iNsTr_1694])
    // load 
    iNsTr_1696 := ->(iNsTr_1695) 
    ->(iNsTr_61) := iNsTr_1696
    iNsTr_1698 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_1699 := ->(iNsTr_1698) 
    iNsTr_1700 := ($cast ($uint<32>) iNsTr_1699)
    iNsTr_1701 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_672][iNsTr_1700])
    // load 
    iNsTr_1702 := ->(iNsTr_1701) 
    ->(iNsTr_62) := iNsTr_1702
    iNsTr_1704 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_1705 := ->(iNsTr_1704) 
    iNsTr_1706 := ($cast ($uint<32>) iNsTr_1705)
    iNsTr_1707 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_672][iNsTr_1706])
    // load 
    iNsTr_1708 := ->(iNsTr_1707) 
    ->(iNsTr_63) := iNsTr_1708
    iNsTr_1710 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    iNsTr_1711 := ->(iNsTr_1710) 
    iNsTr_1712 := ($cast ($uint<32>) iNsTr_1711)
    iNsTr_1713 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_672][iNsTr_1712])
    // load 
    iNsTr_1714 := ->(iNsTr_1713) 
    ->(iNsTr_64) := iNsTr_1714
    $call deblock_luma_c (iNsTr_1693 iNsTr_184 ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  iNsTr_675 iNsTr_679 iNsTr_61 )  ()
    $place [bb_271_deblock_edgex_xexit180threadx_xprex_xsplit]
    //begin: basic-block deblock_edgex_xexit180threadx_xprex_xsplit
    $merge bb_260_deblock_edgex_xexit180threadx_xprex_xsplit bb_266_deblock_edgex_xexit180threadx_xprex_xsplit bb_267_deblock_edgex_xexit180threadx_xprex_xsplit bb_270_deblock_edgex_xexit180threadx_xprex_xsplit bb_271_deblock_edgex_xexit180threadx_xprex_xsplit deblock_edgex_xexit178_deblock_edgex_xexit180threadx_xprex_xsplit
    $endmerge
    // load 
    xx_xpr := ->(iNsTr_20) 
    $place [deblock_edgex_xexit180threadx_xprex_xsplit_deblock_edgex_xexit180]
    //begin: basic-block deblock_edgex_xexit180
    $merge deblock_edgex_xexit176_deblock_edgex_xexit180 deblock_edgex_xexit180threadx_xprex_xsplit_deblock_edgex_xexit180
    $phi iNsTr_548 :=  ( $cast ($uint<32>) xx_xpr) $on deblock_edgex_xexit180threadx_xprex_xsplit_deblock_edgex_xexit180 ( $cast ($uint<32>) iNsTr_542) $on deblock_edgex_xexit176_deblock_edgex_xexit180 
    $endmerge
    // compare instruction
    iNsTr_549 := (iNsTr_548 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )
    $if iNsTr_549 $then  $place [deblock_edgex_xexit180_bb_274] $else $place [deblock_edgex_xexit180_deblock_edgex_xexit182] $endif 
    //begin: basic-block bb_274
    $merge deblock_edgex_xexit180_bb_274
    $endmerge
    iNsTr_686 := (iNsTr_184 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    pixuvx_x0x_xsum54 := (iNsTr_686 + xx_xsum28x_xpn)
    iNsTr_687 := iNsTr_179[pixuvx_x0x_xsum54]
    iNsTr_688 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    iNsTr_689 := (iNsTr_192 + iNsTr_3)
    iNsTr_690 := (iNsTr_192 + iNsTr_5)
    iNsTr_691 := (iNsTr_689 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_692 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[iNsTr_691])
    // load 
    iNsTr_693 := ->(iNsTr_692) 
    iNsTr_694 := ($cast ($uint<32>) iNsTr_693)
    iNsTr_695 := (iNsTr_690 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_696 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[iNsTr_695])
    // load 
    iNsTr_697 := ->(iNsTr_696) 
    iNsTr_698 := ($cast ($uint<32>) iNsTr_697)
    iNsTr_699 := ($bitcast ($pointer< $uint<32> >) iNsTr_688)
    // load 
    iNsTr_700 := ->(iNsTr_699) 
    // compare instruction
    iNsTr_701 := (iNsTr_700 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if iNsTr_701 $then  $place [bb_274_deblock_edgex_xexit182] $else $place [bb_274_bb_275] $endif 
    //begin: basic-block bb_275
    $merge bb_274_bb_275
    $endmerge
    iNsTr_887 := (iNsTr_689 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_888 := (iNsTr_887 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_888 $then  $place [bb_275_bb_276] $else $place [bb_275_deblock_edgex_xexit182] $endif 
    //begin: basic-block bb_276
    $merge bb_275_bb_276
    $endmerge
    iNsTr_1145 := (iNsTr_690 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_1146 := (iNsTr_1145 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_1146 $then  $place [bb_276_bb_277] $else $place [bb_276_deblock_edgex_xexit182] $endif 
    //begin: basic-block bb_277
    $merge bb_276_bb_277
    $endmerge
    iNsTr_1413 := (iNsTr_700 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    iNsTr_1414 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_691][iNsTr_1413])
    // load 
    iNsTr_1415 := ->(iNsTr_1414) 
    iNsTr_1416 := (iNsTr_1415 + ( $bitcast ($uint<8> ) _b00000001 ) )
    ->(iNsTr_61) := iNsTr_1416
    iNsTr_1418 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_1419 := ->(iNsTr_1418) 
    iNsTr_1420 := ($cast ($uint<32>) iNsTr_1419)
    iNsTr_1421 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_691][iNsTr_1420])
    // load 
    iNsTr_1422 := ->(iNsTr_1421) 
    iNsTr_1423 := (iNsTr_1422 + ( $bitcast ($uint<8> ) _b00000001 ) )
    ->(iNsTr_62) := iNsTr_1423
    iNsTr_1425 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_1426 := ->(iNsTr_1425) 
    iNsTr_1427 := ($cast ($uint<32>) iNsTr_1426)
    iNsTr_1428 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_691][iNsTr_1427])
    // load 
    iNsTr_1429 := ->(iNsTr_1428) 
    iNsTr_1430 := (iNsTr_1429 + ( $bitcast ($uint<8> ) _b00000001 ) )
    ->(iNsTr_63) := iNsTr_1430
    iNsTr_1432 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    iNsTr_1433 := ->(iNsTr_1432) 
    iNsTr_1434 := ($cast ($uint<32>) iNsTr_1433)
    iNsTr_1435 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_691][iNsTr_1434])
    // load 
    iNsTr_1436 := ->(iNsTr_1435) 
    iNsTr_1437 := (iNsTr_1436 + ( $bitcast ($uint<8> ) _b00000001 ) )
    ->(iNsTr_64) := iNsTr_1437
    $call deblock_v_chroma_c (iNsTr_687 iNsTr_184 iNsTr_694 iNsTr_698 iNsTr_61 )  ()
    $place [bb_277_deblock_edgex_xexit182]
    //begin: basic-block deblock_edgex_xexit182
    $merge bb_274_deblock_edgex_xexit182 bb_275_deblock_edgex_xexit182 bb_276_deblock_edgex_xexit182 bb_277_deblock_edgex_xexit182 deblock_edgex_xexit180_deblock_edgex_xexit182
    $endmerge
    iNsTr_703 := (iNsTr_183 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    pixyx_x0x_xsum26 := (iNsTr_703 + xx_xsum19x_xpn)
    iNsTr_704 := iNsTr_175[pixyx_x0x_xsum26]
    iNsTr_705 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    iNsTr_706 := (iNsTr_188 + iNsTr_3)
    iNsTr_707 := (iNsTr_188 + iNsTr_5)
    iNsTr_708 := (iNsTr_706 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_709 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[iNsTr_708])
    // load 
    iNsTr_710 := ->(iNsTr_709) 
    iNsTr_711 := ($cast ($uint<32>) iNsTr_710)
    iNsTr_712 := (iNsTr_707 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_713 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[iNsTr_712])
    // load 
    iNsTr_714 := ->(iNsTr_713) 
    iNsTr_715 := ($cast ($uint<32>) iNsTr_714)
    iNsTr_716 := ($bitcast ($pointer< $uint<32> >) iNsTr_705)
    // load 
    iNsTr_717 := ->(iNsTr_716) 
    // compare instruction
    iNsTr_718 := (iNsTr_717 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if iNsTr_718 $then  $place [deblock_edgex_xexit182_deblock_edgex_xexit184] $else $place [deblock_edgex_xexit182_bb_279] $endif 
    //begin: basic-block bb_279
    $merge deblock_edgex_xexit182_bb_279
    $endmerge
    iNsTr_892 := (iNsTr_706 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_893 := (iNsTr_892 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_893 $then  $place [bb_279_bb_280] $else $place [bb_279_deblock_edgex_xexit184] $endif 
    //begin: basic-block bb_280
    $merge bb_279_bb_280
    $endmerge
    iNsTr_1181 := (iNsTr_707 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_1182 := (iNsTr_1181 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_1182 $then  $place [bb_280_bb_281] $else $place [bb_280_deblock_edgex_xexit184] $endif 
    //begin: basic-block bb_281
    $merge bb_280_bb_281
    $endmerge
    iNsTr_1464 := (iNsTr_717 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    iNsTr_1465 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_708][iNsTr_1464])
    // load 
    iNsTr_1466 := ->(iNsTr_1465) 
    ->(iNsTr_61) := iNsTr_1466
    iNsTr_1468 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_1469 := ->(iNsTr_1468) 
    iNsTr_1470 := ($cast ($uint<32>) iNsTr_1469)
    iNsTr_1471 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_708][iNsTr_1470])
    // load 
    iNsTr_1472 := ->(iNsTr_1471) 
    ->(iNsTr_62) := iNsTr_1472
    iNsTr_1474 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_1475 := ->(iNsTr_1474) 
    iNsTr_1476 := ($cast ($uint<32>) iNsTr_1475)
    iNsTr_1477 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_708][iNsTr_1476])
    // load 
    iNsTr_1478 := ->(iNsTr_1477) 
    ->(iNsTr_63) := iNsTr_1478
    iNsTr_1480 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    iNsTr_1481 := ->(iNsTr_1480) 
    iNsTr_1482 := ($cast ($uint<32>) iNsTr_1481)
    iNsTr_1483 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_708][iNsTr_1482])
    // load 
    iNsTr_1484 := ->(iNsTr_1483) 
    ->(iNsTr_64) := iNsTr_1484
    $call deblock_luma_c (iNsTr_704 iNsTr_183 ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  iNsTr_711 iNsTr_715 iNsTr_61 )  ()
    $place [bb_281_deblock_edgex_xexit184]
    //begin: basic-block deblock_edgex_xexit184
    $merge bb_279_deblock_edgex_xexit184 bb_280_deblock_edgex_xexit184 bb_281_deblock_edgex_xexit184 deblock_edgex_xexit182_deblock_edgex_xexit184
    $endmerge
    // load 
    iNsTr_890 := ->(iNsTr_20) 
    $switch iNsTr_890
    $when _b00000000000000000000000000000011 $then 
    $place [deblock_edgex_xexit184_bb_283]
    $when _b00000000000000000000000000000001 $then 
    $place [deblock_edgex_xexit184_bb_289]
    $default 
    $place [deblock_edgex_xexit184_deblock_edgex_xexit188]
    $endswitch
    //begin: basic-block bb_283
    $merge deblock_edgex_xexit184_bb_283
    $endmerge
    iNsTr_1151 := (iNsTr_184 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    pixuvx_x0x_xsum53 := (iNsTr_1151 + xx_xsum28x_xpn)
    iNsTr_1152 := iNsTr_179[pixuvx_x0x_xsum53]
    iNsTr_1153 := (iNsTr_192 + iNsTr_3)
    iNsTr_1154 := (iNsTr_192 + iNsTr_5)
    iNsTr_1155 := (iNsTr_1153 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_1156 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[iNsTr_1155])
    // load 
    iNsTr_1157 := ->(iNsTr_1156) 
    iNsTr_1158 := ($cast ($uint<32>) iNsTr_1157)
    iNsTr_1159 := (iNsTr_1154 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_1160 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[iNsTr_1159])
    // load 
    iNsTr_1161 := ->(iNsTr_1160) 
    iNsTr_1162 := ($cast ($uint<32>) iNsTr_1161)
    // load 
    iNsTr_1163 := ->(iNsTr_716) 
    // compare instruction
    iNsTr_1164 := (iNsTr_1163 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if iNsTr_1164 $then  $place [bb_283_deblock_edgex_xexit188threadx_xprex_xsplit] $else $place [bb_283_bb_284] $endif 
    //begin: basic-block bb_284
    $merge bb_283_bb_284
    $endmerge
    iNsTr_1458 := (iNsTr_1153 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_1459 := (iNsTr_1458 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_1459 $then  $place [bb_284_bb_285] $else $place [bb_284_deblock_edgex_xexit188threadx_xprex_xsplit] $endif 
    //begin: basic-block bb_285
    $merge bb_284_bb_285
    $endmerge
    iNsTr_1729 := (iNsTr_1154 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_1730 := (iNsTr_1729 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_1730 $then  $place [bb_285_deblock_edgex_xexit186] $else $place [bb_285_bb_287] $endif 
    //begin: basic-block deblock_edgex_xexit186
    $merge bb_285_deblock_edgex_xexit186
    $endmerge
    iNsTr_1932 := (iNsTr_1163 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    iNsTr_1933 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_1155][iNsTr_1932])
    // load 
    iNsTr_1934 := ->(iNsTr_1933) 
    ->(iNsTr_61) := iNsTr_1934
    iNsTr_1936 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_1937 := ->(iNsTr_1936) 
    iNsTr_1938 := ($cast ($uint<32>) iNsTr_1937)
    iNsTr_1939 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_1155][iNsTr_1938])
    // load 
    iNsTr_1940 := ->(iNsTr_1939) 
    ->(iNsTr_62) := iNsTr_1940
    iNsTr_1942 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_1943 := ->(iNsTr_1942) 
    iNsTr_1944 := ($cast ($uint<32>) iNsTr_1943)
    iNsTr_1945 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_1155][iNsTr_1944])
    // load 
    iNsTr_1946 := ->(iNsTr_1945) 
    ->(iNsTr_63) := iNsTr_1946
    iNsTr_1948 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    iNsTr_1949 := ->(iNsTr_1948) 
    iNsTr_1950 := ($cast ($uint<32>) iNsTr_1949)
    iNsTr_1951 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_1155][iNsTr_1950])
    // load 
    iNsTr_1952 := ->(iNsTr_1951) 
    ->(iNsTr_64) := iNsTr_1952
    $call deblock_luma_c (iNsTr_1152 iNsTr_184 ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  iNsTr_1158 iNsTr_1162 iNsTr_61 )  ()
    // load 
    xx_xpre246 := ->(iNsTr_716) 
    // compare instruction
    iNsTr_1955 := (xx_xpre246 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if iNsTr_1955 $then  $place [deblock_edgex_xexit186_deblock_edgex_xexit188threadx_xprex_xsplit] $else $place [deblock_edgex_xexit186_bb_287] $endif 
    //begin: basic-block bb_287
    $merge bb_285_bb_287 deblock_edgex_xexit186_bb_287
    $phi xx_xph43 :=  ( $cast ($uint<32>) iNsTr_1163) $on bb_285_bb_287 ( $cast ($uint<32>) xx_xpre246) $on deblock_edgex_xexit186_bb_287 
    $endmerge
    iNsTr_1957 := (iNsTr_1154 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_1958 := (iNsTr_1957 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_1958 $then  $place [bb_287_bb_288] $else $place [bb_287_deblock_edgex_xexit188threadx_xprex_xsplit] $endif 
    //begin: basic-block bb_288
    $merge bb_287_bb_288
    $endmerge
    xx_xsum8315x_xpn44 := (xx_xsum28x_xpn + iNsTr_35)
    pixuvx_x0x_xsum35316x_xpn45 := (xx_xsum8315x_xpn44 + iNsTr_1151)
    iNsTr_2136 := iNsTr_179[pixuvx_x0x_xsum35316x_xpn45]
    iNsTr_2137 := (xx_xph43 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    iNsTr_2138 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_1155][iNsTr_2137])
    // load 
    iNsTr_2139 := ->(iNsTr_2138) 
    ->(iNsTr_61) := iNsTr_2139
    iNsTr_2141 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_2142 := ->(iNsTr_2141) 
    iNsTr_2143 := ($cast ($uint<32>) iNsTr_2142)
    iNsTr_2144 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_1155][iNsTr_2143])
    // load 
    iNsTr_2145 := ->(iNsTr_2144) 
    ->(iNsTr_62) := iNsTr_2145
    iNsTr_2147 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_2148 := ->(iNsTr_2147) 
    iNsTr_2149 := ($cast ($uint<32>) iNsTr_2148)
    iNsTr_2150 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_1155][iNsTr_2149])
    // load 
    iNsTr_2151 := ->(iNsTr_2150) 
    ->(iNsTr_63) := iNsTr_2151
    iNsTr_2153 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    iNsTr_2154 := ->(iNsTr_2153) 
    iNsTr_2155 := ($cast ($uint<32>) iNsTr_2154)
    iNsTr_2156 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_1155][iNsTr_2155])
    // load 
    iNsTr_2157 := ->(iNsTr_2156) 
    ->(iNsTr_64) := iNsTr_2157
    $call deblock_luma_c (iNsTr_2136 iNsTr_184 ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  iNsTr_1158 iNsTr_1162 iNsTr_61 )  ()
    $place [bb_288_deblock_edgex_xexit188threadx_xprex_xsplit]
    //begin: basic-block bb_289
    $merge deblock_edgex_xexit184_bb_289
    $endmerge
    iNsTr_1166 := (iNsTr_184 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    pixuvx_x0x_xsum49 := (iNsTr_1166 + xx_xsum28x_xpn)
    iNsTr_1167 := iNsTr_179[pixuvx_x0x_xsum49]
    iNsTr_1168 := (iNsTr_192 + iNsTr_3)
    iNsTr_1169 := (iNsTr_192 + iNsTr_5)
    iNsTr_1170 := (iNsTr_1168 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_1171 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[iNsTr_1170])
    // load 
    iNsTr_1172 := ->(iNsTr_1171) 
    iNsTr_1173 := ($cast ($uint<32>) iNsTr_1172)
    iNsTr_1174 := (iNsTr_1169 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_1175 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[iNsTr_1174])
    // load 
    iNsTr_1176 := ->(iNsTr_1175) 
    iNsTr_1177 := ($cast ($uint<32>) iNsTr_1176)
    // load 
    iNsTr_1178 := ->(iNsTr_716) 
    // compare instruction
    iNsTr_1179 := (iNsTr_1178 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if iNsTr_1179 $then  $place [bb_289_deblock_edgex_xexit188threadx_xprex_xsplit] $else $place [bb_289_bb_290] $endif 
    //begin: basic-block bb_290
    $merge bb_289_bb_290
    $endmerge
    iNsTr_1461 := (iNsTr_1168 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_1462 := (iNsTr_1461 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_1462 $then  $place [bb_290_bb_291] $else $place [bb_290_deblock_edgex_xexit188threadx_xprex_xsplit] $endif 
    //begin: basic-block bb_291
    $merge bb_290_bb_291
    $endmerge
    iNsTr_1732 := (iNsTr_1169 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_1733 := (iNsTr_1732 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_1733 $then  $place [bb_291_bb_292] $else $place [bb_291_deblock_edgex_xexit188threadx_xprex_xsplit] $endif 
    //begin: basic-block bb_292
    $merge bb_291_bb_292
    $endmerge
    iNsTr_1960 := (iNsTr_1178 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    iNsTr_1961 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_1170][iNsTr_1960])
    // load 
    iNsTr_1962 := ->(iNsTr_1961) 
    iNsTr_1963 := (iNsTr_1962 + ( $bitcast ($uint<8> ) _b00000001 ) )
    ->(iNsTr_61) := iNsTr_1963
    iNsTr_1965 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_1966 := ->(iNsTr_1965) 
    iNsTr_1967 := ($cast ($uint<32>) iNsTr_1966)
    iNsTr_1968 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_1170][iNsTr_1967])
    // load 
    iNsTr_1969 := ->(iNsTr_1968) 
    iNsTr_1970 := (iNsTr_1969 + ( $bitcast ($uint<8> ) _b00000001 ) )
    ->(iNsTr_62) := iNsTr_1970
    iNsTr_1972 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_1973 := ->(iNsTr_1972) 
    iNsTr_1974 := ($cast ($uint<32>) iNsTr_1973)
    iNsTr_1975 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_1170][iNsTr_1974])
    // load 
    iNsTr_1976 := ->(iNsTr_1975) 
    iNsTr_1977 := (iNsTr_1976 + ( $bitcast ($uint<8> ) _b00000001 ) )
    ->(iNsTr_63) := iNsTr_1977
    iNsTr_1979 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    iNsTr_1980 := ->(iNsTr_1979) 
    iNsTr_1981 := ($cast ($uint<32>) iNsTr_1980)
    iNsTr_1982 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_1170][iNsTr_1981])
    // load 
    iNsTr_1983 := ->(iNsTr_1982) 
    iNsTr_1984 := (iNsTr_1983 + ( $bitcast ($uint<8> ) _b00000001 ) )
    ->(iNsTr_64) := iNsTr_1984
    $call deblock_v_chroma_c (iNsTr_1167 iNsTr_184 iNsTr_1173 iNsTr_1177 iNsTr_61 )  ()
    $place [bb_292_deblock_edgex_xexit188threadx_xprex_xsplit]
    //begin: basic-block deblock_edgex_xexit188threadx_xprex_xsplit
    $merge bb_283_deblock_edgex_xexit188threadx_xprex_xsplit bb_284_deblock_edgex_xexit188threadx_xprex_xsplit bb_287_deblock_edgex_xexit188threadx_xprex_xsplit bb_288_deblock_edgex_xexit188threadx_xprex_xsplit bb_289_deblock_edgex_xexit188threadx_xprex_xsplit bb_290_deblock_edgex_xexit188threadx_xprex_xsplit bb_291_deblock_edgex_xexit188threadx_xprex_xsplit bb_292_deblock_edgex_xexit188threadx_xprex_xsplit deblock_edgex_xexit186_deblock_edgex_xexit188threadx_xprex_xsplit
    $endmerge
    // load 
    xx_xpr6 := ->(iNsTr_20) 
    $place [deblock_edgex_xexit188threadx_xprex_xsplit_deblock_edgex_xexit188]
    //begin: basic-block deblock_edgex_xexit188
    $merge deblock_edgex_xexit184_deblock_edgex_xexit188 deblock_edgex_xexit188threadx_xprex_xsplit_deblock_edgex_xexit188
    $phi iNsTr_1148 :=  ( $cast ($uint<32>) xx_xpr6) $on deblock_edgex_xexit188threadx_xprex_xsplit_deblock_edgex_xexit188 ( $cast ($uint<32>) iNsTr_890) $on deblock_edgex_xexit184_deblock_edgex_xexit188 
    $endmerge
    // compare instruction
    iNsTr_1149 := (iNsTr_1148 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )
    $if iNsTr_1149 $then  $place [deblock_edgex_xexit188_bb_295] $else $place [deblock_edgex_xexit188_deblock_edgex_xexit192] $endif 
    //begin: basic-block bb_295
    $merge deblock_edgex_xexit188_bb_295
    $endmerge
    iNsTr_1441 := (iNsTr_184 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    pixuvx_x0x_xsum52 := (iNsTr_1441 + xx_xsum28x_xpn)
    iNsTr_1442 := iNsTr_179[pixuvx_x0x_xsum52]
    iNsTr_1443 := (iNsTr_192 + iNsTr_3)
    iNsTr_1444 := (iNsTr_192 + iNsTr_5)
    iNsTr_1445 := (iNsTr_1443 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_1446 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[iNsTr_1445])
    // load 
    iNsTr_1447 := ->(iNsTr_1446) 
    iNsTr_1448 := ($cast ($uint<32>) iNsTr_1447)
    iNsTr_1449 := (iNsTr_1444 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_1450 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[iNsTr_1449])
    // load 
    iNsTr_1451 := ->(iNsTr_1450) 
    iNsTr_1452 := ($cast ($uint<32>) iNsTr_1451)
    // load 
    iNsTr_1453 := ->(iNsTr_716) 
    // compare instruction
    iNsTr_1454 := (iNsTr_1453 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if iNsTr_1454 $then  $place [bb_295_deblock_edgex_xexit192] $else $place [bb_295_bb_296] $endif 
    //begin: basic-block bb_296
    $merge bb_295_bb_296
    $endmerge
    iNsTr_1718 := (iNsTr_1443 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_1719 := (iNsTr_1718 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_1719 $then  $place [bb_296_bb_297] $else $place [bb_296_deblock_edgex_xexit192] $endif 
    //begin: basic-block bb_297
    $merge bb_296_bb_297
    $endmerge
    iNsTr_1920 := (iNsTr_1444 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_1921 := (iNsTr_1920 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_1921 $then  $place [bb_297_bb_298] $else $place [bb_297_deblock_edgex_xexit192] $endif 
    //begin: basic-block bb_298
    $merge bb_297_bb_298
    $endmerge
    iNsTr_2073 := (iNsTr_1453 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    iNsTr_2074 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_1445][iNsTr_2073])
    // load 
    iNsTr_2075 := ->(iNsTr_2074) 
    iNsTr_2076 := (iNsTr_2075 + ( $bitcast ($uint<8> ) _b00000001 ) )
    ->(iNsTr_61) := iNsTr_2076
    iNsTr_2078 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_2079 := ->(iNsTr_2078) 
    iNsTr_2080 := ($cast ($uint<32>) iNsTr_2079)
    iNsTr_2081 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_1445][iNsTr_2080])
    // load 
    iNsTr_2082 := ->(iNsTr_2081) 
    iNsTr_2083 := (iNsTr_2082 + ( $bitcast ($uint<8> ) _b00000001 ) )
    ->(iNsTr_62) := iNsTr_2083
    iNsTr_2085 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_2086 := ->(iNsTr_2085) 
    iNsTr_2087 := ($cast ($uint<32>) iNsTr_2086)
    iNsTr_2088 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_1445][iNsTr_2087])
    // load 
    iNsTr_2089 := ->(iNsTr_2088) 
    iNsTr_2090 := (iNsTr_2089 + ( $bitcast ($uint<8> ) _b00000001 ) )
    ->(iNsTr_63) := iNsTr_2090
    iNsTr_2092 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    iNsTr_2093 := ->(iNsTr_2092) 
    iNsTr_2094 := ($cast ($uint<32>) iNsTr_2093)
    iNsTr_2095 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_1445][iNsTr_2094])
    // load 
    iNsTr_2096 := ->(iNsTr_2095) 
    iNsTr_2097 := (iNsTr_2096 + ( $bitcast ($uint<8> ) _b00000001 ) )
    ->(iNsTr_64) := iNsTr_2097
    $call deblock_v_chroma_c (iNsTr_1442 iNsTr_184 iNsTr_1448 iNsTr_1452 iNsTr_61 )  ()
    $place [bb_298_deblock_edgex_xexit192]
    //begin: basic-block deblock_edgex_xexit192
    $merge bb_295_deblock_edgex_xexit192 bb_296_deblock_edgex_xexit192 bb_297_deblock_edgex_xexit192 bb_298_deblock_edgex_xexit192 deblock_edgex_xexit188_deblock_edgex_xexit192
    $endmerge
    $if iNsTr_316 $then  $place [deblock_edgex_xexit192_bb_300] $else $place [deblock_edgex_xexit192_deblock_edgex_xexit143threadx_xprex_xsplit] $endif 
    //begin: basic-block bb_300
    $merge deblock_edgex_xexit192_bb_300
    $endmerge
    iNsTr_1721 := (iNsTr_183 * ( $bitcast ($uint<32> ) _b00000000000000000000000000001100 ) )
    pixyx_x0x_xsum25 := (iNsTr_1721 + xx_xsum19x_xpn)
    iNsTr_1722 := iNsTr_175[pixyx_x0x_xsum25]
    iNsTr_1723 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    iNsTr_1724 := ($bitcast ($pointer< $uint<32> >) iNsTr_1723)
    // load 
    iNsTr_1725 := ->(iNsTr_1724) 
    // compare instruction
    iNsTr_1726 := (iNsTr_1725 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if iNsTr_1726 $then  $place [bb_300_deblock_edgex_xexit194] $else $place [bb_300_bb_301] $endif 
    //begin: basic-block bb_301
    $merge bb_300_bb_301
    $endmerge
    iNsTr_1926 := (iNsTr_706 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_1927 := (iNsTr_1926 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_1927 $then  $place [bb_301_bb_302] $else $place [bb_301_deblock_edgex_xexit194] $endif 
    //begin: basic-block bb_302
    $merge bb_301_bb_302
    $endmerge
    iNsTr_2116 := (iNsTr_707 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_2117 := (iNsTr_2116 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_2117 $then  $place [bb_302_bb_303] $else $place [bb_302_deblock_edgex_xexit194] $endif 
    //begin: basic-block bb_303
    $merge bb_302_bb_303
    $endmerge
    iNsTr_2305 := (iNsTr_1725 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    iNsTr_2306 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_708][iNsTr_2305])
    // load 
    iNsTr_2307 := ->(iNsTr_2306) 
    ->(iNsTr_61) := iNsTr_2307
    iNsTr_2309 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_2310 := ->(iNsTr_2309) 
    iNsTr_2311 := ($cast ($uint<32>) iNsTr_2310)
    iNsTr_2312 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_708][iNsTr_2311])
    // load 
    iNsTr_2313 := ->(iNsTr_2312) 
    ->(iNsTr_62) := iNsTr_2313
    iNsTr_2315 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_2316 := ->(iNsTr_2315) 
    iNsTr_2317 := ($cast ($uint<32>) iNsTr_2316)
    iNsTr_2318 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_708][iNsTr_2317])
    // load 
    iNsTr_2319 := ->(iNsTr_2318) 
    ->(iNsTr_63) := iNsTr_2319
    iNsTr_2321 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    iNsTr_2322 := ->(iNsTr_2321) 
    iNsTr_2323 := ($cast ($uint<32>) iNsTr_2322)
    iNsTr_2324 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_708][iNsTr_2323])
    // load 
    iNsTr_2325 := ->(iNsTr_2324) 
    ->(iNsTr_64) := iNsTr_2325
    $call deblock_luma_c (iNsTr_1722 iNsTr_183 ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  iNsTr_711 iNsTr_715 iNsTr_61 )  ()
    $place [bb_303_deblock_edgex_xexit194]
    //begin: basic-block deblock_edgex_xexit194
    $merge bb_300_deblock_edgex_xexit194 bb_301_deblock_edgex_xexit194 bb_302_deblock_edgex_xexit194 bb_303_deblock_edgex_xexit194
    $endmerge
    // load 
    iNsTr_1923 := ->(iNsTr_20) 
    // compare instruction
    iNsTr_1924 := (iNsTr_1923 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 )  )
    $if iNsTr_1924 $then  $place [deblock_edgex_xexit194_bb_305] $else $place [deblock_edgex_xexit194_deblock_edgex_xexit143] $endif 
    //begin: basic-block bb_305
    $merge deblock_edgex_xexit194_bb_305
    $endmerge
    iNsTr_2101 := (iNsTr_184 * ( $bitcast ($uint<32> ) _b00000000000000000000000000001100 ) )
    pixuvx_x0x_xsum50 := (iNsTr_2101 + xx_xsum28x_xpn)
    iNsTr_2102 := iNsTr_179[pixuvx_x0x_xsum50]
    iNsTr_2103 := (iNsTr_192 + iNsTr_3)
    iNsTr_2104 := (iNsTr_192 + iNsTr_5)
    iNsTr_2105 := (iNsTr_2103 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_2106 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[iNsTr_2105])
    // load 
    iNsTr_2107 := ->(iNsTr_2106) 
    iNsTr_2108 := ($cast ($uint<32>) iNsTr_2107)
    iNsTr_2109 := (iNsTr_2104 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_2110 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[iNsTr_2109])
    // load 
    iNsTr_2111 := ->(iNsTr_2110) 
    iNsTr_2112 := ($cast ($uint<32>) iNsTr_2111)
    // load 
    iNsTr_2113 := ->(iNsTr_1724) 
    // compare instruction
    iNsTr_2114 := (iNsTr_2113 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if iNsTr_2114 $then  $place [bb_305_deblock_edgex_xexit143threadx_xprex_xsplit] $else $place [bb_305_bb_306] $endif 
    //begin: basic-block bb_306
    $merge bb_305_bb_306
    $endmerge
    iNsTr_2302 := (iNsTr_2103 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_2303 := (iNsTr_2302 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_2303 $then  $place [bb_306_bb_307] $else $place [bb_306_deblock_edgex_xexit143threadx_xprex_xsplit] $endif 
    //begin: basic-block bb_307
    $merge bb_306_bb_307
    $endmerge
    iNsTr_2494 := (iNsTr_2104 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_2495 := (iNsTr_2494 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_2495 $then  $place [bb_307_deblock_edgex_xexit164] $else $place [bb_307_bb_309] $endif 
    //begin: basic-block deblock_edgex_xexit164
    $merge bb_307_deblock_edgex_xexit164
    $endmerge
    iNsTr_2535 := (iNsTr_2113 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    iNsTr_2536 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_2105][iNsTr_2535])
    // load 
    iNsTr_2537 := ->(iNsTr_2536) 
    ->(iNsTr_61) := iNsTr_2537
    iNsTr_2539 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_2540 := ->(iNsTr_2539) 
    iNsTr_2541 := ($cast ($uint<32>) iNsTr_2540)
    iNsTr_2542 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_2105][iNsTr_2541])
    // load 
    iNsTr_2543 := ->(iNsTr_2542) 
    ->(iNsTr_62) := iNsTr_2543
    iNsTr_2545 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_2546 := ->(iNsTr_2545) 
    iNsTr_2547 := ($cast ($uint<32>) iNsTr_2546)
    iNsTr_2548 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_2105][iNsTr_2547])
    // load 
    iNsTr_2549 := ->(iNsTr_2548) 
    ->(iNsTr_63) := iNsTr_2549
    iNsTr_2551 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    iNsTr_2552 := ->(iNsTr_2551) 
    iNsTr_2553 := ($cast ($uint<32>) iNsTr_2552)
    iNsTr_2554 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_2105][iNsTr_2553])
    // load 
    iNsTr_2555 := ->(iNsTr_2554) 
    ->(iNsTr_64) := iNsTr_2555
    $call deblock_luma_c (iNsTr_2102 iNsTr_184 ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  iNsTr_2108 iNsTr_2112 iNsTr_61 )  ()
    // load 
    xx_xpre247 := ->(iNsTr_1724) 
    // compare instruction
    iNsTr_2558 := (xx_xpre247 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if iNsTr_2558 $then  $place [deblock_edgex_xexit164_deblock_edgex_xexit143threadx_xprex_xsplit] $else $place [deblock_edgex_xexit164_bb_309] $endif 
    //begin: basic-block bb_309
    $merge bb_307_bb_309 deblock_edgex_xexit164_bb_309
    $phi xx_xph46 :=  ( $cast ($uint<32>) iNsTr_2113) $on bb_307_bb_309 ( $cast ($uint<32>) xx_xpre247) $on deblock_edgex_xexit164_bb_309 
    $endmerge
    iNsTr_2560 := (iNsTr_2104 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_2561 := (iNsTr_2560 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_2561 $then  $place [bb_309_bb_310] $else $place [bb_309_deblock_edgex_xexit143threadx_xprex_xsplit] $endif 
    //begin: basic-block bb_310
    $merge bb_309_bb_310
    $endmerge
    xx_xsum7320x_xpn47 := (xx_xsum28x_xpn + iNsTr_35)
    pixuvx_x0x_xsum36321x_xpn48 := (xx_xsum7320x_xpn47 + iNsTr_2101)
    iNsTr_2647 := iNsTr_179[pixuvx_x0x_xsum36321x_xpn48]
    iNsTr_2648 := (xx_xph46 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    iNsTr_2649 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_2105][iNsTr_2648])
    // load 
    iNsTr_2650 := ->(iNsTr_2649) 
    ->(iNsTr_61) := iNsTr_2650
    iNsTr_2652 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_2653 := ->(iNsTr_2652) 
    iNsTr_2654 := ($cast ($uint<32>) iNsTr_2653)
    iNsTr_2655 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_2105][iNsTr_2654])
    // load 
    iNsTr_2656 := ->(iNsTr_2655) 
    ->(iNsTr_62) := iNsTr_2656
    iNsTr_2658 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_2659 := ->(iNsTr_2658) 
    iNsTr_2660 := ($cast ($uint<32>) iNsTr_2659)
    iNsTr_2661 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_2105][iNsTr_2660])
    // load 
    iNsTr_2662 := ->(iNsTr_2661) 
    ->(iNsTr_63) := iNsTr_2662
    iNsTr_2664 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    iNsTr_2665 := ->(iNsTr_2664) 
    iNsTr_2666 := ($cast ($uint<32>) iNsTr_2665)
    iNsTr_2667 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_2105][iNsTr_2666])
    // load 
    iNsTr_2668 := ->(iNsTr_2667) 
    ->(iNsTr_64) := iNsTr_2668
    $call deblock_luma_c (iNsTr_2647 iNsTr_184 ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  iNsTr_2108 iNsTr_2112 iNsTr_61 )  ()
    $place [bb_310_deblock_edgex_xexit143threadx_xprex_xsplit]
    //begin: basic-block deblock_edgex_xexit143threadx_xprex_xsplit
    $merge bb_305_deblock_edgex_xexit143threadx_xprex_xsplit bb_306_deblock_edgex_xexit143threadx_xprex_xsplit bb_309_deblock_edgex_xexit143threadx_xprex_xsplit bb_310_deblock_edgex_xexit143threadx_xprex_xsplit deblock_edgex_xexit164_deblock_edgex_xexit143threadx_xprex_xsplit deblock_edgex_xexit192_deblock_edgex_xexit143threadx_xprex_xsplit
    $endmerge
    // load 
    xx_xpr325 := ->(iNsTr_20) 
    $place [deblock_edgex_xexit143threadx_xprex_xsplit_deblock_edgex_xexit143]
    //begin: basic-block deblock_edgex_xexit143
    $merge deblock_edgex_xexit143threadx_xprex_xsplit_deblock_edgex_xexit143 deblock_edgex_xexit194_deblock_edgex_xexit143
    $phi iNsTr_1929 :=  ( $cast ($uint<32>) xx_xpr325) $on deblock_edgex_xexit143threadx_xprex_xsplit_deblock_edgex_xexit143 ( $cast ($uint<32>) iNsTr_1923) $on deblock_edgex_xexit194_deblock_edgex_xexit143 
    $endmerge
    // compare instruction
    iNsTr_1930 := (iNsTr_1929 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )
    $if iNsTr_1930 $then  $place [deblock_edgex_xexit143_bb_313] $else $place [deblock_edgex_xexit143_deblock_edgex_xexit] $endif 
    //begin: basic-block bb_313
    $merge deblock_edgex_xexit143_bb_313
    $endmerge
    iNsTr_2119 := (iNsTr_184 * ( $bitcast ($uint<32> ) _b00000000000000000000000000001100 ) )
    pixuvx_x0x_xsum51 := (iNsTr_2119 + xx_xsum28x_xpn)
    iNsTr_2120 := iNsTr_179[pixuvx_x0x_xsum51]
    iNsTr_2121 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    iNsTr_2122 := (iNsTr_192 + iNsTr_3)
    iNsTr_2123 := (iNsTr_192 + iNsTr_5)
    iNsTr_2124 := (iNsTr_2122 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_2125 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_alpha_table[iNsTr_2124])
    // load 
    iNsTr_2126 := ->(iNsTr_2125) 
    iNsTr_2127 := ($cast ($uint<32>) iNsTr_2126)
    iNsTr_2128 := (iNsTr_2123 + ( $bitcast ($uint<32> ) _b00000000000000000000000000011000 ) )
    iNsTr_2129 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_beta_table[iNsTr_2128])
    // load 
    iNsTr_2130 := ->(iNsTr_2129) 
    iNsTr_2131 := ($cast ($uint<32>) iNsTr_2130)
    iNsTr_2132 := ($bitcast ($pointer< $uint<32> >) iNsTr_2121)
    // load 
    iNsTr_2133 := ->(iNsTr_2132) 
    // compare instruction
    iNsTr_2134 := (iNsTr_2133 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if iNsTr_2134 $then  $place [bb_313_deblock_edgex_xexit] $else $place [bb_313_bb_314] $endif 
    //begin: basic-block bb_314
    $merge bb_313_bb_314
    $endmerge
    iNsTr_2329 := (iNsTr_2122 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_2330 := (iNsTr_2329 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_2330 $then  $place [bb_314_bb_315] $else $place [bb_314_deblock_edgex_xexit] $endif 
    //begin: basic-block bb_315
    $merge bb_314_bb_315
    $endmerge
    iNsTr_2497 := (iNsTr_2123 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110000 ) )
    // compare instruction
    iNsTr_2498 := (iNsTr_2497 < ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 )  )
    $if iNsTr_2498 $then  $place [bb_315_bb_316] $else $place [bb_315_deblock_edgex_xexit] $endif 
    //begin: basic-block bb_316
    $merge bb_315_bb_316
    $endmerge
    iNsTr_2563 := (iNsTr_2133 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    iNsTr_2564 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_2124][iNsTr_2563])
    // load 
    iNsTr_2565 := ->(iNsTr_2564) 
    iNsTr_2566 := (iNsTr_2565 + ( $bitcast ($uint<8> ) _b00000001 ) )
    ->(iNsTr_61) := iNsTr_2566
    iNsTr_2568 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_2569 := ->(iNsTr_2568) 
    iNsTr_2570 := ($cast ($uint<32>) iNsTr_2569)
    iNsTr_2571 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_2124][iNsTr_2570])
    // load 
    iNsTr_2572 := ->(iNsTr_2571) 
    iNsTr_2573 := (iNsTr_2572 + ( $bitcast ($uint<8> ) _b00000001 ) )
    ->(iNsTr_62) := iNsTr_2573
    iNsTr_2575 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_2576 := ->(iNsTr_2575) 
    iNsTr_2577 := ($cast ($uint<32>) iNsTr_2576)
    iNsTr_2578 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_2124][iNsTr_2577])
    // load 
    iNsTr_2579 := ->(iNsTr_2578) 
    iNsTr_2580 := (iNsTr_2579 + ( $bitcast ($uint<8> ) _b00000001 ) )
    ->(iNsTr_63) := iNsTr_2580
    iNsTr_2582 := iNsTr_172[iNsTr_169][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    iNsTr_2583 := ->(iNsTr_2582) 
    iNsTr_2584 := ($cast ($uint<32>) iNsTr_2583)
    iNsTr_2585 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_i_tc0_table[iNsTr_2124][iNsTr_2584])
    // load 
    iNsTr_2586 := ->(iNsTr_2585) 
    iNsTr_2587 := (iNsTr_2586 + ( $bitcast ($uint<8> ) _b00000001 ) )
    ->(iNsTr_64) := iNsTr_2587
    $call deblock_v_chroma_c (iNsTr_2120 iNsTr_184 iNsTr_2127 iNsTr_2131 iNsTr_61 )  ()
    $place [bb_316_deblock_edgex_xexit]
    //begin: basic-block deblock_edgex_xexit
    $merge bb_313_deblock_edgex_xexit bb_314_deblock_edgex_xexit bb_315_deblock_edgex_xexit bb_316_deblock_edgex_xexit deblock_edge_intrax_xexit162_deblock_edgex_xexit deblock_edgex_xexit143_deblock_edgex_xexit
    $endmerge
    iNsTr_310 := (xx_x0210 | iNsTr_60)
    iNsTr_311 := (iNsTr_310 & ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_312 := (iNsTr_311 + mb_xx_x0209)
    // load 
    iNsTr_313 := ->(iNsTr_36) 
    // compare instruction
    iNsTr_314 := ( ($bitcast ( $int<32>) iNsTr_312) <   ($bitcast ( $int<32>) iNsTr_313 ) )
    $if iNsTr_314 $then  $place [deblock_edgex_xexit_deblock_edgex_xexitx_x_crit_edge] $else $place [deblock_edgex_xexit_xx_x_crit_edgex_xloopexit] $endif 
    //begin: basic-block deblock_edgex_xexitx_x_crit_edge
    $merge deblock_edgex_xexit_deblock_edgex_xexitx_x_crit_edge
    $endmerge
    iNsTr_373 := (xx_x0210 ^ iNsTr_1)
    $place [deblock_edgex_xexitx_x_crit_edge_bb_4]
    //begin: basic-block xx_x_crit_edgex_xloopexit
    $merge deblock_edgex_xexit_xx_x_crit_edgex_xloopexit
    $endmerge
    $place [xx_x_crit_edgex_xloopexit_xx_x_crit_edge]
    //begin: basic-block xx_x_crit_edge
    $merge bb_2_xx_x_crit_edge xx_x_crit_edgex_xloopexit_xx_x_crit_edge
    $endmerge
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [x264_mb_predict_mv] 
$in (h : $pointer< structx_xx264_t > i_list : $uint<32> idx : $uint<32> i_width : $uint<32> mvp : $pointer< $uint<16> > )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    iNsTr_0 := @(x264x_xlinkedx_xoptx_xo_iNtErNal_x264_scan8[idx])
    // load 
    iNsTr_1 := ->(iNsTr_0) 
    iNsTr_2 := ($cast ($uint<32>) iNsTr_1)
    iNsTr_3 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011100 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][i_list][iNsTr_2]
    // load 
    iNsTr_4 := ->(iNsTr_3) 
    iNsTr_5 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_4) )
    iNsTr_6 := (iNsTr_2 + ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) )
    iNsTr_7 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011100 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][i_list][iNsTr_6]
    // load 
    iNsTr_8 := ->(iNsTr_7) 
    iNsTr_9 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011100 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) ][i_list][iNsTr_6][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    iNsTr_10 := (iNsTr_2 + ( $bitcast ($uint<32> ) _b11111111111111111111111111111000 ) )
    iNsTr_11 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011100 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][i_list][iNsTr_10]
    // load 
    iNsTr_12 := ->(iNsTr_11) 
    iNsTr_13 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011100 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) ][i_list][iNsTr_10][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    iNsTr_14 := (i_width + ( $bitcast ($uint<32> ) _b11111111111111111111111111111000 ) )
    iNsTr_15 := (iNsTr_14 + iNsTr_2)
    iNsTr_16 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011100 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][i_list][iNsTr_15]
    // load 
    iNsTr_17 := ->(iNsTr_16) 
    iNsTr_18 := (idx & ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    iNsTr_19 := (i_width & ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_20 := (iNsTr_19 | ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    // compare instruction
    iNsTr_21 := (iNsTr_18 < iNsTr_20 )
    $if iNsTr_21 $then  $place [bb_0_bb_1] $else $place [bb_0_bb_2] $endif 
    //begin: basic-block bb_1
    $merge bb_0_bb_1
    $endmerge
    iNsTr_23 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_17) )
    iNsTr_24 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011100 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) ][i_list][iNsTr_15][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    // compare instruction
    iNsTr_25 := (iNsTr_17 == ( $bitcast ($uint<8> ) _b11111110 )  )
    $if iNsTr_25 $then  $place [bb_1_bb_2] $else $place [bb_1_bb_9] $endif 
    //begin: basic-block bb_2
    $merge bb_0_bb_2 bb_1_bb_2
    $endmerge
    iNsTr_27 := (iNsTr_2 + ( $bitcast ($uint<32> ) _b11111111111111111111111111110111 ) )
    iNsTr_28 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011100 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][i_list][iNsTr_27]
    // load 
    iNsTr_29 := ->(iNsTr_28) 
    iNsTr_30 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_29) )
    iNsTr_31 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011100 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) ][i_list][iNsTr_27][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    iNsTr_32 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000110010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) ]
    // load 
    iNsTr_33 := ->(iNsTr_32) 
    // compare instruction
    iNsTr_34 := (iNsTr_33 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if iNsTr_34 $then  $place [bb_2_bb_9] $else $place [bb_2_bb_3] $endif 
    //begin: basic-block bb_3
    $merge bb_2_bb_3
    $endmerge
    iNsTr_39 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011100 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][i_list][( $bitcast ($uint<32> ) _b00000000000000000000000000001011 ) ]
    // load 
    iNsTr_40 := ->(iNsTr_39) 
    // compare instruction
    iNsTr_41 := (iNsTr_40 == ( $bitcast ($uint<8> ) _b11111110 )  )
    $if iNsTr_41 $then  $place [bb_3_bb_9] $else $place [bb_3_bb_4] $endif 
    //begin: basic-block bb_4
    $merge bb_3_bb_4
    $endmerge
    iNsTr_57 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010111 ) ]
    // load 
    iNsTr_58 := ->(iNsTr_57) 
    iNsTr_59 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000101111 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    // load 
    iNsTr_60 := ->(iNsTr_59) 
    iNsTr_61 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001001010 ) ]
    // load 
    iNsTr_62 := ->(iNsTr_61) 
    iNsTr_63 := iNsTr_62[iNsTr_60]
    // load 
    iNsTr_64 := ->(iNsTr_63) 
    iNsTr_65 := ($cast ($uint<32>) iNsTr_64)
    // compare instruction
    iNsTr_66 := (iNsTr_58 == iNsTr_65 )
    $if iNsTr_66 $then  $place [bb_4_bb_9] $else $place [bb_4_bb_5] $endif 
    //begin: basic-block bb_5
    $merge bb_4_bb_5
    $endmerge
    $switch idx
    $when _b00000000000000000000000000000010 $then 
    $place [bb_5_bb_6]
    $when _b00000000000000000000000000001000 $then 
    $place [bb_5_bb_7]
    $when _b00000000000000000000000000001010 $then 
    $place [bb_5_bb_8]
    $default 
    $place [bb_5_bb_9]
    $endswitch
    //begin: basic-block bb_6
    $merge bb_5_bb_6
    $endmerge
    iNsTr_150 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011100 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) ][i_list][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    iNsTr_151 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011100 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010001 ) ][i_list][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    // load 
    iNsTr_152 := ->(iNsTr_151) 
    iNsTr_153 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_152) )
    $place [bb_6_bb_9]
    //begin: basic-block bb_7
    $merge bb_5_bb_7
    $endmerge
    iNsTr_155 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011100 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) ][i_list][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    iNsTr_156 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011100 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010001 ) ][i_list][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_157 := ->(iNsTr_156) 
    iNsTr_158 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_157) )
    $place [bb_7_bb_9]
    //begin: basic-block bb_8
    $merge bb_5_bb_8
    $endmerge
    iNsTr_160 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011100 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) ][i_list][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    iNsTr_161 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011100 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000010001 ) ][i_list][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    // load 
    iNsTr_162 := ->(iNsTr_161) 
    iNsTr_163 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_162) )
    $place [bb_8_bb_9]
    //begin: basic-block bb_9
    $merge bb_1_bb_9 bb_2_bb_9 bb_3_bb_9 bb_4_bb_9 bb_5_bb_9 bb_6_bb_9 bb_7_bb_9 bb_8_bb_9
    $phi i_refcx_x0 :=  ( $cast ($uint<32>) iNsTr_153) $on bb_6_bb_9 ( $cast ($uint<32>) iNsTr_158) $on bb_7_bb_9 ( $cast ($uint<32>) iNsTr_163) $on bb_8_bb_9 ( $cast ($uint<32>) iNsTr_30) $on bb_4_bb_9 ( $cast ($uint<32>) iNsTr_30) $on bb_3_bb_9 ( $cast ($uint<32>) iNsTr_30) $on bb_2_bb_9 ( $cast ($uint<32>) iNsTr_23) $on bb_1_bb_9 ( $cast ($uint<32>) iNsTr_30) $on bb_5_bb_9 
    $phi mv_cx_x0 :=  ( $cast ($pointer< $uint<16> >) iNsTr_150) $on bb_6_bb_9 ( $cast ($pointer< $uint<16> >) iNsTr_155) $on bb_7_bb_9 ( $cast ($pointer< $uint<16> >) iNsTr_160) $on bb_8_bb_9 ( $cast ($pointer< $uint<16> >) iNsTr_31) $on bb_4_bb_9 ( $cast ($pointer< $uint<16> >) iNsTr_31) $on bb_3_bb_9 ( $cast ($pointer< $uint<16> >) iNsTr_31) $on bb_2_bb_9 ( $cast ($pointer< $uint<16> >) iNsTr_24) $on bb_1_bb_9 ( $cast ($pointer< $uint<16> >) iNsTr_31) $on bb_5_bb_9 
    $endmerge
    iNsTr_36 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001001101 ) ]
    // load 
    iNsTr_37 := ->(iNsTr_36) 
    $switch iNsTr_37
    $when _b00000000000000000000000000001110 $then 
    $place [bb_9_bb_10]
    $when _b00000000000000000000000000001111 $then 
    $place [bb_9_bb_15]
    $default 
    $place [bb_9_bb_20]
    $endswitch
    //begin: basic-block bb_10
    $merge bb_9_bb_10
    $endmerge
    // compare instruction
    iNsTr_53 := (idx == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if iNsTr_53 $then  $place [bb_10_bb_11] $else $place [bb_10_bb_13] $endif 
    //begin: basic-block bb_11
    $merge bb_10_bb_11
    $endmerge
    // compare instruction
    iNsTr_117 := (iNsTr_12 == iNsTr_4 )
    $if iNsTr_117 $then  $place [bb_11_bb_12] $else $place [bb_11_bb_20] $endif 
    //begin: basic-block bb_12
    $merge bb_11_bb_12
    $endmerge
    iNsTr_130 := ($bitcast ($pointer< $uint<32> >) iNsTr_13)
    // load 
    iNsTr_131 := ->(iNsTr_130) 
    iNsTr_132 := ($bitcast ($pointer< $uint<32> >) mvp)
    ->(iNsTr_132) := iNsTr_131
    $place [bb_12_UnifiedReturnBlock]
    //begin: basic-block bb_13
    $merge bb_10_bb_13
    $endmerge
    // compare instruction
    iNsTr_119 := (iNsTr_8 == iNsTr_4 )
    $if iNsTr_119 $then  $place [bb_13_bb_14] $else $place [bb_13_bb_20] $endif 
    //begin: basic-block bb_14
    $merge bb_13_bb_14
    $endmerge
    iNsTr_135 := ($bitcast ($pointer< $uint<32> >) iNsTr_9)
    // load 
    iNsTr_136 := ->(iNsTr_135) 
    iNsTr_137 := ($bitcast ($pointer< $uint<32> >) mvp)
    ->(iNsTr_137) := iNsTr_136
    $place [bb_14_UnifiedReturnBlock]
    //begin: basic-block bb_15
    $merge bb_9_bb_15
    $endmerge
    // compare instruction
    iNsTr_55 := (idx == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if iNsTr_55 $then  $place [bb_15_bb_16] $else $place [bb_15_bb_18] $endif 
    //begin: basic-block bb_16
    $merge bb_15_bb_16
    $endmerge
    // compare instruction
    iNsTr_121 := (iNsTr_8 == iNsTr_4 )
    $if iNsTr_121 $then  $place [bb_16_bb_17] $else $place [bb_16_bb_20] $endif 
    //begin: basic-block bb_17
    $merge bb_16_bb_17
    $endmerge
    iNsTr_140 := ($bitcast ($pointer< $uint<32> >) iNsTr_9)
    // load 
    iNsTr_141 := ->(iNsTr_140) 
    iNsTr_142 := ($bitcast ($pointer< $uint<32> >) mvp)
    ->(iNsTr_142) := iNsTr_141
    $place [bb_17_UnifiedReturnBlock]
    //begin: basic-block bb_18
    $merge bb_15_bb_18
    $endmerge
    // compare instruction
    iNsTr_123 := (i_refcx_x0 == iNsTr_5 )
    $if iNsTr_123 $then  $place [bb_18_bb_19] $else $place [bb_18_bb_20] $endif 
    //begin: basic-block bb_19
    $merge bb_18_bb_19
    $endmerge
    iNsTr_145 := ($bitcast ($pointer< $uint<32> >) mv_cx_x0)
    // load 
    iNsTr_146 := ->(iNsTr_145) 
    iNsTr_147 := ($bitcast ($pointer< $uint<32> >) mvp)
    ->(iNsTr_147) := iNsTr_146
    $place [bb_19_UnifiedReturnBlock]
    //begin: basic-block bb_20
    $merge bb_11_bb_20 bb_13_bb_20 bb_16_bb_20 bb_18_bb_20 bb_9_bb_20
    $endmerge
    // compare instruction
    iNsTr_43 := (iNsTr_8 == iNsTr_4 )
    iNsTr_44 := ($cast ($uint<32>) iNsTr_43)
    // compare instruction
    iNsTr_45 := (iNsTr_12 == iNsTr_4 )
    iNsTr_46 := ($cast ($uint<32>) iNsTr_45)
    // compare instruction
    iNsTr_47 := (i_refcx_x0 == iNsTr_5 )
    iNsTr_48 := ($cast ($uint<32>) iNsTr_47)
    iNsTr_49 := (iNsTr_46 + iNsTr_44)
    iNsTr_50 := (iNsTr_49 + iNsTr_48)
    // compare instruction
    iNsTr_51 := ( ($bitcast ( $int<32>) iNsTr_50) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  ) )
    $if iNsTr_51 $then  $place [bb_20_bb_21] $else $place [bb_20_bb_22] $endif 
    //begin: basic-block bb_21
    $merge bb_20_bb_21 bb_28_bb_21
    $endmerge
    // load 
    iNsTr_68 := ->(iNsTr_9) 
    iNsTr_69 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_68) )
    // load 
    iNsTr_70 := ->(iNsTr_13) 
    iNsTr_71 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_70) )
    // load 
    iNsTr_72 := ->(mv_cx_x0) 
    iNsTr_73 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_72) )
    iNsTr_74 := (iNsTr_69 - iNsTr_71)
    iNsTr_75 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_74) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_76 := (iNsTr_75 & iNsTr_74)
    iNsTr_77 := (iNsTr_69 - iNsTr_76)
    iNsTr_78 := (iNsTr_76 + iNsTr_71)
    iNsTr_79 := (iNsTr_78 - iNsTr_73)
    iNsTr_80 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_79) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_81 := (iNsTr_80 & iNsTr_79)
    iNsTr_82 := (iNsTr_78 - iNsTr_81)
    iNsTr_83 := (iNsTr_77 - iNsTr_82)
    iNsTr_84 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_83) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_85 := (iNsTr_84 & iNsTr_83)
    iNsTr_86 := (iNsTr_85 + iNsTr_82)
    iNsTr_87 := ($cast ($uint<16>) iNsTr_86)
    ->(mvp) := iNsTr_87
    iNsTr_89 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011100 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) ][i_list][iNsTr_6][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_90 := ->(iNsTr_89) 
    iNsTr_91 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_90) )
    iNsTr_92 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011100 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) ][i_list][iNsTr_10][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_93 := ->(iNsTr_92) 
    iNsTr_94 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_93) )
    iNsTr_95 := mv_cx_x0[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_96 := ->(iNsTr_95) 
    iNsTr_97 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_96) )
    iNsTr_98 := (iNsTr_91 - iNsTr_94)
    iNsTr_99 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_98) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_100 := (iNsTr_99 & iNsTr_98)
    iNsTr_101 := (iNsTr_91 - iNsTr_100)
    iNsTr_102 := (iNsTr_100 + iNsTr_94)
    iNsTr_103 := (iNsTr_102 - iNsTr_97)
    iNsTr_104 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_103) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_105 := (iNsTr_104 & iNsTr_103)
    iNsTr_106 := (iNsTr_102 - iNsTr_105)
    iNsTr_107 := (iNsTr_101 - iNsTr_106)
    iNsTr_108 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_107) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_109 := (iNsTr_108 & iNsTr_107)
    iNsTr_110 := (iNsTr_109 + iNsTr_106)
    iNsTr_111 := ($cast ($uint<16>) iNsTr_110)
    iNsTr_112 := mvp[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    ->(iNsTr_112) := iNsTr_111
    $place [bb_21_UnifiedReturnBlock]
    //begin: basic-block bb_22
    $merge bb_20_bb_22
    $endmerge
    // compare instruction
    iNsTr_115 := (iNsTr_50 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )
    $if iNsTr_115 $then  $place [bb_22_bb_23] $else $place [bb_22_bb_28] $endif 
    //begin: basic-block bb_23
    $merge bb_22_bb_23
    $endmerge
    $if iNsTr_43 $then  $place [bb_23_bb_24] $else $place [bb_23_bb_25] $endif 
    //begin: basic-block bb_24
    $merge bb_23_bb_24
    $endmerge
    iNsTr_165 := ($bitcast ($pointer< $uint<32> >) iNsTr_9)
    // load 
    iNsTr_166 := ->(iNsTr_165) 
    iNsTr_167 := ($bitcast ($pointer< $uint<32> >) mvp)
    ->(iNsTr_167) := iNsTr_166
    $place [bb_24_UnifiedReturnBlock]
    //begin: basic-block bb_25
    $merge bb_23_bb_25
    $endmerge
    $if iNsTr_45 $then  $place [bb_25_bb_26] $else $place [bb_25_bb_27] $endif 
    //begin: basic-block bb_26
    $merge bb_25_bb_26
    $endmerge
    iNsTr_176 := ($bitcast ($pointer< $uint<32> >) iNsTr_13)
    // load 
    iNsTr_177 := ->(iNsTr_176) 
    iNsTr_178 := ($bitcast ($pointer< $uint<32> >) mvp)
    ->(iNsTr_178) := iNsTr_177
    $place [bb_26_UnifiedReturnBlock]
    //begin: basic-block bb_27
    $merge bb_25_bb_27
    $endmerge
    iNsTr_181 := ($bitcast ($pointer< $uint<32> >) mv_cx_x0)
    // load 
    iNsTr_182 := ->(iNsTr_181) 
    iNsTr_183 := ($bitcast ($pointer< $uint<32> >) mvp)
    ->(iNsTr_183) := iNsTr_182
    $place [bb_27_UnifiedReturnBlock]
    //begin: basic-block bb_28
    $merge bb_22_bb_28
    $endmerge
    // compare instruction
    notlhs := ( ($bitcast ( $int<8>) iNsTr_12) !=   ($bitcast ( $int<8>) ( $bitcast ($uint<8> ) _b11111110 )  ) )
    // compare instruction
    notrhs := ( ($bitcast ( $int<32>) i_refcx_x0) !=   ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111110 )  ) )
    orx_xcondx_xnot := (notrhs | notlhs)
    // compare instruction
    iNsTr_128 := (iNsTr_8 == ( $bitcast ($uint<8> ) _b11111110 )  )
    orx_xcond1 := (orx_xcondx_xnot | iNsTr_128)
    $if orx_xcond1 $then  $place [bb_28_bb_21] $else $place [bb_28_bb_29] $endif 
    //begin: basic-block bb_29
    $merge bb_28_bb_29
    $endmerge
    iNsTr_171 := ($bitcast ($pointer< $uint<32> >) iNsTr_9)
    // load 
    iNsTr_172 := ->(iNsTr_171) 
    iNsTr_173 := ($bitcast ($pointer< $uint<32> >) mvp)
    ->(iNsTr_173) := iNsTr_172
    $place [bb_29_UnifiedReturnBlock]
    //begin: basic-block UnifiedReturnBlock
    $merge bb_12_UnifiedReturnBlock bb_14_UnifiedReturnBlock bb_17_UnifiedReturnBlock bb_19_UnifiedReturnBlock bb_21_UnifiedReturnBlock bb_24_UnifiedReturnBlock bb_26_UnifiedReturnBlock bb_27_UnifiedReturnBlock bb_29_UnifiedReturnBlock
    $endmerge
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [x264_mb_predict_mv_16x16] 
$in (h : $pointer< structx_xx264_t > i_list : $uint<32> i_ref : $uint<32> mvp : $pointer< $uint<16> > )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    iNsTr_0 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011100 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][i_list][( $bitcast ($uint<32> ) _b00000000000000000000000000001011 ) ]
    // load 
    iNsTr_1 := ->(iNsTr_0) 
    iNsTr_2 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_1) )
    iNsTr_3 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011100 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) ][i_list][( $bitcast ($uint<32> ) _b00000000000000000000000000001011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    iNsTr_4 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011100 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][i_list][( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ]
    // load 
    iNsTr_5 := ->(iNsTr_4) 
    iNsTr_6 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_5) )
    iNsTr_7 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011100 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) ][i_list][( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    iNsTr_8 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011100 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][i_list][( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) ]
    // load 
    iNsTr_9 := ->(iNsTr_8) 
    iNsTr_10 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011100 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) ][i_list][( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    // compare instruction
    iNsTr_11 := (iNsTr_9 == ( $bitcast ($uint<8> ) _b11111110 )  )
    $if iNsTr_11 $then  $place [bb_0_bb_1] $else $place [bb_0_bb_2] $endif 
    //begin: basic-block bb_1
    $merge bb_0_bb_1
    $endmerge
    iNsTr_13 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011100 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][i_list][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ]
    // load 
    iNsTr_14 := ->(iNsTr_13) 
    iNsTr_15 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011100 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) ][i_list][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    $place [bb_1_bb_2]
    //begin: basic-block bb_2
    $merge bb_0_bb_2 bb_1_bb_2
    $phi i_refcx_x0x_xin :=  ( $cast ($uint<8>) iNsTr_14) $on bb_1_bb_2 ( $cast ($uint<8>) iNsTr_9) $on bb_0_bb_2 
    $phi mv_cx_x0 :=  ( $cast ($pointer< $uint<16> >) iNsTr_15) $on bb_1_bb_2 ( $cast ($pointer< $uint<16> >) iNsTr_10) $on bb_0_bb_2 
    $endmerge
    i_refcx_x0 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) i_refcx_x0x_xin) )
    // compare instruction
    iNsTr_17 := (iNsTr_2 == i_ref )
    iNsTr_18 := ($cast ($uint<32>) iNsTr_17)
    // compare instruction
    iNsTr_19 := (iNsTr_6 == i_ref )
    iNsTr_20 := ($cast ($uint<32>) iNsTr_19)
    // compare instruction
    iNsTr_21 := (i_refcx_x0 == i_ref )
    iNsTr_22 := ($cast ($uint<32>) iNsTr_21)
    iNsTr_23 := (iNsTr_20 + iNsTr_18)
    iNsTr_24 := (iNsTr_23 + iNsTr_22)
    // compare instruction
    iNsTr_25 := ( ($bitcast ( $int<32>) iNsTr_24) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  ) )
    $if iNsTr_25 $then  $place [bb_2_bb_3] $else $place [bb_2_bb_4] $endif 
    //begin: basic-block bb_3
    $merge bb_10_bb_3 bb_2_bb_3
    $endmerge
    // load 
    iNsTr_27 := ->(iNsTr_3) 
    iNsTr_28 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_27) )
    // load 
    iNsTr_29 := ->(iNsTr_7) 
    iNsTr_30 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_29) )
    // load 
    iNsTr_31 := ->(mv_cx_x0) 
    iNsTr_32 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_31) )
    iNsTr_33 := (iNsTr_28 - iNsTr_30)
    iNsTr_34 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_33) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_35 := (iNsTr_34 & iNsTr_33)
    iNsTr_36 := (iNsTr_28 - iNsTr_35)
    iNsTr_37 := (iNsTr_35 + iNsTr_30)
    iNsTr_38 := (iNsTr_37 - iNsTr_32)
    iNsTr_39 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_38) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_40 := (iNsTr_39 & iNsTr_38)
    iNsTr_41 := (iNsTr_37 - iNsTr_40)
    iNsTr_42 := (iNsTr_36 - iNsTr_41)
    iNsTr_43 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_42) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_44 := (iNsTr_43 & iNsTr_42)
    iNsTr_45 := (iNsTr_44 + iNsTr_41)
    iNsTr_46 := ($cast ($uint<16>) iNsTr_45)
    ->(mvp) := iNsTr_46
    iNsTr_48 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011100 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) ][i_list][( $bitcast ($uint<32> ) _b00000000000000000000000000001011 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_49 := ->(iNsTr_48) 
    iNsTr_50 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_49) )
    iNsTr_51 := h[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001000101 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000001011100 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) ][i_list][( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_52 := ->(iNsTr_51) 
    iNsTr_53 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_52) )
    iNsTr_54 := mv_cx_x0[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    // load 
    iNsTr_55 := ->(iNsTr_54) 
    iNsTr_56 :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) iNsTr_55) )
    iNsTr_57 := (iNsTr_50 - iNsTr_53)
    iNsTr_58 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_57) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_59 := (iNsTr_58 & iNsTr_57)
    iNsTr_60 := (iNsTr_50 - iNsTr_59)
    iNsTr_61 := (iNsTr_59 + iNsTr_53)
    iNsTr_62 := (iNsTr_61 - iNsTr_56)
    iNsTr_63 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_62) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_64 := (iNsTr_63 & iNsTr_62)
    iNsTr_65 := (iNsTr_61 - iNsTr_64)
    iNsTr_66 := (iNsTr_60 - iNsTr_65)
    iNsTr_67 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) iNsTr_66) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000011111 )  )))
    iNsTr_68 := (iNsTr_67 & iNsTr_66)
    iNsTr_69 := (iNsTr_68 + iNsTr_65)
    iNsTr_70 := ($cast ($uint<16>) iNsTr_69)
    iNsTr_71 := mvp[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    ->(iNsTr_71) := iNsTr_70
    $place [bb_3_UnifiedReturnBlock]
    //begin: basic-block bb_4
    $merge bb_2_bb_4
    $endmerge
    // compare instruction
    iNsTr_74 := (iNsTr_24 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )
    $if iNsTr_74 $then  $place [bb_4_bb_5] $else $place [bb_4_bb_10] $endif 
    //begin: basic-block bb_5
    $merge bb_4_bb_5
    $endmerge
    $if iNsTr_17 $then  $place [bb_5_bb_6] $else $place [bb_5_bb_7] $endif 
    //begin: basic-block bb_6
    $merge bb_5_bb_6
    $endmerge
    iNsTr_80 := ($bitcast ($pointer< $uint<32> >) iNsTr_3)
    // load 
    iNsTr_81 := ->(iNsTr_80) 
    iNsTr_82 := ($bitcast ($pointer< $uint<32> >) mvp)
    ->(iNsTr_82) := iNsTr_81
    $place [bb_6_UnifiedReturnBlock]
    //begin: basic-block bb_7
    $merge bb_5_bb_7
    $endmerge
    $if iNsTr_19 $then  $place [bb_7_bb_8] $else $place [bb_7_bb_9] $endif 
    //begin: basic-block bb_8
    $merge bb_7_bb_8
    $endmerge
    iNsTr_91 := ($bitcast ($pointer< $uint<32> >) iNsTr_7)
    // load 
    iNsTr_92 := ->(iNsTr_91) 
    iNsTr_93 := ($bitcast ($pointer< $uint<32> >) mvp)
    ->(iNsTr_93) := iNsTr_92
    $place [bb_8_UnifiedReturnBlock]
    //begin: basic-block bb_9
    $merge bb_7_bb_9
    $endmerge
    iNsTr_96 := ($bitcast ($pointer< $uint<32> >) mv_cx_x0)
    // load 
    iNsTr_97 := ->(iNsTr_96) 
    iNsTr_98 := ($bitcast ($pointer< $uint<32> >) mvp)
    ->(iNsTr_98) := iNsTr_97
    $place [bb_9_UnifiedReturnBlock]
    //begin: basic-block bb_10
    $merge bb_4_bb_10
    $endmerge
    // compare instruction
    notlhs := ( ($bitcast ( $int<8>) iNsTr_5) !=   ($bitcast ( $int<8>) ( $bitcast ($uint<8> ) _b11111110 )  ) )
    // compare instruction
    notrhs := ( ($bitcast ( $int<8>) i_refcx_x0x_xin) !=   ($bitcast ( $int<8>) ( $bitcast ($uint<8> ) _b11111110 )  ) )
    orx_xcondx_xnot := (notrhs | notlhs)
    // compare instruction
    iNsTr_78 := (iNsTr_1 == ( $bitcast ($uint<8> ) _b11111110 )  )
    orx_xcond1 := (orx_xcondx_xnot | iNsTr_78)
    $if orx_xcond1 $then  $place [bb_10_bb_3] $else $place [bb_10_bb_11] $endif 
    //begin: basic-block bb_11
    $merge bb_10_bb_11
    $endmerge
    iNsTr_86 := ($bitcast ($pointer< $uint<32> >) iNsTr_3)
    // load 
    iNsTr_87 := ->(iNsTr_86) 
    iNsTr_88 := ($bitcast ($pointer< $uint<32> >) mvp)
    ->(iNsTr_88) := iNsTr_87
    $place [bb_11_UnifiedReturnBlock]
    //begin: basic-block UnifiedReturnBlock
    $merge bb_11_UnifiedReturnBlock bb_3_UnifiedReturnBlock bb_6_UnifiedReturnBlock bb_8_UnifiedReturnBlock bb_9_UnifiedReturnBlock
    $endmerge
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [x264_mb_predict_mv_direct16x16] 
$in (h : $pointer< structx_xx264_t > b_changed : $pointer< $uint<32> > )
$out (ret_val__ : $uint<32>)
$is 
{
  $branchblock [body] 
  {
